{"id":"src/ol/Map.js","dependencies":[{"name":"C:\\Users\\alro9\\Documents\\geovisor\\package.json","includedInParent":true,"mtime":1559590286605},{"name":"./PluggableMap.js","loc":{"line":4,"column":25},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Map.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\PluggableMap.js"},{"name":"./control.js","loc":{"line":5,"column":42},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Map.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\control.js"},{"name":"./interaction.js","loc":{"line":6,"column":46},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Map.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\interaction.js"},{"name":"./obj.js","loc":{"line":7,"column":21},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Map.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\obj.js"},{"name":"./renderer/Composite.js","loc":{"line":8,"column":33},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Map.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\renderer\\Composite.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _PluggableMap2 = _interopRequireDefault(require(\"./PluggableMap.js\"));\n\nvar _control = require(\"./control.js\");\n\nvar _interaction = require(\"./interaction.js\");\n\nvar _obj = require(\"./obj.js\");\n\nvar _Composite = _interopRequireDefault(require(\"./renderer/Composite.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\r\n * @classdesc\r\n * The map is the core component of OpenLayers. For a map to render, a view,\r\n * one or more layers, and a target container are needed:\r\n *\r\n *     import Map from 'ol/Map';\r\n *     import View from 'ol/View';\r\n *     import TileLayer from 'ol/layer/Tile';\r\n *     import OSM from 'ol/source/OSM';\r\n *\r\n *     var map = new Map({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM()\r\n *         })\r\n *       ],\r\n *       target: 'map'\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\r\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\r\n * options or added with `addLayer` can be groups, which can contain further\r\n * groups, and so on.\r\n *\r\n * @api\r\n */\nvar Map =\n/*#__PURE__*/\nfunction (_PluggableMap) {\n  _inherits(Map, _PluggableMap);\n\n  /**\r\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\r\n   */\n  function Map(options) {\n    _classCallCheck(this, Map);\n\n    options = (0, _obj.assign)({}, options);\n\n    if (!options.controls) {\n      options.controls = (0, _control.defaults)();\n    }\n\n    if (!options.interactions) {\n      options.interactions = (0, _interaction.defaults)();\n    }\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, options));\n  }\n\n  _createClass(Map, [{\n    key: \"createRenderer\",\n    value: function createRenderer() {\n      return new _Composite.default(this);\n    }\n  }]);\n\n  return Map;\n}(_PluggableMap2.default);\n\nvar _default = Map;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/ol/Map.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"src/ol/Map.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"src/ol/Map.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"src/ol/Map.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"src/ol/Map.js","original":{"line":8,"column":0}},{"generated":{"line":38,"column":0},"source":"src/ol/Map.js","original":{"line":10,"column":0}},{"name":"Map","generated":{"line":85,"column":4},"source":"src/ol/Map.js","original":{"line":57,"column":6}},{"generated":{"line":90,"column":0},"source":"src/ol/Map.js","original":{"line":59,"column":2}},{"generated":{"line":93,"column":0},"source":"src/ol/Map.js","original":{"line":62,"column":2}},{"name":"options","generated":{"line":93,"column":15},"source":"src/ol/Map.js","original":{"line":62,"column":14}},{"generated":{"line":93,"column":22},"source":"src/ol/Map.js","original":{"line":62,"column":2}},{"generated":{"line":93,"column":24},"source":"src/ol/Map.js","original":{"line":62,"column":23}},{"generated":{"line":94,"column":0},"source":"src/ol/Map.js","original":{"line":62,"column":23}},{"name":"options","generated":{"line":96,"column":0},"source":"src/ol/Map.js","original":{"line":63,"column":4}},{"name":"options","generated":{"line":96,"column":4},"source":"src/ol/Map.js","original":{"line":63,"column":4}},{"generated":{"line":96,"column":11},"source":"src/ol/Map.js","original":{"line":63,"column":11}},{"generated":{"line":96,"column":14},"source":"src/ol/Map.js","original":{"line":63,"column":14}},{"generated":{"line":96,"column":31},"source":"src/ol/Map.js","original":{"line":63,"column":21}},{"generated":{"line":96,"column":33},"source":"src/ol/Map.js","original":{"line":63,"column":14}},{"name":"options","generated":{"line":96,"column":35},"source":"src/ol/Map.js","original":{"line":63,"column":25}},{"generated":{"line":96,"column":42},"source":"src/ol/Map.js","original":{"line":63,"column":14}},{"generated":{"line":96,"column":43},"source":"src/ol/Map.js","original":{"line":63,"column":4}},{"generated":{"line":98,"column":0},"source":"src/ol/Map.js","original":{"line":64,"column":4}},{"generated":{"line":98,"column":8},"source":"src/ol/Map.js","original":{"line":64,"column":8}},{"name":"options","generated":{"line":98,"column":9},"source":"src/ol/Map.js","original":{"line":64,"column":9}},{"generated":{"line":98,"column":16},"source":"src/ol/Map.js","original":{"line":64,"column":16}},{"name":"controls","generated":{"line":98,"column":17},"source":"src/ol/Map.js","original":{"line":64,"column":17}},{"generated":{"line":98,"column":25},"source":"src/ol/Map.js","original":{"line":64,"column":4}},{"generated":{"line":98,"column":27},"source":"src/ol/Map.js","original":{"line":64,"column":27}},{"name":"options","generated":{"line":99,"column":0},"source":"src/ol/Map.js","original":{"line":65,"column":6}},{"name":"options","generated":{"line":99,"column":6},"source":"src/ol/Map.js","original":{"line":65,"column":6}},{"generated":{"line":99,"column":13},"source":"src/ol/Map.js","original":{"line":65,"column":13}},{"name":"controls","generated":{"line":99,"column":14},"source":"src/ol/Map.js","original":{"line":65,"column":14}},{"generated":{"line":99,"column":22},"source":"src/ol/Map.js","original":{"line":65,"column":6}},{"generated":{"line":99,"column":25},"source":"src/ol/Map.js","original":{"line":65,"column":25}},{"generated":{"line":99,"column":49},"source":"src/ol/Map.js","original":{"line":65,"column":6}},{"generated":{"line":100,"column":0},"source":"src/ol/Map.js","original":{"line":66,"column":5}},{"generated":{"line":102,"column":0},"source":"src/ol/Map.js","original":{"line":67,"column":4}},{"generated":{"line":102,"column":8},"source":"src/ol/Map.js","original":{"line":67,"column":8}},{"name":"options","generated":{"line":102,"column":9},"source":"src/ol/Map.js","original":{"line":67,"column":9}},{"generated":{"line":102,"column":16},"source":"src/ol/Map.js","original":{"line":67,"column":16}},{"name":"interactions","generated":{"line":102,"column":17},"source":"src/ol/Map.js","original":{"line":67,"column":17}},{"generated":{"line":102,"column":29},"source":"src/ol/Map.js","original":{"line":67,"column":4}},{"generated":{"line":102,"column":31},"source":"src/ol/Map.js","original":{"line":67,"column":31}},{"name":"options","generated":{"line":103,"column":0},"source":"src/ol/Map.js","original":{"line":68,"column":6}},{"name":"options","generated":{"line":103,"column":6},"source":"src/ol/Map.js","original":{"line":68,"column":6}},{"generated":{"line":103,"column":13},"source":"src/ol/Map.js","original":{"line":68,"column":13}},{"name":"interactions","generated":{"line":103,"column":14},"source":"src/ol/Map.js","original":{"line":68,"column":14}},{"generated":{"line":103,"column":26},"source":"src/ol/Map.js","original":{"line":68,"column":6}},{"generated":{"line":103,"column":29},"source":"src/ol/Map.js","original":{"line":68,"column":29}},{"generated":{"line":103,"column":57},"source":"src/ol/Map.js","original":{"line":68,"column":6}},{"generated":{"line":104,"column":0},"source":"src/ol/Map.js","original":{"line":69,"column":5}},{"generated":{"line":106,"column":0},"source":"src/ol/Map.js","original":{"line":62,"column":23}},{"name":"options","generated":{"line":106,"column":76},"source":"src/ol/Map.js","original":{"line":71,"column":10}},{"generated":{"line":106,"column":83},"source":"src/ol/Map.js","original":{"line":62,"column":23}},{"generated":{"line":107,"column":0},"source":"src/ol/Map.js","original":{"line":72,"column":3}},{"generated":{"line":111,"column":37},"source":"src/ol/Map.js","original":{"line":74,"column":19}},{"generated":{"line":112,"column":0},"source":"src/ol/Map.js","original":{"line":75,"column":4}},{"generated":{"line":112,"column":13},"source":"src/ol/Map.js","original":{"line":75,"column":11}},{"name":"CompositeMapRenderer","generated":{"line":112,"column":17},"source":"src/ol/Map.js","original":{"line":75,"column":15}},{"generated":{"line":112,"column":35},"source":"src/ol/Map.js","original":{"line":75,"column":11}},{"generated":{"line":112,"column":36},"source":"src/ol/Map.js","original":{"line":75,"column":36}},{"generated":{"line":112,"column":40},"source":"src/ol/Map.js","original":{"line":75,"column":11}},{"generated":{"line":112,"column":41},"source":"src/ol/Map.js","original":{"line":75,"column":4}},{"generated":{"line":113,"column":0},"source":"src/ol/Map.js","original":{"line":76,"column":3}},{"name":"PluggableMap","generated":{"line":117,"column":2},"source":"src/ol/Map.js","original":{"line":57,"column":18}},{"name":"Map","generated":{"line":119,"column":15},"source":"src/ol/Map.js","original":{"line":80,"column":15}}],"sources":{"src/ol/Map.js":"/**\r\n * @module ol/Map\r\n */\r\nimport PluggableMap from './PluggableMap.js';\r\nimport {defaults as defaultControls} from './control.js';\r\nimport {defaults as defaultInteractions} from './interaction.js';\r\nimport {assign} from './obj.js';\r\nimport CompositeMapRenderer from './renderer/Composite.js';\r\n\r\n/**\r\n * @classdesc\r\n * The map is the core component of OpenLayers. For a map to render, a view,\r\n * one or more layers, and a target container are needed:\r\n *\r\n *     import Map from 'ol/Map';\r\n *     import View from 'ol/View';\r\n *     import TileLayer from 'ol/layer/Tile';\r\n *     import OSM from 'ol/source/OSM';\r\n *\r\n *     var map = new Map({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM()\r\n *         })\r\n *       ],\r\n *       target: 'map'\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\r\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\r\n * options or added with `addLayer` can be groups, which can contain further\r\n * groups, and so on.\r\n *\r\n * @api\r\n */\r\nclass Map extends PluggableMap {\r\n\r\n  /**\r\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\r\n   */\r\n  constructor(options) {\r\n    options = assign({}, options);\r\n    if (!options.controls) {\r\n      options.controls = defaultControls();\r\n    }\r\n    if (!options.interactions) {\r\n      options.interactions = defaultInteractions();\r\n    }\r\n\r\n    super(options);\r\n  }\r\n\r\n  createRenderer() {\r\n    return new CompositeMapRenderer(this);\r\n  }\r\n}\r\n\r\n\r\nexport default Map;\r\n"},"lineCount":null}},"error":null,"hash":"a1aa4feab8f506d86c31007dbf2234b0","cacheData":{"env":{}}}