{"id":"src/ol/proj/Projection.js","dependencies":[{"name":"C:\\Users\\alro9\\Documents\\GitHub\\geovisor\\package.json","includedInParent":true,"mtime":1562618226138},{"name":"./Units.js","loc":{"line":4,"column":30},"parent":"C:\\Users\\alro9\\Documents\\GitHub\\geovisor\\src\\ol\\proj\\Projection.js","resolved":"C:\\Users\\alro9\\Documents\\GitHub\\geovisor\\src\\ol\\proj\\Units.js"}],"generated":{"js":"var global = arguments[3];\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Units = require(\"./Units.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * @typedef {Object} Options\r\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\r\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\r\n * proj4 projection is defined for `code`.\r\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\r\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\r\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\r\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\r\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\r\n * lookup table.\r\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\r\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\r\n * Function to determine resolution at a point. The function is called with a\r\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\r\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\r\n * the default {@link module:ol/proj#getPointResolution} function will be used.\r\n */\n\n/**\r\n * @classdesc\r\n * Projection definition class. One of these is created for each projection\r\n * supported in the application and stored in the {@link module:ol/proj} namespace.\r\n * You can use these in applications, but this is not required, as API params\r\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\r\n * code will suffice.\r\n *\r\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\r\n * projection.\r\n *\r\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\r\n * with the following aliases:\r\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\r\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\r\n *     urn:x-ogc:def:crs:EPSG:4326\r\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\r\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\r\n *\r\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\r\n * be added using `proj4.defs()`. After all required projection definitions are\r\n * added, call the {@link module:ol/proj/proj4~register} function.\r\n *\r\n * @api\r\n */\nvar Projection =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * @param {Options} options Projection options.\r\n   */\n  function Projection(options) {\n    _classCallCheck(this, Projection);\n\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\n    this.code_ = options.code;\n    /**\r\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\r\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\r\n     * tile.\r\n     * @private\r\n     * @type {import(\"./Units.js\").default}\r\n     */\n\n    this.units_ =\n    /** @type {import(\"./Units.js\").default} */\n    options.units;\n    /**\r\n     * Validity extent of the projection in projected coordinates. For projections\r\n     * with `TILE_PIXELS` units, this is the extent of the tile in\r\n     * tile pixel space.\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\n\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n    /**\r\n     * Extent of the world in EPSG:4326. For projections with\r\n     * `TILE_PIXELS` units, this is the extent of the tile in\r\n     * projected coordinate space.\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\n\n    this.worldExtent_ = options.worldExtent !== undefined ? options.worldExtent : null;\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\n\n    this.axisOrientation_ = options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\n\n    this.global_ = options.global !== undefined ? options.global : false;\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\n\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n    /**\r\n     * @private\r\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\r\n     */\n\n    this.getPointResolutionFunc_ = options.getPointResolution;\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\n\n    this.defaultTileGrid_ = null;\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\n\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n  /**\r\n   * @return {boolean} The projection is suitable for wrapping the x-axis\r\n   */\n\n\n  _createClass(Projection, [{\n    key: \"canWrapX\",\n    value: function canWrapX() {\n      return this.canWrapX_;\n    }\n    /**\r\n     * Get the code for this projection, e.g. 'EPSG:4326'.\r\n     * @return {string} Code.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"getCode\",\n    value: function getCode() {\n      return this.code_;\n    }\n    /**\r\n     * Get the validity extent for this projection.\r\n     * @return {import(\"../extent.js\").Extent} Extent.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"getExtent\",\n    value: function getExtent() {\n      return this.extent_;\n    }\n    /**\r\n     * Get the units of this projection.\r\n     * @return {import(\"./Units.js\").default} Units.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"getUnits\",\n    value: function getUnits() {\n      return this.units_;\n    }\n    /**\r\n     * Get the amount of meters per unit of this projection.  If the projection is\r\n     * not configured with `metersPerUnit` or a units identifier, the return is\r\n     * `undefined`.\r\n     * @return {number|undefined} Meters.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"getMetersPerUnit\",\n    value: function getMetersPerUnit() {\n      return this.metersPerUnit_ || _Units.METERS_PER_UNIT[this.units_];\n    }\n    /**\r\n     * Get the world extent for this projection.\r\n     * @return {import(\"../extent.js\").Extent} Extent.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"getWorldExtent\",\n    value: function getWorldExtent() {\n      return this.worldExtent_;\n    }\n    /**\r\n     * Get the axis orientation of this projection.\r\n     * Example values are:\r\n     * enu - the default easting, northing, elevation.\r\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\r\n     *     or south orientated transverse mercator.\r\n     * wnu - westing, northing, up - some planetary coordinate systems have\r\n     *     \"west positive\" coordinate systems\r\n     * @return {string} Axis orientation.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"getAxisOrientation\",\n    value: function getAxisOrientation() {\n      return this.axisOrientation_;\n    }\n    /**\r\n     * Is this projection a global projection which spans the whole world?\r\n     * @return {boolean} Whether the projection is global.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"isGlobal\",\n    value: function isGlobal() {\n      return this.global_;\n    }\n    /**\r\n     * Set if the projection is a global projection which spans the whole world\r\n     * @param {boolean} global Whether the projection is global.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"setGlobal\",\n    value: function setGlobal(global) {\n      this.global_ = global;\n      this.canWrapX_ = !!(global && this.extent_);\n    }\n    /**\r\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\r\n     */\n\n  }, {\n    key: \"getDefaultTileGrid\",\n    value: function getDefaultTileGrid() {\n      return this.defaultTileGrid_;\n    }\n    /**\r\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\r\n     */\n\n  }, {\n    key: \"setDefaultTileGrid\",\n    value: function setDefaultTileGrid(tileGrid) {\n      this.defaultTileGrid_ = tileGrid;\n    }\n    /**\r\n     * Set the validity extent for this projection.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"setExtent\",\n    value: function setExtent(extent) {\n      this.extent_ = extent;\n      this.canWrapX_ = !!(this.global_ && extent);\n    }\n    /**\r\n     * Set the world extent for this projection.\r\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\r\n     *     [minlon, minlat, maxlon, maxlat].\r\n     * @api\r\n     */\n\n  }, {\n    key: \"setWorldExtent\",\n    value: function setWorldExtent(worldExtent) {\n      this.worldExtent_ = worldExtent;\n    }\n    /**\r\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\r\n     * for this projection.\r\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\r\n     * @api\r\n     */\n\n  }, {\n    key: \"setGetPointResolution\",\n    value: function setGetPointResolution(func) {\n      this.getPointResolutionFunc_ = func;\n    }\n    /**\r\n     * Get the custom point resolution function for this projection (if set).\r\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\r\n     * resolution function (if set).\r\n     */\n\n  }, {\n    key: \"getPointResolutionFunc\",\n    value: function getPointResolutionFunc() {\n      return this.getPointResolutionFunc_;\n    }\n  }]);\n\n  return Projection;\n}();\n\nvar _default = Projection;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":7,"column":0}},{"generated":{"line":36,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":27,"column":0}},{"name":"Projection","generated":{"line":63,"column":4},"source":"src/ol/proj/Projection.js","original":{"line":54,"column":6}},{"generated":{"line":66,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":56,"column":2}},{"generated":{"line":69,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":59,"column":2}},{"name":"options","generated":{"line":69,"column":22},"source":"src/ol/proj/Projection.js","original":{"line":59,"column":14}},{"generated":{"line":69,"column":29},"source":"src/ol/proj/Projection.js","original":{"line":59,"column":2}},{"generated":{"line":69,"column":31},"source":"src/ol/proj/Projection.js","original":{"line":59,"column":23}},{"generated":{"line":70,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":59,"column":23}},{"generated":{"line":72,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":60,"column":4}},{"generated":{"line":76,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":64,"column":4}},{"name":"code_","generated":{"line":76,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":64,"column":9}},{"generated":{"line":76,"column":14},"source":"src/ol/proj/Projection.js","original":{"line":64,"column":4}},{"name":"options","generated":{"line":76,"column":17},"source":"src/ol/proj/Projection.js","original":{"line":64,"column":17}},{"generated":{"line":76,"column":24},"source":"src/ol/proj/Projection.js","original":{"line":64,"column":24}},{"name":"code","generated":{"line":76,"column":25},"source":"src/ol/proj/Projection.js","original":{"line":64,"column":25}},{"generated":{"line":76,"column":29},"source":"src/ol/proj/Projection.js","original":{"line":64,"column":4}},{"generated":{"line":77,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":66,"column":4}},{"generated":{"line":85,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":73,"column":4}},{"name":"units_","generated":{"line":85,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":73,"column":9}},{"generated":{"line":85,"column":15},"source":"src/ol/proj/Projection.js","original":{"line":73,"column":4}},{"generated":{"line":86,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":73,"column":18}},{"name":"options","generated":{"line":87,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":73,"column":63}},{"name":"options","generated":{"line":87,"column":4},"source":"src/ol/proj/Projection.js","original":{"line":73,"column":63}},{"generated":{"line":87,"column":11},"source":"src/ol/proj/Projection.js","original":{"line":73,"column":70}},{"name":"units","generated":{"line":87,"column":12},"source":"src/ol/proj/Projection.js","original":{"line":73,"column":71}},{"generated":{"line":87,"column":17},"source":"src/ol/proj/Projection.js","original":{"line":73,"column":4}},{"generated":{"line":88,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":75,"column":4}},{"generated":{"line":96,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":4}},{"name":"extent_","generated":{"line":96,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":9}},{"generated":{"line":96,"column":16},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":4}},{"name":"options","generated":{"line":96,"column":19},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":19}},{"generated":{"line":96,"column":26},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":26}},{"name":"extent","generated":{"line":96,"column":27},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":27}},{"generated":{"line":96,"column":33},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":19}},{"name":"undefined","generated":{"line":96,"column":38},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":38}},{"generated":{"line":96,"column":47},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":19}},{"name":"options","generated":{"line":96,"column":50},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":50}},{"generated":{"line":96,"column":57},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":57}},{"name":"extent","generated":{"line":96,"column":58},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":58}},{"generated":{"line":96,"column":64},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":19}},{"generated":{"line":96,"column":67},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":67}},{"generated":{"line":96,"column":71},"source":"src/ol/proj/Projection.js","original":{"line":82,"column":4}},{"generated":{"line":97,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":84,"column":4}},{"generated":{"line":105,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":4}},{"name":"worldExtent_","generated":{"line":105,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":9}},{"generated":{"line":105,"column":21},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":4}},{"name":"options","generated":{"line":105,"column":24},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":24}},{"generated":{"line":105,"column":31},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":31}},{"name":"worldExtent","generated":{"line":105,"column":32},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":32}},{"generated":{"line":105,"column":43},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":24}},{"name":"undefined","generated":{"line":105,"column":48},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":48}},{"generated":{"line":105,"column":57},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":24}},{"name":"options","generated":{"line":105,"column":60},"source":"src/ol/proj/Projection.js","original":{"line":92,"column":6}},{"generated":{"line":105,"column":67},"source":"src/ol/proj/Projection.js","original":{"line":92,"column":13}},{"name":"worldExtent","generated":{"line":105,"column":68},"source":"src/ol/proj/Projection.js","original":{"line":92,"column":14}},{"generated":{"line":105,"column":79},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":24}},{"generated":{"line":105,"column":82},"source":"src/ol/proj/Projection.js","original":{"line":92,"column":28}},{"generated":{"line":105,"column":86},"source":"src/ol/proj/Projection.js","original":{"line":91,"column":4}},{"generated":{"line":106,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":94,"column":4}},{"generated":{"line":111,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":4}},{"name":"axisOrientation_","generated":{"line":111,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":9}},{"generated":{"line":111,"column":25},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":4}},{"name":"options","generated":{"line":111,"column":28},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":28}},{"generated":{"line":111,"column":35},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":35}},{"name":"axisOrientation","generated":{"line":111,"column":36},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":36}},{"generated":{"line":111,"column":51},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":28}},{"name":"undefined","generated":{"line":111,"column":56},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":56}},{"generated":{"line":111,"column":65},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":28}},{"name":"options","generated":{"line":111,"column":68},"source":"src/ol/proj/Projection.js","original":{"line":99,"column":6}},{"generated":{"line":111,"column":75},"source":"src/ol/proj/Projection.js","original":{"line":99,"column":13}},{"name":"axisOrientation","generated":{"line":111,"column":76},"source":"src/ol/proj/Projection.js","original":{"line":99,"column":14}},{"generated":{"line":111,"column":91},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":28}},{"generated":{"line":111,"column":94},"source":"src/ol/proj/Projection.js","original":{"line":99,"column":32}},{"generated":{"line":111,"column":99},"source":"src/ol/proj/Projection.js","original":{"line":98,"column":4}},{"generated":{"line":112,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":101,"column":4}},{"generated":{"line":117,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":4}},{"name":"global_","generated":{"line":117,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":9}},{"generated":{"line":117,"column":16},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":4}},{"name":"options","generated":{"line":117,"column":19},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":19}},{"generated":{"line":117,"column":26},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":26}},{"name":"global","generated":{"line":117,"column":27},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":27}},{"generated":{"line":117,"column":33},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":19}},{"name":"undefined","generated":{"line":117,"column":38},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":38}},{"generated":{"line":117,"column":47},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":19}},{"name":"options","generated":{"line":117,"column":50},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":50}},{"generated":{"line":117,"column":57},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":57}},{"name":"global","generated":{"line":117,"column":58},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":58}},{"generated":{"line":117,"column":64},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":19}},{"generated":{"line":117,"column":67},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":67}},{"generated":{"line":117,"column":72},"source":"src/ol/proj/Projection.js","original":{"line":105,"column":4}},{"generated":{"line":118,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":107,"column":4}},{"generated":{"line":123,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":4}},{"name":"canWrapX_","generated":{"line":123,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":9}},{"generated":{"line":123,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":4}},{"generated":{"line":123,"column":21},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":21}},{"generated":{"line":123,"column":22},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":22}},{"generated":{"line":123,"column":24},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":24}},{"name":"global_","generated":{"line":123,"column":29},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":29}},{"generated":{"line":123,"column":36},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":24}},{"generated":{"line":123,"column":40},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":40}},{"name":"extent_","generated":{"line":123,"column":45},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":45}},{"generated":{"line":123,"column":52},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":22}},{"generated":{"line":123,"column":53},"source":"src/ol/proj/Projection.js","original":{"line":111,"column":4}},{"generated":{"line":124,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":113,"column":4}},{"generated":{"line":129,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":117,"column":4}},{"name":"getPointResolutionFunc_","generated":{"line":129,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":117,"column":9}},{"generated":{"line":129,"column":32},"source":"src/ol/proj/Projection.js","original":{"line":117,"column":4}},{"name":"options","generated":{"line":129,"column":35},"source":"src/ol/proj/Projection.js","original":{"line":117,"column":35}},{"generated":{"line":129,"column":42},"source":"src/ol/proj/Projection.js","original":{"line":117,"column":42}},{"name":"getPointResolution","generated":{"line":129,"column":43},"source":"src/ol/proj/Projection.js","original":{"line":117,"column":43}},{"generated":{"line":129,"column":61},"source":"src/ol/proj/Projection.js","original":{"line":117,"column":4}},{"generated":{"line":130,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":119,"column":4}},{"generated":{"line":135,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":123,"column":4}},{"name":"defaultTileGrid_","generated":{"line":135,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":123,"column":9}},{"generated":{"line":135,"column":25},"source":"src/ol/proj/Projection.js","original":{"line":123,"column":4}},{"generated":{"line":135,"column":28},"source":"src/ol/proj/Projection.js","original":{"line":123,"column":28}},{"generated":{"line":135,"column":32},"source":"src/ol/proj/Projection.js","original":{"line":123,"column":4}},{"generated":{"line":136,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":125,"column":4}},{"generated":{"line":141,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":129,"column":4}},{"name":"metersPerUnit_","generated":{"line":141,"column":9},"source":"src/ol/proj/Projection.js","original":{"line":129,"column":9}},{"generated":{"line":141,"column":23},"source":"src/ol/proj/Projection.js","original":{"line":129,"column":4}},{"name":"options","generated":{"line":141,"column":26},"source":"src/ol/proj/Projection.js","original":{"line":129,"column":26}},{"generated":{"line":141,"column":33},"source":"src/ol/proj/Projection.js","original":{"line":129,"column":33}},{"name":"metersPerUnit","generated":{"line":141,"column":34},"source":"src/ol/proj/Projection.js","original":{"line":129,"column":34}},{"generated":{"line":141,"column":47},"source":"src/ol/proj/Projection.js","original":{"line":129,"column":4}},{"generated":{"line":142,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":130,"column":3}},{"generated":{"line":143,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":132,"column":2}},{"generated":{"line":150,"column":31},"source":"src/ol/proj/Projection.js","original":{"line":135,"column":13}},{"generated":{"line":151,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":136,"column":4}},{"generated":{"line":151,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":136,"column":11}},{"name":"canWrapX_","generated":{"line":151,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":136,"column":16}},{"generated":{"line":151,"column":27},"source":"src/ol/proj/Projection.js","original":{"line":136,"column":4}},{"generated":{"line":152,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":137,"column":3}},{"generated":{"line":153,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":139,"column":2}},{"generated":{"line":161,"column":30},"source":"src/ol/proj/Projection.js","original":{"line":144,"column":12}},{"generated":{"line":162,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":145,"column":4}},{"generated":{"line":162,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":145,"column":11}},{"name":"code_","generated":{"line":162,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":145,"column":16}},{"generated":{"line":162,"column":23},"source":"src/ol/proj/Projection.js","original":{"line":145,"column":4}},{"generated":{"line":163,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":146,"column":3}},{"generated":{"line":164,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":148,"column":2}},{"generated":{"line":172,"column":32},"source":"src/ol/proj/Projection.js","original":{"line":153,"column":14}},{"generated":{"line":173,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":154,"column":4}},{"generated":{"line":173,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":154,"column":11}},{"name":"extent_","generated":{"line":173,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":154,"column":16}},{"generated":{"line":173,"column":25},"source":"src/ol/proj/Projection.js","original":{"line":154,"column":4}},{"generated":{"line":174,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":155,"column":3}},{"generated":{"line":175,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":157,"column":2}},{"generated":{"line":183,"column":31},"source":"src/ol/proj/Projection.js","original":{"line":162,"column":13}},{"generated":{"line":184,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":163,"column":4}},{"generated":{"line":184,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":163,"column":11}},{"name":"units_","generated":{"line":184,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":163,"column":16}},{"generated":{"line":184,"column":24},"source":"src/ol/proj/Projection.js","original":{"line":163,"column":4}},{"generated":{"line":185,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":164,"column":3}},{"generated":{"line":186,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":166,"column":2}},{"generated":{"line":196,"column":39},"source":"src/ol/proj/Projection.js","original":{"line":173,"column":21}},{"generated":{"line":197,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":174,"column":4}},{"generated":{"line":197,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":174,"column":11}},{"name":"metersPerUnit_","generated":{"line":197,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":174,"column":16}},{"generated":{"line":197,"column":32},"source":"src/ol/proj/Projection.js","original":{"line":174,"column":11}},{"name":"METERS_PER_UNIT","generated":{"line":197,"column":36},"source":"src/ol/proj/Projection.js","original":{"line":174,"column":34}},{"generated":{"line":197,"column":59},"source":"src/ol/proj/Projection.js","original":{"line":174,"column":50}},{"name":"units_","generated":{"line":197,"column":64},"source":"src/ol/proj/Projection.js","original":{"line":174,"column":55}},{"generated":{"line":197,"column":70},"source":"src/ol/proj/Projection.js","original":{"line":174,"column":34}},{"generated":{"line":197,"column":71},"source":"src/ol/proj/Projection.js","original":{"line":174,"column":4}},{"generated":{"line":198,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":175,"column":3}},{"generated":{"line":199,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":177,"column":2}},{"generated":{"line":207,"column":37},"source":"src/ol/proj/Projection.js","original":{"line":182,"column":19}},{"generated":{"line":208,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":183,"column":4}},{"generated":{"line":208,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":183,"column":11}},{"name":"worldExtent_","generated":{"line":208,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":183,"column":16}},{"generated":{"line":208,"column":30},"source":"src/ol/proj/Projection.js","original":{"line":183,"column":4}},{"generated":{"line":209,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":184,"column":3}},{"generated":{"line":210,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":186,"column":2}},{"generated":{"line":224,"column":41},"source":"src/ol/proj/Projection.js","original":{"line":197,"column":23}},{"generated":{"line":225,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":198,"column":4}},{"generated":{"line":225,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":198,"column":11}},{"name":"axisOrientation_","generated":{"line":225,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":198,"column":16}},{"generated":{"line":225,"column":34},"source":"src/ol/proj/Projection.js","original":{"line":198,"column":4}},{"generated":{"line":226,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":199,"column":3}},{"generated":{"line":227,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":201,"column":2}},{"generated":{"line":235,"column":31},"source":"src/ol/proj/Projection.js","original":{"line":206,"column":13}},{"generated":{"line":236,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":207,"column":4}},{"generated":{"line":236,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":207,"column":11}},{"name":"global_","generated":{"line":236,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":207,"column":16}},{"generated":{"line":236,"column":25},"source":"src/ol/proj/Projection.js","original":{"line":207,"column":4}},{"generated":{"line":237,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":208,"column":3}},{"generated":{"line":238,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":210,"column":2}},{"name":"global","generated":{"line":246,"column":30},"source":"src/ol/proj/Projection.js","original":{"line":215,"column":12}},{"generated":{"line":246,"column":38},"source":"src/ol/proj/Projection.js","original":{"line":215,"column":20}},{"generated":{"line":247,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":216,"column":4}},{"name":"global_","generated":{"line":247,"column":11},"source":"src/ol/proj/Projection.js","original":{"line":216,"column":9}},{"generated":{"line":247,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":216,"column":4}},{"name":"global","generated":{"line":247,"column":21},"source":"src/ol/proj/Projection.js","original":{"line":216,"column":19}},{"generated":{"line":247,"column":27},"source":"src/ol/proj/Projection.js","original":{"line":216,"column":4}},{"generated":{"line":248,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":4}},{"name":"canWrapX_","generated":{"line":248,"column":11},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":9}},{"generated":{"line":248,"column":20},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":4}},{"generated":{"line":248,"column":23},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":21}},{"generated":{"line":248,"column":24},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":22}},{"name":"global","generated":{"line":248,"column":26},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":24}},{"generated":{"line":248,"column":32},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":30}},{"generated":{"line":248,"column":36},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":34}},{"name":"extent_","generated":{"line":248,"column":41},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":39}},{"generated":{"line":248,"column":48},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":22}},{"generated":{"line":248,"column":49},"source":"src/ol/proj/Projection.js","original":{"line":217,"column":4}},{"generated":{"line":249,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":218,"column":3}},{"generated":{"line":250,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":220,"column":2}},{"generated":{"line":256,"column":41},"source":"src/ol/proj/Projection.js","original":{"line":223,"column":23}},{"generated":{"line":257,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":224,"column":4}},{"generated":{"line":257,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":224,"column":11}},{"name":"defaultTileGrid_","generated":{"line":257,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":224,"column":16}},{"generated":{"line":257,"column":34},"source":"src/ol/proj/Projection.js","original":{"line":224,"column":4}},{"generated":{"line":258,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":225,"column":3}},{"generated":{"line":259,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":227,"column":2}},{"name":"tileGrid","generated":{"line":265,"column":39},"source":"src/ol/proj/Projection.js","original":{"line":230,"column":21}},{"generated":{"line":265,"column":49},"source":"src/ol/proj/Projection.js","original":{"line":230,"column":31}},{"generated":{"line":266,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":231,"column":4}},{"name":"defaultTileGrid_","generated":{"line":266,"column":11},"source":"src/ol/proj/Projection.js","original":{"line":231,"column":9}},{"generated":{"line":266,"column":27},"source":"src/ol/proj/Projection.js","original":{"line":231,"column":4}},{"name":"tileGrid","generated":{"line":266,"column":30},"source":"src/ol/proj/Projection.js","original":{"line":231,"column":28}},{"generated":{"line":266,"column":38},"source":"src/ol/proj/Projection.js","original":{"line":231,"column":4}},{"generated":{"line":267,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":232,"column":3}},{"generated":{"line":268,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":234,"column":2}},{"name":"extent","generated":{"line":276,"column":30},"source":"src/ol/proj/Projection.js","original":{"line":239,"column":12}},{"generated":{"line":276,"column":38},"source":"src/ol/proj/Projection.js","original":{"line":239,"column":20}},{"generated":{"line":277,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":240,"column":4}},{"name":"extent_","generated":{"line":277,"column":11},"source":"src/ol/proj/Projection.js","original":{"line":240,"column":9}},{"generated":{"line":277,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":240,"column":4}},{"name":"extent","generated":{"line":277,"column":21},"source":"src/ol/proj/Projection.js","original":{"line":240,"column":19}},{"generated":{"line":277,"column":27},"source":"src/ol/proj/Projection.js","original":{"line":240,"column":4}},{"generated":{"line":278,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":4}},{"name":"canWrapX_","generated":{"line":278,"column":11},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":9}},{"generated":{"line":278,"column":20},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":4}},{"generated":{"line":278,"column":23},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":21}},{"generated":{"line":278,"column":24},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":22}},{"generated":{"line":278,"column":26},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":24}},{"name":"global_","generated":{"line":278,"column":31},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":29}},{"generated":{"line":278,"column":38},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":24}},{"name":"extent","generated":{"line":278,"column":42},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":40}},{"generated":{"line":278,"column":48},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":22}},{"generated":{"line":278,"column":49},"source":"src/ol/proj/Projection.js","original":{"line":241,"column":4}},{"generated":{"line":279,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":242,"column":3}},{"generated":{"line":280,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":244,"column":2}},{"name":"worldExtent","generated":{"line":289,"column":35},"source":"src/ol/proj/Projection.js","original":{"line":250,"column":17}},{"generated":{"line":289,"column":48},"source":"src/ol/proj/Projection.js","original":{"line":250,"column":30}},{"generated":{"line":290,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":251,"column":4}},{"name":"worldExtent_","generated":{"line":290,"column":11},"source":"src/ol/proj/Projection.js","original":{"line":251,"column":9}},{"generated":{"line":290,"column":23},"source":"src/ol/proj/Projection.js","original":{"line":251,"column":4}},{"name":"worldExtent","generated":{"line":290,"column":26},"source":"src/ol/proj/Projection.js","original":{"line":251,"column":24}},{"generated":{"line":290,"column":37},"source":"src/ol/proj/Projection.js","original":{"line":251,"column":4}},{"generated":{"line":291,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":252,"column":3}},{"generated":{"line":292,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":254,"column":2}},{"name":"func","generated":{"line":301,"column":42},"source":"src/ol/proj/Projection.js","original":{"line":260,"column":24}},{"generated":{"line":301,"column":48},"source":"src/ol/proj/Projection.js","original":{"line":260,"column":30}},{"generated":{"line":302,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":261,"column":4}},{"name":"getPointResolutionFunc_","generated":{"line":302,"column":11},"source":"src/ol/proj/Projection.js","original":{"line":261,"column":9}},{"generated":{"line":302,"column":34},"source":"src/ol/proj/Projection.js","original":{"line":261,"column":4}},{"name":"func","generated":{"line":302,"column":37},"source":"src/ol/proj/Projection.js","original":{"line":261,"column":35}},{"generated":{"line":302,"column":41},"source":"src/ol/proj/Projection.js","original":{"line":261,"column":4}},{"generated":{"line":303,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":262,"column":3}},{"generated":{"line":304,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":264,"column":2}},{"generated":{"line":312,"column":45},"source":"src/ol/proj/Projection.js","original":{"line":269,"column":27}},{"generated":{"line":313,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":270,"column":4}},{"generated":{"line":313,"column":13},"source":"src/ol/proj/Projection.js","original":{"line":270,"column":11}},{"name":"getPointResolutionFunc_","generated":{"line":313,"column":18},"source":"src/ol/proj/Projection.js","original":{"line":270,"column":16}},{"generated":{"line":313,"column":41},"source":"src/ol/proj/Projection.js","original":{"line":270,"column":4}},{"generated":{"line":314,"column":0},"source":"src/ol/proj/Projection.js","original":{"line":271,"column":3}},{"name":"Projection","generated":{"line":320,"column":15},"source":"src/ol/proj/Projection.js","original":{"line":274,"column":15}}],"sources":{"src/ol/proj/Projection.js":"/**\r\n * @module ol/proj/Projection\r\n */\r\nimport {METERS_PER_UNIT} from './Units.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\r\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\r\n * proj4 projection is defined for `code`.\r\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\r\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\r\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\r\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\r\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\r\n * lookup table.\r\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\r\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\r\n * Function to determine resolution at a point. The function is called with a\r\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\r\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\r\n * the default {@link module:ol/proj#getPointResolution} function will be used.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Projection definition class. One of these is created for each projection\r\n * supported in the application and stored in the {@link module:ol/proj} namespace.\r\n * You can use these in applications, but this is not required, as API params\r\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\r\n * code will suffice.\r\n *\r\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\r\n * projection.\r\n *\r\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\r\n * with the following aliases:\r\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\r\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\r\n *     urn:x-ogc:def:crs:EPSG:4326\r\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\r\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\r\n *\r\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\r\n * be added using `proj4.defs()`. After all required projection definitions are\r\n * added, call the {@link module:ol/proj/proj4~register} function.\r\n *\r\n * @api\r\n */\r\nclass Projection {\r\n\r\n  /**\r\n   * @param {Options} options Projection options.\r\n   */\r\n  constructor(options) {\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.code_ = options.code;\r\n\r\n    /**\r\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\r\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\r\n     * tile.\r\n     * @private\r\n     * @type {import(\"./Units.js\").default}\r\n     */\r\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\r\n\r\n    /**\r\n     * Validity extent of the projection in projected coordinates. For projections\r\n     * with `TILE_PIXELS` units, this is the extent of the tile in\r\n     * tile pixel space.\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = options.extent !== undefined ? options.extent : null;\r\n\r\n    /**\r\n     * Extent of the world in EPSG:4326. For projections with\r\n     * `TILE_PIXELS` units, this is the extent of the tile in\r\n     * projected coordinate space.\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.worldExtent_ = options.worldExtent !== undefined ?\r\n      options.worldExtent : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\r\n      options.axisOrientation : 'enu';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.global_ = options.global !== undefined ? options.global : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.canWrapX_ = !!(this.global_ && this.extent_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\r\n     */\r\n    this.getPointResolutionFunc_ = options.getPointResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.defaultTileGrid_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.metersPerUnit_ = options.metersPerUnit;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} The projection is suitable for wrapping the x-axis\r\n   */\r\n  canWrapX() {\r\n    return this.canWrapX_;\r\n  }\r\n\r\n  /**\r\n   * Get the code for this projection, e.g. 'EPSG:4326'.\r\n   * @return {string} Code.\r\n   * @api\r\n   */\r\n  getCode() {\r\n    return this.code_;\r\n  }\r\n\r\n  /**\r\n   * Get the validity extent for this projection.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return this.extent_;\r\n  }\r\n\r\n  /**\r\n   * Get the units of this projection.\r\n   * @return {import(\"./Units.js\").default} Units.\r\n   * @api\r\n   */\r\n  getUnits() {\r\n    return this.units_;\r\n  }\r\n\r\n  /**\r\n   * Get the amount of meters per unit of this projection.  If the projection is\r\n   * not configured with `metersPerUnit` or a units identifier, the return is\r\n   * `undefined`.\r\n   * @return {number|undefined} Meters.\r\n   * @api\r\n   */\r\n  getMetersPerUnit() {\r\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\r\n  }\r\n\r\n  /**\r\n   * Get the world extent for this projection.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getWorldExtent() {\r\n    return this.worldExtent_;\r\n  }\r\n\r\n  /**\r\n   * Get the axis orientation of this projection.\r\n   * Example values are:\r\n   * enu - the default easting, northing, elevation.\r\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\r\n   *     or south orientated transverse mercator.\r\n   * wnu - westing, northing, up - some planetary coordinate systems have\r\n   *     \"west positive\" coordinate systems\r\n   * @return {string} Axis orientation.\r\n   * @api\r\n   */\r\n  getAxisOrientation() {\r\n    return this.axisOrientation_;\r\n  }\r\n\r\n  /**\r\n   * Is this projection a global projection which spans the whole world?\r\n   * @return {boolean} Whether the projection is global.\r\n   * @api\r\n   */\r\n  isGlobal() {\r\n    return this.global_;\r\n  }\r\n\r\n  /**\r\n   * Set if the projection is a global projection which spans the whole world\r\n   * @param {boolean} global Whether the projection is global.\r\n   * @api\r\n   */\r\n  setGlobal(global) {\r\n    this.global_ = global;\r\n    this.canWrapX_ = !!(global && this.extent_);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\r\n   */\r\n  getDefaultTileGrid() {\r\n    return this.defaultTileGrid_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\r\n   */\r\n  setDefaultTileGrid(tileGrid) {\r\n    this.defaultTileGrid_ = tileGrid;\r\n  }\r\n\r\n  /**\r\n   * Set the validity extent for this projection.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @api\r\n   */\r\n  setExtent(extent) {\r\n    this.extent_ = extent;\r\n    this.canWrapX_ = !!(this.global_ && extent);\r\n  }\r\n\r\n  /**\r\n   * Set the world extent for this projection.\r\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\r\n   *     [minlon, minlat, maxlon, maxlat].\r\n   * @api\r\n   */\r\n  setWorldExtent(worldExtent) {\r\n    this.worldExtent_ = worldExtent;\r\n  }\r\n\r\n  /**\r\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\r\n   * for this projection.\r\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\r\n   * @api\r\n   */\r\n  setGetPointResolution(func) {\r\n    this.getPointResolutionFunc_ = func;\r\n  }\r\n\r\n  /**\r\n   * Get the custom point resolution function for this projection (if set).\r\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\r\n   * resolution function (if set).\r\n   */\r\n  getPointResolutionFunc() {\r\n    return this.getPointResolutionFunc_;\r\n  }\r\n}\r\n\r\nexport default Projection;\r\n"},"lineCount":null}},"error":null,"hash":"d14feb5fe1ddcca9936c4dce57cf983e","cacheData":{"env":{}}}