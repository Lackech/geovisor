{"id":"src/ol/layer/BaseImage.js","dependencies":[{"name":"C:\\Users\\alro9\\Documents\\GitHub\\geovisor\\package.json","includedInParent":true,"mtime":1562618226138},{"name":"./Layer.js","loc":{"line":4,"column":18},"parent":"C:\\Users\\alro9\\Documents\\GitHub\\geovisor\\src\\ol\\layer\\BaseImage.js","resolved":"C:\\Users\\alro9\\Documents\\GitHub\\geovisor\\src\\ol\\layer\\Layer.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Layer2 = _interopRequireDefault(require(\"./Layer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\r\n */\n\n/**\r\n * @classdesc\r\n * Server-rendered images that are available for arbitrary extents and\r\n * resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @extends {Layer<import(\"../source/Image.js\").default>}\r\n * @api\r\n */\nvar BaseImageLayer =\n/*#__PURE__*/\nfunction (_Layer) {\n  _inherits(BaseImageLayer, _Layer);\n\n  /**\r\n   * @param {Options=} opt_options Layer options.\r\n   */\n  function BaseImageLayer(opt_options) {\n    _classCallCheck(this, BaseImageLayer);\n\n    var options = opt_options ? opt_options : {};\n    return _possibleConstructorReturn(this, _getPrototypeOf(BaseImageLayer).call(this, options));\n  }\n\n  return BaseImageLayer;\n}(_Layer2.default);\n\nvar _default = BaseImageLayer;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/ol/layer/BaseImage.js","original":{"line":4,"column":0}},{"generated":{"line":26,"column":0},"source":"src/ol/layer/BaseImage.js","original":{"line":7,"column":0}},{"generated":{"line":47,"column":0},"source":"src/ol/layer/BaseImage.js","original":{"line":29,"column":0}},{"name":"BaseImageLayer","generated":{"line":58,"column":4},"source":"src/ol/layer/BaseImage.js","original":{"line":40,"column":6}},{"generated":{"line":63,"column":0},"source":"src/ol/layer/BaseImage.js","original":{"line":42,"column":2}},{"generated":{"line":66,"column":0},"source":"src/ol/layer/BaseImage.js","original":{"line":45,"column":2}},{"name":"opt_options","generated":{"line":66,"column":26},"source":"src/ol/layer/BaseImage.js","original":{"line":45,"column":14}},{"generated":{"line":66,"column":37},"source":"src/ol/layer/BaseImage.js","original":{"line":45,"column":2}},{"generated":{"line":66,"column":39},"source":"src/ol/layer/BaseImage.js","original":{"line":45,"column":27}},{"generated":{"line":67,"column":0},"source":"src/ol/layer/BaseImage.js","original":{"line":45,"column":27}},{"generated":{"line":69,"column":0},"source":"src/ol/layer/BaseImage.js","original":{"line":46,"column":4}},{"name":"options","generated":{"line":69,"column":8},"source":"src/ol/layer/BaseImage.js","original":{"line":46,"column":10}},{"generated":{"line":69,"column":15},"source":"src/ol/layer/BaseImage.js","original":{"line":46,"column":17}},{"name":"opt_options","generated":{"line":69,"column":18},"source":"src/ol/layer/BaseImage.js","original":{"line":46,"column":20}},{"generated":{"line":69,"column":29},"source":"src/ol/layer/BaseImage.js","original":{"line":46,"column":31}},{"name":"opt_options","generated":{"line":69,"column":32},"source":"src/ol/layer/BaseImage.js","original":{"line":46,"column":34}},{"generated":{"line":69,"column":43},"source":"src/ol/layer/BaseImage.js","original":{"line":46,"column":31}},{"generated":{"line":69,"column":46},"source":"src/ol/layer/BaseImage.js","original":{"line":46,"column":48}},{"generated":{"line":69,"column":48},"source":"src/ol/layer/BaseImage.js","original":{"line":46,"column":4}},{"generated":{"line":70,"column":0},"source":"src/ol/layer/BaseImage.js","original":{"line":45,"column":27}},{"name":"options","generated":{"line":70,"column":87},"source":"src/ol/layer/BaseImage.js","original":{"line":47,"column":10}},{"generated":{"line":70,"column":94},"source":"src/ol/layer/BaseImage.js","original":{"line":45,"column":27}},{"generated":{"line":71,"column":0},"source":"src/ol/layer/BaseImage.js","original":{"line":48,"column":3}},{"name":"Layer","generated":{"line":74,"column":2},"source":"src/ol/layer/BaseImage.js","original":{"line":40,"column":29}},{"name":"BaseImageLayer","generated":{"line":76,"column":15},"source":"src/ol/layer/BaseImage.js","original":{"line":52,"column":15}}],"sources":{"src/ol/layer/BaseImage.js":"/**\r\n * @module ol/layer/BaseImage\r\n */\r\nimport Layer from './Layer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Server-rendered images that are available for arbitrary extents and\r\n * resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @extends {Layer<import(\"../source/Image.js\").default>}\r\n * @api\r\n */\r\nclass BaseImageLayer extends Layer {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Layer options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n    super(options);\r\n  }\r\n\r\n}\r\n\r\nexport default BaseImageLayer;\r\n"},"lineCount":null}},"error":null,"hash":"f9e3f9405aa1501091b31f068313ac51","cacheData":{"env":{}}}