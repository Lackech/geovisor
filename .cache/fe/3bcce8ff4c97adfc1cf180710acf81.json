{"id":"src/ol/util.js","dependencies":[{"name":"C:\\Users\\alro9\\Documents\\GitHub\\geovisor\\package.json","includedInParent":true,"mtime":1562618226138}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.abstract = abstract;\nexports.getUid = getUid;\nexports.VERSION = void 0;\n\n/**\r\n * @module ol/util\r\n */\n\n/**\r\n * @return {?} Any return.\r\n */\nfunction abstract() {\n  return (\n    /** @type {?} */\n    function () {\n      throw new Error('Unimplemented abstract method.');\n    }()\n  );\n}\n/**\r\n * Counter for getUid.\r\n * @type {number}\r\n * @private\r\n */\n\n\nvar uidCounter_ = 0;\n/**\r\n * Gets a unique ID for an object. This mutates the object so that further calls\r\n * with the same object as a parameter returns the same value. Unique IDs are generated\r\n * as a strictly increasing sequence. Adapted from goog.getUid.\r\n *\r\n * @param {Object} obj The object to get the unique ID for.\r\n * @return {string} The unique ID for the object.\r\n * @api\r\n */\n\nfunction getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\r\n * OpenLayers version.\r\n * @type {string}\r\n */\n\n\nvar VERSION = 'latest';\nexports.VERSION = VERSION;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":10,"column":0},"source":"src/ol/util.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"src/ol/util.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"src/ol/util.js","original":{"line":8,"column":7}},{"name":"abstract","generated":{"line":17,"column":9},"source":"src/ol/util.js","original":{"line":8,"column":16}},{"generated":{"line":17,"column":17},"source":"src/ol/util.js","original":{"line":8,"column":7}},{"generated":{"line":17,"column":20},"source":"src/ol/util.js","original":{"line":8,"column":27}},{"generated":{"line":18,"column":0},"source":"src/ol/util.js","original":{"line":9,"column":2}},{"generated":{"line":19,"column":0},"source":"src/ol/util.js","original":{"line":9,"column":9}},{"generated":{"line":20,"column":0},"source":"src/ol/util.js","original":{"line":9,"column":28}},{"generated":{"line":20,"column":16},"source":"src/ol/util.js","original":{"line":9,"column":39}},{"generated":{"line":21,"column":0},"source":"src/ol/util.js","original":{"line":10,"column":4}},{"generated":{"line":21,"column":12},"source":"src/ol/util.js","original":{"line":10,"column":10}},{"name":"Error","generated":{"line":21,"column":16},"source":"src/ol/util.js","original":{"line":10,"column":14}},{"generated":{"line":21,"column":21},"source":"src/ol/util.js","original":{"line":10,"column":10}},{"generated":{"line":21,"column":22},"source":"src/ol/util.js","original":{"line":10,"column":20}},{"generated":{"line":21,"column":54},"source":"src/ol/util.js","original":{"line":10,"column":10}},{"generated":{"line":21,"column":55},"source":"src/ol/util.js","original":{"line":10,"column":4}},{"generated":{"line":22,"column":0},"source":"src/ol/util.js","original":{"line":11,"column":3}},{"generated":{"line":22,"column":5},"source":"src/ol/util.js","original":{"line":9,"column":27}},{"generated":{"line":23,"column":0},"source":"src/ol/util.js","original":{"line":9,"column":2}},{"generated":{"line":24,"column":0},"source":"src/ol/util.js","original":{"line":12,"column":1}},{"generated":{"line":25,"column":0},"source":"src/ol/util.js","original":{"line":14,"column":0}},{"generated":{"line":32,"column":0},"source":"src/ol/util.js","original":{"line":19,"column":0}},{"name":"uidCounter_","generated":{"line":32,"column":4},"source":"src/ol/util.js","original":{"line":19,"column":4}},{"generated":{"line":32,"column":15},"source":"src/ol/util.js","original":{"line":19,"column":15}},{"generated":{"line":32,"column":18},"source":"src/ol/util.js","original":{"line":19,"column":18}},{"generated":{"line":32,"column":19},"source":"src/ol/util.js","original":{"line":19,"column":0}},{"generated":{"line":33,"column":0},"source":"src/ol/util.js","original":{"line":21,"column":0}},{"generated":{"line":43,"column":0},"source":"src/ol/util.js","original":{"line":30,"column":7}},{"name":"getUid","generated":{"line":43,"column":9},"source":"src/ol/util.js","original":{"line":30,"column":16}},{"generated":{"line":43,"column":15},"source":"src/ol/util.js","original":{"line":30,"column":7}},{"name":"obj","generated":{"line":43,"column":16},"source":"src/ol/util.js","original":{"line":30,"column":23}},{"generated":{"line":43,"column":19},"source":"src/ol/util.js","original":{"line":30,"column":7}},{"generated":{"line":43,"column":21},"source":"src/ol/util.js","original":{"line":30,"column":28}},{"generated":{"line":44,"column":0},"source":"src/ol/util.js","original":{"line":31,"column":2}},{"name":"obj","generated":{"line":44,"column":9},"source":"src/ol/util.js","original":{"line":31,"column":9}},{"generated":{"line":44,"column":12},"source":"src/ol/util.js","original":{"line":31,"column":12}},{"name":"ol_uid","generated":{"line":44,"column":13},"source":"src/ol/util.js","original":{"line":31,"column":13}},{"generated":{"line":44,"column":19},"source":"src/ol/util.js","original":{"line":31,"column":9}},{"name":"obj","generated":{"line":44,"column":24},"source":"src/ol/util.js","original":{"line":31,"column":24}},{"generated":{"line":44,"column":27},"source":"src/ol/util.js","original":{"line":31,"column":27}},{"name":"ol_uid","generated":{"line":44,"column":28},"source":"src/ol/util.js","original":{"line":31,"column":28}},{"generated":{"line":44,"column":34},"source":"src/ol/util.js","original":{"line":31,"column":24}},{"name":"String","generated":{"line":44,"column":37},"source":"src/ol/util.js","original":{"line":31,"column":37}},{"generated":{"line":44,"column":43},"source":"src/ol/util.js","original":{"line":31,"column":43}},{"generated":{"line":44,"column":44},"source":"src/ol/util.js","original":{"line":31,"column":44}},{"name":"uidCounter_","generated":{"line":44,"column":46},"source":"src/ol/util.js","original":{"line":31,"column":46}},{"generated":{"line":44,"column":57},"source":"src/ol/util.js","original":{"line":31,"column":43}},{"generated":{"line":44,"column":58},"source":"src/ol/util.js","original":{"line":31,"column":9}},{"generated":{"line":44,"column":59},"source":"src/ol/util.js","original":{"line":31,"column":2}},{"generated":{"line":45,"column":0},"source":"src/ol/util.js","original":{"line":32,"column":1}},{"generated":{"line":46,"column":0},"source":"src/ol/util.js","original":{"line":34,"column":0}},{"generated":{"line":52,"column":0},"source":"src/ol/util.js","original":{"line":38,"column":7}},{"name":"VERSION","generated":{"line":52,"column":4},"source":"src/ol/util.js","original":{"line":38,"column":13}},{"generated":{"line":52,"column":11},"source":"src/ol/util.js","original":{"line":38,"column":20}},{"generated":{"line":52,"column":14},"source":"src/ol/util.js","original":{"line":38,"column":23}},{"generated":{"line":52,"column":22},"source":"src/ol/util.js","original":{"line":38,"column":7}}],"sources":{"src/ol/util.js":"/**\r\n * @module ol/util\r\n */\r\n\r\n/**\r\n * @return {?} Any return.\r\n */\r\nexport function abstract() {\r\n  return /** @type {?} */ ((function() {\r\n    throw new Error('Unimplemented abstract method.');\r\n  })());\r\n}\r\n\r\n/**\r\n * Counter for getUid.\r\n * @type {number}\r\n * @private\r\n */\r\nlet uidCounter_ = 0;\r\n\r\n/**\r\n * Gets a unique ID for an object. This mutates the object so that further calls\r\n * with the same object as a parameter returns the same value. Unique IDs are generated\r\n * as a strictly increasing sequence. Adapted from goog.getUid.\r\n *\r\n * @param {Object} obj The object to get the unique ID for.\r\n * @return {string} The unique ID for the object.\r\n * @api\r\n */\r\nexport function getUid(obj) {\r\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\r\n}\r\n\r\n/**\r\n * OpenLayers version.\r\n * @type {string}\r\n */\r\nexport const VERSION = 'latest';\r\n"},"lineCount":null}},"error":null,"hash":"f5f6f711958afffe8f7c1ff2d34cf93d","cacheData":{"env":{}}}