{"id":"src/ol/layer/BaseTile.js","dependencies":[{"name":"C:\\Users\\alro9\\Documents\\geovisor\\package.json","includedInParent":true,"mtime":1559590286605},{"name":"./Layer.js","loc":{"line":4,"column":18},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\layer\\BaseTile.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\layer\\Layer.js"},{"name":"./TileProperty.js","loc":{"line":5,"column":25},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\layer\\BaseTile.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\layer\\TileProperty.js"},{"name":"../obj.js","loc":{"line":6,"column":21},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\layer\\BaseTile.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\obj.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Layer2 = _interopRequireDefault(require(\"./Layer.js\"));\n\nvar _TileProperty = _interopRequireDefault(require(\"./TileProperty.js\"));\n\nvar _obj = require(\"../obj.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\n\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @extends {Layer<import(\"../source/Tile.js\").default>}\r\n * @api\r\n */\nvar BaseTileLayer =\n/*#__PURE__*/\nfunction (_Layer) {\n  _inherits(BaseTileLayer, _Layer);\n\n  /**\r\n   * @param {Options=} opt_options Tile layer options.\r\n   */\n  function BaseTileLayer(opt_options) {\n    var _this;\n\n    _classCallCheck(this, BaseTileLayer);\n\n    var options = opt_options ? opt_options : {};\n    var baseOptions = (0, _obj.assign)({}, options);\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseTileLayer).call(this, baseOptions));\n\n    _this.setPreload(options.preload !== undefined ? options.preload : 0);\n\n    _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ? options.useInterimTilesOnError : true);\n\n    return _this;\n  }\n  /**\r\n  * Return the level as number to which we will preload tiles up to.\r\n  * @return {number} The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\n\n\n  _createClass(BaseTileLayer, [{\n    key: \"getPreload\",\n    value: function getPreload() {\n      return (\n        /** @type {number} */\n        this.get(_TileProperty.default.PRELOAD)\n      );\n    }\n    /**\r\n    * Set the level as number to which we will preload tiles up to.\r\n    * @param {number} preload The level to preload tiles up to.\r\n    * @observable\r\n    * @api\r\n    */\n\n  }, {\n    key: \"setPreload\",\n    value: function setPreload(preload) {\n      this.set(_TileProperty.default.PRELOAD, preload);\n    }\n    /**\r\n    * Whether we use interim tiles on error.\r\n    * @return {boolean} Use interim tiles on error.\r\n    * @observable\r\n    * @api\r\n    */\n\n  }, {\n    key: \"getUseInterimTilesOnError\",\n    value: function getUseInterimTilesOnError() {\n      return (\n        /** @type {boolean} */\n        this.get(_TileProperty.default.USE_INTERIM_TILES_ON_ERROR)\n      );\n    }\n    /**\r\n    * Set whether we use interim tiles on error.\r\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n    * @observable\r\n    * @api\r\n    */\n\n  }, {\n    key: \"setUseInterimTilesOnError\",\n    value: function setUseInterimTilesOnError(useInterimTilesOnError) {\n      this.set(_TileProperty.default.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    }\n  }]);\n\n  return BaseTileLayer;\n}(_Layer2.default);\n\nvar _default = BaseTileLayer;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":6,"column":0}},{"generated":{"line":34,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":9,"column":0}},{"generated":{"line":59,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":35,"column":0}},{"name":"BaseTileLayer","generated":{"line":70,"column":4},"source":"src/ol/layer/BaseTile.js","original":{"line":46,"column":6}},{"generated":{"line":75,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":47,"column":2}},{"generated":{"line":78,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":50,"column":2}},{"name":"opt_options","generated":{"line":78,"column":25},"source":"src/ol/layer/BaseTile.js","original":{"line":50,"column":14}},{"generated":{"line":78,"column":36},"source":"src/ol/layer/BaseTile.js","original":{"line":50,"column":2}},{"generated":{"line":78,"column":38},"source":"src/ol/layer/BaseTile.js","original":{"line":50,"column":27}},{"generated":{"line":79,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":50,"column":27}},{"generated":{"line":81,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":50,"column":27}},{"generated":{"line":83,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":51,"column":4}},{"name":"options","generated":{"line":83,"column":8},"source":"src/ol/layer/BaseTile.js","original":{"line":51,"column":10}},{"generated":{"line":83,"column":15},"source":"src/ol/layer/BaseTile.js","original":{"line":51,"column":17}},{"name":"opt_options","generated":{"line":83,"column":18},"source":"src/ol/layer/BaseTile.js","original":{"line":51,"column":20}},{"generated":{"line":83,"column":29},"source":"src/ol/layer/BaseTile.js","original":{"line":51,"column":31}},{"name":"opt_options","generated":{"line":83,"column":32},"source":"src/ol/layer/BaseTile.js","original":{"line":51,"column":34}},{"generated":{"line":83,"column":43},"source":"src/ol/layer/BaseTile.js","original":{"line":51,"column":31}},{"generated":{"line":83,"column":46},"source":"src/ol/layer/BaseTile.js","original":{"line":51,"column":48}},{"generated":{"line":83,"column":48},"source":"src/ol/layer/BaseTile.js","original":{"line":51,"column":4}},{"generated":{"line":84,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":53,"column":4}},{"name":"baseOptions","generated":{"line":84,"column":8},"source":"src/ol/layer/BaseTile.js","original":{"line":53,"column":10}},{"generated":{"line":84,"column":19},"source":"src/ol/layer/BaseTile.js","original":{"line":53,"column":21}},{"generated":{"line":84,"column":22},"source":"src/ol/layer/BaseTile.js","original":{"line":53,"column":24}},{"generated":{"line":84,"column":39},"source":"src/ol/layer/BaseTile.js","original":{"line":53,"column":31}},{"generated":{"line":84,"column":41},"source":"src/ol/layer/BaseTile.js","original":{"line":53,"column":24}},{"name":"options","generated":{"line":84,"column":43},"source":"src/ol/layer/BaseTile.js","original":{"line":53,"column":35}},{"generated":{"line":84,"column":50},"source":"src/ol/layer/BaseTile.js","original":{"line":53,"column":24}},{"generated":{"line":84,"column":51},"source":"src/ol/layer/BaseTile.js","original":{"line":53,"column":4}},{"generated":{"line":85,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":55,"column":4}},{"name":"baseOptions","generated":{"line":85,"column":11},"source":"src/ol/layer/BaseTile.js","original":{"line":55,"column":11}},{"generated":{"line":85,"column":22},"source":"src/ol/layer/BaseTile.js","original":{"line":55,"column":22}},{"name":"preload","generated":{"line":85,"column":23},"source":"src/ol/layer/BaseTile.js","original":{"line":55,"column":23}},{"generated":{"line":85,"column":30},"source":"src/ol/layer/BaseTile.js","original":{"line":55,"column":4}},{"generated":{"line":86,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":56,"column":4}},{"name":"baseOptions","generated":{"line":86,"column":11},"source":"src/ol/layer/BaseTile.js","original":{"line":56,"column":11}},{"generated":{"line":86,"column":22},"source":"src/ol/layer/BaseTile.js","original":{"line":56,"column":22}},{"name":"useInterimTilesOnError","generated":{"line":86,"column":23},"source":"src/ol/layer/BaseTile.js","original":{"line":56,"column":23}},{"generated":{"line":86,"column":45},"source":"src/ol/layer/BaseTile.js","original":{"line":56,"column":4}},{"generated":{"line":87,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":57,"column":4}},{"name":"baseOptions","generated":{"line":87,"column":87},"source":"src/ol/layer/BaseTile.js","original":{"line":57,"column":10}},{"generated":{"line":87,"column":98},"source":"src/ol/layer/BaseTile.js","original":{"line":57,"column":4}},{"generated":{"line":89,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":4}},{"name":"setPreload","generated":{"line":89,"column":10},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":9}},{"generated":{"line":89,"column":20},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":4}},{"name":"options","generated":{"line":89,"column":21},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":20}},{"generated":{"line":89,"column":28},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":27}},{"name":"preload","generated":{"line":89,"column":29},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":28}},{"generated":{"line":89,"column":36},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":20}},{"name":"undefined","generated":{"line":89,"column":41},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":40}},{"generated":{"line":89,"column":50},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":20}},{"name":"options","generated":{"line":89,"column":53},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":52}},{"generated":{"line":89,"column":60},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":59}},{"name":"preload","generated":{"line":89,"column":61},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":60}},{"generated":{"line":89,"column":68},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":20}},{"generated":{"line":89,"column":71},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":70}},{"generated":{"line":89,"column":72},"source":"src/ol/layer/BaseTile.js","original":{"line":59,"column":4}},{"generated":{"line":91,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":4}},{"name":"setUseInterimTilesOnError","generated":{"line":91,"column":10},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":9}},{"generated":{"line":91,"column":35},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":4}},{"name":"options","generated":{"line":91,"column":36},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":35}},{"generated":{"line":91,"column":43},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":42}},{"name":"useInterimTilesOnError","generated":{"line":91,"column":44},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":43}},{"generated":{"line":91,"column":66},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":35}},{"name":"undefined","generated":{"line":91,"column":71},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":70}},{"generated":{"line":91,"column":80},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":35}},{"name":"options","generated":{"line":91,"column":83},"source":"src/ol/layer/BaseTile.js","original":{"line":61,"column":6}},{"generated":{"line":91,"column":90},"source":"src/ol/layer/BaseTile.js","original":{"line":61,"column":13}},{"name":"useInterimTilesOnError","generated":{"line":91,"column":91},"source":"src/ol/layer/BaseTile.js","original":{"line":61,"column":14}},{"generated":{"line":91,"column":113},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":35}},{"generated":{"line":91,"column":116},"source":"src/ol/layer/BaseTile.js","original":{"line":61,"column":39}},{"generated":{"line":91,"column":120},"source":"src/ol/layer/BaseTile.js","original":{"line":60,"column":4}},{"generated":{"line":93,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":50,"column":27}},{"generated":{"line":94,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":63,"column":3}},{"generated":{"line":95,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":65,"column":2}},{"generated":{"line":105,"column":33},"source":"src/ol/layer/BaseTile.js","original":{"line":71,"column":15}},{"generated":{"line":106,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":72,"column":4}},{"generated":{"line":107,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":72,"column":11}},{"generated":{"line":108,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":72,"column":34}},{"name":"get","generated":{"line":108,"column":13},"source":"src/ol/layer/BaseTile.js","original":{"line":72,"column":39}},{"generated":{"line":108,"column":16},"source":"src/ol/layer/BaseTile.js","original":{"line":72,"column":34}},{"name":"TileProperty","generated":{"line":108,"column":17},"source":"src/ol/layer/BaseTile.js","original":{"line":72,"column":43}},{"name":"PRELOAD","generated":{"line":108,"column":39},"source":"src/ol/layer/BaseTile.js","original":{"line":72,"column":56}},{"generated":{"line":108,"column":46},"source":"src/ol/layer/BaseTile.js","original":{"line":72,"column":34}},{"generated":{"line":109,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":72,"column":4}},{"generated":{"line":110,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":73,"column":3}},{"generated":{"line":111,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":75,"column":2}},{"name":"preload","generated":{"line":120,"column":31},"source":"src/ol/layer/BaseTile.js","original":{"line":81,"column":13}},{"generated":{"line":120,"column":40},"source":"src/ol/layer/BaseTile.js","original":{"line":81,"column":22}},{"generated":{"line":121,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":82,"column":4}},{"name":"set","generated":{"line":121,"column":11},"source":"src/ol/layer/BaseTile.js","original":{"line":82,"column":9}},{"generated":{"line":121,"column":14},"source":"src/ol/layer/BaseTile.js","original":{"line":82,"column":4}},{"name":"TileProperty","generated":{"line":121,"column":15},"source":"src/ol/layer/BaseTile.js","original":{"line":82,"column":13}},{"name":"PRELOAD","generated":{"line":121,"column":37},"source":"src/ol/layer/BaseTile.js","original":{"line":82,"column":26}},{"generated":{"line":121,"column":44},"source":"src/ol/layer/BaseTile.js","original":{"line":82,"column":4}},{"name":"preload","generated":{"line":121,"column":46},"source":"src/ol/layer/BaseTile.js","original":{"line":82,"column":35}},{"generated":{"line":121,"column":53},"source":"src/ol/layer/BaseTile.js","original":{"line":82,"column":4}},{"generated":{"line":122,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":83,"column":3}},{"generated":{"line":123,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":85,"column":2}},{"generated":{"line":132,"column":48},"source":"src/ol/layer/BaseTile.js","original":{"line":91,"column":30}},{"generated":{"line":133,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":92,"column":4}},{"generated":{"line":134,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":92,"column":11}},{"generated":{"line":135,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":92,"column":35}},{"name":"get","generated":{"line":135,"column":13},"source":"src/ol/layer/BaseTile.js","original":{"line":92,"column":40}},{"generated":{"line":135,"column":16},"source":"src/ol/layer/BaseTile.js","original":{"line":92,"column":35}},{"name":"TileProperty","generated":{"line":135,"column":17},"source":"src/ol/layer/BaseTile.js","original":{"line":92,"column":44}},{"name":"USE_INTERIM_TILES_ON_ERROR","generated":{"line":135,"column":39},"source":"src/ol/layer/BaseTile.js","original":{"line":92,"column":57}},{"generated":{"line":135,"column":65},"source":"src/ol/layer/BaseTile.js","original":{"line":92,"column":35}},{"generated":{"line":136,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":92,"column":4}},{"generated":{"line":137,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":93,"column":3}},{"generated":{"line":138,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":95,"column":2}},{"name":"useInterimTilesOnError","generated":{"line":147,"column":46},"source":"src/ol/layer/BaseTile.js","original":{"line":101,"column":28}},{"generated":{"line":147,"column":70},"source":"src/ol/layer/BaseTile.js","original":{"line":101,"column":52}},{"generated":{"line":148,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":102,"column":4}},{"name":"set","generated":{"line":148,"column":11},"source":"src/ol/layer/BaseTile.js","original":{"line":102,"column":9}},{"generated":{"line":148,"column":14},"source":"src/ol/layer/BaseTile.js","original":{"line":102,"column":4}},{"name":"TileProperty","generated":{"line":148,"column":15},"source":"src/ol/layer/BaseTile.js","original":{"line":102,"column":13}},{"name":"USE_INTERIM_TILES_ON_ERROR","generated":{"line":148,"column":37},"source":"src/ol/layer/BaseTile.js","original":{"line":102,"column":26}},{"generated":{"line":148,"column":63},"source":"src/ol/layer/BaseTile.js","original":{"line":102,"column":4}},{"name":"useInterimTilesOnError","generated":{"line":148,"column":65},"source":"src/ol/layer/BaseTile.js","original":{"line":102,"column":54}},{"generated":{"line":148,"column":87},"source":"src/ol/layer/BaseTile.js","original":{"line":102,"column":4}},{"generated":{"line":149,"column":0},"source":"src/ol/layer/BaseTile.js","original":{"line":103,"column":3}},{"name":"Layer","generated":{"line":153,"column":2},"source":"src/ol/layer/BaseTile.js","original":{"line":46,"column":28}},{"name":"BaseTileLayer","generated":{"line":155,"column":15},"source":"src/ol/layer/BaseTile.js","original":{"line":107,"column":15}}],"sources":{"src/ol/layer/BaseTile.js":"/**\r\n * @module ol/layer/BaseTile\r\n */\r\nimport Layer from './Layer.js';\r\nimport TileProperty from './TileProperty.js';\r\nimport {assign} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @extends {Layer<import(\"../source/Tile.js\").default>}\r\n * @api\r\n */\r\nclass BaseTileLayer extends Layer {\r\n  /**\r\n   * @param {Options=} opt_options Tile layer options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.preload;\r\n    delete baseOptions.useInterimTilesOnError;\r\n    super(baseOptions);\r\n\r\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\r\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\r\n      options.useInterimTilesOnError : true);\r\n\r\n  }\r\n\r\n  /**\r\n  * Return the level as number to which we will preload tiles up to.\r\n  * @return {number} The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  getPreload() {\r\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n  }\r\n\r\n  /**\r\n  * Set the level as number to which we will preload tiles up to.\r\n  * @param {number} preload The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  setPreload(preload) {\r\n    this.set(TileProperty.PRELOAD, preload);\r\n  }\r\n\r\n  /**\r\n  * Whether we use interim tiles on error.\r\n  * @return {boolean} Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  getUseInterimTilesOnError() {\r\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\r\n  }\r\n\r\n  /**\r\n  * Set whether we use interim tiles on error.\r\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  setUseInterimTilesOnError(useInterimTilesOnError) {\r\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n  }\r\n}\r\n\r\n\r\nexport default BaseTileLayer;\r\n"},"lineCount":null}},"error":null,"hash":"933a1350a611d69d076287bbef3020cc","cacheData":{"env":{}}}