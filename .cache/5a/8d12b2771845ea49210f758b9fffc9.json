{"id":"src/ol/Tile.js","dependencies":[{"name":"C:\\Users\\alro9\\Documents\\geovisor\\package.json","includedInParent":true,"mtime":1559590286605},{"name":"./TileState.js","loc":{"line":4,"column":22},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Tile.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\TileState.js"},{"name":"./easing.js","loc":{"line":5,"column":21},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Tile.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\easing.js"},{"name":"./events/Target.js","loc":{"line":6,"column":24},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Tile.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\events\\Target.js"},{"name":"./events/EventType.js","loc":{"line":7,"column":22},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Tile.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\events\\EventType.js"},{"name":"./util.js","loc":{"line":8,"column":23},"parent":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\Tile.js","resolved":"C:\\Users\\alro9\\Documents\\geovisor\\src\\ol\\util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _TileState = _interopRequireDefault(require(\"./TileState.js\"));\n\nvar _easing = require(\"./easing.js\");\n\nvar _Target = _interopRequireDefault(require(\"./events/Target.js\"));\n\nvar _EventType = _interopRequireDefault(require(\"./events/EventType.js\"));\n\nvar _util = require(\"./util.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\r\n * A function that takes an {@link module:ol/Tile} for the tile and a\r\n * `{string}` for the url as arguments. The default is\r\n * ```js\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   tile.getImage().src = src;\r\n * });\r\n * ```\r\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\r\n * error handling:\r\n *\r\n * ```js\r\n * import TileState from 'ol/TileState';\r\n *\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   var xhr = new XMLHttpRequest();\r\n *   xhr.responseType = 'blob';\r\n *   xhr.addEventListener('loadend', function (evt) {\r\n *     var data = this.response;\r\n *     if (data !== undefined) {\r\n *       tile.getImage().src = URL.createObjectURL(data);\r\n *     } else {\r\n *       tile.setState(TileState.ERROR);\r\n *     }\r\n *   });\r\n *   xhr.addEventListener('error', function () {\r\n *     tile.setState(TileState.ERROR);\r\n *   });\r\n *   xhr.open('GET', src);\r\n *   xhr.send();\r\n * });\r\n * ```\r\n *\r\n * @typedef {function(Tile, string): void} LoadFunction\r\n * @api\r\n */\n\n/**\r\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\r\n * the url that provides a tile for a given tile coordinate.\r\n *\r\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\r\n * coordinate, a `{number}` representing the pixel ratio and a\r\n * {@link module:ol/proj/Projection} for the projection  as arguments\r\n * and returns a `{string}` representing the tile URL, or undefined if no tile\r\n * should be requested for the passed tile coordinate.\r\n *\r\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\r\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\r\n * @api\r\n */\n\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [transition=250] A duration for tile opacity\r\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\r\n * @api\r\n */\n\n/**\r\n * @classdesc\r\n * Base class for tiles.\r\n *\r\n * @abstract\r\n */\nvar Tile =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inherits(Tile, _EventTarget);\n\n  /**\r\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {TileState} state State.\r\n   * @param {Options=} opt_options Tile options.\r\n   */\n  function Tile(tileCoord, state, opt_options) {\n    var _this;\n\n    _classCallCheck(this, Tile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tile).call(this));\n    var options = opt_options ? opt_options : {};\n    /**\r\n     * @type {import(\"./tilecoord.js\").TileCoord}\r\n     */\n\n    _this.tileCoord = tileCoord;\n    /**\r\n     * @protected\r\n     * @type {TileState}\r\n     */\n\n    _this.state = state;\n    /**\r\n     * An \"interim\" tile for this tile. The interim tile may be used while this\r\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\r\n     * on the source.\r\n     * @type {Tile}\r\n     */\n\n    _this.interimTile = null;\n    /**\r\n     * The tile is available at the highest possible resolution. Subclasses can\r\n     * set this to `false` initially. Tile load listeners will not be\r\n     * unregistered before this is set to `true` and a `#changed()` is called.\r\n     * @type {boolean}\r\n     */\n\n    _this.hifi = true;\n    /**\r\n     * A key assigned to the tile. This is used by the tile source to determine\r\n     * if this tile can effectively be used, or if a new tile should be created\r\n     * and this one be used as an interim tile for this new tile.\r\n     * @type {string}\r\n     */\n\n    _this.key = '';\n    /**\r\n     * The duration for the opacity transition.\r\n     * @type {number}\r\n     */\n\n    _this.transition_ = options.transition === undefined ? 250 : options.transition;\n    /**\r\n     * Lookup of start times for rendering transitions.  If the start time is\r\n     * equal to -1, the transition is complete.\r\n     * @type {Object<string, number>}\r\n     */\n\n    _this.transitionStarts_ = {};\n    return _this;\n  }\n  /**\r\n   * @protected\r\n   */\n\n\n  _createClass(Tile, [{\n    key: \"changed\",\n    value: function changed() {\n      this.dispatchEvent(_EventType.default.CHANGE);\n    }\n    /**\r\n     * @return {string} Key.\r\n     */\n\n  }, {\n    key: \"getKey\",\n    value: function getKey() {\n      return this.key + '/' + this.tileCoord;\n    }\n    /**\r\n     * Get the interim tile most suitable for rendering using the chain of interim\r\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\r\n     * such tile exists, the original tile is returned.\r\n     * @return {!Tile} Best tile for rendering.\r\n     */\n\n  }, {\n    key: \"getInterimTile\",\n    value: function getInterimTile() {\n      if (!this.interimTile) {\n        //empty chain\n        return this;\n      }\n\n      var tile = this.interimTile; // find the first loaded tile and return it. Since the chain is sorted in\n      // decreasing order of creation time, there is no need to search the remainder\n      // of the list (all those tiles correspond to older requests and will be\n      // cleaned up by refreshInterimChain)\n\n      do {\n        if (tile.getState() == _TileState.default.LOADED) {\n          // Show tile immediately instead of fading it in after loading, because\n          // the interim tile is in place already\n          this.transition_ = 0;\n          return tile;\n        }\n\n        tile = tile.interimTile;\n      } while (tile); // we can not find a better tile\n\n\n      return this;\n    }\n    /**\r\n     * Goes through the chain of interim tiles and discards sections of the chain\r\n     * that are no longer relevant.\r\n     */\n\n  }, {\n    key: \"refreshInterimChain\",\n    value: function refreshInterimChain() {\n      if (!this.interimTile) {\n        return;\n      }\n\n      var tile = this.interimTile;\n      var prev =\n      /** @type {Tile} */\n      this;\n\n      do {\n        if (tile.getState() == _TileState.default.LOADED) {\n          //we have a loaded tile, we can discard the rest of the list\n          //we would could abort any LOADING tile request\n          //older than this tile (i.e. any LOADING tile following this entry in the chain)\n          tile.interimTile = null;\n          break;\n        } else if (tile.getState() == _TileState.default.LOADING) {\n          //keep this LOADING tile any loaded tiles later in the chain are\n          //older than this tile, so we're still interested in the request\n          prev = tile;\n        } else if (tile.getState() == _TileState.default.IDLE) {\n          //the head of the list is the most current tile, we don't need\n          //to start any other requests for this chain\n          prev.interimTile = tile.interimTile;\n        } else {\n          prev = tile;\n        }\n\n        tile = prev.interimTile;\n      } while (tile);\n    }\n    /**\r\n     * Get the tile coordinate for this tile.\r\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"getTileCoord\",\n    value: function getTileCoord() {\n      return this.tileCoord;\n    }\n    /**\r\n     * @return {TileState} State.\r\n     */\n\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.state;\n    }\n    /**\r\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\r\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\r\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\r\n     * the tile queue and will block other requests.\r\n     * @param {TileState} state State.\r\n     * @api\r\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      this.state = state;\n      this.changed();\n    }\n    /**\r\n     * Load the image or retry if loading previously failed.\r\n     * Loading is taken care of by the tile queue, and calling this method is\r\n     * only needed for preloading or for reloading in case of an error.\r\n     * @abstract\r\n     * @api\r\n     */\n\n  }, {\n    key: \"load\",\n    value: function load() {\n      (0, _util.abstract)();\n    }\n    /**\r\n     * Get the alpha value for rendering.\r\n     * @param {string} id An id for the renderer.\r\n     * @param {number} time The render frame time.\r\n     * @return {number} A number between 0 and 1.\r\n     */\n\n  }, {\n    key: \"getAlpha\",\n    value: function getAlpha(id, time) {\n      if (!this.transition_) {\n        return 1;\n      }\n\n      var start = this.transitionStarts_[id];\n\n      if (!start) {\n        start = time;\n        this.transitionStarts_[id] = start;\n      } else if (start === -1) {\n        return 1;\n      }\n\n      var delta = time - start + 1000 / 60; // avoid rendering at 0\n\n      if (delta >= this.transition_) {\n        return 1;\n      }\n\n      return (0, _easing.easeIn)(delta / this.transition_);\n    }\n    /**\r\n     * Determine if a tile is in an alpha transition.  A tile is considered in\r\n     * transition if tile.getAlpha() has not yet been called or has been called\r\n     * and returned 1.\r\n     * @param {string} id An id for the renderer.\r\n     * @return {boolean} The tile is in transition.\r\n     */\n\n  }, {\n    key: \"inTransition\",\n    value: function inTransition(id) {\n      if (!this.transition_) {\n        return false;\n      }\n\n      return this.transitionStarts_[id] !== -1;\n    }\n    /**\r\n     * Mark a transition as complete.\r\n     * @param {string} id An id for the renderer.\r\n     */\n\n  }, {\n    key: \"endTransition\",\n    value: function endTransition(id) {\n      if (this.transition_) {\n        this.transitionStarts_[id] = -1;\n      }\n    }\n  }]);\n\n  return Tile;\n}(_Target.default);\n\nvar _default = Tile;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/ol/Tile.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"src/ol/Tile.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"src/ol/Tile.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"src/ol/Tile.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"src/ol/Tile.js","original":{"line":8,"column":0}},{"generated":{"line":38,"column":0},"source":"src/ol/Tile.js","original":{"line":11,"column":0}},{"generated":{"line":75,"column":0},"source":"src/ol/Tile.js","original":{"line":48,"column":0}},{"generated":{"line":90,"column":0},"source":"src/ol/Tile.js","original":{"line":64,"column":0}},{"generated":{"line":97,"column":0},"source":"src/ol/Tile.js","original":{"line":72,"column":0}},{"name":"Tile","generated":{"line":103,"column":4},"source":"src/ol/Tile.js","original":{"line":78,"column":6}},{"generated":{"line":108,"column":0},"source":"src/ol/Tile.js","original":{"line":80,"column":2}},{"generated":{"line":113,"column":0},"source":"src/ol/Tile.js","original":{"line":85,"column":2}},{"name":"tileCoord","generated":{"line":113,"column":16},"source":"src/ol/Tile.js","original":{"line":85,"column":14}},{"generated":{"line":113,"column":25},"source":"src/ol/Tile.js","original":{"line":85,"column":2}},{"name":"state","generated":{"line":113,"column":27},"source":"src/ol/Tile.js","original":{"line":85,"column":25}},{"generated":{"line":113,"column":32},"source":"src/ol/Tile.js","original":{"line":85,"column":2}},{"name":"opt_options","generated":{"line":113,"column":34},"source":"src/ol/Tile.js","original":{"line":85,"column":32}},{"generated":{"line":113,"column":45},"source":"src/ol/Tile.js","original":{"line":85,"column":2}},{"generated":{"line":113,"column":47},"source":"src/ol/Tile.js","original":{"line":85,"column":45}},{"generated":{"line":114,"column":0},"source":"src/ol/Tile.js","original":{"line":85,"column":45}},{"generated":{"line":116,"column":0},"source":"src/ol/Tile.js","original":{"line":85,"column":45}},{"generated":{"line":118,"column":0},"source":"src/ol/Tile.js","original":{"line":86,"column":4}},{"generated":{"line":119,"column":0},"source":"src/ol/Tile.js","original":{"line":88,"column":4}},{"name":"options","generated":{"line":119,"column":8},"source":"src/ol/Tile.js","original":{"line":88,"column":10}},{"generated":{"line":119,"column":15},"source":"src/ol/Tile.js","original":{"line":88,"column":17}},{"name":"opt_options","generated":{"line":119,"column":18},"source":"src/ol/Tile.js","original":{"line":88,"column":20}},{"generated":{"line":119,"column":29},"source":"src/ol/Tile.js","original":{"line":88,"column":31}},{"name":"opt_options","generated":{"line":119,"column":32},"source":"src/ol/Tile.js","original":{"line":88,"column":34}},{"generated":{"line":119,"column":43},"source":"src/ol/Tile.js","original":{"line":88,"column":31}},{"generated":{"line":119,"column":46},"source":"src/ol/Tile.js","original":{"line":88,"column":48}},{"generated":{"line":119,"column":48},"source":"src/ol/Tile.js","original":{"line":88,"column":4}},{"generated":{"line":120,"column":0},"source":"src/ol/Tile.js","original":{"line":90,"column":4}},{"generated":{"line":124,"column":0},"source":"src/ol/Tile.js","original":{"line":93,"column":4}},{"name":"tileCoord","generated":{"line":124,"column":10},"source":"src/ol/Tile.js","original":{"line":93,"column":9}},{"generated":{"line":124,"column":19},"source":"src/ol/Tile.js","original":{"line":93,"column":4}},{"name":"tileCoord","generated":{"line":124,"column":22},"source":"src/ol/Tile.js","original":{"line":93,"column":21}},{"generated":{"line":124,"column":31},"source":"src/ol/Tile.js","original":{"line":93,"column":4}},{"generated":{"line":125,"column":0},"source":"src/ol/Tile.js","original":{"line":95,"column":4}},{"generated":{"line":130,"column":0},"source":"src/ol/Tile.js","original":{"line":99,"column":4}},{"name":"state","generated":{"line":130,"column":10},"source":"src/ol/Tile.js","original":{"line":99,"column":9}},{"generated":{"line":130,"column":15},"source":"src/ol/Tile.js","original":{"line":99,"column":4}},{"name":"state","generated":{"line":130,"column":18},"source":"src/ol/Tile.js","original":{"line":99,"column":17}},{"generated":{"line":130,"column":23},"source":"src/ol/Tile.js","original":{"line":99,"column":4}},{"generated":{"line":131,"column":0},"source":"src/ol/Tile.js","original":{"line":101,"column":4}},{"generated":{"line":138,"column":0},"source":"src/ol/Tile.js","original":{"line":107,"column":4}},{"name":"interimTile","generated":{"line":138,"column":10},"source":"src/ol/Tile.js","original":{"line":107,"column":9}},{"generated":{"line":138,"column":21},"source":"src/ol/Tile.js","original":{"line":107,"column":4}},{"generated":{"line":138,"column":24},"source":"src/ol/Tile.js","original":{"line":107,"column":23}},{"generated":{"line":138,"column":28},"source":"src/ol/Tile.js","original":{"line":107,"column":4}},{"generated":{"line":139,"column":0},"source":"src/ol/Tile.js","original":{"line":109,"column":4}},{"generated":{"line":146,"column":0},"source":"src/ol/Tile.js","original":{"line":115,"column":4}},{"name":"hifi","generated":{"line":146,"column":10},"source":"src/ol/Tile.js","original":{"line":115,"column":9}},{"generated":{"line":146,"column":14},"source":"src/ol/Tile.js","original":{"line":115,"column":4}},{"generated":{"line":146,"column":17},"source":"src/ol/Tile.js","original":{"line":115,"column":16}},{"generated":{"line":146,"column":21},"source":"src/ol/Tile.js","original":{"line":115,"column":4}},{"generated":{"line":147,"column":0},"source":"src/ol/Tile.js","original":{"line":117,"column":4}},{"generated":{"line":154,"column":0},"source":"src/ol/Tile.js","original":{"line":123,"column":4}},{"name":"key","generated":{"line":154,"column":10},"source":"src/ol/Tile.js","original":{"line":123,"column":9}},{"generated":{"line":154,"column":13},"source":"src/ol/Tile.js","original":{"line":123,"column":4}},{"generated":{"line":154,"column":16},"source":"src/ol/Tile.js","original":{"line":123,"column":15}},{"generated":{"line":154,"column":18},"source":"src/ol/Tile.js","original":{"line":123,"column":4}},{"generated":{"line":155,"column":0},"source":"src/ol/Tile.js","original":{"line":125,"column":4}},{"generated":{"line":160,"column":0},"source":"src/ol/Tile.js","original":{"line":129,"column":4}},{"name":"transition_","generated":{"line":160,"column":10},"source":"src/ol/Tile.js","original":{"line":129,"column":9}},{"generated":{"line":160,"column":21},"source":"src/ol/Tile.js","original":{"line":129,"column":4}},{"name":"options","generated":{"line":160,"column":24},"source":"src/ol/Tile.js","original":{"line":129,"column":23}},{"generated":{"line":160,"column":31},"source":"src/ol/Tile.js","original":{"line":129,"column":30}},{"name":"transition","generated":{"line":160,"column":32},"source":"src/ol/Tile.js","original":{"line":129,"column":31}},{"generated":{"line":160,"column":42},"source":"src/ol/Tile.js","original":{"line":129,"column":23}},{"name":"undefined","generated":{"line":160,"column":47},"source":"src/ol/Tile.js","original":{"line":129,"column":46}},{"generated":{"line":160,"column":56},"source":"src/ol/Tile.js","original":{"line":129,"column":23}},{"generated":{"line":160,"column":59},"source":"src/ol/Tile.js","original":{"line":129,"column":58}},{"generated":{"line":160,"column":62},"source":"src/ol/Tile.js","original":{"line":129,"column":23}},{"name":"options","generated":{"line":160,"column":65},"source":"src/ol/Tile.js","original":{"line":129,"column":64}},{"generated":{"line":160,"column":72},"source":"src/ol/Tile.js","original":{"line":129,"column":71}},{"name":"transition","generated":{"line":160,"column":73},"source":"src/ol/Tile.js","original":{"line":129,"column":72}},{"generated":{"line":160,"column":83},"source":"src/ol/Tile.js","original":{"line":129,"column":4}},{"generated":{"line":161,"column":0},"source":"src/ol/Tile.js","original":{"line":131,"column":4}},{"generated":{"line":167,"column":0},"source":"src/ol/Tile.js","original":{"line":136,"column":4}},{"name":"transitionStarts_","generated":{"line":167,"column":10},"source":"src/ol/Tile.js","original":{"line":136,"column":9}},{"generated":{"line":167,"column":27},"source":"src/ol/Tile.js","original":{"line":136,"column":4}},{"generated":{"line":167,"column":30},"source":"src/ol/Tile.js","original":{"line":136,"column":29}},{"generated":{"line":167,"column":32},"source":"src/ol/Tile.js","original":{"line":136,"column":4}},{"generated":{"line":168,"column":0},"source":"src/ol/Tile.js","original":{"line":85,"column":45}},{"generated":{"line":169,"column":0},"source":"src/ol/Tile.js","original":{"line":138,"column":3}},{"generated":{"line":170,"column":0},"source":"src/ol/Tile.js","original":{"line":140,"column":2}},{"generated":{"line":177,"column":30},"source":"src/ol/Tile.js","original":{"line":143,"column":12}},{"generated":{"line":178,"column":0},"source":"src/ol/Tile.js","original":{"line":144,"column":4}},{"name":"dispatchEvent","generated":{"line":178,"column":11},"source":"src/ol/Tile.js","original":{"line":144,"column":9}},{"generated":{"line":178,"column":24},"source":"src/ol/Tile.js","original":{"line":144,"column":4}},{"name":"EventType","generated":{"line":178,"column":25},"source":"src/ol/Tile.js","original":{"line":144,"column":23}},{"name":"CHANGE","generated":{"line":178,"column":44},"source":"src/ol/Tile.js","original":{"line":144,"column":33}},{"generated":{"line":178,"column":50},"source":"src/ol/Tile.js","original":{"line":144,"column":4}},{"generated":{"line":179,"column":0},"source":"src/ol/Tile.js","original":{"line":145,"column":3}},{"generated":{"line":180,"column":0},"source":"src/ol/Tile.js","original":{"line":147,"column":2}},{"generated":{"line":186,"column":29},"source":"src/ol/Tile.js","original":{"line":150,"column":11}},{"generated":{"line":187,"column":0},"source":"src/ol/Tile.js","original":{"line":151,"column":4}},{"generated":{"line":187,"column":13},"source":"src/ol/Tile.js","original":{"line":151,"column":11}},{"name":"key","generated":{"line":187,"column":18},"source":"src/ol/Tile.js","original":{"line":151,"column":16}},{"generated":{"line":187,"column":21},"source":"src/ol/Tile.js","original":{"line":151,"column":11}},{"generated":{"line":187,"column":24},"source":"src/ol/Tile.js","original":{"line":151,"column":22}},{"generated":{"line":187,"column":27},"source":"src/ol/Tile.js","original":{"line":151,"column":11}},{"generated":{"line":187,"column":30},"source":"src/ol/Tile.js","original":{"line":151,"column":28}},{"name":"tileCoord","generated":{"line":187,"column":35},"source":"src/ol/Tile.js","original":{"line":151,"column":33}},{"generated":{"line":187,"column":44},"source":"src/ol/Tile.js","original":{"line":151,"column":4}},{"generated":{"line":188,"column":0},"source":"src/ol/Tile.js","original":{"line":152,"column":3}},{"generated":{"line":189,"column":0},"source":"src/ol/Tile.js","original":{"line":154,"column":2}},{"generated":{"line":198,"column":37},"source":"src/ol/Tile.js","original":{"line":160,"column":19}},{"generated":{"line":199,"column":0},"source":"src/ol/Tile.js","original":{"line":161,"column":4}},{"generated":{"line":199,"column":10},"source":"src/ol/Tile.js","original":{"line":161,"column":8}},{"generated":{"line":199,"column":11},"source":"src/ol/Tile.js","original":{"line":161,"column":9}},{"name":"interimTile","generated":{"line":199,"column":16},"source":"src/ol/Tile.js","original":{"line":161,"column":14}},{"generated":{"line":199,"column":27},"source":"src/ol/Tile.js","original":{"line":161,"column":4}},{"generated":{"line":199,"column":29},"source":"src/ol/Tile.js","original":{"line":161,"column":27}},{"generated":{"line":200,"column":0},"source":"src/ol/Tile.js","original":{"line":162,"column":6}},{"generated":{"line":201,"column":0},"source":"src/ol/Tile.js","original":{"line":163,"column":6}},{"generated":{"line":201,"column":15},"source":"src/ol/Tile.js","original":{"line":163,"column":13}},{"generated":{"line":201,"column":19},"source":"src/ol/Tile.js","original":{"line":163,"column":6}},{"generated":{"line":202,"column":0},"source":"src/ol/Tile.js","original":{"line":164,"column":5}},{"generated":{"line":204,"column":0},"source":"src/ol/Tile.js","original":{"line":165,"column":4}},{"name":"tile","generated":{"line":204,"column":10},"source":"src/ol/Tile.js","original":{"line":165,"column":8}},{"generated":{"line":204,"column":14},"source":"src/ol/Tile.js","original":{"line":165,"column":12}},{"generated":{"line":204,"column":17},"source":"src/ol/Tile.js","original":{"line":165,"column":15}},{"name":"interimTile","generated":{"line":204,"column":22},"source":"src/ol/Tile.js","original":{"line":165,"column":20}},{"generated":{"line":204,"column":33},"source":"src/ol/Tile.js","original":{"line":165,"column":4}},{"generated":{"line":204,"column":34},"source":"src/ol/Tile.js","original":{"line":160,"column":19}},{"generated":{"line":204,"column":35},"source":"src/ol/Tile.js","original":{"line":167,"column":4}},{"generated":{"line":205,"column":0},"source":"src/ol/Tile.js","original":{"line":168,"column":4}},{"generated":{"line":206,"column":0},"source":"src/ol/Tile.js","original":{"line":169,"column":4}},{"generated":{"line":207,"column":0},"source":"src/ol/Tile.js","original":{"line":170,"column":4}},{"generated":{"line":209,"column":0},"source":"src/ol/Tile.js","original":{"line":171,"column":4}},{"generated":{"line":209,"column":9},"source":"src/ol/Tile.js","original":{"line":171,"column":7}},{"generated":{"line":210,"column":0},"source":"src/ol/Tile.js","original":{"line":172,"column":6}},{"name":"tile","generated":{"line":210,"column":12},"source":"src/ol/Tile.js","original":{"line":172,"column":10}},{"generated":{"line":210,"column":16},"source":"src/ol/Tile.js","original":{"line":172,"column":14}},{"name":"getState","generated":{"line":210,"column":17},"source":"src/ol/Tile.js","original":{"line":172,"column":15}},{"generated":{"line":210,"column":25},"source":"src/ol/Tile.js","original":{"line":172,"column":10}},{"name":"TileState","generated":{"line":210,"column":31},"source":"src/ol/Tile.js","original":{"line":172,"column":29}},{"name":"LOADED","generated":{"line":210,"column":50},"source":"src/ol/Tile.js","original":{"line":172,"column":39}},{"generated":{"line":210,"column":56},"source":"src/ol/Tile.js","original":{"line":172,"column":6}},{"generated":{"line":210,"column":58},"source":"src/ol/Tile.js","original":{"line":172,"column":47}},{"generated":{"line":211,"column":0},"source":"src/ol/Tile.js","original":{"line":173,"column":8}},{"generated":{"line":212,"column":0},"source":"src/ol/Tile.js","original":{"line":174,"column":8}},{"generated":{"line":213,"column":0},"source":"src/ol/Tile.js","original":{"line":175,"column":8}},{"name":"transition_","generated":{"line":213,"column":15},"source":"src/ol/Tile.js","original":{"line":175,"column":13}},{"generated":{"line":213,"column":26},"source":"src/ol/Tile.js","original":{"line":175,"column":8}},{"generated":{"line":213,"column":29},"source":"src/ol/Tile.js","original":{"line":175,"column":27}},{"generated":{"line":213,"column":30},"source":"src/ol/Tile.js","original":{"line":175,"column":8}},{"generated":{"line":214,"column":0},"source":"src/ol/Tile.js","original":{"line":176,"column":8}},{"name":"tile","generated":{"line":214,"column":17},"source":"src/ol/Tile.js","original":{"line":176,"column":15}},{"generated":{"line":214,"column":21},"source":"src/ol/Tile.js","original":{"line":176,"column":8}},{"generated":{"line":215,"column":0},"source":"src/ol/Tile.js","original":{"line":177,"column":7}},{"name":"tile","generated":{"line":217,"column":0},"source":"src/ol/Tile.js","original":{"line":178,"column":6}},{"name":"tile","generated":{"line":217,"column":8},"source":"src/ol/Tile.js","original":{"line":178,"column":6}},{"generated":{"line":217,"column":12},"source":"src/ol/Tile.js","original":{"line":178,"column":10}},{"name":"tile","generated":{"line":217,"column":15},"source":"src/ol/Tile.js","original":{"line":178,"column":13}},{"generated":{"line":217,"column":19},"source":"src/ol/Tile.js","original":{"line":178,"column":17}},{"name":"interimTile","generated":{"line":217,"column":20},"source":"src/ol/Tile.js","original":{"line":178,"column":18}},{"generated":{"line":217,"column":31},"source":"src/ol/Tile.js","original":{"line":178,"column":6}},{"generated":{"line":218,"column":0},"source":"src/ol/Tile.js","original":{"line":179,"column":5}},{"generated":{"line":218,"column":7},"source":"src/ol/Tile.js","original":{"line":171,"column":4}},{"name":"tile","generated":{"line":218,"column":15},"source":"src/ol/Tile.js","original":{"line":179,"column":13}},{"generated":{"line":218,"column":19},"source":"src/ol/Tile.js","original":{"line":171,"column":4}},{"generated":{"line":218,"column":21},"source":"src/ol/Tile.js","original":{"line":160,"column":19}},{"generated":{"line":218,"column":22},"source":"src/ol/Tile.js","original":{"line":181,"column":4}},{"generated":{"line":221,"column":0},"source":"src/ol/Tile.js","original":{"line":182,"column":4}},{"generated":{"line":221,"column":13},"source":"src/ol/Tile.js","original":{"line":182,"column":11}},{"generated":{"line":221,"column":17},"source":"src/ol/Tile.js","original":{"line":182,"column":4}},{"generated":{"line":222,"column":0},"source":"src/ol/Tile.js","original":{"line":183,"column":3}},{"generated":{"line":223,"column":0},"source":"src/ol/Tile.js","original":{"line":185,"column":2}},{"generated":{"line":230,"column":42},"source":"src/ol/Tile.js","original":{"line":189,"column":24}},{"generated":{"line":231,"column":0},"source":"src/ol/Tile.js","original":{"line":190,"column":4}},{"generated":{"line":231,"column":10},"source":"src/ol/Tile.js","original":{"line":190,"column":8}},{"generated":{"line":231,"column":11},"source":"src/ol/Tile.js","original":{"line":190,"column":9}},{"name":"interimTile","generated":{"line":231,"column":16},"source":"src/ol/Tile.js","original":{"line":190,"column":14}},{"generated":{"line":231,"column":27},"source":"src/ol/Tile.js","original":{"line":190,"column":4}},{"generated":{"line":231,"column":29},"source":"src/ol/Tile.js","original":{"line":190,"column":27}},{"generated":{"line":232,"column":0},"source":"src/ol/Tile.js","original":{"line":191,"column":6}},{"generated":{"line":233,"column":0},"source":"src/ol/Tile.js","original":{"line":192,"column":5}},{"generated":{"line":235,"column":0},"source":"src/ol/Tile.js","original":{"line":194,"column":4}},{"name":"tile","generated":{"line":235,"column":10},"source":"src/ol/Tile.js","original":{"line":194,"column":8}},{"generated":{"line":235,"column":14},"source":"src/ol/Tile.js","original":{"line":194,"column":12}},{"generated":{"line":235,"column":17},"source":"src/ol/Tile.js","original":{"line":194,"column":15}},{"name":"interimTile","generated":{"line":235,"column":22},"source":"src/ol/Tile.js","original":{"line":194,"column":20}},{"generated":{"line":235,"column":33},"source":"src/ol/Tile.js","original":{"line":194,"column":4}},{"generated":{"line":236,"column":0},"source":"src/ol/Tile.js","original":{"line":195,"column":4}},{"name":"prev","generated":{"line":236,"column":10},"source":"src/ol/Tile.js","original":{"line":195,"column":8}},{"generated":{"line":236,"column":14},"source":"src/ol/Tile.js","original":{"line":195,"column":12}},{"generated":{"line":237,"column":0},"source":"src/ol/Tile.js","original":{"line":195,"column":15}},{"generated":{"line":238,"column":0},"source":"src/ol/Tile.js","original":{"line":195,"column":36}},{"generated":{"line":238,"column":10},"source":"src/ol/Tile.js","original":{"line":195,"column":4}},{"generated":{"line":240,"column":0},"source":"src/ol/Tile.js","original":{"line":197,"column":4}},{"generated":{"line":240,"column":9},"source":"src/ol/Tile.js","original":{"line":197,"column":7}},{"generated":{"line":241,"column":0},"source":"src/ol/Tile.js","original":{"line":198,"column":6}},{"name":"tile","generated":{"line":241,"column":12},"source":"src/ol/Tile.js","original":{"line":198,"column":10}},{"generated":{"line":241,"column":16},"source":"src/ol/Tile.js","original":{"line":198,"column":14}},{"name":"getState","generated":{"line":241,"column":17},"source":"src/ol/Tile.js","original":{"line":198,"column":15}},{"generated":{"line":241,"column":25},"source":"src/ol/Tile.js","original":{"line":198,"column":10}},{"name":"TileState","generated":{"line":241,"column":31},"source":"src/ol/Tile.js","original":{"line":198,"column":29}},{"name":"LOADED","generated":{"line":241,"column":50},"source":"src/ol/Tile.js","original":{"line":198,"column":39}},{"generated":{"line":241,"column":56},"source":"src/ol/Tile.js","original":{"line":198,"column":6}},{"generated":{"line":241,"column":58},"source":"src/ol/Tile.js","original":{"line":198,"column":47}},{"generated":{"line":242,"column":0},"source":"src/ol/Tile.js","original":{"line":199,"column":8}},{"generated":{"line":243,"column":0},"source":"src/ol/Tile.js","original":{"line":200,"column":8}},{"generated":{"line":244,"column":0},"source":"src/ol/Tile.js","original":{"line":201,"column":8}},{"name":"tile","generated":{"line":245,"column":0},"source":"src/ol/Tile.js","original":{"line":202,"column":8}},{"name":"tile","generated":{"line":245,"column":10},"source":"src/ol/Tile.js","original":{"line":202,"column":8}},{"generated":{"line":245,"column":14},"source":"src/ol/Tile.js","original":{"line":202,"column":12}},{"name":"interimTile","generated":{"line":245,"column":15},"source":"src/ol/Tile.js","original":{"line":202,"column":13}},{"generated":{"line":245,"column":26},"source":"src/ol/Tile.js","original":{"line":202,"column":8}},{"generated":{"line":245,"column":29},"source":"src/ol/Tile.js","original":{"line":202,"column":27}},{"generated":{"line":245,"column":33},"source":"src/ol/Tile.js","original":{"line":202,"column":8}},{"generated":{"line":246,"column":0},"source":"src/ol/Tile.js","original":{"line":203,"column":8}},{"generated":{"line":247,"column":0},"source":"src/ol/Tile.js","original":{"line":204,"column":7}},{"generated":{"line":247,"column":9},"source":"src/ol/Tile.js","original":{"line":198,"column":6}},{"generated":{"line":247,"column":15},"source":"src/ol/Tile.js","original":{"line":204,"column":13}},{"name":"tile","generated":{"line":247,"column":19},"source":"src/ol/Tile.js","original":{"line":204,"column":17}},{"generated":{"line":247,"column":23},"source":"src/ol/Tile.js","original":{"line":204,"column":21}},{"name":"getState","generated":{"line":247,"column":24},"source":"src/ol/Tile.js","original":{"line":204,"column":22}},{"generated":{"line":247,"column":32},"source":"src/ol/Tile.js","original":{"line":204,"column":17}},{"name":"TileState","generated":{"line":247,"column":38},"source":"src/ol/Tile.js","original":{"line":204,"column":36}},{"name":"LOADING","generated":{"line":247,"column":57},"source":"src/ol/Tile.js","original":{"line":204,"column":46}},{"generated":{"line":247,"column":64},"source":"src/ol/Tile.js","original":{"line":204,"column":13}},{"generated":{"line":247,"column":66},"source":"src/ol/Tile.js","original":{"line":204,"column":55}},{"generated":{"line":248,"column":0},"source":"src/ol/Tile.js","original":{"line":205,"column":8}},{"generated":{"line":249,"column":0},"source":"src/ol/Tile.js","original":{"line":206,"column":8}},{"name":"prev","generated":{"line":250,"column":0},"source":"src/ol/Tile.js","original":{"line":207,"column":8}},{"name":"prev","generated":{"line":250,"column":10},"source":"src/ol/Tile.js","original":{"line":207,"column":8}},{"generated":{"line":250,"column":14},"source":"src/ol/Tile.js","original":{"line":207,"column":12}},{"name":"tile","generated":{"line":250,"column":17},"source":"src/ol/Tile.js","original":{"line":207,"column":15}},{"generated":{"line":250,"column":21},"source":"src/ol/Tile.js","original":{"line":207,"column":8}},{"generated":{"line":251,"column":0},"source":"src/ol/Tile.js","original":{"line":208,"column":7}},{"generated":{"line":251,"column":9},"source":"src/ol/Tile.js","original":{"line":204,"column":13}},{"generated":{"line":251,"column":15},"source":"src/ol/Tile.js","original":{"line":208,"column":13}},{"name":"tile","generated":{"line":251,"column":19},"source":"src/ol/Tile.js","original":{"line":208,"column":17}},{"generated":{"line":251,"column":23},"source":"src/ol/Tile.js","original":{"line":208,"column":21}},{"name":"getState","generated":{"line":251,"column":24},"source":"src/ol/Tile.js","original":{"line":208,"column":22}},{"generated":{"line":251,"column":32},"source":"src/ol/Tile.js","original":{"line":208,"column":17}},{"name":"TileState","generated":{"line":251,"column":38},"source":"src/ol/Tile.js","original":{"line":208,"column":36}},{"name":"IDLE","generated":{"line":251,"column":57},"source":"src/ol/Tile.js","original":{"line":208,"column":46}},{"generated":{"line":251,"column":61},"source":"src/ol/Tile.js","original":{"line":208,"column":13}},{"generated":{"line":251,"column":63},"source":"src/ol/Tile.js","original":{"line":208,"column":52}},{"generated":{"line":252,"column":0},"source":"src/ol/Tile.js","original":{"line":209,"column":8}},{"generated":{"line":253,"column":0},"source":"src/ol/Tile.js","original":{"line":210,"column":8}},{"name":"prev","generated":{"line":254,"column":0},"source":"src/ol/Tile.js","original":{"line":211,"column":8}},{"name":"prev","generated":{"line":254,"column":10},"source":"src/ol/Tile.js","original":{"line":211,"column":8}},{"generated":{"line":254,"column":14},"source":"src/ol/Tile.js","original":{"line":211,"column":12}},{"name":"interimTile","generated":{"line":254,"column":15},"source":"src/ol/Tile.js","original":{"line":211,"column":13}},{"generated":{"line":254,"column":26},"source":"src/ol/Tile.js","original":{"line":211,"column":8}},{"name":"tile","generated":{"line":254,"column":29},"source":"src/ol/Tile.js","original":{"line":211,"column":27}},{"generated":{"line":254,"column":33},"source":"src/ol/Tile.js","original":{"line":211,"column":31}},{"name":"interimTile","generated":{"line":254,"column":34},"source":"src/ol/Tile.js","original":{"line":211,"column":32}},{"generated":{"line":254,"column":45},"source":"src/ol/Tile.js","original":{"line":211,"column":8}},{"generated":{"line":255,"column":0},"source":"src/ol/Tile.js","original":{"line":212,"column":7}},{"generated":{"line":255,"column":9},"source":"src/ol/Tile.js","original":{"line":208,"column":13}},{"generated":{"line":255,"column":15},"source":"src/ol/Tile.js","original":{"line":212,"column":13}},{"name":"prev","generated":{"line":256,"column":0},"source":"src/ol/Tile.js","original":{"line":213,"column":8}},{"name":"prev","generated":{"line":256,"column":10},"source":"src/ol/Tile.js","original":{"line":213,"column":8}},{"generated":{"line":256,"column":14},"source":"src/ol/Tile.js","original":{"line":213,"column":12}},{"name":"tile","generated":{"line":256,"column":17},"source":"src/ol/Tile.js","original":{"line":213,"column":15}},{"generated":{"line":256,"column":21},"source":"src/ol/Tile.js","original":{"line":213,"column":8}},{"generated":{"line":257,"column":0},"source":"src/ol/Tile.js","original":{"line":214,"column":7}},{"name":"tile","generated":{"line":259,"column":0},"source":"src/ol/Tile.js","original":{"line":215,"column":6}},{"name":"tile","generated":{"line":259,"column":8},"source":"src/ol/Tile.js","original":{"line":215,"column":6}},{"generated":{"line":259,"column":12},"source":"src/ol/Tile.js","original":{"line":215,"column":10}},{"name":"prev","generated":{"line":259,"column":15},"source":"src/ol/Tile.js","original":{"line":215,"column":13}},{"generated":{"line":259,"column":19},"source":"src/ol/Tile.js","original":{"line":215,"column":17}},{"name":"interimTile","generated":{"line":259,"column":20},"source":"src/ol/Tile.js","original":{"line":215,"column":18}},{"generated":{"line":259,"column":31},"source":"src/ol/Tile.js","original":{"line":215,"column":6}},{"generated":{"line":260,"column":0},"source":"src/ol/Tile.js","original":{"line":216,"column":5}},{"generated":{"line":260,"column":7},"source":"src/ol/Tile.js","original":{"line":197,"column":4}},{"name":"tile","generated":{"line":260,"column":15},"source":"src/ol/Tile.js","original":{"line":216,"column":13}},{"generated":{"line":260,"column":19},"source":"src/ol/Tile.js","original":{"line":197,"column":4}},{"generated":{"line":261,"column":0},"source":"src/ol/Tile.js","original":{"line":217,"column":3}},{"generated":{"line":262,"column":0},"source":"src/ol/Tile.js","original":{"line":219,"column":2}},{"generated":{"line":270,"column":35},"source":"src/ol/Tile.js","original":{"line":224,"column":17}},{"generated":{"line":271,"column":0},"source":"src/ol/Tile.js","original":{"line":225,"column":4}},{"generated":{"line":271,"column":13},"source":"src/ol/Tile.js","original":{"line":225,"column":11}},{"name":"tileCoord","generated":{"line":271,"column":18},"source":"src/ol/Tile.js","original":{"line":225,"column":16}},{"generated":{"line":271,"column":27},"source":"src/ol/Tile.js","original":{"line":225,"column":4}},{"generated":{"line":272,"column":0},"source":"src/ol/Tile.js","original":{"line":226,"column":3}},{"generated":{"line":273,"column":0},"source":"src/ol/Tile.js","original":{"line":228,"column":2}},{"generated":{"line":279,"column":31},"source":"src/ol/Tile.js","original":{"line":231,"column":13}},{"generated":{"line":280,"column":0},"source":"src/ol/Tile.js","original":{"line":232,"column":4}},{"generated":{"line":280,"column":13},"source":"src/ol/Tile.js","original":{"line":232,"column":11}},{"name":"state","generated":{"line":280,"column":18},"source":"src/ol/Tile.js","original":{"line":232,"column":16}},{"generated":{"line":280,"column":23},"source":"src/ol/Tile.js","original":{"line":232,"column":4}},{"generated":{"line":281,"column":0},"source":"src/ol/Tile.js","original":{"line":233,"column":3}},{"generated":{"line":282,"column":0},"source":"src/ol/Tile.js","original":{"line":235,"column":2}},{"name":"state","generated":{"line":293,"column":29},"source":"src/ol/Tile.js","original":{"line":243,"column":11}},{"generated":{"line":293,"column":36},"source":"src/ol/Tile.js","original":{"line":243,"column":18}},{"generated":{"line":294,"column":0},"source":"src/ol/Tile.js","original":{"line":244,"column":4}},{"name":"state","generated":{"line":294,"column":11},"source":"src/ol/Tile.js","original":{"line":244,"column":9}},{"generated":{"line":294,"column":16},"source":"src/ol/Tile.js","original":{"line":244,"column":4}},{"name":"state","generated":{"line":294,"column":19},"source":"src/ol/Tile.js","original":{"line":244,"column":17}},{"generated":{"line":294,"column":24},"source":"src/ol/Tile.js","original":{"line":244,"column":4}},{"generated":{"line":295,"column":0},"source":"src/ol/Tile.js","original":{"line":245,"column":4}},{"name":"changed","generated":{"line":295,"column":11},"source":"src/ol/Tile.js","original":{"line":245,"column":9}},{"generated":{"line":295,"column":18},"source":"src/ol/Tile.js","original":{"line":245,"column":4}},{"generated":{"line":296,"column":0},"source":"src/ol/Tile.js","original":{"line":246,"column":3}},{"generated":{"line":297,"column":0},"source":"src/ol/Tile.js","original":{"line":248,"column":2}},{"generated":{"line":307,"column":27},"source":"src/ol/Tile.js","original":{"line":255,"column":9}},{"generated":{"line":308,"column":0},"source":"src/ol/Tile.js","original":{"line":256,"column":4}},{"generated":{"line":309,"column":0},"source":"src/ol/Tile.js","original":{"line":257,"column":3}},{"generated":{"line":310,"column":0},"source":"src/ol/Tile.js","original":{"line":259,"column":2}},{"name":"id","generated":{"line":319,"column":29},"source":"src/ol/Tile.js","original":{"line":265,"column":11}},{"name":"time","generated":{"line":319,"column":33},"source":"src/ol/Tile.js","original":{"line":265,"column":15}},{"generated":{"line":319,"column":39},"source":"src/ol/Tile.js","original":{"line":265,"column":21}},{"generated":{"line":320,"column":0},"source":"src/ol/Tile.js","original":{"line":266,"column":4}},{"generated":{"line":320,"column":10},"source":"src/ol/Tile.js","original":{"line":266,"column":8}},{"generated":{"line":320,"column":11},"source":"src/ol/Tile.js","original":{"line":266,"column":9}},{"name":"transition_","generated":{"line":320,"column":16},"source":"src/ol/Tile.js","original":{"line":266,"column":14}},{"generated":{"line":320,"column":27},"source":"src/ol/Tile.js","original":{"line":266,"column":4}},{"generated":{"line":320,"column":29},"source":"src/ol/Tile.js","original":{"line":266,"column":27}},{"generated":{"line":321,"column":0},"source":"src/ol/Tile.js","original":{"line":267,"column":6}},{"generated":{"line":321,"column":15},"source":"src/ol/Tile.js","original":{"line":267,"column":13}},{"generated":{"line":321,"column":16},"source":"src/ol/Tile.js","original":{"line":267,"column":6}},{"generated":{"line":322,"column":0},"source":"src/ol/Tile.js","original":{"line":268,"column":5}},{"generated":{"line":324,"column":0},"source":"src/ol/Tile.js","original":{"line":270,"column":4}},{"name":"start","generated":{"line":324,"column":10},"source":"src/ol/Tile.js","original":{"line":270,"column":8}},{"generated":{"line":324,"column":15},"source":"src/ol/Tile.js","original":{"line":270,"column":13}},{"generated":{"line":324,"column":18},"source":"src/ol/Tile.js","original":{"line":270,"column":16}},{"name":"transitionStarts_","generated":{"line":324,"column":23},"source":"src/ol/Tile.js","original":{"line":270,"column":21}},{"generated":{"line":324,"column":40},"source":"src/ol/Tile.js","original":{"line":270,"column":16}},{"name":"id","generated":{"line":324,"column":41},"source":"src/ol/Tile.js","original":{"line":270,"column":39}},{"generated":{"line":324,"column":43},"source":"src/ol/Tile.js","original":{"line":270,"column":16}},{"generated":{"line":324,"column":44},"source":"src/ol/Tile.js","original":{"line":270,"column":4}},{"generated":{"line":326,"column":0},"source":"src/ol/Tile.js","original":{"line":271,"column":4}},{"generated":{"line":326,"column":10},"source":"src/ol/Tile.js","original":{"line":271,"column":8}},{"name":"start","generated":{"line":326,"column":11},"source":"src/ol/Tile.js","original":{"line":271,"column":9}},{"generated":{"line":326,"column":16},"source":"src/ol/Tile.js","original":{"line":271,"column":4}},{"generated":{"line":326,"column":18},"source":"src/ol/Tile.js","original":{"line":271,"column":16}},{"name":"start","generated":{"line":327,"column":0},"source":"src/ol/Tile.js","original":{"line":272,"column":6}},{"name":"start","generated":{"line":327,"column":8},"source":"src/ol/Tile.js","original":{"line":272,"column":6}},{"generated":{"line":327,"column":13},"source":"src/ol/Tile.js","original":{"line":272,"column":11}},{"name":"time","generated":{"line":327,"column":16},"source":"src/ol/Tile.js","original":{"line":272,"column":14}},{"generated":{"line":327,"column":20},"source":"src/ol/Tile.js","original":{"line":272,"column":6}},{"generated":{"line":328,"column":0},"source":"src/ol/Tile.js","original":{"line":273,"column":6}},{"name":"transitionStarts_","generated":{"line":328,"column":13},"source":"src/ol/Tile.js","original":{"line":273,"column":11}},{"generated":{"line":328,"column":30},"source":"src/ol/Tile.js","original":{"line":273,"column":6}},{"name":"id","generated":{"line":328,"column":31},"source":"src/ol/Tile.js","original":{"line":273,"column":29}},{"generated":{"line":328,"column":33},"source":"src/ol/Tile.js","original":{"line":273,"column":6}},{"name":"start","generated":{"line":328,"column":37},"source":"src/ol/Tile.js","original":{"line":273,"column":35}},{"generated":{"line":328,"column":42},"source":"src/ol/Tile.js","original":{"line":273,"column":6}},{"generated":{"line":329,"column":0},"source":"src/ol/Tile.js","original":{"line":274,"column":5}},{"generated":{"line":329,"column":7},"source":"src/ol/Tile.js","original":{"line":271,"column":4}},{"generated":{"line":329,"column":13},"source":"src/ol/Tile.js","original":{"line":274,"column":11}},{"name":"start","generated":{"line":329,"column":17},"source":"src/ol/Tile.js","original":{"line":274,"column":15}},{"generated":{"line":329,"column":22},"source":"src/ol/Tile.js","original":{"line":274,"column":20}},{"generated":{"line":329,"column":27},"source":"src/ol/Tile.js","original":{"line":274,"column":25}},{"generated":{"line":329,"column":28},"source":"src/ol/Tile.js","original":{"line":274,"column":26}},{"generated":{"line":329,"column":29},"source":"src/ol/Tile.js","original":{"line":274,"column":11}},{"generated":{"line":329,"column":31},"source":"src/ol/Tile.js","original":{"line":274,"column":29}},{"generated":{"line":330,"column":0},"source":"src/ol/Tile.js","original":{"line":275,"column":6}},{"generated":{"line":330,"column":15},"source":"src/ol/Tile.js","original":{"line":275,"column":13}},{"generated":{"line":330,"column":16},"source":"src/ol/Tile.js","original":{"line":275,"column":6}},{"generated":{"line":331,"column":0},"source":"src/ol/Tile.js","original":{"line":276,"column":5}},{"generated":{"line":333,"column":0},"source":"src/ol/Tile.js","original":{"line":278,"column":4}},{"name":"delta","generated":{"line":333,"column":10},"source":"src/ol/Tile.js","original":{"line":278,"column":10}},{"generated":{"line":333,"column":15},"source":"src/ol/Tile.js","original":{"line":278,"column":15}},{"name":"time","generated":{"line":333,"column":18},"source":"src/ol/Tile.js","original":{"line":278,"column":18}},{"generated":{"line":333,"column":22},"source":"src/ol/Tile.js","original":{"line":278,"column":22}},{"name":"start","generated":{"line":333,"column":25},"source":"src/ol/Tile.js","original":{"line":278,"column":25}},{"generated":{"line":333,"column":30},"source":"src/ol/Tile.js","original":{"line":278,"column":18}},{"generated":{"line":333,"column":33},"source":"src/ol/Tile.js","original":{"line":278,"column":34}},{"generated":{"line":333,"column":40},"source":"src/ol/Tile.js","original":{"line":278,"column":41}},{"generated":{"line":333,"column":42},"source":"src/ol/Tile.js","original":{"line":278,"column":4}},{"generated":{"line":333,"column":43},"source":"src/ol/Tile.js","original":{"line":265,"column":21}},{"generated":{"line":333,"column":44},"source":"src/ol/Tile.js","original":{"line":278,"column":46}},{"generated":{"line":335,"column":0},"source":"src/ol/Tile.js","original":{"line":279,"column":4}},{"name":"delta","generated":{"line":335,"column":10},"source":"src/ol/Tile.js","original":{"line":279,"column":8}},{"generated":{"line":335,"column":15},"source":"src/ol/Tile.js","original":{"line":279,"column":13}},{"generated":{"line":335,"column":19},"source":"src/ol/Tile.js","original":{"line":279,"column":17}},{"name":"transition_","generated":{"line":335,"column":24},"source":"src/ol/Tile.js","original":{"line":279,"column":22}},{"generated":{"line":335,"column":35},"source":"src/ol/Tile.js","original":{"line":279,"column":4}},{"generated":{"line":335,"column":37},"source":"src/ol/Tile.js","original":{"line":279,"column":35}},{"generated":{"line":336,"column":0},"source":"src/ol/Tile.js","original":{"line":280,"column":6}},{"generated":{"line":336,"column":15},"source":"src/ol/Tile.js","original":{"line":280,"column":13}},{"generated":{"line":336,"column":16},"source":"src/ol/Tile.js","original":{"line":280,"column":6}},{"generated":{"line":337,"column":0},"source":"src/ol/Tile.js","original":{"line":281,"column":5}},{"generated":{"line":339,"column":0},"source":"src/ol/Tile.js","original":{"line":282,"column":4}},{"generated":{"line":339,"column":13},"source":"src/ol/Tile.js","original":{"line":282,"column":11}},{"name":"delta","generated":{"line":339,"column":33},"source":"src/ol/Tile.js","original":{"line":282,"column":18}},{"generated":{"line":339,"column":38},"source":"src/ol/Tile.js","original":{"line":282,"column":23}},{"generated":{"line":339,"column":41},"source":"src/ol/Tile.js","original":{"line":282,"column":26}},{"name":"transition_","generated":{"line":339,"column":46},"source":"src/ol/Tile.js","original":{"line":282,"column":31}},{"generated":{"line":339,"column":57},"source":"src/ol/Tile.js","original":{"line":282,"column":11}},{"generated":{"line":339,"column":58},"source":"src/ol/Tile.js","original":{"line":282,"column":4}},{"generated":{"line":340,"column":0},"source":"src/ol/Tile.js","original":{"line":283,"column":3}},{"generated":{"line":341,"column":0},"source":"src/ol/Tile.js","original":{"line":285,"column":2}},{"name":"id","generated":{"line":351,"column":33},"source":"src/ol/Tile.js","original":{"line":292,"column":15}},{"generated":{"line":351,"column":37},"source":"src/ol/Tile.js","original":{"line":292,"column":19}},{"generated":{"line":352,"column":0},"source":"src/ol/Tile.js","original":{"line":293,"column":4}},{"generated":{"line":352,"column":10},"source":"src/ol/Tile.js","original":{"line":293,"column":8}},{"generated":{"line":352,"column":11},"source":"src/ol/Tile.js","original":{"line":293,"column":9}},{"name":"transition_","generated":{"line":352,"column":16},"source":"src/ol/Tile.js","original":{"line":293,"column":14}},{"generated":{"line":352,"column":27},"source":"src/ol/Tile.js","original":{"line":293,"column":4}},{"generated":{"line":352,"column":29},"source":"src/ol/Tile.js","original":{"line":293,"column":27}},{"generated":{"line":353,"column":0},"source":"src/ol/Tile.js","original":{"line":294,"column":6}},{"generated":{"line":353,"column":15},"source":"src/ol/Tile.js","original":{"line":294,"column":13}},{"generated":{"line":353,"column":20},"source":"src/ol/Tile.js","original":{"line":294,"column":6}},{"generated":{"line":354,"column":0},"source":"src/ol/Tile.js","original":{"line":295,"column":5}},{"generated":{"line":356,"column":0},"source":"src/ol/Tile.js","original":{"line":296,"column":4}},{"generated":{"line":356,"column":13},"source":"src/ol/Tile.js","original":{"line":296,"column":11}},{"name":"transitionStarts_","generated":{"line":356,"column":18},"source":"src/ol/Tile.js","original":{"line":296,"column":16}},{"generated":{"line":356,"column":35},"source":"src/ol/Tile.js","original":{"line":296,"column":11}},{"name":"id","generated":{"line":356,"column":36},"source":"src/ol/Tile.js","original":{"line":296,"column":34}},{"generated":{"line":356,"column":38},"source":"src/ol/Tile.js","original":{"line":296,"column":11}},{"generated":{"line":356,"column":44},"source":"src/ol/Tile.js","original":{"line":296,"column":42}},{"generated":{"line":356,"column":45},"source":"src/ol/Tile.js","original":{"line":296,"column":43}},{"generated":{"line":356,"column":46},"source":"src/ol/Tile.js","original":{"line":296,"column":4}},{"generated":{"line":357,"column":0},"source":"src/ol/Tile.js","original":{"line":297,"column":3}},{"generated":{"line":358,"column":0},"source":"src/ol/Tile.js","original":{"line":299,"column":2}},{"name":"id","generated":{"line":365,"column":34},"source":"src/ol/Tile.js","original":{"line":303,"column":16}},{"generated":{"line":365,"column":38},"source":"src/ol/Tile.js","original":{"line":303,"column":20}},{"generated":{"line":366,"column":0},"source":"src/ol/Tile.js","original":{"line":304,"column":4}},{"generated":{"line":366,"column":10},"source":"src/ol/Tile.js","original":{"line":304,"column":8}},{"name":"transition_","generated":{"line":366,"column":15},"source":"src/ol/Tile.js","original":{"line":304,"column":13}},{"generated":{"line":366,"column":26},"source":"src/ol/Tile.js","original":{"line":304,"column":4}},{"generated":{"line":366,"column":28},"source":"src/ol/Tile.js","original":{"line":304,"column":26}},{"generated":{"line":367,"column":0},"source":"src/ol/Tile.js","original":{"line":305,"column":6}},{"name":"transitionStarts_","generated":{"line":367,"column":13},"source":"src/ol/Tile.js","original":{"line":305,"column":11}},{"generated":{"line":367,"column":30},"source":"src/ol/Tile.js","original":{"line":305,"column":6}},{"name":"id","generated":{"line":367,"column":31},"source":"src/ol/Tile.js","original":{"line":305,"column":29}},{"generated":{"line":367,"column":33},"source":"src/ol/Tile.js","original":{"line":305,"column":6}},{"generated":{"line":367,"column":37},"source":"src/ol/Tile.js","original":{"line":305,"column":35}},{"generated":{"line":367,"column":38},"source":"src/ol/Tile.js","original":{"line":305,"column":36}},{"generated":{"line":367,"column":39},"source":"src/ol/Tile.js","original":{"line":305,"column":6}},{"generated":{"line":368,"column":0},"source":"src/ol/Tile.js","original":{"line":306,"column":5}},{"generated":{"line":369,"column":0},"source":"src/ol/Tile.js","original":{"line":307,"column":3}},{"name":"EventTarget","generated":{"line":373,"column":2},"source":"src/ol/Tile.js","original":{"line":78,"column":19}},{"name":"Tile","generated":{"line":375,"column":15},"source":"src/ol/Tile.js","original":{"line":311,"column":15}}],"sources":{"src/ol/Tile.js":"/**\r\n * @module ol/Tile\r\n */\r\nimport TileState from './TileState.js';\r\nimport {easeIn} from './easing.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\nimport {abstract} from './util.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Tile} for the tile and a\r\n * `{string}` for the url as arguments. The default is\r\n * ```js\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   tile.getImage().src = src;\r\n * });\r\n * ```\r\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\r\n * error handling:\r\n *\r\n * ```js\r\n * import TileState from 'ol/TileState';\r\n *\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   var xhr = new XMLHttpRequest();\r\n *   xhr.responseType = 'blob';\r\n *   xhr.addEventListener('loadend', function (evt) {\r\n *     var data = this.response;\r\n *     if (data !== undefined) {\r\n *       tile.getImage().src = URL.createObjectURL(data);\r\n *     } else {\r\n *       tile.setState(TileState.ERROR);\r\n *     }\r\n *   });\r\n *   xhr.addEventListener('error', function () {\r\n *     tile.setState(TileState.ERROR);\r\n *   });\r\n *   xhr.open('GET', src);\r\n *   xhr.send();\r\n * });\r\n * ```\r\n *\r\n * @typedef {function(Tile, string): void} LoadFunction\r\n * @api\r\n */\r\n\r\n/**\r\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\r\n * the url that provides a tile for a given tile coordinate.\r\n *\r\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\r\n * coordinate, a `{number}` representing the pixel ratio and a\r\n * {@link module:ol/proj/Projection} for the projection  as arguments\r\n * and returns a `{string}` representing the tile URL, or undefined if no tile\r\n * should be requested for the passed tile coordinate.\r\n *\r\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\r\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [transition=250] A duration for tile opacity\r\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for tiles.\r\n *\r\n * @abstract\r\n */\r\nclass Tile extends EventTarget {\r\n\r\n  /**\r\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {TileState} state State.\r\n   * @param {Options=} opt_options Tile options.\r\n   */\r\n  constructor(tileCoord, state, opt_options) {\r\n    super();\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @type {import(\"./tilecoord.js\").TileCoord}\r\n     */\r\n    this.tileCoord = tileCoord;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {TileState}\r\n     */\r\n    this.state = state;\r\n\r\n    /**\r\n     * An \"interim\" tile for this tile. The interim tile may be used while this\r\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\r\n     * on the source.\r\n     * @type {Tile}\r\n     */\r\n    this.interimTile = null;\r\n\r\n    /**\r\n     * The tile is available at the highest possible resolution. Subclasses can\r\n     * set this to `false` initially. Tile load listeners will not be\r\n     * unregistered before this is set to `true` and a `#changed()` is called.\r\n     * @type {boolean}\r\n     */\r\n    this.hifi = true;\r\n\r\n    /**\r\n     * A key assigned to the tile. This is used by the tile source to determine\r\n     * if this tile can effectively be used, or if a new tile should be created\r\n     * and this one be used as an interim tile for this new tile.\r\n     * @type {string}\r\n     */\r\n    this.key = '';\r\n\r\n    /**\r\n     * The duration for the opacity transition.\r\n     * @type {number}\r\n     */\r\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\r\n\r\n    /**\r\n     * Lookup of start times for rendering transitions.  If the start time is\r\n     * equal to -1, the transition is complete.\r\n     * @type {Object<string, number>}\r\n     */\r\n    this.transitionStarts_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  changed() {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  }\r\n\r\n  /**\r\n   * @return {string} Key.\r\n   */\r\n  getKey() {\r\n    return this.key + '/' + this.tileCoord;\r\n  }\r\n\r\n  /**\r\n   * Get the interim tile most suitable for rendering using the chain of interim\r\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\r\n   * such tile exists, the original tile is returned.\r\n   * @return {!Tile} Best tile for rendering.\r\n   */\r\n  getInterimTile() {\r\n    if (!this.interimTile) {\r\n      //empty chain\r\n      return this;\r\n    }\r\n    let tile = this.interimTile;\r\n\r\n    // find the first loaded tile and return it. Since the chain is sorted in\r\n    // decreasing order of creation time, there is no need to search the remainder\r\n    // of the list (all those tiles correspond to older requests and will be\r\n    // cleaned up by refreshInterimChain)\r\n    do {\r\n      if (tile.getState() == TileState.LOADED) {\r\n        // Show tile immediately instead of fading it in after loading, because\r\n        // the interim tile is in place already\r\n        this.transition_ = 0;\r\n        return tile;\r\n      }\r\n      tile = tile.interimTile;\r\n    } while (tile);\r\n\r\n    // we can not find a better tile\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Goes through the chain of interim tiles and discards sections of the chain\r\n   * that are no longer relevant.\r\n   */\r\n  refreshInterimChain() {\r\n    if (!this.interimTile) {\r\n      return;\r\n    }\r\n\r\n    let tile = this.interimTile;\r\n    let prev = /** @type {Tile} */ (this);\r\n\r\n    do {\r\n      if (tile.getState() == TileState.LOADED) {\r\n        //we have a loaded tile, we can discard the rest of the list\r\n        //we would could abort any LOADING tile request\r\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\r\n        tile.interimTile = null;\r\n        break;\r\n      } else if (tile.getState() == TileState.LOADING) {\r\n        //keep this LOADING tile any loaded tiles later in the chain are\r\n        //older than this tile, so we're still interested in the request\r\n        prev = tile;\r\n      } else if (tile.getState() == TileState.IDLE) {\r\n        //the head of the list is the most current tile, we don't need\r\n        //to start any other requests for this chain\r\n        prev.interimTile = tile.interimTile;\r\n      } else {\r\n        prev = tile;\r\n      }\r\n      tile = prev.interimTile;\r\n    } while (tile);\r\n  }\r\n\r\n  /**\r\n   * Get the tile coordinate for this tile.\r\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\r\n   * @api\r\n   */\r\n  getTileCoord() {\r\n    return this.tileCoord;\r\n  }\r\n\r\n  /**\r\n   * @return {TileState} State.\r\n   */\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  /**\r\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\r\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\r\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\r\n   * the tile queue and will block other requests.\r\n   * @param {TileState} state State.\r\n   * @api\r\n   */\r\n  setState(state) {\r\n    this.state = state;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Load the image or retry if loading previously failed.\r\n   * Loading is taken care of by the tile queue, and calling this method is\r\n   * only needed for preloading or for reloading in case of an error.\r\n   * @abstract\r\n   * @api\r\n   */\r\n  load() {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the alpha value for rendering.\r\n   * @param {string} id An id for the renderer.\r\n   * @param {number} time The render frame time.\r\n   * @return {number} A number between 0 and 1.\r\n   */\r\n  getAlpha(id, time) {\r\n    if (!this.transition_) {\r\n      return 1;\r\n    }\r\n\r\n    let start = this.transitionStarts_[id];\r\n    if (!start) {\r\n      start = time;\r\n      this.transitionStarts_[id] = start;\r\n    } else if (start === -1) {\r\n      return 1;\r\n    }\r\n\r\n    const delta = time - start + (1000 / 60); // avoid rendering at 0\r\n    if (delta >= this.transition_) {\r\n      return 1;\r\n    }\r\n    return easeIn(delta / this.transition_);\r\n  }\r\n\r\n  /**\r\n   * Determine if a tile is in an alpha transition.  A tile is considered in\r\n   * transition if tile.getAlpha() has not yet been called or has been called\r\n   * and returned 1.\r\n   * @param {string} id An id for the renderer.\r\n   * @return {boolean} The tile is in transition.\r\n   */\r\n  inTransition(id) {\r\n    if (!this.transition_) {\r\n      return false;\r\n    }\r\n    return this.transitionStarts_[id] !== -1;\r\n  }\r\n\r\n  /**\r\n   * Mark a transition as complete.\r\n   * @param {string} id An id for the renderer.\r\n   */\r\n  endTransition(id) {\r\n    if (this.transition_) {\r\n      this.transitionStarts_[id] = -1;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Tile;\r\n"},"lineCount":null}},"error":null,"hash":"e9a99cafb63a220a07294d10d3be82c8","cacheData":{"env":{}}}