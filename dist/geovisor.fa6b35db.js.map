{"version":3,"sources":["src/ol/util.js","src/ol/AssertionError.js","src/ol/CollectionEventType.js","src/ol/ObjectEventType.js","src/ol/obj.js","src/ol/events.js","src/ol/Disposable.js","src/ol/functions.js","src/ol/events/Event.js","src/ol/events/Target.js","src/ol/events/EventType.js","src/ol/Observable.js","src/ol/Object.js","src/ol/Collection.js","src/ol/MapEvent.js","src/ol/MapBrowserEvent.js","src/ol/webgl.js","src/ol/has.js","src/ol/MapBrowserEventType.js","src/ol/MapBrowserPointerEvent.js","src/ol/pointer/EventType.js","src/ol/pointer/EventSource.js","src/ol/pointer/MouseSource.js","src/ol/pointer/MsSource.js","src/ol/pointer/NativeSource.js","src/ol/pointer/PointerEvent.js","src/ol/array.js","src/ol/pointer/TouchSource.js","src/ol/pointer/PointerEventHandler.js","src/ol/MapBrowserEventHandler.js","src/ol/MapEventType.js","src/ol/MapProperty.js","src/ol/render/EventType.js","src/ol/TileState.js","src/ol/asserts.js","src/ol/structs/PriorityQueue.js","src/ol/TileQueue.js","src/ol/tilegrid/common.js","src/ol/math.js","src/ol/centerconstraint.js","src/ol/extent/Corner.js","src/ol/extent/Relationship.js","src/ol/extent.js","src/ol/resolutionconstraint.js","src/ol/rotationconstraint.js","src/ol/ViewHint.js","src/ol/ViewProperty.js","src/ol/string.js","src/ol/coordinate.js","src/ol/easing.js","src/ol/geom/GeometryType.js","src/ol/geom/GeometryLayout.js","src/ol/geom/flat/transform.js","src/ol/sphere.js","src/ol/proj/Units.js","src/ol/proj/Projection.js","src/ol/proj/epsg3857.js","src/ol/proj/epsg4326.js","src/ol/proj/projections.js","src/ol/proj/transforms.js","src/ol/proj.js","src/ol/transform.js","src/ol/geom/Geometry.js","src/ol/geom/SimpleGeometry.js","src/ol/geom/flat/area.js","src/ol/geom/flat/closest.js","src/ol/geom/flat/deflate.js","src/ol/geom/flat/inflate.js","src/ol/geom/flat/simplify.js","src/ol/geom/LinearRing.js","src/ol/geom/Point.js","src/ol/geom/flat/contains.js","src/ol/geom/flat/interiorpoint.js","src/ol/geom/flat/segments.js","src/ol/geom/flat/intersectsextent.js","src/ol/geom/flat/reverse.js","src/ol/geom/flat/orient.js","src/ol/geom/Polygon.js","src/ol/View.js","src/ol/dom.js","src/ol/layer/Property.js","src/ol/layer/Base.js","src/ol/source/State.js","src/ol/layer/Group.js","src/ol/size.js","src/ol/PluggableMap.js","src/ol/control/Control.js","src/ol/css.js","src/ol/layer/Layer.js","src/ol/control/Attribution.js","src/ol/control/Rotate.js","src/ol/control/Zoom.js","src/ol/control/FullScreen.js","src/ol/control/MousePosition.js","src/ol/render/Event.js","src/ol/color.js","src/ol/style/IconImageCache.js","src/ol/colorlike.js","src/ol/render/VectorContext.js","src/ol/structs/LRUCache.js","src/ol/render/canvas/LabelCache.js","src/ol/render/canvas.js","src/ol/render/canvas/Immediate.js","src/ol/render.js","src/ol/renderer/Map.js","src/ol/renderer/Composite.js","src/ol/OverlayPositioning.js","src/ol/Overlay.js","src/ol/control/OverviewMap.js","src/ol/control/ScaleLine.js","src/ol/control/ZoomSlider.js","src/ol/control/ZoomToExtent.js","src/ol/control.js","src/ol/Kinetic.js","src/ol/interaction/Property.js","src/ol/interaction/Interaction.js","src/ol/interaction/DoubleClickZoom.js","src/ol/events/condition.js","src/ol/interaction/Pointer.js","src/ol/interaction/DragPan.js","src/ol/interaction/DragRotate.js","src/ol/render/Box.js","src/ol/interaction/DragBox.js","src/ol/interaction/DragZoom.js","src/ol/events/KeyCode.js","src/ol/interaction/KeyboardPan.js","src/ol/interaction/KeyboardZoom.js","src/ol/interaction/MouseWheelZoom.js","src/ol/interaction/PinchRotate.js","src/ol/interaction/PinchZoom.js","src/ol/interaction/DragAndDrop.js","src/ol/interaction/DragRotateAndZoom.js","src/ol/Feature.js","src/ol/geom/Circle.js","src/ol/geom/flat/interpolate.js","src/ol/geom/flat/length.js","src/ol/geom/LineString.js","src/ol/geom/MultiLineString.js","src/ol/geom/MultiPoint.js","src/ol/geom/flat/center.js","src/ol/geom/MultiPolygon.js","src/ol/ImageState.js","src/ol/style/Image.js","src/ol/style/RegularShape.js","src/ol/style/Circle.js","src/ol/style/Fill.js","src/ol/style/Stroke.js","src/ol/style/Style.js","src/ol/layer/BaseVector.js","src/ol/render/canvas/Instruction.js","src/ol/render/canvas/Builder.js","src/ol/render/canvas/ImageBuilder.js","src/ol/render/canvas/LineStringBuilder.js","src/ol/render/canvas/PolygonBuilder.js","src/ol/geom/flat/straightchunk.js","src/ol/style/TextPlacement.js","src/ol/render/canvas/TextBuilder.js","src/ol/render/canvas/BuilderGroup.js","src/ol/render/canvas/BuilderType.js","src/ol/geom/flat/textpath.js","node_modules/rbush/rbush.min.js","src/ol/render/canvas/Executor.js","src/ol/render/canvas/ExecutorGroup.js","src/ol/renderer/Layer.js","src/ol/renderer/canvas/Layer.js","src/ol/renderer/vector.js","src/ol/renderer/canvas/VectorLayer.js","src/ol/layer/Vector.js","src/ol/format/FormatType.js","src/ol/featureloader.js","src/ol/loadingstrategy.js","src/ol/source/Source.js","src/ol/source/VectorEventType.js","src/ol/structs/RBush.js","src/ol/source/Vector.js","src/ol/interaction/Draw.js","src/ol/interaction/Extent.js","src/ol/interaction/Modify.js","src/ol/interaction/Select.js","src/ol/interaction/Snap.js","src/ol/interaction/Translate.js","src/ol/interaction.js","src/ol/Map.js","src/ol/webgl/Buffer.js","src/ol/webgl/ContextEventType.js","src/ol/vec/mat4.js","src/ol/webgl/PostProcessingPass.js","src/ol/webgl/Helper.js","src/ol/renderer/webgl/Layer.js","src/ol/format/Feature.js","src/ol/format/JSONFeature.js","src/ol/geom/GeometryCollection.js","src/ol/format/GeoJSON.js","src/ol/renderer/webgl/PointsLayer.js","src/ol/layer/Heatmap.js","src/ol/layer/BaseImage.js","src/ol/reproj/common.js","src/ol/renderer/canvas/ImageLayer.js","src/ol/layer/Image.js","src/ol/layer/TileProperty.js","src/ol/layer/BaseTile.js","src/ol/TileRange.js","src/ol/renderer/canvas/TileLayer.js","src/ol/layer/Tile.js","src/ol/ImageBase.js","src/ol/ImageCanvas.js","src/ol/renderer/canvas/VectorImageLayer.js","src/ol/layer/VectorImage.js","src/ol/layer/VectorTileRenderType.js","src/ol/renderer/canvas/VectorTileLayer.js","src/ol/layer/VectorTile.js","src/ol/layer.js","src/ol/Tile.js","src/ol/Image.js","src/ol/ImageTile.js","src/ol/tilecoord.js","src/ol/TileCache.js","src/ol/reproj.js","src/ol/reproj/Triangulation.js","src/ol/reproj/Tile.js","src/ol/tileurlfunction.js","src/ol/tilegrid/TileGrid.js","src/ol/tilegrid.js","src/ol/source/Tile.js","src/ol/source/TileEventType.js","src/ol/source/UrlTile.js","src/ol/source/TileImage.js","src/ol/source/XYZ.js","src/ol/source/OSM.js","src/ol/source/common.js","src/ol/source/WMSServerType.js","src/ol/uri.js","src/ol/source/TileWMS.js","src/ol/Control/control.js","src/ol/pixel.js","src/ol/xml.js","src/ol/format/XMLFeature.js","src/ol/format/GMLBase.js","src/ol/format/xsd.js","src/ol/format/GML2.js","src/ol/format/WMSGetFeatureInfo.js","../../src/ol/util.js","../../src/ol/AssertionError.js","../../src/ol/asserts.js","../../src/ol/math.js","../../../src/ol/geom/GeometryType.js","../../src/ol/sphere.js","../../../src/ol/extent/Corner.js","../../../src/ol/extent/Relationship.js","../../src/ol/extent.js","../../../src/ol/proj/Units.js","../../../src/ol/proj/Projection.js","../../../src/ol/proj/epsg3857.js","../../../src/ol/proj/epsg4326.js","../../../src/ol/proj/projections.js","../../src/ol/obj.js","../../../src/ol/proj/transforms.js","../../src/ol/proj.js","../../../src/ol/proj/proj4.js","node_modules/proj4/lib/global.js","node_modules/proj4/lib/constants/values.js","node_modules/proj4/lib/constants/PrimeMeridian.js","node_modules/proj4/lib/constants/units.js","node_modules/proj4/lib/match.js","node_modules/proj4/lib/projString.js","node_modules/wkt-parser/parser.js","node_modules/wkt-parser/process.js","node_modules/wkt-parser/index.js","node_modules/proj4/lib/defs.js","node_modules/proj4/lib/parseCode.js","node_modules/proj4/lib/extend.js","node_modules/proj4/lib/common/msfnz.js","node_modules/proj4/lib/common/sign.js","node_modules/proj4/lib/common/adjust_lon.js","node_modules/proj4/lib/common/tsfnz.js","node_modules/proj4/lib/common/phi2z.js","node_modules/proj4/lib/projections/merc.js","node_modules/proj4/lib/projections/longlat.js","node_modules/proj4/lib/projections.js","node_modules/proj4/lib/constants/Ellipsoid.js","node_modules/proj4/lib/deriveConstants.js","node_modules/proj4/lib/constants/Datum.js","node_modules/proj4/lib/datum.js","node_modules/proj4/lib/Proj.js","node_modules/proj4/lib/datumUtils.js","node_modules/proj4/lib/datum_transform.js","node_modules/proj4/lib/adjust_axis.js","node_modules/proj4/lib/common/toPoint.js","node_modules/proj4/lib/checkSanity.js","node_modules/proj4/lib/transform.js","node_modules/proj4/lib/core.js","node_modules/mgrs/mgrs.js","node_modules/proj4/lib/Point.js","node_modules/proj4/package.json","node_modules/proj4/lib/version.js","node_modules/proj4/lib/common/pj_enfn.js","node_modules/proj4/lib/common/pj_mlfn.js","node_modules/proj4/lib/common/pj_inv_mlfn.js","node_modules/proj4/lib/projections/tmerc.js","node_modules/proj4/lib/common/sinh.js","node_modules/proj4/lib/common/hypot.js","node_modules/proj4/lib/common/log1py.js","node_modules/proj4/lib/common/asinhy.js","node_modules/proj4/lib/common/gatg.js","node_modules/proj4/lib/common/clens.js","node_modules/proj4/lib/common/cosh.js","node_modules/proj4/lib/common/clens_cmplx.js","node_modules/proj4/lib/projections/etmerc.js","node_modules/proj4/lib/common/adjust_zone.js","node_modules/proj4/lib/projections/utm.js","node_modules/proj4/lib/common/srat.js","node_modules/proj4/lib/projections/gauss.js","node_modules/proj4/lib/projections/sterea.js","node_modules/proj4/lib/projections/stere.js","node_modules/proj4/lib/projections/somerc.js","node_modules/proj4/lib/projections/omerc.js","node_modules/proj4/lib/projections/lcc.js","node_modules/proj4/lib/projections/krovak.js","node_modules/proj4/lib/common/mlfn.js","node_modules/proj4/lib/common/e0fn.js","node_modules/proj4/lib/common/e1fn.js","node_modules/proj4/lib/common/e2fn.js","node_modules/proj4/lib/common/e3fn.js","node_modules/proj4/lib/common/gN.js","node_modules/proj4/lib/common/adjust_lat.js","node_modules/proj4/lib/common/imlfn.js","node_modules/proj4/lib/projections/cass.js","node_modules/proj4/lib/common/qsfnz.js","node_modules/proj4/lib/projections/laea.js","node_modules/proj4/lib/common/asinz.js","node_modules/proj4/lib/projections/aea.js","node_modules/proj4/lib/projections/gnom.js","node_modules/proj4/lib/common/iqsfnz.js","node_modules/proj4/lib/projections/cea.js","node_modules/proj4/lib/projections/eqc.js","node_modules/proj4/lib/projections/poly.js","node_modules/proj4/lib/projections/nzmg.js","node_modules/proj4/lib/projections/mill.js","node_modules/proj4/lib/projections/sinu.js","node_modules/proj4/lib/projections/moll.js","node_modules/proj4/lib/projections/eqdc.js","node_modules/proj4/lib/projections/vandg.js","node_modules/proj4/lib/projections/aeqd.js","node_modules/proj4/lib/projections/ortho.js","node_modules/proj4/lib/projections/qsc.js","node_modules/proj4/lib/projections/robin.js","node_modules/proj4/projs.js","node_modules/proj4/lib/index.js","index.js"],"names":["abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","AssertionError","code","path","message","split","name","ADD","REMOVE","PROPERTYCHANGE","assign","Object","target","var_sources","TypeError","output","i","ii","arguments","length","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty","bindListener","listenerObj","boundListener","evt","listener","bindTo","callOnce","unlistenByKey","call","findListener","listeners","opt_this","opt_setDeleteIndex","deleteIndex","getListeners","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListenerMap","removeListeners","removeEventListener","keys","listen","opt_once","addEventListener","listenOnce","unlisten","indexOf","splice","unlistenAll","Disposable","disposed_","disposeInternal","TRUE","FALSE","VOID","Event","propagationStopped","stopPropagation","preventDefault","Target","pendingRemovals_","dispatching_","listeners_","event","propagate","pendingRemovals","opt_type","index","CHANGE","ERROR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable","revision_","EventTarget","dispatchEvent","EventType","Array","isArray","len","unByKey","BaseObject","ObjectEvent","oldValue","opt_values","values_","setProperties","value","eventType","getChangeEventType","ObjectEventType","opt_silent","notify","set","changeEventTypeCache","Collection","Property","LENGTH","CollectionEvent","opt_element","opt_index","element","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","arr","f","array","get","elem","CollectionEventType","removeAt","n","insertAt","prev","j","opt_except","MapEvent","map","opt_frameState","frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS","getContext","canvas","opt_attributes","context","e","MAX_TEXTURE_SIZE","EXTENSIONS","DEBUG","HAS","window","document","createElement","gl","getParameter","getSupportedExtensions","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","msPointerEnabled","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","EventSource","dispatcher","mapping","mapping_","MouseSource","POINTER_ID","POINTER_TYPE","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","toString","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","p","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","lastTouches","lts","t","x","clientX","y","clientY","l","dx","Math","abs","dy","cloneEvent","pd","pointerId","isPrimary","pointerType","MsSource","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","NativeSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","PointerEvent","HAS_BUTTONS","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","height","tiltX","tiltY","hwTimestamp","_Event","which","ev","MouseEvent","binarySearch","haystack","needle","opt_comparator","low","mid","cmp","comparator","numberSafeCompareFunction","high","found","a","b","includes","linearFindNearest","direction","reverseSubArray","begin","end","tmp","extend","data","extension","remove","find","func","equals","arr1","arr2","len1","stableSort","compareFnc","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","TouchSource","CLICK_COUNT_TIMEOUT","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","mouseSource","firstTouchId_","resetId_","dedupTimeout_","inTouch","identifier","count","cancelResetClickCount_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","bind","clearTimeout","radiusX","radiusY","force","isPrimaryTouch_","inFunction","touches","prototype","slice","pointer","touchToPointer_","touchList","searchId","touch","d","Number","findTouch_","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","removePrimaryPointer_","lt","PointerEventHandler","CLONE_PROPS","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","s","newEvents","getEvents","forEach","handler","getHandlerForEvent","eventSource","addEvents_","removeEvents_","events","eventName","eventHandler_","eventCopy","fireEvent","PointerEventType","contains_","container","contained","contains","inType","unregister_","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","newEvent","MapBrowserEventType","updateActivePointers_","isMouseActionButton_","emulateClick_","dispose","handlePointerMove_","handlePointerUp_","isMoving_","POSTRENDER","MOVESTART","MOVEEND","LAYERGROUP","SIZE","TARGET","VIEW","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","PriorityQueue","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","TileQueue","tilePriorityFunction","tileChangeCallback","apply","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","handleTileChange","state","getState","hifi","TileState","tileKey","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","getCount","dequeue","load","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","min","max","cosh","exp","squaredSegmentDistance","x1","y1","x2","y2","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","coef","k","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","createExtent","extent","onlyCenter","smooth","center","resolution","size","opt_isMoving","viewWidth","viewHeight","minX","maxX","minY","maxY","ratio","log","none","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","createOrUpdate","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","Corner","getEnlargedArea","getForViewAndSize","rotation","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersectionArea","getIntersection","intersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createSnapToResolutions","resolutions","opt_smooth","opt_maxExtent","cappedMaxRes","capped","z","floor","createSnapToPower","power","opt_minResolution","zoomLevel","newResolution","pow","createMinMaxResolution","disable","createSnapToN","theta","createSnapToZero","opt_tolerance","tolerance","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","add","delta","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","createStringXY","opt_fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","sec","ceil","charAt","format","template","replace","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","easeIn","easeOut","inAndOut","linear","upAndDown","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","anchor","anchorX","anchorY","sx","sy","translate","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","geometry","projection","getType","GeometryType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","tileGrid","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","cache","transforms","destination","sourceCode","getCode","destinationCode","cloneTransform","identityTransform","addProjection","projections","addProjections","projectionLike","opt_units","pointResolution","getter","getPointResolutionFunc","getUnits","getMetersPerUnit","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","toLonLat","lonLat","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","transformWithProjections","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmp_","create","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","setFromArray","makeScale","compose","dx1","dy1","dx2","dy2","invert","makeInverse","det","determinant","Geometry","tmpTransform","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","closestPointXY","getRevision","computeExtent","opt_sy","opt_anchor","getSimplifiedGeometry","squaredTolerance","inCoordinates","outCoordinates","pixelExtent","getExtent","projectedExtent","getWorldExtent","SimpleGeometry","layout","GeometryLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getFlatCoordinates","getStrideForLayout","opt_layout","nesting","getLayoutForStride","changed","getStride","transformGeom2D","simpleGeometry","linearRing","twiceArea","linearRings","ends","linearRingss","endss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","simplifyLineString","highQuality","opt_simplifiedFlatCoordinates","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","round","quantize","quantizeArray","quantizeMultiArray","LinearRing","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","setLayout","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","getInteriorPointsOfMultiArray","interiorPoints","point1","ret","point2","intersectsLineString","coordinatesExtent","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","getOrientedFlatCoordinates","flatCenter","getFlatInteriorPoint","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","opt_sides","opt_angle","sides","getLayout","arrayLength","polygon","makeRegular","startAngle","View","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","properties","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","newOptions","getResolution","getZoom","getRotation","var_args","isDef","getAnimating","animate_","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","querySelector","metrics","getComputedStyle","w","h","ViewProperty","opt_hints","opt_size","getZoomForResolution","getUpdatedOptions_","maxZoom","enabled","constrainResolution","opt_power","pixelRatio","getProjection","nearest","baseLevel","geometryOrExtent","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getResolutionForExtent","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","position","centerX","centerY","deltaCoordinates","isMoving","getInteracting","adjustResolution","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","cancelAnimations","opt_duration","opt_resolutionDirection","opt_targetResolution","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","centerNone","smoothResolutionConstraint","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","createCanvasContext2D","opt_width","opt_height","outerWidth","offsetWidth","style","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","BaseLayer","LayerProperty","opacity","visible","zIndex","className_","className","state_","opt_managed","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getMaxResolution","getMinResolution","opt_states","zindex","UNDEFINED","READY","LayerGroup","LAYERS","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","getArray","setLayers","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","handleLayerChange_","collectionEvent","getLayersArray","states","pos","getLayerStatesArray","ownLayerState","getLayerState","layerState","SourceState","num","hasArea","toSize","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","controls","interactions","labelCacheListenerKey_","overlays_","overlays","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","overlay","getId","getControls","getInteractions","getLayerGroup","getOverlays","labelCache","detachLabelCache","redrawText","setTarget","hitTolerance","layerFilter","forEachFeatureAtCoordinate","features","forEachFeatureAtPixel","feature","forEachLayerAtPixel","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","eventPosition","left","top","getTarget","getElementById","pixelToCoordinateTransform","layerStatesArray","getSource","loading","coordinateToPixelTransform","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","tileQueue","hints","viewHints","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","hasListener","RenderEventType","animate","getLoading","dispatchRenderEvent","postRenderFunctions","getView","render","targetElement","getTargetElement","updateSize","setAttribute","handleViewPropertyChanged_","layerGroup","layerStates","hasRenderer","getRenderer","handleFontsChanged","viewState","previousFrameState","getHints","declutterItems","layerIndex","skippedFeatureUids","usedTiles","renderFrame","MapEventType","handlePostRender","computedStyle","setSize","parseFloat","Control","target_","listenerKeys","getOverlayContainerStopEvent","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","visibleAtResolution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","collectSourceAttributions_","display","innerHTML","handleToggle_","classList","toggle","mapEvent","updateElement_","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","getMap","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","getConstrainedZoom","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","isFullScreen","isFullScreenSupported","keys_","source_","handleFullScreen_","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","fullscreen","activeClassName","inactiveClassName","nextClassName","handleFullScreenChange_","body","webkitRequestFullscreen","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","webkitIsFullScreen","msFullscreenElement","fullscreenElement","exitFullscreen","msExitFullscreen","webkitExitFullscreen","MousePosition","PROJECTION","COORDINATE_FORMAT","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","mapProjection_","transform_","lastMouseMovePixel_","updateHTML_","viewport","handleMouseMove","handleMouseOut","html","getCoordinateFormat","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","rgb","fromString","MAX_CACHE_SIZE","cacheSize","fromStringInternal_","asArray","g","exec","hasAlpha","substr","normalize","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","iconImage","src","crossOrigin","maxCacheSize","expire","shared","asColorLike","VectorContext","renderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","strokeStyle","imageStyle","opt_declutterGroup","textStyle","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","LabelCache","consumers","consumer","consumerId","outer","peekLastKey","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","textHeights","checkFont","retries","interval","referenceWidth","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","div","heights","margin","measureTextWidth","measureAndCacheTextWidth","measureTextWidths","lines","widths","numLines","currentWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","pixelCoordinates","localTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveTo","lineTo","closePath","moveToLineTo_","beginPath","arc","fill","stroke","drawText_","setFillStrokeStyle","getFill","getStroke","setImageStyle","getImage","setTextStyle","getText","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","setStyle","drawGeometry","getGeometriesArray","drawImages_","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","drawRings_","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","toContext","getVectorContext","getRenderPixel","renderDeclutterItems","declutterTree","items","item","zIndexItems","renderDeclutter","MapRenderer","declutterTree_","thisArg","thisArg2","viewResolution","translatedCoordinate","canWrapX","projectionExtent","worldWidth","declutteredFeatures","numLayers","all","getWrapX","hasFeature","iconImageCache","expireIconCache","CompositeMapRenderer","attachLabelCache","firstChild","children_","calculateMatrices2D","previousElement","scheduleExpireIconCache","getDataAtPixel","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","insertFirst","stopEvent","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","updatePixelPosition","getOverlayContainer","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","getPixelFromCoordinate","newCenterPx","box","pageXOffset","pageYOffset","getPosition","isRendered","mapSize","updateRenderedPosition","setVisible","getOffset","getPositioning","bottom","OverviewMap","MAX_RATIO","MIN_RATIO","ControlledMap","ovmapDiv_","ovmap_","ovmap","addLayer","boxSizing","boxOverlay_","addOverlay","scope","overlayBox","mousePosition","getEventCoordinate","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","calculateExtent","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","LN2","fit","ovresolution","bottomLeft","topRight","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","updateBox_","validateExtent_","ScaleLine","UNITS_PROP","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","ZoomSlider","Direction","VERTICAL","HORIZONTAL","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","firstElementChild","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","beginInteraction","drag","endInteraction","getPositionForResolution_","amount","fn","getResolutionForValueFunction","getValueForResolutionFunction","initSlider_","setThumbPosition_","ZoomToExtent","handleZoomToExtent","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","ACTIVE","Interaction","setActive","InteractionProperty","active","pan","zoomByDelta","DoubleClickZoom","delta_","altKeyOnly","altShiftKeysOnly","activeElement","always","click","mouseActionButton","never","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","touchOnly","pointerEvt","penOnly","primaryAction","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","centroid","pointerEvents","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","defaultCondition","noKinetic_","update","adjustCenter","getAngle","centerpx","DragRotate","lastAngle_","getConstraints","adjustRotation","RenderBox","geometry_","startPixel_","endPixel_","startPixel","endPixel","createOrUpdateGeometry","render_","DragBox","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","getGeometry","setPixels","DragZoom","out_","mapExtent","boxPixelExtent","factor","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MouseWheelZoom","Mode","TRACKPAD","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDrop","DragAndDropEventType","ADD_FEATURES","DragAndDropEvent","file","opt_features","formatConstructors_","formatConstructors","dropListenKeys_","tryReadFeatures_","featureProjection","addFeatures","dropArea","handleDrop","handleStop","registerListeners_","unregisterListeners_","readFeatures","files","dataTransfer","reader","FileReader","handleResult_","readAsText","dropEffect","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","getProperties","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","createStyleFunction","styles","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","intersectsCoordinate","interpolatePoint","pointY","cumulativeLengths","o","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","linearRingLength","perimeter","LineString","flatMidpoint_","flatMidpointRevision_","opt_extrapolate","getCoordinateAt","MultiLineString","lineStrings","lineString","opt_interpolate","midpoints","midpoint","MultiPoint","multiPoint","points","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","newEndss","prevEnds","lastEnds","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","RegularShape","canvas_","hitDetectionCanvas_","fill_","origin_","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","setOpacity","setScale","ImageState","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","CircleStyle","Fill","color_","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","Style","geometryFunction_","defaultGeometryFunction","zIndex_","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","concat","BaseVectorLayer","RENDER_ORDER","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderOrder","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","closed","skipFirst","myEnd","getBufferedMaxExtent","lastXCoord","lastRel","nextRel","lastYCoord","nextCoord","skipped","builderEnds","builderEnd","appendFlatCoordinates","beginGeometry","builderEndss","builderBegin","myEnds","drawCustomCoordinates_","CanvasInstruction","endGeometry","reverse","instruction","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","myBegin","drawCoordinates_","reverseHitDetectionInstructions","declutterGroup","hitDetectionImage","getHitDetectionImage","origin","CanvasLineStringBuilder","moveToLineToInstruction","updateStrokeStyle","drawFlatCoordinates_","lastStroke","CanvasPolygonBuilder","numEnds","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","updateFillStyle","matchingChunk","maxAngle","chunkStart","m12","m23","x12","y12","x23","y23","chunkEnd","chunkM","acos","LINE","CanvasTextBuilder","TEXT_ALIGN","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","prune","geometryType","placement","TextPlacement","flatEnd","flatOffset","oo","range","drawChars_","geometryWidths","saveTextStates_","backgroundFill","backgroundStroke","strokeKey","textKey","fillKey","baseline","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","BuilderGroup","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","group","builderInstructions","zKey","builders","builderKey","builderInstruction","finish","builderType","zIndexKey","replays","replay","Constructor","DEFAULT","IMAGE","TEXT","drawTextOnPath","startM","previousAngle","numChars","segmentM","angleChanged","char","charLength","charM","segmentPos","Executor","tmpExtent","p1","p2","p3","p4","overlaps","alignFill_","coordinateCache_","renderedTransform_","widths_","release","containsKey","align","lineHeight","renderWidth","leftRight","setStrokeStyle_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","replayTextBackground_","repeatSize","save","restore","groupCount","RBush","collides","insert","declutterData","currentAlpha","getTextImage","skippedFeaturesHash","featureCallback","opt_hitExtent","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","labelWithAnchor","drawTextImageWithPointPlacement_","widthIndex","replayImage_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute_","opt_featureCallback","ExecutorGroup","ORDER","BuilderType","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","clip","executors","instructionByZindex","candidates","contextSize","hitExtent","clearRect","mask","getCircleArray","imageData","getImageData","zs","executor","executeHitDetection","opt_builderTypes","opt_declutterReplays","builderTypes","execute","circleArrayCache","fillCircleArrayRowToMiddle","arraySize","error","replayDeclutter","declutterReplays","zz","executorData","currentExecutor","LayerRenderer","layer_","tiles","tileCoord","tileRange","loadedTileCallback","forEachLoadedTile","renderIfReadyAndVisible","imageState","handleImageChange_","getLayer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","containerReused","layerClassName","getClassName","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","bottomRight","inverted","dispatchRenderEvent_","renderPixel","err","Uint8Array","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","getBuilder","textReplay","addDeclutter","drawText","renderFeature","replayGroup","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","drawCustom","lineStringReplay","polygonReplay","imageReplay","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","useContainer","canvasTransform","preRender","vectorSource","clipExtent","clipped","getRenderTransform","getDeclutter","world","postRender","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","gutter","CanvasBuilderGroup","loadFeatures","getStyleFunction","dirty","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","handleStyleImageChange_","VectorLayer","JSON","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readProjection","onerror","send","dataProjection","bbox","getZForResolution","getTileRangeForExtentAndZ","extents","getTileCoordExtent","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","attributionLike","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","opt_maxEntries","rbush_","RBush_","items_","uid","search","forEach_","getAll","getInExtent","toJSON","rbush","VectorSource","VectorSourceEvent","opt_feature","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","addFeature","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachInExtent","intersectsExtent","forEachFeatureAtCoordinateDirect","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","removed","setLoader","Draw","DrawEventType","DRAWSTART","DRAWEND","DrawEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","mode","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","getLinearRing","sketchFeature","sketchFeatures","overlaySource","createRegularPolygon","createBox","boxCoordinates","Extent","ExtentEventType","EXTENTCHANGED","ExtentEvent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","setExtent","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","snapToVertex_","createOrUpdatePointerFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","createOrUpdateExtentFeature_","fixedPoint","fixedP1","fixedP2","Modify","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","getFeatures","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","removeFeature_","segmentData","depth","kk","centerSegmentData","circumferenceSegmentData","featureSegments","removePoint","willModifyFeatures_","dragSegment","setRadius","setGeometryCoordinates_","createOrUpdateVertexFeature_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","insertVertex_","nodes","pointDistanceToSegmentDataSquared","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","component","newIndex","segmentsByFeature","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","Select","SelectEventType","SELECT","SelectEvent","selected","deselected","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","featureOverlay_","layerFilter_","featureLayerAssociation_","getFeaturesCollection","currentMap","selectedFeatures","unskipFeature","skipFeature","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","Snap","getFeatureFromEvent","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","sortByDistance","opt_listen","register","feature_uid","segmentWriter","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","getFeatures_","forEachFeatureRemove_","forEachFeatureAdd_","lowerLeft","upperRight","snappedToVertex","isCircle","deltaA","Translate","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","geom","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Map","WebGLArrayBuffer","BufferUsage","opt_arr","opt_usage","arr_","usage_","LOST","RESTORED","fromTransform","mat4","WebGLPostProcessingPass","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","gl_","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","shaderSource","compileShader","fragmentShader","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","Float32Array","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","bindFramebuffer","getFrameBuffer","level","internalFormat","bindTexture","texImage2D","texParameteri","framebufferTexture2D","nextPass","activeTexture","clearColor","enable","blendFunc","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2f","uniform1i","applyUniforms","drawArrays","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","WebGLHelper","ShaderType","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","DefaultAttrib","TEX_COORD","ROTATE_WITH_VIEW","OFFSETS","COLOR","bufferCache_","shaderCache_","programCache_","currentProgram_","hasOESElementIndexUint","WEBGL_EXTENSIONS","getExtension","ContextEventType","handleWebGLContextLost","handleWebGLContextRestored","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","shaderCompileErrors_","bufferKey","bufferCache","webGlBuffer","arrayBuffer","Uint32Array","Uint16Array","getUsage","buf","bufferCacheEntry","isContextLost","deleteBuffer","deleteProgram","deleteShader","getCanvas","init","applyFrameState","elementType","numItems","offsetInBytes","drawElements","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","HTMLImageElement","program","shader","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","uniformMatrix4fv","attribName","getAttributeLocation","opt_wrapS","opt_wrapT","createTextureInternal","WebGLLayerRenderer","helper_","getShaderCompileErrors","pushFeatureToBuffer","vertexBuffer","indexBuffer","geojsonFeature","pushPointFeatureToBuffer_","tmpArray_","u0","v0","u1","red","green","baseIndex","customAttributeValues","getBlankTexture","createImageData","FeatureFormat","defaultFeatureProjection","adaptOptions","transformGeometryWithOptions","write","transformed","decimals","transformExtentWithOptions","JSONFeature","readFeatureFromObject","getObject","getReadOptions","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","unlistenGeometriesChange_","clonedGeometries","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","readGeometry","setId","geoJSONObject","geoJSONFeatures","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","rightHanded","WebGLPointsLayerRenderer","u_texture","projectionMatrixTransform","sourceRevision_","verticesBuffer_","indicesBuffer_","program_","getProgram","sizeCallback_","sizeCallback","coordCallback_","coordCallback","opacityCallback_","opacityCallback","texCoordCallback_","texCoordCallback","colorArray_","colorCallback_","colorCallback","rotateWithViewCallback_","rotateWithViewCallback","geojsonFormat_","geojsonFeatureCache_","currentTransform_","renderTransform_","invertRenderTransform_","finalizeDraw","sourceChanged","viewNotMoving","extentChanged","rebuildBuffers_","makeProjectionTransform","prepareDraw","bytesPerFloat","BYTES_PER_ELEMENT","enableAttributeArray","flushBufferData","Heatmap","BLUR","GRADIENT","DEFAULT_GRADIENT","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","setRenderOrder","createGradient","getGradient","colors","u_size","u_blurSlope","u_resolution","u_gradientTexture","createLinearGradient","step","addColorStop","fillRect","BaseImageLayer","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","loadImage","imageExtent","imageResolution","imagePixelRatio","getPixelRatio","viewCenter","img","dw","dh","previousAlpha","ImageLayer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","TileRange","CanvasTileLayerRenderer","tileLayer","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","zDirection","tileState","getUseInterimTilesOnError","getTile","getPreload","setState","isDrawableTile","getInterimTile","tileSource","sourceRevision","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","canvasExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clipUnrotated","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","getTileImage","alphaChanged","endTransition","postRenderFunction","expireCache","tileCache","opt_tileCallback","getMinZoom","enqueue","getTileCoordCenter","useTile","TileLayer","ImageBase","ImageCanvas","opt_loader","error_","handleLoad_","CanvasVectorImageLayerRenderer","skippedFeatures_","vectorRenderer_","layerImageRatio_","getImageRatio","vectorRenderer","skippedFeatures","imageFrameState","newSkippedFeatures","VectorImageLayer","imageRatio","imageRatio_","HYBRID","CanvasVectorTileLayerRenderer","IMAGE_REPLAYS","ReplayType","VECTOR_REPLAYS","overlayContext_","overlayPixelTransform_","inverseOverlayPixelTransform_","renderedLayerRevision_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","overlayContext","childElementCount","lastElementChild","queue","tileUid","updateExecutorGroup_","tileImageNeedsRender_","wantedResolution","listenerKey","prepareTile","renderTileImage_","hasContext","layerRevision","revision","builderState","getReplayState","renderedRenderOrder","renderedZ","sourceZ","sourceTileGrid","getTileGrid","tileExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","executorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","renderQueuedTileImages_","renderMode","getRenderMode","VectorTileRenderType","replayTypes","worldOffset","hasExecutors","replayState","renderedTileResolution","renderedTileRevision","renderedTileZ","renderPixelRatio","renderScale","pixelScale","VectorTileLayer","renderMode_","Tile","interimTile","transition_","transitionStarts_","ImageWrapper","imageLoadFunction","src_","Image","unlisten_","imageLoadFunction_","unlistenImage_","listenImage","handleImageLoad_","handleImageError_","loadHandler","errorHandler","decode","promise","listening","then","catch","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ctx","opt_tileCoord","getKeyZXY","fromKey","hash","withinExtentAndZ","getMaxZoom","getFullTileRange","TileCache","peekLast","peekFirstKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","Triangulation","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","unlistenSources_","getTileSize","leftToLoad","sourceListenKey","reproject_","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","fromCharCode","stop","TileGrid","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","fullTileRanges","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","extentFromProjection","worldsAway","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","self","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","getResolutions","thisProj","TileSourceEvent","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","TileEventType","pruneExceptNewestZ","setKey","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","newTile","getTileInternal","refreshInterimChain","createTile_","tilegrid","proj","imageTile","OSM","ATTRIBUTION","DEFAULT_WMS_VERSION","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","appendParams","uri","params","keyParams","encodeURIComponent","qs","TileWMS","transparent","params_","v13_","serverType_","serverType","hidpi_","hidpi","tmpExtent_","updateV13_","getKeyForParams_","projectionObj","sourceProjectionObj","getTileCoordForCoordAndResolution","baseParams","getRequestUrl_","WMSServerType","dpi","getAxisOrientation","version","nothing","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLBase","GMLNS","ONLY_WHITESPACE_RE","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","readFeaturesInternal","child","ft","candidate","ns","featureTypes","readFeatureElement","getAttribute","GEOMETRY_PARSERS","asFeature","test","readGeometryElement","readFeatureElementInternal","attributes","_content_","attName","fid","readFlatCoordinatesFromNode_","MULTIPOINT_PARSERS_","MULTILINESTRING_PARSERS_","MULTIPOLYGON_PARSERS_","POINTMEMBER_PARSERS_","LINESTRINGMEMBER_PARSERS_","POLYGONMEMBER_PARSERS_","GEOMETRY_FLAT_COORDINATES_PARSERS","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","pointMemberParser_","lineStringMemberParser_","polygonMemberParser_","readLineString","readPolygon","RING_PARSERS","readFlatLinearRing_","readBoolean","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML2","MULTIGEOMETRY_TO_MEMBER_NODENAME","containerSrs","coordsGroups","BOX_PARSERS_","flatLinearRing","multiSurface","surface","multiCurve","writeGeometryElement","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","line","GEOMETRY_NODE_FACTORY_","writeCurveOrLineString_","hasZ","curve","getLineStrings","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS_","getCoords_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeSurfaceOrPolygon_","writeLinearRing_","opt_srsName","opt_hasZ","POINTMEMBER_SERIALIZERS_","writePoint_","getPolygons","SURFACEORPOLYGONMEMBER_SERIALIZERS_","ENVELOPE_SERIALIZERS_","readFlatCoordinates_","innerBoundaryIsParser_","outerBoundaryIsParser_","readPoint","readMultiPoint","readMultiLineString","readLinearRing","readMultiPolygon","readBox_","writeMultiCurveOrLineString_","writeMultiPoint_","writeMultiSurfaceOrPolygon_","writeEnvelope","writeLineStringOrCurveMember_","writeRing_","writePointMember_","writeSurfaceOrPolygonMember_","WMSGetFeatureInfo","featureIdentifier","layerIdentifier","featureNS_","gmlFormat_","layers_","layerElement","toRemove","layerName","layerFeatures","gmlFeatures","readFeatures_","const","let","super","defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","to_meter","ignoredChar","testkey","lkey","processedKey","defData","paramName","paramVal","paramOutname","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat_2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","parseString","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","place","root","currentObject","txt","readCharicter","neutral","quoted","afterquote","word","afterItem","newObjects","mapit","unshift","thing","newObj","sExpr","shift","convert","rename","outName","inName","d2r","cleanWKT","wkt","projName","local","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","lisp","that","def","EPSG","ESRI","IAU2000","console","testObj","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","maybeProjStr","eccent","sinphi","cosphi","con","phi","com","ts","eccnth","dphi","es","names","identity","pt","projs","merc","longlat","projStore","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","eccentricity","ep2","ellipse","Ellipsoid","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","datum_type","srsCode","json","ourProj","datumDef","Datum","sphere_","ecc","datumObj","compareDatums","geodeticToGeocentric","Longitude","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Latitude","Height","geocentricToGeodetic","genau","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","denorm","xin","yin","zin","checkCoord","checkNotWGS","proj4","transformer","from","to","transformedArray","checkProj","oProj","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","toPoint","ll","accuracy","encode","LLtoUTM","mgrs","UTMtoLL","toUpperCase","degToRad","radToDeg","rad","Lat","N","T","C","LongOriginRad","ZoneNumber","Long","LatRad","LongRad","eccSquared","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","getLetter100kID","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","testChar","hunK","sb","substring","north100k","east100k","getEastingFromChar","getNorthingFromChar","getMinNorthing","remainder","sep","accuracyBonus","sepEastingString","sepNorthingString","sepEasting","sepNorthing","curCol","eastingValue","rewindMarker","curRow","northingValue","warn","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","ds","temp","pp","B","cos_2B","h1","h2","arg_r","hr","hr1","hr2","arg_i","sin_arg_r","hi2","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","dependsOn","etmerc","esinp","rc","phic0","ratexp","K","DEL_TOL","sinc0","cosc0","R2","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","no_off","no_rot","bl","t0","fl","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","s45","s90","fi0","alfa","uq","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","e0","e3","lam","nl","asq","cl","ml1","phi1","nl1","rl1","tl1","dsq","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","phi1z","eccnts","sin_p14","cos_p14","infinity_dist","coslon","dlat","tanphi","mln","mlnp","ma","iterations","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_n_im1","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c3","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s3","s4","M","cosAz","Ee","F","FACE_ENUM","FRONT","BACK","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","xy","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","Proj","tmerc","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","defaultDatum","common","wmsSource","isBaseLayer","visibility","singleTile","mousePositionControl","proj4326","projgoogle","projCRTM","costaRicatonLonLat","costaRicaWebMercator","layerInfo","on","hit","ccontrol","cursor","lonlat","coord84","punto","coordCRTM","info","bindInputs","layerid","visibilityInput","$","prop","opacityInput","sublayer"],"mappings":"AuPQe,ACAA,AHEA,AKsBA,AIId,ArBqHcw9C,acjJA,ACAA,AHEA,AKsBA,AIId,ArBqHcA,OcjJA,ACAA,AHEA,AKsBA,AIId,ArBqHcA,ecjJA,ACAA,AHEA,AKsBA,AIId,ArBqHcA,QcjJA,ACAA,AHEA,AKsBA,AIId,ArBqHcA,acjJA,ACAA,AHEA,AKsBA,AIId,ArBqHcA,CcjJA,ACAA,AHEA,AKsBA,AIId,ArBqHcA,OcjJA,ACAA,AHEA,AKsBA,AIId,ArBqHcA,IcjJA,ACAA,AHEA,AKsBA,AIId,ArBqHcA,QcjJA,ACAA,AHEA,AKsBA,AIId,ArBqHcA,MqBrHd,EJJc,AIId,KP5Bc,ACAA,AHEA,AZ+IAA,EcjJA,ACAA,AHEA,AZPf,CiB6Be,AIId,GP5Bc,ACAA,AHEA,AZPf,CqBiCC,CP5Bc,ACAA,AHEA,AZPf,CcME,ACAA,AHEA,ASyBD,MTzBQ,CZRT,CeMW,AM2BV,EN1BC,EDDa,AO2Bd,ETxBC,ASJF8jF,CJwBe,EAvBfD,CIDI,EAAQ,CJCN,EFCU,AEDF,AIKP,CJJL,CFCA,CDDA,AFEa,AZRf,EAAA,EAAA,CeOS,CEDE,AIIK,CNFd,GMGA,EAAQ,ArBXV,CcMgB,ACEP,AHCP,EGAA,AMWK,CJbL,KFEO,AEFD,EFGN,CMUc,CTXD,CKDb,AIYkB,EPblB,ACGM,CMWC,GNjBM,CEIL,EjBPV,CqBoBS,CPdG,AGEV,AjBRF,CYSE,ASWa,CrBpBf,CeGe,EMiBS,EJZd,ELCC,CSoBJ,ArB7BP,CcOE,ACJa,KEMb,GLCA,ASmBc,EPtBH,AOsBO,EAAM,GACxB,CrB7BF,CiBQe,AIqBP,CrB7BR,EYSe,ASoBC,GP3BD,GdFf,KcEe,AGOb,ELCA,KKDQ,CHPK,AdDf,EAAA,MiBkBa,EAAkB,AjBlB/B,EYSqB,CKgBN,QAAA,KjByHA7jF,IYxIb,KZwIaA,EiBzHA,AjByHAA,EiB9Hf,CjB8HeA,CiB9HC,EAAM,CLVL,GZwIFA,GAAAA,EiB9HkB,AjB8HlBA,EiB9HsB,KLTnC,AKSwC,GAAK,CjB8HhCA,EAAAA,CAAAA,IiB9H0C,IACzD,AjB6HeA,EiB7HC,CjB6HDA,CiB7HO,CLVC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","file":"geovisor.fa6b35db.js","sourceRoot":"..","sourcesContent":["/**\r\n * @module ol/util\r\n */\r\n\r\n/**\r\n * @return {?} Any return.\r\n */\r\nexport function abstract() {\r\n  return /** @type {?} */ ((function() {\r\n    throw new Error('Unimplemented abstract method.');\r\n  })());\r\n}\r\n\r\n/**\r\n * Counter for getUid.\r\n * @type {number}\r\n * @private\r\n */\r\nlet uidCounter_ = 0;\r\n\r\n/**\r\n * Gets a unique ID for an object. This mutates the object so that further calls\r\n * with the same object as a parameter returns the same value. Unique IDs are generated\r\n * as a strictly increasing sequence. Adapted from goog.getUid.\r\n *\r\n * @param {Object} obj The object to get the unique ID for.\r\n * @return {string} The unique ID for the object.\r\n * @api\r\n */\r\nexport function getUid(obj) {\r\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\r\n}\r\n\r\n/**\r\n * OpenLayers version.\r\n * @type {string}\r\n */\r\nexport const VERSION = 'latest';\r\n","/**\r\n * @module ol/AssertionError\r\n */\r\nimport {VERSION} from './util.js';\r\n\r\n/**\r\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\r\n * extended with a `code` property.\r\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\r\n */\r\nclass AssertionError extends Error {\r\n\r\n  /**\r\n   * @param {number} code Error code.\r\n   */\r\n  constructor(code) {\r\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\r\n    const message = 'Assertion failed. See https://openlayers.org/en/' + path +\r\n    '/doc/errors/#' + code + ' for details.';\r\n\r\n    super(message);\r\n\r\n    /**\r\n     * Error code. The meaning of the code can be found on\r\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\r\n     * the version found in the OpenLayers script's header comment if a version\r\n     * other than the latest is used).\r\n     * @type {number}\r\n     * @api\r\n     */\r\n    this.code = code;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.name = 'AssertionError';\r\n\r\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\r\n    this.message = message;\r\n  }\r\n\r\n}\r\n\r\nexport default AssertionError;\r\n","/**\r\n * @module ol/CollectionEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when an item is added to the collection.\r\n   * @event module:ol/Collection.CollectionEvent#add\r\n   * @api\r\n   */\r\n  ADD: 'add',\r\n  /**\r\n   * Triggered when an item is removed from the collection.\r\n   * @event module:ol/Collection.CollectionEvent#remove\r\n   * @api\r\n   */\r\n  REMOVE: 'remove'\r\n};\r\n","/**\r\n * @module ol/ObjectEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when a property is changed.\r\n   * @event module:ol/Object.ObjectEvent#propertychange\r\n   * @api\r\n   */\r\n  PROPERTYCHANGE: 'propertychange'\r\n};\r\n","/**\r\n * @module ol/obj\r\n */\r\n\r\n\r\n/**\r\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\r\n * one or more source objects to a target object.\r\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\r\n *\r\n * @param {!Object} target The target object.\r\n * @param {...Object} var_sources The source object(s).\r\n * @return {!Object} The modified target object.\r\n */\r\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\r\n  if (target === undefined || target === null) {\r\n    throw new TypeError('Cannot convert undefined or null to object');\r\n  }\r\n\r\n  const output = Object(target);\r\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\r\n    const source = arguments[i];\r\n    if (source !== undefined && source !== null) {\r\n      for (const key in source) {\r\n        if (source.hasOwnProperty(key)) {\r\n          output[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return output;\r\n};\r\n\r\n\r\n/**\r\n * Removes all properties from an object.\r\n * @param {Object} object The object to clear.\r\n */\r\nexport function clear(object) {\r\n  for (const property in object) {\r\n    delete object[property];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Polyfill for Object.values().  Get an array of property values from an object.\r\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\r\n *\r\n * @param {!Object<K,V>} object The object from which to get the values.\r\n * @return {!Array<V>} The property values.\r\n * @template K,V\r\n */\r\nexport const getValues = (typeof Object.values === 'function') ? Object.values : function(object) {\r\n  const values = [];\r\n  for (const property in object) {\r\n    values.push(object[property]);\r\n  }\r\n  return values;\r\n};\r\n\r\n\r\n/**\r\n * Determine if an object has any properties.\r\n * @param {Object} object The object to check.\r\n * @return {boolean} The object is empty.\r\n */\r\nexport function isEmpty(object) {\r\n  let property;\r\n  for (property in object) {\r\n    return false;\r\n  }\r\n  return !property;\r\n}\r\n","/**\r\n * @module ol/events\r\n */\r\nimport {clear} from './obj.js';\r\n\r\n\r\n/**\r\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\r\n * @typedef {Object} EventsKey\r\n * @property {Object} [bindTo]\r\n * @property {ListenerFunction} [boundListener]\r\n * @property {boolean} callOnce\r\n * @property {number} [deleteIndex]\r\n * @property {ListenerFunction} listener\r\n * @property {import(\"./events/Target.js\").EventTargetLike} target\r\n * @property {string} type\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Listener function. This function is called with an event object as argument.\r\n * When the function returns `false`, event propagation will stop.\r\n *\r\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {EventsKey} listenerObj Listener object.\r\n * @return {ListenerFunction} Bound listener.\r\n */\r\nexport function bindListener(listenerObj) {\r\n  const boundListener = function(evt) {\r\n    const listener = listenerObj.listener;\r\n    const bindTo = listenerObj.bindTo || listenerObj.target;\r\n    if (listenerObj.callOnce) {\r\n      unlistenByKey(listenerObj);\r\n    }\r\n    return listener.call(bindTo, evt);\r\n  };\r\n  listenerObj.boundListener = boundListener;\r\n  return boundListener;\r\n}\r\n\r\n\r\n/**\r\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\r\n * array.\r\n *\r\n * @param {!Array<!EventsKey>} listeners Array of listeners.\r\n * @param {!Function} listener The listener function.\r\n * @param {Object=} opt_this The `this` value inside the listener.\r\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\r\n *     listener, for {@link module:ol/events~unlistenByKey}.\r\n * @return {EventsKey|undefined} The matching listener object.\r\n */\r\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\r\n  let listenerObj;\r\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\r\n    listenerObj = listeners[i];\r\n    if (listenerObj.listener === listener &&\r\n        listenerObj.bindTo === opt_this) {\r\n      if (opt_setDeleteIndex) {\r\n        listenerObj.deleteIndex = i;\r\n      }\r\n      return listenerObj;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n * @param {string} type Type.\r\n * @return {Array<EventsKey>|undefined} Listeners.\r\n */\r\nexport function getListeners(target, type) {\r\n  const listenerMap = getListenerMap(target);\r\n  return listenerMap ? listenerMap[type] : undefined;\r\n}\r\n\r\n\r\n/**\r\n * Get the lookup of listeners.\r\n * @param {Object} target Target.\r\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\r\n * @return {!Object<string, Array<EventsKey>>} Map of\r\n *     listeners by event type.\r\n */\r\nfunction getListenerMap(target, opt_create) {\r\n  let listenerMap = target.ol_lm;\r\n  if (!listenerMap && opt_create) {\r\n    listenerMap = target.ol_lm = {};\r\n  }\r\n  return listenerMap;\r\n}\r\n\r\n\r\n/**\r\n * Remove the listener map from a target.\r\n * @param {Object} target Target.\r\n */\r\nfunction removeListenerMap(target) {\r\n  delete target.ol_lm;\r\n}\r\n\r\n\r\n/**\r\n * Clean up all listener objects of the given type.  All properties on the\r\n * listener objects will be removed, and if no listeners remain in the listener\r\n * map, it will be removed from the target.\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n * @param {string} type Type.\r\n */\r\nfunction removeListeners(target, type) {\r\n  const listeners = getListeners(target, type);\r\n  if (listeners) {\r\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\r\n      /** @type {import(\"./events/Target.js\").default} */ (target).\r\n        removeEventListener(type, listeners[i].boundListener);\r\n      clear(listeners[i]);\r\n    }\r\n    listeners.length = 0;\r\n    const listenerMap = getListenerMap(target);\r\n    if (listenerMap) {\r\n      delete listenerMap[type];\r\n      if (Object.keys(listenerMap).length === 0) {\r\n        removeListenerMap(target);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Registers an event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` to a `this` object, and returns\r\n * a key for use with {@link module:ol/events~unlistenByKey}.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\r\n * @return {EventsKey} Unique key for the listener.\r\n */\r\nexport function listen(target, type, listener, opt_this, opt_once) {\r\n  const listenerMap = getListenerMap(target, true);\r\n  let listeners = listenerMap[type];\r\n  if (!listeners) {\r\n    listeners = listenerMap[type] = [];\r\n  }\r\n  let listenerObj = findListener(listeners, listener, opt_this, false);\r\n  if (listenerObj) {\r\n    if (!opt_once) {\r\n      // Turn one-off listener into a permanent one.\r\n      listenerObj.callOnce = false;\r\n    }\r\n  } else {\r\n    listenerObj = {\r\n      bindTo: opt_this,\r\n      callOnce: !!opt_once,\r\n      listener: listener,\r\n      target: target,\r\n      type: type\r\n    };\r\n    /** @type {import(\"./events/Target.js\").default} */ (target).\r\n      addEventListener(type, bindListener(listenerObj));\r\n    listeners.push(listenerObj);\r\n  }\r\n\r\n  return listenerObj;\r\n}\r\n\r\n\r\n/**\r\n * Registers a one-off event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` as self-unregistering listener\r\n * to a `this` object, and returns a key for use with\r\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\r\n * unregistered before it is called.\r\n *\r\n * When {@link module:ol/events~listen} is called with the same arguments after this\r\n * function, the self-unregistering listener will be turned into a permanent\r\n * listener.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @return {EventsKey} Key for unlistenByKey.\r\n */\r\nexport function listenOnce(target, type, listener, opt_this) {\r\n  return listen(target, type, listener, opt_this, true);\r\n}\r\n\r\n\r\n/**\r\n * Unregisters an event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * To return a listener, this function needs to be called with the exact same\r\n * arguments that were used for a previous {@link module:ol/events~listen} call.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n */\r\nexport function unlisten(target, type, listener, opt_this) {\r\n  const listeners = getListeners(target, type);\r\n  if (listeners) {\r\n    const listenerObj = findListener(listeners, listener, opt_this, true);\r\n    if (listenerObj) {\r\n      unlistenByKey(listenerObj);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Unregisters event listeners on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * The argument passed to this function is the key returned from\r\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\r\n *\r\n * @param {EventsKey} key The key.\r\n */\r\nexport function unlistenByKey(key) {\r\n  if (key && key.target) {\r\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\r\n      removeEventListener(key.type, key.boundListener);\r\n    const listeners = getListeners(key.target, key.type);\r\n    if (listeners) {\r\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\r\n      if (i !== -1) {\r\n        listeners.splice(i, 1);\r\n      }\r\n      if (listeners.length === 0) {\r\n        removeListeners(key.target, key.type);\r\n      }\r\n    }\r\n    clear(key);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Unregisters all event listeners on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n */\r\nexport function unlistenAll(target) {\r\n  const listenerMap = getListenerMap(target);\r\n  if (listenerMap) {\r\n    for (const type in listenerMap) {\r\n      removeListeners(target, type);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @module ol/Disposable\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Objects that need to clean up after themselves.\r\n */\r\nclass Disposable {\r\n\r\n  constructor() {\r\n    /**\r\n     * The object has already been disposed.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.disposed_ = false;\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  dispose() {\r\n    if (!this.disposed_) {\r\n      this.disposed_ = true;\r\n      this.disposeInternal();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extension point for disposable objects.\r\n   * @protected\r\n   */\r\n  disposeInternal() {}\r\n}\r\n\r\nexport default Disposable;\r\n","/**\r\n * @module ol/functions\r\n */\r\n\r\n/**\r\n * Always returns true.\r\n * @returns {boolean} true.\r\n */\r\nexport function TRUE() {\r\n  return true;\r\n}\r\n\r\n/**\r\n * Always returns false.\r\n * @returns {boolean} false.\r\n */\r\nexport function FALSE() {\r\n  return false;\r\n}\r\n\r\n/**\r\n * A reusable function, used e.g. as a default for callbacks.\r\n *\r\n * @return {void} Nothing.\r\n */\r\nexport function VOID() {}\r\n","/**\r\n * @module ol/events/Event\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\r\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\r\n *\r\n * This implementation only provides `type` and `target` properties, and\r\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\r\n * for higher level events defined in the library, and works with\r\n * {@link module:ol/events/Target~Target}.\r\n */\r\nclass Event {\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   */\r\n  constructor(type) {\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.propagationStopped;\r\n\r\n    /**\r\n     * The event type.\r\n     * @type {string}\r\n     * @api\r\n     */\r\n    this.type = type;\r\n\r\n    /**\r\n     * The event target.\r\n     * @type {Object}\r\n     * @api\r\n     */\r\n    this.target = null;\r\n  }\r\n\r\n  /**\r\n   * Stop event propagation.\r\n   * @api\r\n   */\r\n  preventDefault() {\r\n    this.propagationStopped = true;\r\n  }\r\n\r\n  /**\r\n   * Stop event propagation.\r\n   * @api\r\n   */\r\n  stopPropagation() {\r\n    this.propagationStopped = true;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @param {Event|import(\"./Event.js\").default} evt Event\r\n */\r\nexport function stopPropagation(evt) {\r\n  evt.stopPropagation();\r\n}\r\n\r\n\r\n/**\r\n * @param {Event|import(\"./Event.js\").default} evt Event\r\n */\r\nexport function preventDefault(evt) {\r\n  evt.preventDefault();\r\n}\r\n\r\nexport default Event;\r\n","/**\r\n * @module ol/events/Target\r\n */\r\nimport Disposable from '../Disposable.js';\r\nimport {unlistenAll} from '../events.js';\r\nimport {VOID} from '../functions.js';\r\nimport Event from './Event.js';\r\n\r\n\r\n/**\r\n * @typedef {EventTarget|Target} EventTargetLike\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\r\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\r\n *\r\n * There are two important simplifications compared to the specification:\r\n *\r\n * 1. The handling of `useCapture` in `addEventListener` and\r\n *    `removeEventListener`. There is no real capture model.\r\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\r\n *    There is no event target hierarchy. When a listener calls\r\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\r\n *    more listeners after this one will be called. Same as when the listener\r\n *    returns false.\r\n */\r\nclass Target extends Disposable {\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, number>}\r\n     */\r\n    this.pendingRemovals_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, number>}\r\n     */\r\n    this.dispatching_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\r\n     */\r\n    this.listeners_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\r\n   */\r\n  addEventListener(type, listener) {\r\n    let listeners = this.listeners_[type];\r\n    if (!listeners) {\r\n      listeners = this.listeners_[type] = [];\r\n    }\r\n    if (listeners.indexOf(listener) === -1) {\r\n      listeners.push(listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispatches an event and calls all listeners listening for events\r\n   * of this type. The event parameter can either be a string or an\r\n   * Object with a `type` property.\r\n   *\r\n   * @param {{type: string,\r\n   *     target: (EventTargetLike|undefined),\r\n   *     propagationStopped: (boolean|undefined)}|\r\n   *     import(\"./Event.js\").default|string} event Event object.\r\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\r\n   *     event object or if any of the listeners returned false.\r\n   * @api\r\n   */\r\n  dispatchEvent(event) {\r\n    const evt = typeof event === 'string' ? new Event(event) : event;\r\n    const type = evt.type;\r\n    evt.target = this;\r\n    const listeners = this.listeners_[type];\r\n    let propagate;\r\n    if (listeners) {\r\n      if (!(type in this.dispatching_)) {\r\n        this.dispatching_[type] = 0;\r\n        this.pendingRemovals_[type] = 0;\r\n      }\r\n      ++this.dispatching_[type];\r\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\r\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\r\n          propagate = false;\r\n          break;\r\n        }\r\n      }\r\n      --this.dispatching_[type];\r\n      if (this.dispatching_[type] === 0) {\r\n        let pendingRemovals = this.pendingRemovals_[type];\r\n        delete this.pendingRemovals_[type];\r\n        while (pendingRemovals--) {\r\n          this.removeEventListener(type, VOID);\r\n        }\r\n        delete this.dispatching_[type];\r\n      }\r\n      return propagate;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    unlistenAll(this);\r\n  }\r\n\r\n  /**\r\n   * Get the listeners for a specified event type. Listeners are returned in the\r\n   * order that they will be called in.\r\n   *\r\n   * @param {string} type Type.\r\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\r\n   */\r\n  getListeners(type) {\r\n    return this.listeners_[type];\r\n  }\r\n\r\n  /**\r\n   * @param {string=} opt_type Type. If not provided,\r\n   *     `true` will be returned if this event target has any listeners.\r\n   * @return {boolean} Has listeners.\r\n   */\r\n  hasListener(opt_type) {\r\n    return opt_type ?\r\n      opt_type in this.listeners_ :\r\n      Object.keys(this.listeners_).length > 0;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\r\n   */\r\n  removeEventListener(type, listener) {\r\n    const listeners = this.listeners_[type];\r\n    if (listeners) {\r\n      const index = listeners.indexOf(listener);\r\n      if (type in this.pendingRemovals_) {\r\n        // make listener a no-op, and remove later in #dispatchEvent()\r\n        listeners[index] = VOID;\r\n        ++this.pendingRemovals_[type];\r\n      } else {\r\n        listeners.splice(index, 1);\r\n        if (listeners.length === 0) {\r\n          delete this.listeners_[type];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Target;\r\n","/**\r\n * @module ol/events/EventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @const\r\n */\r\nexport default {\r\n  /**\r\n   * Generic change event. Triggered when the revision counter is increased.\r\n   * @event module:ol/events/Event~Event#change\r\n   * @api\r\n   */\r\n  CHANGE: 'change',\r\n\r\n  /**\r\n   * Generic error event. Triggered when an error occurs.\r\n   * @event module:ol/events/Event~Event#error\r\n   * @api\r\n   */\r\n  ERROR: 'error',\r\n\r\n  CLEAR: 'clear',\r\n  CONTEXTMENU: 'contextmenu',\r\n  CLICK: 'click',\r\n  DBLCLICK: 'dblclick',\r\n  DRAGENTER: 'dragenter',\r\n  DRAGOVER: 'dragover',\r\n  DROP: 'drop',\r\n  KEYDOWN: 'keydown',\r\n  KEYPRESS: 'keypress',\r\n  LOAD: 'load',\r\n  MOUSEDOWN: 'mousedown',\r\n  MOUSEMOVE: 'mousemove',\r\n  MOUSEOUT: 'mouseout',\r\n  MOUSEUP: 'mouseup',\r\n  MOUSEWHEEL: 'mousewheel',\r\n  MSPOINTERDOWN: 'MSPointerDown',\r\n  RESIZE: 'resize',\r\n  TOUCHSTART: 'touchstart',\r\n  TOUCHMOVE: 'touchmove',\r\n  TOUCHEND: 'touchend',\r\n  WHEEL: 'wheel'\r\n};\r\n","/**\r\n * @module ol/Observable\r\n */\r\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * An event target providing convenient methods for listener registration\r\n * and unregistration. A generic `change` event is always available through\r\n * {@link module:ol/Observable~Observable#changed}.\r\n *\r\n * @fires import(\"./events/Event.js\").Event\r\n * @api\r\n */\r\nclass Observable extends EventTarget {\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.revision_ = 0;\r\n\r\n  }\r\n\r\n  /**\r\n   * Increases the revision counter and dispatches a 'change' event.\r\n   * @api\r\n   */\r\n  changed() {\r\n    ++this.revision_;\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  }\r\n\r\n  /**\r\n   * Get the version number for this object.  Each time the object is modified,\r\n   * its version number will be incremented.\r\n   * @return {number} Revision.\r\n   * @api\r\n   */\r\n  getRevision() {\r\n    return this.revision_;\r\n  }\r\n\r\n  /**\r\n   * Listen for a certain type of event.\r\n   * @param {string|Array<string>} type The event type or array of event types.\r\n   * @param {function(?): ?} listener The listener function.\r\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\r\n   *     called with an array of event types as the first argument, the return\r\n   *     will be an array of keys.\r\n   * @api\r\n   */\r\n  on(type, listener) {\r\n    if (Array.isArray(type)) {\r\n      const len = type.length;\r\n      const keys = new Array(len);\r\n      for (let i = 0; i < len; ++i) {\r\n        keys[i] = listen(this, type[i], listener);\r\n      }\r\n      return keys;\r\n    } else {\r\n      return listen(this, /** @type {string} */ (type), listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listen once for a certain type of event.\r\n   * @param {string|Array<string>} type The event type or array of event types.\r\n   * @param {function(?): ?} listener The listener function.\r\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\r\n   *     called with an array of event types as the first argument, the return\r\n   *     will be an array of keys.\r\n   * @api\r\n   */\r\n  once(type, listener) {\r\n    if (Array.isArray(type)) {\r\n      const len = type.length;\r\n      const keys = new Array(len);\r\n      for (let i = 0; i < len; ++i) {\r\n        keys[i] = listenOnce(this, type[i], listener);\r\n      }\r\n      return keys;\r\n    } else {\r\n      return listenOnce(this, /** @type {string} */ (type), listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unlisten for a certain type of event.\r\n   * @param {string|Array<string>} type The event type or array of event types.\r\n   * @param {function(?): ?} listener The listener function.\r\n   * @api\r\n   */\r\n  un(type, listener) {\r\n    if (Array.isArray(type)) {\r\n      for (let i = 0, ii = type.length; i < ii; ++i) {\r\n        unlisten(this, type[i], listener);\r\n      }\r\n      return;\r\n    } else {\r\n      unlisten(this, /** @type {string} */ (type), listener);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Removes an event listener using the key returned by `on()` or `once()`.\r\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\r\n *     or `once()` (or an array of keys).\r\n * @api\r\n */\r\nexport function unByKey(key) {\r\n  if (Array.isArray(key)) {\r\n    for (let i = 0, ii = key.length; i < ii; ++i) {\r\n      unlistenByKey(key[i]);\r\n    }\r\n  } else {\r\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\r\n  }\r\n}\r\n\r\n\r\nexport default Observable;\r\n","/**\r\n * @module ol/Object\r\n */\r\nimport {getUid} from './util.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport Observable from './Observable.js';\r\nimport Event from './events/Event.js';\r\nimport {assign} from './obj.js';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\r\n */\r\nexport class ObjectEvent extends Event {\r\n\r\n  /**\r\n   * @param {string} type The event type.\r\n   * @param {string} key The property name.\r\n   * @param {*} oldValue The old value for `key`.\r\n   */\r\n  constructor(type, key, oldValue) {\r\n    super(type);\r\n\r\n    /**\r\n     * The name of the property whose value is changing.\r\n     * @type {string}\r\n     * @api\r\n     */\r\n    this.key = key;\r\n\r\n    /**\r\n     * The old value. To get the new value use `e.target.get(e.key)` where\r\n     * `e` is the event object.\r\n     * @type {*}\r\n     * @api\r\n     */\r\n    this.oldValue = oldValue;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Most non-trivial classes inherit from this.\r\n *\r\n * This extends {@link module:ol/Observable} with observable\r\n * properties, where each property is observable as well as the object as a\r\n * whole.\r\n *\r\n * Classes that inherit from this have pre-defined properties, to which you can\r\n * add your owns. The pre-defined properties are listed in this documentation as\r\n * 'Observable Properties', and have their own accessors; for example,\r\n * {@link module:ol/Map~Map} has a `target` property, accessed with\r\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\r\n * settable. There are also general-purpose accessors `get()` and `set()`. For\r\n * example, `get('target')` is equivalent to `getTarget()`.\r\n *\r\n * The `set` accessors trigger a change event, and you can monitor this by\r\n * registering a listener. For example, {@link module:ol/View~View} has a\r\n * `center` property, so `view.on('change:center', function(evt) {...});` would\r\n * call the function whenever the value of the center property changes. Within\r\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\r\n * would return the new center.\r\n *\r\n * You can add your own observable properties with\r\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\r\n * You can listen for changes on that property value with\r\n * `object.on('change:prop', listener)`. You can get a list of all\r\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\r\n *\r\n * Note that the observable properties are separate from standard JS properties.\r\n * You can, for example, give your map object a title with\r\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\r\n * first will be a `hasOwnProperty`; the second will appear in\r\n * `getProperties()`. Only the second is observable.\r\n *\r\n * Properties can be deleted by using the unset method. E.g.\r\n * object.unset('foo').\r\n *\r\n * @fires ObjectEvent\r\n * @api\r\n */\r\nclass BaseObject extends Observable {\r\n\r\n  /**\r\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\r\n   */\r\n  constructor(opt_values) {\r\n    super();\r\n\r\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\r\n    // the same as the order in which they were created.  This also helps to\r\n    // ensure that object properties are always added in the same order, which\r\n    // helps many JavaScript engines generate faster code.\r\n    getUid(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.values_ = {};\r\n\r\n    if (opt_values !== undefined) {\r\n      this.setProperties(opt_values);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a value.\r\n   * @param {string} key Key name.\r\n   * @return {*} Value.\r\n   * @api\r\n   */\r\n  get(key) {\r\n    let value;\r\n    if (this.values_.hasOwnProperty(key)) {\r\n      value = this.values_[key];\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Get a list of object property names.\r\n   * @return {Array<string>} List of property names.\r\n   * @api\r\n   */\r\n  getKeys() {\r\n    return Object.keys(this.values_);\r\n  }\r\n\r\n  /**\r\n   * Get an object of all property names and values.\r\n   * @return {Object<string, *>} Object.\r\n   * @api\r\n   */\r\n  getProperties() {\r\n    return assign({}, this.values_);\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key name.\r\n   * @param {*} oldValue Old value.\r\n   */\r\n  notify(key, oldValue) {\r\n    let eventType;\r\n    eventType = getChangeEventType(key);\r\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\r\n    eventType = ObjectEventType.PROPERTYCHANGE;\r\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\r\n  }\r\n\r\n  /**\r\n   * Sets a value.\r\n   * @param {string} key Key name.\r\n   * @param {*} value Value.\r\n   * @param {boolean=} opt_silent Update without triggering an event.\r\n   * @api\r\n   */\r\n  set(key, value, opt_silent) {\r\n    if (opt_silent) {\r\n      this.values_[key] = value;\r\n    } else {\r\n      const oldValue = this.values_[key];\r\n      this.values_[key] = value;\r\n      if (oldValue !== value) {\r\n        this.notify(key, oldValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets a collection of key-value pairs.  Note that this changes any existing\r\n   * properties and adds new ones (it does not remove any existing properties).\r\n   * @param {Object<string, *>} values Values.\r\n   * @param {boolean=} opt_silent Update without triggering an event.\r\n   * @api\r\n   */\r\n  setProperties(values, opt_silent) {\r\n    for (const key in values) {\r\n      this.set(key, values[key], opt_silent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsets a property.\r\n   * @param {string} key Key name.\r\n   * @param {boolean=} opt_silent Unset without triggering an event.\r\n   * @api\r\n   */\r\n  unset(key, opt_silent) {\r\n    if (key in this.values_) {\r\n      const oldValue = this.values_[key];\r\n      delete this.values_[key];\r\n      if (!opt_silent) {\r\n        this.notify(key, oldValue);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @type {Object<string, string>}\r\n */\r\nconst changeEventTypeCache = {};\r\n\r\n\r\n/**\r\n * @param {string} key Key name.\r\n * @return {string} Change name.\r\n */\r\nexport function getChangeEventType(key) {\r\n  return changeEventTypeCache.hasOwnProperty(key) ?\r\n    changeEventTypeCache[key] :\r\n    (changeEventTypeCache[key] = 'change:' + key);\r\n}\r\n\r\n\r\nexport default BaseObject;\r\n","/**\r\n * @module ol/Collection\r\n */\r\nimport AssertionError from './AssertionError.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport BaseObject from './Object.js';\r\nimport Event from './events/Event.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  LENGTH: 'length'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\r\n * type.\r\n */\r\nexport class CollectionEvent extends Event {\r\n\r\n  /**\r\n   * @param {CollectionEventType} type Type.\r\n   * @param {*=} opt_element Element.\r\n   * @param {number} opt_index The index of the added or removed element.\r\n   */\r\n  constructor(type, opt_element, opt_index) {\r\n    super(type);\r\n\r\n    /**\r\n     * The element that is added to or removed from the collection.\r\n     * @type {*}\r\n     * @api\r\n     */\r\n    this.element = opt_element;\r\n\r\n    /**\r\n     * The index of the added or removed element.\r\n     * @type {number}\r\n     * @api\r\n     */\r\n    this.index = opt_index;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [unique=false] Disallow the same item from being added to\r\n * the collection twice.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * An expanded version of standard JS Array, adding convenience methods for\r\n * manipulation. Add and remove changes to the Collection trigger a Collection\r\n * event. Note that this does not cover changes to the objects _within_ the\r\n * Collection; they trigger events on the appropriate object, not on the\r\n * Collection as a whole.\r\n *\r\n * @fires CollectionEvent\r\n *\r\n * @template T\r\n * @api\r\n */\r\nclass Collection extends BaseObject {\r\n\r\n  /**\r\n   * @param {Array<T>=} opt_array Array.\r\n   * @param {Options=} opt_options Collection options.\r\n   */\r\n  constructor(opt_array, opt_options) {\r\n\r\n    super();\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.unique_ = !!options.unique;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<T>}\r\n     */\r\n    this.array_ = opt_array ? opt_array : [];\r\n\r\n    if (this.unique_) {\r\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\r\n        this.assertUnique_(this.array_[i], i);\r\n      }\r\n    }\r\n\r\n    this.updateLength_();\r\n\r\n  }\r\n\r\n  /**\r\n   * Remove all elements from the collection.\r\n   * @api\r\n   */\r\n  clear() {\r\n    while (this.getLength() > 0) {\r\n      this.pop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add elements to the collection.  This pushes each item in the provided array\r\n   * to the end of the collection.\r\n   * @param {!Array<T>} arr Array.\r\n   * @return {Collection<T>} This collection.\r\n   * @api\r\n   */\r\n  extend(arr) {\r\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\r\n      this.push(arr[i]);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Iterate over each element, calling the provided callback.\r\n   * @param {function(T, number, Array<T>): *} f The function to call\r\n   *     for every element. This function takes 3 arguments (the element, the\r\n   *     index and the array). The return value is ignored.\r\n   * @api\r\n   */\r\n  forEach(f) {\r\n    const array = this.array_;\r\n    for (let i = 0, ii = array.length; i < ii; ++i) {\r\n      f(array[i], i, array);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a reference to the underlying Array object. Warning: if the array\r\n   * is mutated, no events will be dispatched by the collection, and the\r\n   * collection's \"length\" property won't be in sync with the actual length\r\n   * of the array.\r\n   * @return {!Array<T>} Array.\r\n   * @api\r\n   */\r\n  getArray() {\r\n    return this.array_;\r\n  }\r\n\r\n  /**\r\n   * Get the element at the provided index.\r\n   * @param {number} index Index.\r\n   * @return {T} Element.\r\n   * @api\r\n   */\r\n  item(index) {\r\n    return this.array_[index];\r\n  }\r\n\r\n  /**\r\n   * Get the length of this collection.\r\n   * @return {number} The length of the array.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLength() {\r\n    return this.get(Property.LENGTH);\r\n  }\r\n\r\n  /**\r\n   * Insert an element at the provided index.\r\n   * @param {number} index Index.\r\n   * @param {T} elem Element.\r\n   * @api\r\n   */\r\n  insertAt(index, elem) {\r\n    if (this.unique_) {\r\n      this.assertUnique_(elem);\r\n    }\r\n    this.array_.splice(index, 0, elem);\r\n    this.updateLength_();\r\n    this.dispatchEvent(\r\n      new CollectionEvent(CollectionEventType.ADD, elem, index));\r\n  }\r\n\r\n  /**\r\n   * Remove the last element of the collection and return it.\r\n   * Return `undefined` if the collection is empty.\r\n   * @return {T|undefined} Element.\r\n   * @api\r\n   */\r\n  pop() {\r\n    return this.removeAt(this.getLength() - 1);\r\n  }\r\n\r\n  /**\r\n   * Insert the provided element at the end of the collection.\r\n   * @param {T} elem Element.\r\n   * @return {number} New length of the collection.\r\n   * @api\r\n   */\r\n  push(elem) {\r\n    if (this.unique_) {\r\n      this.assertUnique_(elem);\r\n    }\r\n    const n = this.getLength();\r\n    this.insertAt(n, elem);\r\n    return this.getLength();\r\n  }\r\n\r\n  /**\r\n   * Remove the first occurrence of an element from the collection.\r\n   * @param {T} elem Element.\r\n   * @return {T|undefined} The removed element or undefined if none found.\r\n   * @api\r\n   */\r\n  remove(elem) {\r\n    const arr = this.array_;\r\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\r\n      if (arr[i] === elem) {\r\n        return this.removeAt(i);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Remove the element at the provided index and return it.\r\n   * Return `undefined` if the collection does not contain this index.\r\n   * @param {number} index Index.\r\n   * @return {T|undefined} Value.\r\n   * @api\r\n   */\r\n  removeAt(index) {\r\n    const prev = this.array_[index];\r\n    this.array_.splice(index, 1);\r\n    this.updateLength_();\r\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\r\n    return prev;\r\n  }\r\n\r\n  /**\r\n   * Set the element at the provided index.\r\n   * @param {number} index Index.\r\n   * @param {T} elem Element.\r\n   * @api\r\n   */\r\n  setAt(index, elem) {\r\n    const n = this.getLength();\r\n    if (index < n) {\r\n      if (this.unique_) {\r\n        this.assertUnique_(elem, index);\r\n      }\r\n      const prev = this.array_[index];\r\n      this.array_[index] = elem;\r\n      this.dispatchEvent(\r\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index));\r\n      this.dispatchEvent(\r\n        new CollectionEvent(CollectionEventType.ADD, elem, index));\r\n    } else {\r\n      for (let j = n; j < index; ++j) {\r\n        this.insertAt(j, undefined);\r\n      }\r\n      this.insertAt(index, elem);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateLength_() {\r\n    this.set(Property.LENGTH, this.array_.length);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {T} elem Element.\r\n   * @param {number=} opt_except Optional index to ignore.\r\n   */\r\n  assertUnique_(elem, opt_except) {\r\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\r\n      if (this.array_[i] === elem && i !== opt_except) {\r\n        throw new AssertionError(58);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Collection;\r\n","/**\r\n * @module ol/MapEvent\r\n */\r\nimport Event from './events/Event.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map events are instances of this type.\r\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\r\n */\r\nclass MapEvent extends Event {\r\n\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./PluggableMap.js\").default} map Map.\r\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n   */\r\n  constructor(type, map, opt_frameState) {\r\n\r\n    super(type);\r\n\r\n    /**\r\n     * The map where the event occurred.\r\n     * @type {import(\"./PluggableMap.js\").default}\r\n     * @api\r\n     */\r\n    this.map = map;\r\n\r\n    /**\r\n     * The frame state at the time of the event.\r\n     * @type {?import(\"./PluggableMap.js\").FrameState}\r\n     * @api\r\n     */\r\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default MapEvent;\r\n","/**\r\n * @module ol/MapBrowserEvent\r\n */\r\nimport MapEvent from './MapEvent.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map browser events are instances of this type.\r\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\r\n */\r\nclass MapBrowserEvent extends MapEvent {\r\n\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./PluggableMap.js\").default} map Map.\r\n   * @param {Event} browserEvent Browser event.\r\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\r\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n   */\r\n  constructor(type, map, browserEvent, opt_dragging, opt_frameState) {\r\n\r\n    super(type, map, opt_frameState);\r\n\r\n    /**\r\n     * The original browser event.\r\n     * @const\r\n     * @type {Event}\r\n     * @api\r\n     */\r\n    this.originalEvent = browserEvent;\r\n\r\n    /**\r\n     * The map pixel relative to the viewport corresponding to the original browser event.\r\n     * @type {import(\"./pixel.js\").Pixel}\r\n     * @api\r\n     */\r\n    this.pixel = map.getEventPixel(browserEvent);\r\n\r\n    /**\r\n     * The coordinate in view projection corresponding to the original browser event.\r\n     * @type {import(\"./coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\r\n\r\n    /**\r\n     * Indicates if the map is currently being dragged. Only set for\r\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\r\n     *\r\n     * @type {boolean}\r\n     * @api\r\n     */\r\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\r\n\r\n  }\r\n\r\n  /**\r\n   * Prevents the default browser action.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\r\n   * @override\r\n   * @api\r\n   */\r\n  preventDefault() {\r\n    super.preventDefault();\r\n    this.originalEvent.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Prevents further propagation of the current event.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\r\n   * @override\r\n   * @api\r\n   */\r\n  stopPropagation() {\r\n    super.stopPropagation();\r\n    this.originalEvent.stopPropagation();\r\n  }\r\n}\r\n\r\n\r\nexport default MapBrowserEvent;\r\n","/**\r\n * @module ol/webgl\r\n */\r\n\r\n\r\n/**\r\n * Constants taken from goog.webgl\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const ONE = 1;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const SRC_ALPHA = 0x0302;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const COLOR_BUFFER_BIT = 0x00004000;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const TRIANGLES = 0x0004;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const TRIANGLE_STRIP = 0x0005;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\r\n\r\n\r\n/**\r\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\r\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\r\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport const ARRAY_BUFFER = 0x8892;\r\n\r\n\r\n/**\r\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\r\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\r\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\r\n\r\n\r\n/**\r\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport const STREAM_DRAW = 0x88E0;\r\n\r\n\r\n/**\r\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport const STATIC_DRAW = 0x88E4;\r\n\r\n\r\n/**\r\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport const DYNAMIC_DRAW = 0x88E8;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const CULL_FACE = 0x0B44;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const BLEND = 0x0BE2;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const STENCIL_TEST = 0x0B90;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const DEPTH_TEST = 0x0B71;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const SCISSOR_TEST = 0x0C11;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const UNSIGNED_BYTE = 0x1401;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const UNSIGNED_SHORT = 0x1403;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const UNSIGNED_INT = 0x1405;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const FLOAT = 0x1406;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const RGBA = 0x1908;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const FRAGMENT_SHADER = 0x8B30;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const VERTEX_SHADER = 0x8B31;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const LINK_STATUS = 0x8B82;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const LINEAR = 0x2601;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const TEXTURE_MAG_FILTER = 0x2800;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const TEXTURE_MIN_FILTER = 0x2801;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const TEXTURE_WRAP_S = 0x2802;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const TEXTURE_WRAP_T = 0x2803;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const TEXTURE_2D = 0x0DE1;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const TEXTURE0 = 0x84C0;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const CLAMP_TO_EDGE = 0x812F;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const COMPILE_STATUS = 0x8B81;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const FRAMEBUFFER = 0x8D40;\r\n\r\n\r\n/** end of goog.webgl constants\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nconst CONTEXT_IDS = [\r\n  'experimental-webgl',\r\n  'webgl',\r\n  'webkit-3d',\r\n  'moz-webgl'\r\n];\r\n\r\n\r\n/**\r\n * @param {HTMLCanvasElement} canvas Canvas.\r\n * @param {Object=} opt_attributes Attributes.\r\n * @return {WebGLRenderingContext} WebGL rendering context.\r\n */\r\nexport function getContext(canvas, opt_attributes) {\r\n  const ii = CONTEXT_IDS.length;\r\n  for (let i = 0; i < ii; ++i) {\r\n    try {\r\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\r\n      if (context) {\r\n        return /** @type {!WebGLRenderingContext} */ (context);\r\n      }\r\n    } catch (e) {\r\n      // pass\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n/**\r\n * Include debuggable shader sources.  Default is `true`. This should be set to\r\n * `false` for production builds.\r\n * @type {boolean}\r\n */\r\nexport const DEBUG = true;\r\n\r\n\r\n/**\r\n * The maximum supported WebGL texture size in pixels. If WebGL is not\r\n * supported, the value is set to `undefined`.\r\n * @type {number|undefined}\r\n */\r\nlet MAX_TEXTURE_SIZE; // value is set below\r\n\r\n\r\n/**\r\n * List of supported WebGL extensions.\r\n * @type {Array<string>}\r\n */\r\nlet EXTENSIONS; // value is set below\r\n\r\n\r\n/**\r\n * True if both OpenLayers and browser support WebGL.\r\n * @type {boolean}\r\n * @api\r\n */\r\nlet HAS = false;\r\n\r\n//TODO Remove side effects\r\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\r\n  try {\r\n    const canvas = document.createElement('canvas');\r\n    const gl = getContext(canvas);\r\n    if (gl) {\r\n      HAS = true;\r\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\r\n      EXTENSIONS = gl.getSupportedExtensions();\r\n    }\r\n  } catch (e) {\r\n    // pass\r\n  }\r\n}\r\n\r\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\r\n","/**\r\n * @module ol/has\r\n */\r\n\r\nconst ua = typeof navigator !== 'undefined' ?\r\n  navigator.userAgent.toLowerCase() : '';\r\n\r\n/**\r\n * User agent string says we are dealing with Firefox as browser.\r\n * @type {boolean}\r\n */\r\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\r\n\r\n/**\r\n * User agent string says we are dealing with Safari as browser.\r\n * @type {boolean}\r\n */\r\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\r\n\r\n/**\r\n * User agent string says we are dealing with a WebKit engine.\r\n * @type {boolean}\r\n */\r\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\r\n\r\n/**\r\n * User agent string says we are dealing with a Mac as platform.\r\n * @type {boolean}\r\n */\r\nexport const MAC = ua.indexOf('macintosh') !== -1;\r\n\r\n\r\n/**\r\n * The ratio between physical pixels and device-independent pixels\r\n * (dips) on the device (`window.devicePixelRatio`).\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\r\n\r\n\r\n/**\r\n * True if browser supports touch events.\r\n * @const\r\n * @type {boolean}\r\n * @api\r\n */\r\nexport const TOUCH = 'ontouchstart' in window;\r\n\r\n\r\n/**\r\n * True if browser supports pointer events.\r\n * @const\r\n * @type {boolean}\r\n */\r\nexport const POINTER = 'PointerEvent' in window;\r\n\r\n\r\n/**\r\n * True if browser supports ms pointer events (IE 10).\r\n * @const\r\n * @type {boolean}\r\n */\r\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\r\n\r\n\r\nexport {HAS as WEBGL} from './webgl.js';\r\n","/**\r\n * @module ol/MapBrowserEventType\r\n */\r\nimport EventType from './events/EventType.js';\r\n\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n\r\n  /**\r\n   * A true single click with no dragging and no double click. Note that this\r\n   * event is delayed by 250 ms to ensure that it is not a double click.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\r\n   * @api\r\n   */\r\n  SINGLECLICK: 'singleclick',\r\n\r\n  /**\r\n   * A click with no dragging. A double click will fire two of this.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\r\n   * @api\r\n   */\r\n  CLICK: EventType.CLICK,\r\n\r\n  /**\r\n   * A true double click, with no dragging.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\r\n   * @api\r\n   */\r\n  DBLCLICK: EventType.DBLCLICK,\r\n\r\n  /**\r\n   * Triggered when a pointer is dragged.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\r\n   * @api\r\n   */\r\n  POINTERDRAG: 'pointerdrag',\r\n\r\n  /**\r\n   * Triggered when a pointer is moved. Note that on touch devices this is\r\n   * triggered when the map is panned, so is not the same as mousemove.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\r\n   * @api\r\n   */\r\n  POINTERMOVE: 'pointermove',\r\n\r\n  POINTERDOWN: 'pointerdown',\r\n  POINTERUP: 'pointerup',\r\n  POINTEROVER: 'pointerover',\r\n  POINTEROUT: 'pointerout',\r\n  POINTERENTER: 'pointerenter',\r\n  POINTERLEAVE: 'pointerleave',\r\n  POINTERCANCEL: 'pointercancel'\r\n};\r\n","/**\r\n * @module ol/MapBrowserPointerEvent\r\n */\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\n\r\nclass MapBrowserPointerEvent extends MapBrowserEvent {\r\n\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./PluggableMap.js\").default} map Map.\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\r\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\r\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n   */\r\n  constructor(type, map, pointerEvent, opt_dragging, opt_frameState) {\r\n\r\n    super(type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\r\n\r\n    /**\r\n     * @const\r\n     * @type {import(\"./pointer/PointerEvent.js\").default}\r\n     */\r\n    this.pointerEvent = pointerEvent;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default MapBrowserPointerEvent;\r\n","/**\r\n * @module ol/pointer/EventType\r\n */\r\n\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  POINTERMOVE: 'pointermove',\r\n  POINTERDOWN: 'pointerdown',\r\n  POINTERUP: 'pointerup',\r\n  POINTEROVER: 'pointerover',\r\n  POINTEROUT: 'pointerout',\r\n  POINTERENTER: 'pointerenter',\r\n  POINTERLEAVE: 'pointerleave',\r\n  POINTERCANCEL: 'pointercancel'\r\n};\r\n","/**\r\n * @module ol/pointer/EventSource\r\n */\r\n\r\nclass EventSource {\r\n\r\n  /**\r\n   * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n   * @param {!Object<string, function(Event): void>} mapping Event mapping.\r\n   */\r\n  constructor(dispatcher, mapping) {\r\n\r\n    /**\r\n     * @type {import(\"./PointerEventHandler.js\").default}\r\n     */\r\n    this.dispatcher = dispatcher;\r\n\r\n    /**\r\n     * @private\r\n     * @const\r\n     * @type {!Object<string, function(Event): void>}\r\n     */\r\n    this.mapping_ = mapping;\r\n  }\r\n\r\n  /**\r\n   * List of events supported by this source.\r\n   * @return {Array<string>} Event names\r\n   */\r\n  getEvents() {\r\n    return Object.keys(this.mapping_);\r\n  }\r\n\r\n  /**\r\n   * Returns the handler that should handle a given event type.\r\n   * @param {string} eventType The event type.\r\n   * @return {function(Event)} Handler\r\n   */\r\n  getHandlerForEvent(eventType) {\r\n    return this.mapping_[eventType];\r\n  }\r\n\r\n}\r\n\r\nexport default EventSource;\r\n","/**\r\n * @module ol/pointer/MouseSource\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport EventSource from './EventSource.js';\r\n\r\n\r\n/**\r\n * @type {number}\r\n */\r\nexport const POINTER_ID = 1;\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nexport const POINTER_TYPE = 'mouse';\r\n\r\n\r\n/**\r\n * Radius around touchend that swallows mouse events.\r\n *\r\n * @type {number}\r\n */\r\nconst DEDUP_DIST = 25;\r\n\r\n/**\r\n * Handler for `mousedown`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mousedown(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    // TODO(dfreedman) workaround for some elements not sending mouseup\r\n    // http://crbug/149091\r\n    if (POINTER_ID.toString() in this.pointerMap) {\r\n      this.cancel(inEvent);\r\n    }\r\n    const e = prepareEvent(inEvent, this.dispatcher);\r\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\r\n    this.dispatcher.down(e, inEvent);\r\n  }\r\n}\r\n\r\n/**\r\n * Handler for `mousemove`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mousemove(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    const e = prepareEvent(inEvent, this.dispatcher);\r\n    this.dispatcher.move(e, inEvent);\r\n  }\r\n}\r\n\r\n/**\r\n * Handler for `mouseup`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mouseup(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    const p = this.pointerMap[POINTER_ID.toString()];\r\n\r\n    if (p && p.button === inEvent.button) {\r\n      const e = prepareEvent(inEvent, this.dispatcher);\r\n      this.dispatcher.up(e, inEvent);\r\n      this.cleanupMouse();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Handler for `mouseover`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mouseover(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    const e = prepareEvent(inEvent, this.dispatcher);\r\n    this.dispatcher.enterOver(e, inEvent);\r\n  }\r\n}\r\n\r\n/**\r\n * Handler for `mouseout`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mouseout(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    const e = prepareEvent(inEvent, this.dispatcher);\r\n    this.dispatcher.leaveOut(e, inEvent);\r\n  }\r\n}\r\n\r\n\r\nclass MouseSource extends EventSource {\r\n\r\n  /**\r\n   * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n   */\r\n  constructor(dispatcher) {\r\n    const mapping = {\r\n      'mousedown': mousedown,\r\n      'mousemove': mousemove,\r\n      'mouseup': mouseup,\r\n      'mouseover': mouseover,\r\n      'mouseout': mouseout\r\n    };\r\n    super(dispatcher, mapping);\r\n\r\n    /**\r\n     * @const\r\n     * @type {!Object<string, Event|Object>}\r\n     */\r\n    this.pointerMap = dispatcher.pointerMap;\r\n\r\n    /**\r\n     * @const\r\n     * @type {Array<import(\"../pixel.js\").Pixel>}\r\n     */\r\n    this.lastTouches = [];\r\n  }\r\n\r\n  /**\r\n   * Detect if a mouse event was simulated from a touch by\r\n   * checking if previously there was a touch event at the\r\n   * same position.\r\n   *\r\n   * FIXME - Known problem with the native Android browser on\r\n   * Samsung GT-I9100 (Android 4.1.2):\r\n   * In case the page is scrolled, this function does not work\r\n   * correctly when a canvas is used (WebGL or canvas renderer).\r\n   * Mouse listeners on canvas elements (for this browser), create\r\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\r\n   * when a div is used, there is only one event). For the 'bad' one,\r\n   * clientX/clientY and also pageX/pageY are wrong when the page\r\n   * is scrolled. Because of that, this function can not detect if\r\n   * the events were simulated from a touch event. As result, a\r\n   * pointer event at a wrong position is dispatched, which confuses\r\n   * the map interactions.\r\n   * It is unclear, how one can get the correct position for the event\r\n   * or detect that the positions are invalid.\r\n   *\r\n   * @private\r\n   * @param {MouseEvent} inEvent The in event.\r\n   * @return {boolean} True, if the event was generated by a touch.\r\n   */\r\n  isEventSimulatedFromTouch_(inEvent) {\r\n    const lts = this.lastTouches;\r\n    const x = inEvent.clientX;\r\n    const y = inEvent.clientY;\r\n    for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\r\n      // simulated mouse events will be swallowed near a primary touchend\r\n      const dx = Math.abs(x - t[0]);\r\n      const dy = Math.abs(y - t[1]);\r\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Dispatches a `pointercancel` event.\r\n   *\r\n   * @param {Event} inEvent The in event.\r\n   */\r\n  cancel(inEvent) {\r\n    const e = prepareEvent(inEvent, this.dispatcher);\r\n    this.dispatcher.cancel(e, inEvent);\r\n    this.cleanupMouse();\r\n  }\r\n\r\n  /**\r\n   * Remove the mouse from the list of active pointers.\r\n   */\r\n  cleanupMouse() {\r\n    delete this.pointerMap[POINTER_ID.toString()];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Creates a copy of the original event that will be used\r\n * for the fake pointer event.\r\n *\r\n * @param {Event} inEvent The in event.\r\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n * @return {Object} The copied event.\r\n */\r\nexport function prepareEvent(inEvent, dispatcher) {\r\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\r\n\r\n  // forward mouse preventDefault\r\n  const pd = e.preventDefault;\r\n  e.preventDefault = function() {\r\n    inEvent.preventDefault();\r\n    pd();\r\n  };\r\n\r\n  e.pointerId = POINTER_ID;\r\n  e.isPrimary = true;\r\n  e.pointerType = POINTER_TYPE;\r\n\r\n  return e;\r\n}\r\n\r\n\r\nexport default MouseSource;\r\n","/**\r\n * @module ol/pointer/MsSource\r\n */\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport EventSource from './EventSource.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nconst POINTER_TYPES = [\r\n  '',\r\n  'unavailable',\r\n  'touch',\r\n  'pen',\r\n  'mouse'\r\n];\r\n\r\n/**\r\n * Handler for `msPointerDown`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerDown(inEvent) {\r\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\r\n  const e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.down(e, inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerMove`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerMove(inEvent) {\r\n  const e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.move(e, inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerUp`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerUp(inEvent) {\r\n  const e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.up(e, inEvent);\r\n  this.cleanup(inEvent.pointerId);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerOut`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerOut(inEvent) {\r\n  const e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.leaveOut(e, inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerOver`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerOver(inEvent) {\r\n  const e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.enterOver(e, inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerCancel`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerCancel(inEvent) {\r\n  const e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.cancel(e, inEvent);\r\n  this.cleanup(inEvent.pointerId);\r\n}\r\n\r\n/**\r\n * Handler for `msLostPointerCapture`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msLostPointerCapture(inEvent) {\r\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\r\n  this.dispatcher.dispatchEvent(e);\r\n}\r\n\r\n/**\r\n * Handler for `msGotPointerCapture`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msGotPointerCapture(inEvent) {\r\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\r\n  this.dispatcher.dispatchEvent(e);\r\n}\r\n\r\nclass MsSource extends EventSource {\r\n\r\n  /**\r\n   * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n   */\r\n  constructor(dispatcher) {\r\n    const mapping = {\r\n      'MSPointerDown': msPointerDown,\r\n      'MSPointerMove': msPointerMove,\r\n      'MSPointerUp': msPointerUp,\r\n      'MSPointerOut': msPointerOut,\r\n      'MSPointerOver': msPointerOver,\r\n      'MSPointerCancel': msPointerCancel,\r\n      'MSGotPointerCapture': msGotPointerCapture,\r\n      'MSLostPointerCapture': msLostPointerCapture\r\n    };\r\n    super(dispatcher, mapping);\r\n\r\n    /**\r\n     * @const\r\n     * @type {!Object<string, MSPointerEvent|Object>}\r\n     */\r\n    this.pointerMap = dispatcher.pointerMap;\r\n  }\r\n\r\n  /**\r\n   * Creates a copy of the original event that will be used\r\n   * for the fake pointer event.\r\n   *\r\n   * @private\r\n   * @param {MSPointerEvent} inEvent The in event.\r\n   * @return {Object} The copied event.\r\n   */\r\n  prepareEvent_(inEvent) {\r\n    /** @type {MSPointerEvent|Object} */\r\n    let e = inEvent;\r\n    if (typeof inEvent.pointerType === 'number') {\r\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\r\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\r\n    }\r\n\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * Remove this pointer from the list of active pointers.\r\n   * @param {number} pointerId Pointer identifier.\r\n   */\r\n  cleanup(pointerId) {\r\n    delete this.pointerMap[pointerId.toString()];\r\n  }\r\n\r\n}\r\n\r\nexport default MsSource;\r\n","/**\r\n * @module ol/pointer/NativeSource\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport EventSource from './EventSource.js';\r\n\r\n/**\r\n * Handler for `pointerdown`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerDown(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointermove`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerMove(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointerup`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerUp(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointerout`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerOut(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointerover`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerOver(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointercancel`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerCancel(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `lostpointercapture`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction lostPointerCapture(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `gotpointercapture`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction gotPointerCapture(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\nclass NativeSource extends EventSource {\r\n\r\n  /**\r\n   * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n   */\r\n  constructor(dispatcher) {\r\n    const mapping = {\r\n      'pointerdown': pointerDown,\r\n      'pointermove': pointerMove,\r\n      'pointerup': pointerUp,\r\n      'pointerout': pointerOut,\r\n      'pointerover': pointerOver,\r\n      'pointercancel': pointerCancel,\r\n      'gotpointercapture': gotPointerCapture,\r\n      'lostpointercapture': lostPointerCapture\r\n    };\r\n    super(dispatcher, mapping);\r\n  }\r\n\r\n}\r\n\r\nexport default NativeSource;\r\n","/**\r\n * @module ol/pointer/PointerEvent\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport _Event from '../events/Event.js';\r\n\r\n\r\n/**\r\n * Is the `buttons` property supported?\r\n * @type {boolean}\r\n */\r\nlet HAS_BUTTONS = false;\r\n\r\n\r\nclass PointerEvent extends _Event {\r\n\r\n  /**\r\n   * A class for pointer events.\r\n   *\r\n   * This class is used as an abstraction for mouse events,\r\n   * touch events and even native pointer events.\r\n   *\r\n   * @param {string} type The type of the event to create.\r\n   * @param {Event} originalEvent The event.\r\n   * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\r\n   *    initial event properties.\r\n   */\r\n  constructor(type, originalEvent, opt_eventDict) {\r\n    super(type);\r\n\r\n    /**\r\n     * @const\r\n     * @type {Event}\r\n     */\r\n    this.originalEvent = originalEvent;\r\n\r\n    const eventDict = opt_eventDict ? opt_eventDict : {};\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.buttons = getButtons(eventDict);\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.pressure = getPressure(eventDict, this.buttons);\r\n\r\n    // MouseEvent related properties\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\r\n\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\r\n\r\n    /**\r\n     * @type {Node}\r\n     */\r\n    this.relatedTarget = 'relatedTarget' in eventDict ?\r\n      eventDict['relatedTarget'] : null;\r\n\r\n    // PointerEvent related properties\r\n\r\n    /**\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\r\n\r\n    // keep the semantics of preventDefault\r\n    if (originalEvent.preventDefault) {\r\n      this.preventDefault = function() {\r\n        originalEvent.preventDefault();\r\n      };\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @param {Object<string, ?>} eventDict The event dictionary.\r\n * @return {number} Button indicator.\r\n */\r\nfunction getButtons(eventDict) {\r\n  // According to the w3c spec,\r\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\r\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\r\n  // left mouse button depressed.\r\n  //\r\n  // As of now, the only way to distinguish between the two states of\r\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\r\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\r\n  // no mouse button is held.\r\n  //\r\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\r\n  // but initMouseEvent does not expose an argument with which to set\r\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\r\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\r\n  // of app developers.\r\n  //\r\n  // The only way to propagate the correct state of MouseEvent.which and\r\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\r\n  // is to call initMouseEvent with a buttonArg value of -1.\r\n  //\r\n  // This is fixed with DOM Level 4's use of buttons\r\n  let buttons;\r\n  if (eventDict.buttons || HAS_BUTTONS) {\r\n    buttons = eventDict.buttons;\r\n  } else {\r\n    switch (eventDict.which) {\r\n      case 1: buttons = 1; break;\r\n      case 2: buttons = 4; break;\r\n      case 3: buttons = 2; break;\r\n      default: buttons = 0;\r\n    }\r\n  }\r\n  return buttons;\r\n}\r\n\r\n\r\n/**\r\n * @param {Object<string, ?>} eventDict The event dictionary.\r\n * @param {number} buttons Button indicator.\r\n * @return {number} The pressure.\r\n */\r\nfunction getPressure(eventDict, buttons) {\r\n  // Spec requires that pointers without pressure specified use 0.5 for down\r\n  // state and 0 for up state.\r\n  let pressure = 0;\r\n  if (eventDict.pressure) {\r\n    pressure = eventDict.pressure;\r\n  } else {\r\n    pressure = buttons ? 0.5 : 0;\r\n  }\r\n  return pressure;\r\n}\r\n\r\n\r\n/**\r\n * Checks if the `buttons` property is supported.\r\n */\r\n(function() {\r\n  try {\r\n    const ev = new MouseEvent('click', {buttons: 1});\r\n    HAS_BUTTONS = ev.buttons === 1;\r\n  } catch (e) {\r\n    // pass\r\n  }\r\n})();\r\n\r\nexport default PointerEvent;\r\n","/**\r\n * @module ol/array\r\n */\r\n\r\n\r\n/**\r\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\r\n * https://github.com/darkskyapp/binary-search\r\n *\r\n * @param {Array<*>} haystack Items to search through.\r\n * @param {*} needle The item to look for.\r\n * @param {Function=} opt_comparator Comparator function.\r\n * @return {number} The index of the item if found, -1 if not.\r\n */\r\nexport function binarySearch(haystack, needle, opt_comparator) {\r\n  let mid, cmp;\r\n  const comparator = opt_comparator || numberSafeCompareFunction;\r\n  let low = 0;\r\n  let high = haystack.length;\r\n  let found = false;\r\n\r\n  while (low < high) {\r\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\r\n     * to double (which gives the wrong results). */\r\n    mid = low + (high - low >> 1);\r\n    cmp = +comparator(haystack[mid], needle);\r\n\r\n    if (cmp < 0.0) { /* Too low. */\r\n      low = mid + 1;\r\n\r\n    } else { /* Key found or too high */\r\n      high = mid;\r\n      found = !cmp;\r\n    }\r\n  }\r\n\r\n  /* Key not found. */\r\n  return found ? low : ~low;\r\n}\r\n\r\n\r\n/**\r\n * Compare function for array sort that is safe for numbers.\r\n * @param {*} a The first object to be compared.\r\n * @param {*} b The second object to be compared.\r\n * @return {number} A negative number, zero, or a positive number as the first\r\n *     argument is less than, equal to, or greater than the second.\r\n */\r\nexport function numberSafeCompareFunction(a, b) {\r\n  return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n\r\n\r\n/**\r\n * Whether the array contains the given object.\r\n * @param {Array<*>} arr The array to test for the presence of the element.\r\n * @param {*} obj The object for which to test.\r\n * @return {boolean} The object is in the array.\r\n */\r\nexport function includes(arr, obj) {\r\n  return arr.indexOf(obj) >= 0;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} arr Array.\r\n * @param {number} target Target.\r\n * @param {number} direction 0 means return the nearest, > 0\r\n *    means return the largest nearest, < 0 means return the\r\n *    smallest nearest.\r\n * @return {number} Index.\r\n */\r\nexport function linearFindNearest(arr, target, direction) {\r\n  const n = arr.length;\r\n  if (arr[0] <= target) {\r\n    return 0;\r\n  } else if (target <= arr[n - 1]) {\r\n    return n - 1;\r\n  } else {\r\n    let i;\r\n    if (direction > 0) {\r\n      for (i = 1; i < n; ++i) {\r\n        if (arr[i] < target) {\r\n          return i - 1;\r\n        }\r\n      }\r\n    } else if (direction < 0) {\r\n      for (i = 1; i < n; ++i) {\r\n        if (arr[i] <= target) {\r\n          return i;\r\n        }\r\n      }\r\n    } else {\r\n      for (i = 1; i < n; ++i) {\r\n        if (arr[i] == target) {\r\n          return i;\r\n        } else if (arr[i] < target) {\r\n          if (arr[i - 1] - target < target - arr[i]) {\r\n            return i - 1;\r\n          } else {\r\n            return i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return n - 1;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<*>} arr Array.\r\n * @param {number} begin Begin index.\r\n * @param {number} end End index.\r\n */\r\nexport function reverseSubArray(arr, begin, end) {\r\n  while (begin < end) {\r\n    const tmp = arr[begin];\r\n    arr[begin] = arr[end];\r\n    arr[end] = tmp;\r\n    ++begin;\r\n    --end;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<VALUE>} arr The array to modify.\r\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\r\n * @template VALUE\r\n */\r\nexport function extend(arr, data) {\r\n  const extension = Array.isArray(data) ? data : [data];\r\n  const length = extension.length;\r\n  for (let i = 0; i < length; i++) {\r\n    arr[arr.length] = extension[i];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<VALUE>} arr The array to modify.\r\n * @param {VALUE} obj The element to remove.\r\n * @template VALUE\r\n * @return {boolean} If the element was removed.\r\n */\r\nexport function remove(arr, obj) {\r\n  const i = arr.indexOf(obj);\r\n  const found = i > -1;\r\n  if (found) {\r\n    arr.splice(i, 1);\r\n  }\r\n  return found;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<VALUE>} arr The array to search in.\r\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\r\n * @template VALUE\r\n * @return {VALUE|null} The element found or null.\r\n */\r\nexport function find(arr, func) {\r\n  const length = arr.length >>> 0;\r\n  let value;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    value = arr[i];\r\n    if (func(value, i, arr)) {\r\n      return value;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\r\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\r\n * @return {boolean} Whether the two arrays are equal.\r\n */\r\nexport function equals(arr1, arr2) {\r\n  const len1 = arr1.length;\r\n  if (len1 !== arr2.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < len1; i++) {\r\n    if (arr1[i] !== arr2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * Sort the passed array such that the relative order of equal elements is preverved.\r\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\r\n * @param {Array<*>} arr The array to sort (modifies original).\r\n * @param {!function(*, *): number} compareFnc Comparison function.\r\n * @api\r\n */\r\nexport function stableSort(arr, compareFnc) {\r\n  const length = arr.length;\r\n  const tmp = Array(arr.length);\r\n  let i;\r\n  for (i = 0; i < length; i++) {\r\n    tmp[i] = {index: i, value: arr[i]};\r\n  }\r\n  tmp.sort(function(a, b) {\r\n    return compareFnc(a.value, b.value) || a.index - b.index;\r\n  });\r\n  for (i = 0; i < arr.length; i++) {\r\n    arr[i] = tmp[i].value;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<*>} arr The array to search in.\r\n * @param {Function} func Comparison function.\r\n * @return {number} Return index.\r\n */\r\nexport function findIndex(arr, func) {\r\n  let index;\r\n  const found = !arr.every(function(el, idx) {\r\n    index = idx;\r\n    return !func(el, idx, arr);\r\n  });\r\n  return found ? index : -1;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<*>} arr The array to test.\r\n * @param {Function=} opt_func Comparison function.\r\n * @param {boolean=} opt_strict Strictly sorted (default false).\r\n * @return {boolean} Return index.\r\n */\r\nexport function isSorted(arr, opt_func, opt_strict) {\r\n  const compare = opt_func || numberSafeCompareFunction;\r\n  return arr.every(function(currentVal, index) {\r\n    if (index === 0) {\r\n      return true;\r\n    }\r\n    const res = compare(arr[index - 1], currentVal);\r\n    return !(res > 0 || opt_strict && res === 0);\r\n  });\r\n}\r\n","/**\r\n * @module ol/pointer/TouchSource\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport {remove} from '../array.js';\r\nimport EventSource from './EventSource.js';\r\nimport {POINTER_ID} from './MouseSource.js';\r\n\r\n\r\n/**\r\n * @type {number}\r\n */\r\nconst CLICK_COUNT_TIMEOUT = 200;\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst POINTER_TYPE = 'touch';\r\n\r\n/**\r\n * Handler for `touchstart`, triggers `pointerover`,\r\n * `pointerenter` and `pointerdown` events.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The in event.\r\n */\r\nfunction touchstart(inEvent) {\r\n  this.vacuumTouches_(inEvent);\r\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\r\n  this.dedupSynthMouse_(inEvent);\r\n  this.clickCount_++;\r\n  this.processTouches_(inEvent, this.overDown_);\r\n}\r\n\r\n/**\r\n * Handler for `touchmove`.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The in event.\r\n */\r\nfunction touchmove(inEvent) {\r\n  this.processTouches_(inEvent, this.moveOverOut_);\r\n}\r\n\r\n/**\r\n * Handler for `touchend`, triggers `pointerup`,\r\n * `pointerout` and `pointerleave` events.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The event.\r\n */\r\nfunction touchend(inEvent) {\r\n  this.dedupSynthMouse_(inEvent);\r\n  this.processTouches_(inEvent, this.upOut_);\r\n}\r\n\r\n/**\r\n * Handler for `touchcancel`, triggers `pointercancel`,\r\n * `pointerout` and `pointerleave` events.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The in event.\r\n */\r\nfunction touchcancel(inEvent) {\r\n  this.processTouches_(inEvent, this.cancelOut_);\r\n}\r\n\r\n\r\nclass TouchSource extends EventSource {\r\n\r\n  /**\r\n   * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\r\n   * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\r\n   */\r\n  constructor(dispatcher, mouseSource) {\r\n    const mapping = {\r\n      'touchstart': touchstart,\r\n      'touchmove': touchmove,\r\n      'touchend': touchend,\r\n      'touchcancel': touchcancel\r\n    };\r\n    super(dispatcher, mapping);\r\n\r\n    /**\r\n     * @const\r\n     * @type {!Object<string, Event|Object>}\r\n     */\r\n    this.pointerMap = dispatcher.pointerMap;\r\n\r\n    /**\r\n     * @const\r\n     * @type {import(\"./MouseSource.js\").default}\r\n     */\r\n    this.mouseSource = mouseSource;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.firstTouchId_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.clickCount_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?}\r\n     */\r\n    this.resetId_;\r\n\r\n    /**\r\n     * Mouse event timeout: This should be long enough to\r\n     * ignore compat mouse events made by touch.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.dedupTimeout_ = 2500;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Touch} inTouch The in touch.\r\n   * @return {boolean} True, if this is the primary touch.\r\n   */\r\n  isPrimaryTouch_(inTouch) {\r\n    return this.firstTouchId_ === inTouch.identifier;\r\n  }\r\n\r\n  /**\r\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\r\n   * @param {Touch} inTouch The in touch.\r\n   * @private\r\n   */\r\n  setPrimaryTouch_(inTouch) {\r\n    const count = Object.keys(this.pointerMap).length;\r\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\r\n      this.firstTouchId_ = inTouch.identifier;\r\n      this.cancelResetClickCount_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} inPointer The in pointer object.\r\n   */\r\n  removePrimaryPointer_(inPointer) {\r\n    if (inPointer.isPrimary) {\r\n      this.firstTouchId_ = undefined;\r\n      this.resetClickCount_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  resetClickCount_() {\r\n    this.resetId_ = setTimeout(\r\n      this.resetClickCountHandler_.bind(this),\r\n      CLICK_COUNT_TIMEOUT);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  resetClickCountHandler_() {\r\n    this.clickCount_ = 0;\r\n    this.resetId_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  cancelResetClickCount_() {\r\n    if (this.resetId_ !== undefined) {\r\n      clearTimeout(this.resetId_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent Browser event\r\n   * @param {Touch} inTouch Touch event\r\n   * @return {PointerEvent} A pointer object.\r\n   */\r\n  touchToPointer_(browserEvent, inTouch) {\r\n    const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\r\n    // Spec specifies that pointerId 1 is reserved for Mouse.\r\n    // Touch identifiers can start at 0.\r\n    // Add 2 to the touch identifier for compatibility.\r\n    e.pointerId = inTouch.identifier + 2;\r\n    // TODO: check if this is necessary?\r\n    //e.target = findTarget(e);\r\n    e.bubbles = true;\r\n    e.cancelable = true;\r\n    e.detail = this.clickCount_;\r\n    e.button = 0;\r\n    e.buttons = 1;\r\n    e.width = inTouch.radiusX || 0;\r\n    e.height = inTouch.radiusY || 0;\r\n    e.pressure = inTouch.force || 0.5;\r\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\r\n    e.pointerType = POINTER_TYPE;\r\n\r\n    // make sure that the properties that are different for\r\n    // each `Touch` object are not copied from the BrowserEvent object\r\n    e.clientX = inTouch.clientX;\r\n    e.clientY = inTouch.clientY;\r\n    e.screenX = inTouch.screenX;\r\n    e.screenY = inTouch.screenY;\r\n\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} inEvent Touch event\r\n   * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\r\n   */\r\n  processTouches_(inEvent, inFunction) {\r\n    const touches = Array.prototype.slice.call(inEvent.changedTouches);\r\n    const count = touches.length;\r\n    function preventDefault() {\r\n      inEvent.preventDefault();\r\n    }\r\n    for (let i = 0; i < count; ++i) {\r\n      const pointer = this.touchToPointer_(inEvent, touches[i]);\r\n      // forward touch preventDefaults\r\n      pointer.preventDefault = preventDefault;\r\n      inFunction.call(this, inEvent, pointer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchList} touchList The touch list.\r\n   * @param {number} searchId Search identifier.\r\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\r\n   */\r\n  findTouch_(touchList, searchId) {\r\n    const l = touchList.length;\r\n    for (let i = 0; i < l; i++) {\r\n      const touch = touchList[i];\r\n      if (touch.identifier === searchId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * In some instances, a touchstart can happen without a touchend. This\r\n   * leaves the pointermap in a broken state.\r\n   * Therefore, on every touchstart, we remove the touches that did not fire a\r\n   * touchend event.\r\n   * To keep state globally consistent, we fire a pointercancel for\r\n   * this \"abandoned\" touch\r\n   *\r\n   * @private\r\n   * @param {TouchEvent} inEvent The in event.\r\n   */\r\n  vacuumTouches_(inEvent) {\r\n    const touchList = inEvent.touches;\r\n    // pointerMap.getCount() should be < touchList.length here,\r\n    // as the touchstart has not been processed yet.\r\n    const keys = Object.keys(this.pointerMap);\r\n    const count = keys.length;\r\n    if (count >= touchList.length) {\r\n      const d = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        const key = Number(keys[i]);\r\n        const value = this.pointerMap[key];\r\n        // Never remove pointerId == 1, which is mouse.\r\n        // Touch identifiers are 2 smaller than their pointerId, which is the\r\n        // index in pointermap.\r\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\r\n          d.push(value.out);\r\n        }\r\n      }\r\n      for (let i = 0; i < d.length; ++i) {\r\n        this.cancelOut_(inEvent, d[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent The event.\r\n   * @param {PointerEvent} inPointer The in pointer object.\r\n   */\r\n  overDown_(browserEvent, inPointer) {\r\n    this.pointerMap[inPointer.pointerId] = {\r\n      target: inPointer.target,\r\n      out: inPointer,\r\n      outTarget: inPointer.target\r\n    };\r\n    this.dispatcher.over(inPointer, browserEvent);\r\n    this.dispatcher.enter(inPointer, browserEvent);\r\n    this.dispatcher.down(inPointer, browserEvent);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent The event.\r\n   * @param {PointerEvent} inPointer The in pointer.\r\n   */\r\n  moveOverOut_(browserEvent, inPointer) {\r\n    const event = inPointer;\r\n    const pointer = this.pointerMap[event.pointerId];\r\n    // a finger drifted off the screen, ignore it\r\n    if (!pointer) {\r\n      return;\r\n    }\r\n    const outEvent = pointer.out;\r\n    const outTarget = pointer.outTarget;\r\n    this.dispatcher.move(event, browserEvent);\r\n    if (outEvent && outTarget !== event.target) {\r\n      outEvent.relatedTarget = event.target;\r\n      /** @type {Object} */ (event).relatedTarget = outTarget;\r\n      // recover from retargeting by shadow\r\n      outEvent.target = outTarget;\r\n      if (event.target) {\r\n        this.dispatcher.leaveOut(outEvent, browserEvent);\r\n        this.dispatcher.enterOver(event, browserEvent);\r\n      } else {\r\n        // clean up case when finger leaves the screen\r\n        /** @type {Object} */ (event).target = outTarget;\r\n        /** @type {Object} */ (event).relatedTarget = null;\r\n        this.cancelOut_(browserEvent, event);\r\n      }\r\n    }\r\n    pointer.out = event;\r\n    pointer.outTarget = event.target;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent An event.\r\n   * @param {PointerEvent} inPointer The inPointer object.\r\n   */\r\n  upOut_(browserEvent, inPointer) {\r\n    this.dispatcher.up(inPointer, browserEvent);\r\n    this.dispatcher.out(inPointer, browserEvent);\r\n    this.dispatcher.leave(inPointer, browserEvent);\r\n    this.cleanUpPointer_(inPointer);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent The event.\r\n   * @param {PointerEvent} inPointer The in pointer.\r\n   */\r\n  cancelOut_(browserEvent, inPointer) {\r\n    this.dispatcher.cancel(inPointer, browserEvent);\r\n    this.dispatcher.out(inPointer, browserEvent);\r\n    this.dispatcher.leave(inPointer, browserEvent);\r\n    this.cleanUpPointer_(inPointer);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} inPointer The inPointer object.\r\n   */\r\n  cleanUpPointer_(inPointer) {\r\n    delete this.pointerMap[inPointer.pointerId];\r\n    this.removePrimaryPointer_(inPointer);\r\n  }\r\n\r\n  /**\r\n   * Prevent synth mouse events from creating pointer events.\r\n   *\r\n   * @private\r\n   * @param {TouchEvent} inEvent The in event.\r\n   */\r\n  dedupSynthMouse_(inEvent) {\r\n    const lts = this.mouseSource.lastTouches;\r\n    const t = inEvent.changedTouches[0];\r\n    // only the primary finger will synth mouse events\r\n    if (this.isPrimaryTouch_(t)) {\r\n      // remember x/y of last touch\r\n      const lt = [t.clientX, t.clientY];\r\n      lts.push(lt);\r\n\r\n      setTimeout(function() {\r\n        // remove touch after timeout\r\n        remove(lts, lt);\r\n      }, this.dedupTimeout_);\r\n    }\r\n  }\r\n}\r\n\r\nexport default TouchSource;\r\n","/**\r\n * @module ol/pointer/PointerEventHandler\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport {listen, unlisten} from '../events.js';\r\nimport EventTarget from '../events/Target.js';\r\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\r\nimport PointerEventType from './EventType.js';\r\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\r\nimport MsSource from './MsSource.js';\r\nimport NativeSource from './NativeSource.js';\r\nimport PointerEvent from './PointerEvent.js';\r\nimport TouchSource from './TouchSource.js';\r\n\r\n\r\n/**\r\n * Properties to copy when cloning an event, with default values.\r\n * @type {Array<Array>}\r\n */\r\nconst CLONE_PROPS = [\r\n  // MouseEvent\r\n  ['bubbles', false],\r\n  ['cancelable', false],\r\n  ['view', null],\r\n  ['detail', null],\r\n  ['screenX', 0],\r\n  ['screenY', 0],\r\n  ['clientX', 0],\r\n  ['clientY', 0],\r\n  ['ctrlKey', false],\r\n  ['altKey', false],\r\n  ['shiftKey', false],\r\n  ['metaKey', false],\r\n  ['button', 0],\r\n  ['relatedTarget', null],\r\n  // DOM Level 3\r\n  ['buttons', 0],\r\n  // PointerEvent\r\n  ['pointerId', 0],\r\n  ['width', 0],\r\n  ['height', 0],\r\n  ['pressure', 0],\r\n  ['tiltX', 0],\r\n  ['tiltY', 0],\r\n  ['pointerType', ''],\r\n  ['hwTimestamp', 0],\r\n  ['isPrimary', false],\r\n  // event instance\r\n  ['type', ''],\r\n  ['target', null],\r\n  ['currentTarget', null],\r\n  ['which', 0]\r\n];\r\n\r\n\r\nclass PointerEventHandler extends EventTarget {\r\n\r\n  /**\r\n   * @param {Element|HTMLDocument} element Viewport element.\r\n   */\r\n  constructor(element) {\r\n    super();\r\n\r\n    /**\r\n     * @const\r\n     * @private\r\n     * @type {Element|HTMLDocument}\r\n     */\r\n    this.element_ = element;\r\n\r\n    /**\r\n     * @const\r\n     * @type {!Object<string, Event|Object>}\r\n     */\r\n    this.pointerMap = {};\r\n\r\n    /**\r\n     * @type {Object<string, function(Event): void>}\r\n     * @private\r\n     */\r\n    this.eventMap_ = {};\r\n\r\n    /**\r\n     * @type {Array<import(\"./EventSource.js\").default>}\r\n     * @private\r\n     */\r\n    this.eventSourceList_ = [];\r\n\r\n    this.registerSources();\r\n  }\r\n\r\n  /**\r\n   * Set up the event sources (mouse, touch and native pointers)\r\n   * that generate pointer events.\r\n   */\r\n  registerSources() {\r\n    if (POINTER) {\r\n      this.registerSource('native', new NativeSource(this));\r\n    } else if (MSPOINTER) {\r\n      this.registerSource('ms', new MsSource(this));\r\n    } else {\r\n      const mouseSource = new MouseSource(this);\r\n      this.registerSource('mouse', mouseSource);\r\n\r\n      if (TOUCH) {\r\n        this.registerSource('touch', new TouchSource(this, mouseSource));\r\n      }\r\n    }\r\n\r\n    // register events on the viewport element\r\n    this.register_();\r\n  }\r\n\r\n  /**\r\n   * Add a new event source that will generate pointer events.\r\n   *\r\n   * @param {string} name A name for the event source\r\n   * @param {import(\"./EventSource.js\").default} source The source event.\r\n   */\r\n  registerSource(name, source) {\r\n    const s = source;\r\n    const newEvents = s.getEvents();\r\n\r\n    if (newEvents) {\r\n      newEvents.forEach(function(e) {\r\n        const handler = s.getHandlerForEvent(e);\r\n\r\n        if (handler) {\r\n          this.eventMap_[e] = handler.bind(s);\r\n        }\r\n      }.bind(this));\r\n      this.eventSourceList_.push(s);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up the events for all registered event sources.\r\n   * @private\r\n   */\r\n  register_() {\r\n    const l = this.eventSourceList_.length;\r\n    for (let i = 0; i < l; i++) {\r\n      const eventSource = this.eventSourceList_[i];\r\n      this.addEvents_(eventSource.getEvents());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all registered events.\r\n   * @private\r\n   */\r\n  unregister_() {\r\n    const l = this.eventSourceList_.length;\r\n    for (let i = 0; i < l; i++) {\r\n      const eventSource = this.eventSourceList_[i];\r\n      this.removeEvents_(eventSource.getEvents());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calls the right handler for a new event.\r\n   * @private\r\n   * @param {Event} inEvent Browser event.\r\n   */\r\n  eventHandler_(inEvent) {\r\n    const type = inEvent.type;\r\n    const handler = this.eventMap_[type];\r\n    if (handler) {\r\n      handler(inEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup listeners for the given events.\r\n   * @private\r\n   * @param {Array<string>} events List of events.\r\n   */\r\n  addEvents_(events) {\r\n    events.forEach(function(eventName) {\r\n      listen(this.element_, eventName, this.eventHandler_, this);\r\n    }.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Unregister listeners for the given events.\r\n   * @private\r\n   * @param {Array<string>} events List of events.\r\n   */\r\n  removeEvents_(events) {\r\n    events.forEach(function(e) {\r\n      unlisten(this.element_, e, this.eventHandler_, this);\r\n    }.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Returns a snapshot of inEvent, with writable properties.\r\n   *\r\n   * @param {Event} event Browser event.\r\n   * @param {Event|Touch} inEvent An event that contains\r\n   *    properties to copy.\r\n   * @return {Object} An object containing shallow copies of\r\n   *    `inEvent`'s properties.\r\n   */\r\n  cloneEvent(event, inEvent) {\r\n    const eventCopy = {};\r\n    for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\r\n      const p = CLONE_PROPS[i][0];\r\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\r\n    }\r\n\r\n    return eventCopy;\r\n  }\r\n\r\n  // EVENTS\r\n\r\n\r\n  /**\r\n   * Triggers a 'pointerdown' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  down(data, event) {\r\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\r\n  }\r\n\r\n  /**\r\n   * Triggers a 'pointermove' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  move(data, event) {\r\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\r\n  }\r\n\r\n  /**\r\n   * Triggers a 'pointerup' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  up(data, event) {\r\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\r\n  }\r\n\r\n  /**\r\n   * Triggers a 'pointerenter' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  enter(data, event) {\r\n    data.bubbles = false;\r\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\r\n  }\r\n\r\n  /**\r\n   * Triggers a 'pointerleave' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  leave(data, event) {\r\n    data.bubbles = false;\r\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\r\n  }\r\n\r\n  /**\r\n   * Triggers a 'pointerover' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  over(data, event) {\r\n    data.bubbles = true;\r\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\r\n  }\r\n\r\n  /**\r\n   * Triggers a 'pointerout' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  out(data, event) {\r\n    data.bubbles = true;\r\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\r\n  }\r\n\r\n  /**\r\n   * Triggers a 'pointercancel' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  cancel(data, event) {\r\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\r\n  }\r\n\r\n  /**\r\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  leaveOut(data, event) {\r\n    this.out(data, event);\r\n    if (!this.contains_(data.target, data.relatedTarget)) {\r\n      this.leave(data, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  enterOver(data, event) {\r\n    this.over(data, event);\r\n    if (!this.contains_(data.target, data.relatedTarget)) {\r\n      this.enter(data, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Element} container The container element.\r\n   * @param {Element} contained The contained element.\r\n   * @return {boolean} Returns true if the container element\r\n   *   contains the other element.\r\n   */\r\n  contains_(container, contained) {\r\n    if (!container || !contained) {\r\n      return false;\r\n    }\r\n    return container.contains(contained);\r\n  }\r\n\r\n  // EVENT CREATION AND TRACKING\r\n  /**\r\n   * Creates a new Event of type `inType`, based on the information in\r\n   * `data`.\r\n   *\r\n   * @param {string} inType A string representing the type of event to create.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   * @return {PointerEvent} A PointerEvent of type `inType`.\r\n   */\r\n  makeEvent(inType, data, event) {\r\n    return new PointerEvent(inType, event, data);\r\n  }\r\n\r\n  /**\r\n   * Make and dispatch an event in one call.\r\n   * @param {string} inType A string representing the type of event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  fireEvent(inType, data, event) {\r\n    const e = this.makeEvent(inType, data, event);\r\n    this.dispatchEvent(e);\r\n  }\r\n\r\n  /**\r\n   * Creates a pointer event from a native pointer event\r\n   * and dispatches this event.\r\n   * @param {Event} event A platform event with a target.\r\n   */\r\n  fireNativeEvent(event) {\r\n    const e = this.makeEvent(event.type, event, event);\r\n    this.dispatchEvent(e);\r\n  }\r\n\r\n  /**\r\n   * Wrap a native mouse event into a pointer event.\r\n   * This proxy method is required for the legacy IE support.\r\n   * @param {string} eventType The pointer event type.\r\n   * @param {Event} event The event.\r\n   * @return {PointerEvent} The wrapped event.\r\n   */\r\n  wrapMouseEvent(eventType, event) {\r\n    const pointerEvent = this.makeEvent(\r\n      eventType, prepareMouseEvent(event, this), event);\r\n    return pointerEvent;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.unregister_();\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\nexport default PointerEventHandler;\r\n","/**\r\n * @module ol/MapBrowserEventHandler\r\n */\r\nimport {DEVICE_PIXEL_RATIO} from './has.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport EventTarget from './events/Target.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\r\n\r\nclass MapBrowserEventHandler extends EventTarget {\r\n\r\n  /**\r\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\r\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\r\n   */\r\n  constructor(map, moveTolerance) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * This is the element that we will listen to the real events on.\r\n     * @type {import(\"./PluggableMap.js\").default}\r\n     * @private\r\n     */\r\n    this.map_ = map;\r\n\r\n    /**\r\n     * @type {any}\r\n     * @private\r\n     */\r\n    this.clickTimeoutId_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_ = false;\r\n\r\n    /**\r\n     * @type {!Array<import(\"./events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.moveTolerance_ = moveTolerance ?\r\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\r\n\r\n    /**\r\n     * The most recent \"down\" type event (or null if none have occurred).\r\n     * Set on pointerdown.\r\n     * @type {import(\"./pointer/PointerEvent.js\").default}\r\n     * @private\r\n     */\r\n    this.down_ = null;\r\n\r\n    const element = this.map_.getViewport();\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.activePointers_ = 0;\r\n\r\n    /**\r\n     * @type {!Object<number, boolean>}\r\n     * @private\r\n     */\r\n    this.trackedTouches_ = {};\r\n\r\n    /**\r\n     * Event handler which generates pointer events for\r\n     * the viewport element.\r\n     *\r\n     * @type {PointerEventHandler}\r\n     * @private\r\n     */\r\n    this.pointerEventHandler_ = new PointerEventHandler(element);\r\n\r\n    /**\r\n     * Event handler which generates pointer events for\r\n     * the document (used when dragging).\r\n     *\r\n     * @type {PointerEventHandler}\r\n     * @private\r\n     */\r\n    this.documentPointerEventHandler_ = null;\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\r\n      PointerEventType.POINTERDOWN,\r\n      this.handlePointerDown_, this);\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\r\n      PointerEventType.POINTERMOVE,\r\n      this.relayEvent_, this);\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  emulateClick_(pointerEvent) {\r\n    let newEvent = new MapBrowserPointerEvent(\r\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\r\n    this.dispatchEvent(newEvent);\r\n    if (this.clickTimeoutId_ !== undefined) {\r\n      // double-click\r\n      clearTimeout(this.clickTimeoutId_);\r\n      this.clickTimeoutId_ = undefined;\r\n      newEvent = new MapBrowserPointerEvent(\r\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\r\n      this.dispatchEvent(newEvent);\r\n    } else {\r\n      // click\r\n      this.clickTimeoutId_ = setTimeout(function() {\r\n        this.clickTimeoutId_ = undefined;\r\n        const newEvent = new MapBrowserPointerEvent(\r\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\r\n        this.dispatchEvent(newEvent);\r\n      }.bind(this), 250);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Keeps track on how many pointers are currently active.\r\n   *\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  updateActivePointers_(pointerEvent) {\r\n    const event = pointerEvent;\r\n\r\n    if (event.type == MapBrowserEventType.POINTERUP ||\r\n        event.type == MapBrowserEventType.POINTERCANCEL) {\r\n      delete this.trackedTouches_[event.pointerId];\r\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\r\n      this.trackedTouches_[event.pointerId] = true;\r\n    }\r\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerUp_(pointerEvent) {\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserPointerEvent(\r\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\r\n    this.dispatchEvent(newEvent);\r\n\r\n    // We emulate click events on left mouse button click, touch contact, and pen\r\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\r\n    // to 0).\r\n    // See http://www.w3.org/TR/pointerevents/#button-states\r\n    // We only fire click, singleclick, and doubleclick if nobody has called\r\n    // event.stopPropagation() or event.preventDefault().\r\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\r\n      this.emulateClick_(this.down_);\r\n    }\r\n\r\n    if (this.activePointers_ === 0) {\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n      this.dragging_ = false;\r\n      this.down_ = null;\r\n      this.documentPointerEventHandler_.dispose();\r\n      this.documentPointerEventHandler_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} If the left mouse button was pressed.\r\n   * @private\r\n   */\r\n  isMouseActionButton_(pointerEvent) {\r\n    return pointerEvent.button === 0;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerDown_(pointerEvent) {\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserPointerEvent(\r\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\r\n    this.dispatchEvent(newEvent);\r\n\r\n    this.down_ = pointerEvent;\r\n\r\n    if (this.dragListenerKeys_.length === 0) {\r\n      /* Set up a pointer event handler on the `document`,\r\n       * which is required when the pointer is moved outside\r\n       * the viewport when dragging.\r\n       */\r\n      this.documentPointerEventHandler_ =\r\n          new PointerEventHandler(document);\r\n\r\n      this.dragListenerKeys_.push(\r\n        listen(this.documentPointerEventHandler_,\r\n          MapBrowserEventType.POINTERMOVE,\r\n          this.handlePointerMove_, this),\r\n        listen(this.documentPointerEventHandler_,\r\n          MapBrowserEventType.POINTERUP,\r\n          this.handlePointerUp_, this),\r\n        /* Note that the listener for `pointercancel is set up on\r\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\r\n         * the `pointerup` and `pointermove` listeners.\r\n         *\r\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\r\n         * issues `pointercancel` events, when there was no `touchend` for a\r\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\r\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\r\n         * But `documentPointerEventHandler_` doesn't know about the first\r\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\r\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\r\n         * only registered there.\r\n         */\r\n        listen(this.pointerEventHandler_,\r\n          MapBrowserEventType.POINTERCANCEL,\r\n          this.handlePointerUp_, this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerMove_(pointerEvent) {\r\n    // Between pointerdown and pointerup, pointermove events are triggered.\r\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\r\n    // moved a significant distance.\r\n    if (this.isMoving_(pointerEvent)) {\r\n      this.dragging_ = true;\r\n      const newEvent = new MapBrowserPointerEvent(\r\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\r\n        this.dragging_);\r\n      this.dispatchEvent(newEvent);\r\n    }\r\n\r\n    // Some native android browser triggers mousemove events during small period\r\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\r\n    // https://code.google.com/p/android/issues/detail?id=19827\r\n    // ex: Galaxy Tab P3110 + Android 4.1.1\r\n    pointerEvent.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Wrap and relay a pointer event.  Note that this requires that the type\r\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  relayEvent_(pointerEvent) {\r\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\r\n    this.dispatchEvent(new MapBrowserPointerEvent(\r\n      pointerEvent.type, this.map_, pointerEvent, dragging));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} Is moving.\r\n   * @private\r\n   */\r\n  isMoving_(pointerEvent) {\r\n    return this.dragging_ ||\r\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\r\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    if (this.relayedListenerKey_) {\r\n      unlistenByKey(this.relayedListenerKey_);\r\n      this.relayedListenerKey_ = null;\r\n    }\r\n    if (this.pointerdownListenerKey_) {\r\n      unlistenByKey(this.pointerdownListenerKey_);\r\n      this.pointerdownListenerKey_ = null;\r\n    }\r\n\r\n    this.dragListenerKeys_.forEach(unlistenByKey);\r\n    this.dragListenerKeys_.length = 0;\r\n\r\n    if (this.documentPointerEventHandler_) {\r\n      this.documentPointerEventHandler_.dispose();\r\n      this.documentPointerEventHandler_ = null;\r\n    }\r\n    if (this.pointerEventHandler_) {\r\n      this.pointerEventHandler_.dispose();\r\n      this.pointerEventHandler_ = null;\r\n    }\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\n\r\nexport default MapBrowserEventHandler;\r\n","/**\r\n * @module ol/MapEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n\r\n  /**\r\n   * Triggered after a map frame is rendered.\r\n   * @event module:ol/MapEvent~MapEvent#postrender\r\n   * @api\r\n   */\r\n  POSTRENDER: 'postrender',\r\n\r\n  /**\r\n   * Triggered when the map starts moving.\r\n   * @event module:ol/MapEvent~MapEvent#movestart\r\n   * @api\r\n   */\r\n  MOVESTART: 'movestart',\r\n\r\n  /**\r\n   * Triggered after the map is moved.\r\n   * @event module:ol/MapEvent~MapEvent#moveend\r\n   * @api\r\n   */\r\n  MOVEEND: 'moveend'\r\n\r\n};\r\n","/**\r\n * @module ol/MapProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  LAYERGROUP: 'layergroup',\r\n  SIZE: 'size',\r\n  TARGET: 'target',\r\n  VIEW: 'view'\r\n};\r\n","/**\r\n * @module ol/render/EventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n\r\n  /**\r\n   * Triggered before a layer is rendered.\r\n   * @event module:ol/render/Event~RenderEvent#prerender\r\n   * @api\r\n   */\r\n  PRERENDER: 'prerender',\r\n\r\n  /**\r\n   * Triggered after a layer is rendered.\r\n   * @event module:ol/render/Event~RenderEvent#postrender\r\n   * @api\r\n   */\r\n  POSTRENDER: 'postrender',\r\n\r\n  /**\r\n   * Triggered before layers are rendered.\r\n   * @event module:ol/render/Event~RenderEvent#precompose\r\n   * @api\r\n   */\r\n  PRECOMPOSE: 'precompose',\r\n\r\n  /**\r\n   * Triggered after all layers are rendered.\r\n   * @event module:ol/render/Event~RenderEvent#postcompose\r\n   * @api\r\n   */\r\n  POSTCOMPOSE: 'postcompose',\r\n\r\n  /**\r\n   * Triggered when rendering is complete, i.e. all sources and tiles have\r\n   * finished loading for the current viewport, and all tiles are faded in.\r\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\r\n   * @api\r\n   */\r\n  RENDERCOMPLETE: 'rendercomplete'\r\n\r\n};\r\n","/**\r\n * @module ol/TileState\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n  IDLE: 0,\r\n  LOADING: 1,\r\n  LOADED: 2,\r\n  /**\r\n   * Indicates that tile loading failed\r\n   * @type {number}\r\n   */\r\n  ERROR: 3,\r\n  EMPTY: 4,\r\n  ABORT: 5\r\n};\r\n","/**\r\n * @module ol/asserts\r\n */\r\nimport AssertionError from './AssertionError.js';\r\n\r\n/**\r\n * @param {*} assertion Assertion we expected to be truthy.\r\n * @param {number} errorCode Error code.\r\n */\r\nexport function assert(assertion, errorCode) {\r\n  if (!assertion) {\r\n    throw new AssertionError(errorCode);\r\n  }\r\n}\r\n","/**\r\n * @module ol/structs/PriorityQueue\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport {clear} from '../obj.js';\r\n\r\n\r\n/**\r\n * @type {number}\r\n */\r\nexport const DROP = Infinity;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Priority queue.\r\n *\r\n * The implementation is inspired from the Closure Library's Heap class and\r\n * Python's heapq module.\r\n *\r\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\r\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\r\n *\r\n * @template T\r\n */\r\nclass PriorityQueue {\r\n\r\n  /**\r\n   * @param {function(T): number} priorityFunction Priority function.\r\n   * @param {function(T): string} keyFunction Key function.\r\n   */\r\n  constructor(priorityFunction, keyFunction) {\r\n\r\n    /**\r\n     * @type {function(T): number}\r\n     * @private\r\n     */\r\n    this.priorityFunction_ = priorityFunction;\r\n\r\n    /**\r\n     * @type {function(T): string}\r\n     * @private\r\n     */\r\n    this.keyFunction_ = keyFunction;\r\n\r\n    /**\r\n     * @type {Array<T>}\r\n     * @private\r\n     */\r\n    this.elements_ = [];\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.priorities_ = [];\r\n\r\n    /**\r\n     * @type {!Object<string, boolean>}\r\n     * @private\r\n     */\r\n    this.queuedElements_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  clear() {\r\n    this.elements_.length = 0;\r\n    this.priorities_.length = 0;\r\n    clear(this.queuedElements_);\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove and return the highest-priority element. O(log N).\r\n   * @return {T} Element.\r\n   */\r\n  dequeue() {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const element = elements[0];\r\n    if (elements.length == 1) {\r\n      elements.length = 0;\r\n      priorities.length = 0;\r\n    } else {\r\n      elements[0] = elements.pop();\r\n      priorities[0] = priorities.pop();\r\n      this.siftUp_(0);\r\n    }\r\n    const elementKey = this.keyFunction_(element);\r\n    delete this.queuedElements_[elementKey];\r\n    return element;\r\n  }\r\n\r\n\r\n  /**\r\n   * Enqueue an element. O(log N).\r\n   * @param {T} element Element.\r\n   * @return {boolean} The element was added to the queue.\r\n   */\r\n  enqueue(element) {\r\n    assert(!(this.keyFunction_(element) in this.queuedElements_),\r\n      31); // Tried to enqueue an `element` that was already added to the queue\r\n    const priority = this.priorityFunction_(element);\r\n    if (priority != DROP) {\r\n      this.elements_.push(element);\r\n      this.priorities_.push(priority);\r\n      this.queuedElements_[this.keyFunction_(element)] = true;\r\n      this.siftDown_(0, this.elements_.length - 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {number} Count.\r\n   */\r\n  getCount() {\r\n    return this.elements_.length;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the index of the left child of the node at the given index.\r\n   * @param {number} index The index of the node to get the left child for.\r\n   * @return {number} The index of the left child.\r\n   * @private\r\n   */\r\n  getLeftChildIndex_(index) {\r\n    return index * 2 + 1;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the index of the right child of the node at the given index.\r\n   * @param {number} index The index of the node to get the right child for.\r\n   * @return {number} The index of the right child.\r\n   * @private\r\n   */\r\n  getRightChildIndex_(index) {\r\n    return index * 2 + 2;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the index of the parent of the node at the given index.\r\n   * @param {number} index The index of the node to get the parent for.\r\n   * @return {number} The index of the parent.\r\n   * @private\r\n   */\r\n  getParentIndex_(index) {\r\n    return (index - 1) >> 1;\r\n  }\r\n\r\n\r\n  /**\r\n   * Make this a heap. O(N).\r\n   * @private\r\n   */\r\n  heapify_() {\r\n    let i;\r\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\r\n      this.siftUp_(i);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return this.elements_.length === 0;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @return {boolean} Is key queued.\r\n   */\r\n  isKeyQueued(key) {\r\n    return key in this.queuedElements_;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {T} element Element.\r\n   * @return {boolean} Is queued.\r\n   */\r\n  isQueued(element) {\r\n    return this.isKeyQueued(this.keyFunction_(element));\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {number} index The index of the node to move down.\r\n   * @private\r\n   */\r\n  siftUp_(index) {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const count = elements.length;\r\n    const element = elements[index];\r\n    const priority = priorities[index];\r\n    const startIndex = index;\r\n\r\n    while (index < (count >> 1)) {\r\n      const lIndex = this.getLeftChildIndex_(index);\r\n      const rIndex = this.getRightChildIndex_(index);\r\n\r\n      const smallerChildIndex = rIndex < count &&\r\n          priorities[rIndex] < priorities[lIndex] ?\r\n        rIndex : lIndex;\r\n\r\n      elements[index] = elements[smallerChildIndex];\r\n      priorities[index] = priorities[smallerChildIndex];\r\n      index = smallerChildIndex;\r\n    }\r\n\r\n    elements[index] = element;\r\n    priorities[index] = priority;\r\n    this.siftDown_(startIndex, index);\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {number} startIndex The index of the root.\r\n   * @param {number} index The index of the node to move up.\r\n   * @private\r\n   */\r\n  siftDown_(startIndex, index) {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const element = elements[index];\r\n    const priority = priorities[index];\r\n\r\n    while (index > startIndex) {\r\n      const parentIndex = this.getParentIndex_(index);\r\n      if (priorities[parentIndex] > priority) {\r\n        elements[index] = elements[parentIndex];\r\n        priorities[index] = priorities[parentIndex];\r\n        index = parentIndex;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    elements[index] = element;\r\n    priorities[index] = priority;\r\n  }\r\n\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  reprioritize() {\r\n    const priorityFunction = this.priorityFunction_;\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    let index = 0;\r\n    const n = elements.length;\r\n    let element, i, priority;\r\n    for (i = 0; i < n; ++i) {\r\n      element = elements[i];\r\n      priority = priorityFunction(element);\r\n      if (priority == DROP) {\r\n        delete this.queuedElements_[this.keyFunction_(element)];\r\n      } else {\r\n        priorities[index] = priority;\r\n        elements[index++] = element;\r\n      }\r\n    }\r\n    elements.length = index;\r\n    priorities.length = index;\r\n    this.heapify_();\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default PriorityQueue;\r\n","/**\r\n * @module ol/TileQueue\r\n */\r\nimport TileState from './TileState.js';\r\nimport {listen, unlisten} from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport PriorityQueue from './structs/PriorityQueue.js';\r\n\r\n\r\n/**\r\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\r\n */\r\n\r\n\r\nclass TileQueue extends PriorityQueue {\r\n\r\n  /**\r\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\r\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\r\n   */\r\n  constructor(tilePriorityFunction, tileChangeCallback) {\r\n\r\n    super(\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {number} Priority.\r\n       */\r\n      function(element) {\r\n        return tilePriorityFunction.apply(null, element);\r\n      },\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {string} Key.\r\n       */\r\n      function(element) {\r\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\r\n      });\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(): ?}\r\n     */\r\n    this.tileChangeCallback_ = tileChangeCallback;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tilesLoading_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string,boolean>}\r\n     */\r\n    this.tilesLoadingKeys_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  enqueue(element) {\r\n    const added = super.enqueue(element);\r\n    if (added) {\r\n      const tile = element[0];\r\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\r\n    }\r\n    return added;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Number of tiles loading.\r\n   */\r\n  getTilesLoading() {\r\n    return this.tilesLoading_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./events/Event.js\").default} event Event.\r\n   * @protected\r\n   */\r\n  handleTileChange(event) {\r\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\r\n    const state = tile.getState();\r\n    if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\r\n        state === TileState.EMPTY || state === TileState.ABORT) {\r\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\r\n      const tileKey = tile.getKey();\r\n      if (tileKey in this.tilesLoadingKeys_) {\r\n        delete this.tilesLoadingKeys_[tileKey];\r\n        --this.tilesLoading_;\r\n      }\r\n      this.tileChangeCallback_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\r\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\r\n   */\r\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\r\n    let newLoads = 0;\r\n    let abortedTiles = false;\r\n    let state, tile, tileKey;\r\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\r\n           this.getCount() > 0) {\r\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\r\n      tileKey = tile.getKey();\r\n      state = tile.getState();\r\n      if (state === TileState.ABORT) {\r\n        abortedTiles = true;\r\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\r\n        this.tilesLoadingKeys_[tileKey] = true;\r\n        ++this.tilesLoading_;\r\n        ++newLoads;\r\n        tile.load();\r\n      }\r\n    }\r\n    if (newLoads === 0 && abortedTiles) {\r\n      // Do not stop the render loop when all wanted tiles were aborted due to\r\n      // a small, saturated tile cache.\r\n      this.tileChangeCallback_();\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default TileQueue;\r\n","/**\r\n * @module ol/tilegrid/common\r\n */\r\n\r\n/**\r\n * Default maximum zoom for default tile grids.\r\n * @type {number}\r\n */\r\nexport const DEFAULT_MAX_ZOOM = 42;\r\n\r\n/**\r\n * Default tile size.\r\n * @type {number}\r\n */\r\nexport const DEFAULT_TILE_SIZE = 256;\r\n","/**\r\n * @module ol/math\r\n */\r\n\r\n/**\r\n * Takes a number and clamps it to within the provided bounds.\r\n * @param {number} value The input number.\r\n * @param {number} min The minimum value to return.\r\n * @param {number} max The maximum value to return.\r\n * @return {number} The input number if it is within bounds, or the nearest\r\n *     number within the bounds.\r\n */\r\nexport function clamp(value, min, max) {\r\n  return Math.min(Math.max(value, min), max);\r\n}\r\n\r\n\r\n/**\r\n * Return the hyperbolic cosine of a given number. The method will use the\r\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\r\n * cosine will be calculated via the reference implementation of the Mozilla\r\n * developer network.\r\n *\r\n * @param {number} x X.\r\n * @return {number} Hyperbolic cosine of x.\r\n */\r\nexport const cosh = (function() {\r\n  // Wrapped in a iife, to save the overhead of checking for the native\r\n  // implementation on every invocation.\r\n  let cosh;\r\n  if ('cosh' in Math) {\r\n    // The environment supports the native Math.cosh function, use it…\r\n    cosh = Math.cosh;\r\n  } else {\r\n    // … else, use the reference implementation of MDN:\r\n    cosh = function(x) {\r\n      const y = /** @type {Math} */ (Math).exp(x);\r\n      return (y + 1 / y) / 2;\r\n    };\r\n  }\r\n  return cosh;\r\n}());\r\n\r\n\r\n/**\r\n * Returns the square of the closest distance between the point (x, y) and the\r\n * line segment (x1, y1) to (x2, y2).\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {number} x1 X1.\r\n * @param {number} y1 Y1.\r\n * @param {number} x2 X2.\r\n * @param {number} y2 Y2.\r\n * @return {number} Squared distance.\r\n */\r\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\r\n  const dx = x2 - x1;\r\n  const dy = y2 - y1;\r\n  if (dx !== 0 || dy !== 0) {\r\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\r\n    if (t > 1) {\r\n      x1 = x2;\r\n      y1 = y2;\r\n    } else if (t > 0) {\r\n      x1 += dx * t;\r\n      y1 += dy * t;\r\n    }\r\n  }\r\n  return squaredDistance(x, y, x1, y1);\r\n}\r\n\r\n\r\n/**\r\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\r\n * @param {number} x1 X1.\r\n * @param {number} y1 Y1.\r\n * @param {number} x2 X2.\r\n * @param {number} y2 Y2.\r\n * @return {number} Squared distance.\r\n */\r\nexport function squaredDistance(x1, y1, x2, y2) {\r\n  const dx = x2 - x1;\r\n  const dy = y2 - y1;\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n\r\n/**\r\n * Solves system of linear equations using Gaussian elimination method.\r\n *\r\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\r\n *                                     in row-major order.\r\n * @return {Array<number>} The resulting vector.\r\n */\r\nexport function solveLinearSystem(mat) {\r\n  const n = mat.length;\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    // Find max in the i-th column (ignoring i - 1 first rows)\r\n    let maxRow = i;\r\n    let maxEl = Math.abs(mat[i][i]);\r\n    for (let r = i + 1; r < n; r++) {\r\n      const absValue = Math.abs(mat[r][i]);\r\n      if (absValue > maxEl) {\r\n        maxEl = absValue;\r\n        maxRow = r;\r\n      }\r\n    }\r\n\r\n    if (maxEl === 0) {\r\n      return null; // matrix is singular\r\n    }\r\n\r\n    // Swap max row with i-th (current) row\r\n    const tmp = mat[maxRow];\r\n    mat[maxRow] = mat[i];\r\n    mat[i] = tmp;\r\n\r\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\r\n    for (let j = i + 1; j < n; j++) {\r\n      const coef = -mat[j][i] / mat[i][i];\r\n      for (let k = i; k < n + 1; k++) {\r\n        if (i == k) {\r\n          mat[j][k] = 0;\r\n        } else {\r\n          mat[j][k] += coef * mat[i][k];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Solve Ax=b for upper triangular matrix A (mat)\r\n  const x = new Array(n);\r\n  for (let l = n - 1; l >= 0; l--) {\r\n    x[l] = mat[l][n] / mat[l][l];\r\n    for (let m = l - 1; m >= 0; m--) {\r\n      mat[m][n] -= mat[m][l] * x[l];\r\n    }\r\n  }\r\n  return x;\r\n}\r\n\r\n\r\n/**\r\n * Converts radians to to degrees.\r\n *\r\n * @param {number} angleInRadians Angle in radians.\r\n * @return {number} Angle in degrees.\r\n */\r\nexport function toDegrees(angleInRadians) {\r\n  return angleInRadians * 180 / Math.PI;\r\n}\r\n\r\n\r\n/**\r\n * Converts degrees to radians.\r\n *\r\n * @param {number} angleInDegrees Angle in degrees.\r\n * @return {number} Angle in radians.\r\n */\r\nexport function toRadians(angleInDegrees) {\r\n  return angleInDegrees * Math.PI / 180;\r\n}\r\n\r\n/**\r\n * Returns the modulo of a / b, depending on the sign of b.\r\n *\r\n * @param {number} a Dividend.\r\n * @param {number} b Divisor.\r\n * @return {number} Modulo.\r\n */\r\nexport function modulo(a, b) {\r\n  const r = a % b;\r\n  return r * b < 0 ? r + b : r;\r\n}\r\n\r\n/**\r\n * Calculates the linearly interpolated value of x between a and b.\r\n *\r\n * @param {number} a Number\r\n * @param {number} b Number\r\n * @param {number} x Value to be interpolated.\r\n * @return {number} Interpolated value.\r\n */\r\nexport function lerp(a, b, x) {\r\n  return a + x * (b - a);\r\n}\r\n","/**\r\n * @module ol/centerconstraint\r\n */\r\nimport {clamp} from './math.js';\r\n\r\n\r\n/**\r\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\r\n */\r\n\r\n\r\n/**\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\r\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\r\n * (only during interaction and animation).\r\n * @return {Type} The constraint.\r\n */\r\nexport function createExtent(extent, onlyCenter, smooth) {\r\n  return (\r\n    /**\r\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\r\n     * @param {number} resolution Resolution.\r\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\r\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\r\n     */\r\n    function(center, resolution, size, opt_isMoving) {\r\n      if (center) {\r\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\r\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\r\n        let minX = extent[0] + viewWidth / 2;\r\n        let maxX = extent[2] - viewWidth / 2;\r\n        let minY = extent[1] + viewHeight / 2;\r\n        let maxY = extent[3] - viewHeight / 2;\r\n\r\n        // note: when zooming out of bounds, min and max values for x and y may\r\n        // end up inverted (min > max); this has to be accounted for\r\n        if (minX > maxX) {\r\n          minX = maxX = (maxX + minX) / 2;\r\n        }\r\n        if (minY > maxY) {\r\n          minY = maxY = (maxY + minY) / 2;\r\n        }\r\n\r\n        let x = clamp(center[0], minX, maxX);\r\n        let y = clamp(center[1], minY, maxY);\r\n        const ratio = 30 * resolution;\r\n\r\n        // during an interaction, allow some overscroll\r\n        if (opt_isMoving && smooth) {\r\n          x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\r\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\r\n          y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\r\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\r\n        }\r\n\r\n        return [x, y];\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\r\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\r\n */\r\nexport function none(center) {\r\n  return center;\r\n}\r\n","/**\r\n * @module ol/extent/Corner\r\n */\r\n\r\n/**\r\n * Extent corner.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n  TOP_LEFT: 'top-left',\r\n  TOP_RIGHT: 'top-right'\r\n};\r\n","/**\r\n * @module ol/extent/Relationship\r\n */\r\n\r\n/**\r\n * Relationship to an extent.\r\n * @enum {number}\r\n */\r\nexport default {\r\n  UNKNOWN: 0,\r\n  INTERSECTING: 1,\r\n  ABOVE: 2,\r\n  RIGHT: 4,\r\n  BELOW: 8,\r\n  LEFT: 16\r\n};\r\n","/**\r\n * @module ol/extent\r\n */\r\nimport {assert} from './asserts.js';\r\nimport Corner from './extent/Corner.js';\r\nimport Relationship from './extent/Relationship.js';\r\n\r\n\r\n/**\r\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\r\n * @typedef {Array<number>} Extent\r\n * @api\r\n */\r\n\r\n/**\r\n * Build an extent that includes all given coordinates.\r\n *\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @return {Extent} Bounding extent.\r\n * @api\r\n */\r\nexport function boundingExtent(coordinates) {\r\n  const extent = createEmpty();\r\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    extendCoordinate(extent, coordinates[i]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} xs Xs.\r\n * @param {Array<number>} ys Ys.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @private\r\n * @return {Extent} Extent.\r\n */\r\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\r\n  const minX = Math.min.apply(null, xs);\r\n  const minY = Math.min.apply(null, ys);\r\n  const maxX = Math.max.apply(null, xs);\r\n  const maxY = Math.max.apply(null, ys);\r\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\r\n}\r\n\r\n\r\n/**\r\n * Return extent increased by the provided value.\r\n * @param {Extent} extent Extent.\r\n * @param {number} value The amount by which the extent should be buffered.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n * @api\r\n */\r\nexport function buffer(extent, value, opt_extent) {\r\n  if (opt_extent) {\r\n    opt_extent[0] = extent[0] - value;\r\n    opt_extent[1] = extent[1] - value;\r\n    opt_extent[2] = extent[2] + value;\r\n    opt_extent[3] = extent[3] + value;\r\n    return opt_extent;\r\n  } else {\r\n    return [\r\n      extent[0] - value,\r\n      extent[1] - value,\r\n      extent[2] + value,\r\n      extent[3] + value\r\n    ];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Creates a clone of an extent.\r\n *\r\n * @param {Extent} extent Extent to clone.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} The clone.\r\n */\r\nexport function clone(extent, opt_extent) {\r\n  if (opt_extent) {\r\n    opt_extent[0] = extent[0];\r\n    opt_extent[1] = extent[1];\r\n    opt_extent[2] = extent[2];\r\n    opt_extent[3] = extent[3];\r\n    return opt_extent;\r\n  } else {\r\n    return extent.slice();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {number} Closest squared distance.\r\n */\r\nexport function closestSquaredDistanceXY(extent, x, y) {\r\n  let dx, dy;\r\n  if (x < extent[0]) {\r\n    dx = extent[0] - x;\r\n  } else if (extent[2] < x) {\r\n    dx = x - extent[2];\r\n  } else {\r\n    dx = 0;\r\n  }\r\n  if (y < extent[1]) {\r\n    dy = extent[1] - y;\r\n  } else if (extent[3] < y) {\r\n    dy = y - extent[3];\r\n  } else {\r\n    dy = 0;\r\n  }\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n\r\n/**\r\n * Check if the passed coordinate is contained or on the edge of the extent.\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @return {boolean} The coordinate is contained in the extent.\r\n * @api\r\n */\r\nexport function containsCoordinate(extent, coordinate) {\r\n  return containsXY(extent, coordinate[0], coordinate[1]);\r\n}\r\n\r\n\r\n/**\r\n * Check if one extent contains another.\r\n *\r\n * An extent is deemed contained if it lies completely within the other extent,\r\n * including if they share one or more edges.\r\n *\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {boolean} The second extent is contained by or on the edge of the\r\n *     first.\r\n * @api\r\n */\r\nexport function containsExtent(extent1, extent2) {\r\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\r\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\r\n}\r\n\r\n\r\n/**\r\n * Check if the passed coordinate is contained or on the edge of the extent.\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X coordinate.\r\n * @param {number} y Y coordinate.\r\n * @return {boolean} The x, y values are contained in the extent.\r\n * @api\r\n */\r\nexport function containsXY(extent, x, y) {\r\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\r\n}\r\n\r\n\r\n/**\r\n * Get the relationship between a coordinate and extent.\r\n * @param {Extent} extent The extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\r\n * @return {Relationship} The relationship (bitwise compare with\r\n *     import(\"./extent/Relationship.js\").Relationship).\r\n */\r\nexport function coordinateRelationship(extent, coordinate) {\r\n  const minX = extent[0];\r\n  const minY = extent[1];\r\n  const maxX = extent[2];\r\n  const maxY = extent[3];\r\n  const x = coordinate[0];\r\n  const y = coordinate[1];\r\n  let relationship = Relationship.UNKNOWN;\r\n  if (x < minX) {\r\n    relationship = relationship | Relationship.LEFT;\r\n  } else if (x > maxX) {\r\n    relationship = relationship | Relationship.RIGHT;\r\n  }\r\n  if (y < minY) {\r\n    relationship = relationship | Relationship.BELOW;\r\n  } else if (y > maxY) {\r\n    relationship = relationship | Relationship.ABOVE;\r\n  }\r\n  if (relationship === Relationship.UNKNOWN) {\r\n    relationship = Relationship.INTERSECTING;\r\n  }\r\n  return relationship;\r\n}\r\n\r\n\r\n/**\r\n * Create an empty extent.\r\n * @return {Extent} Empty extent.\r\n * @api\r\n */\r\nexport function createEmpty() {\r\n  return [Infinity, Infinity, -Infinity, -Infinity];\r\n}\r\n\r\n\r\n/**\r\n * Create a new extent or update the provided extent.\r\n * @param {number} minX Minimum X.\r\n * @param {number} minY Minimum Y.\r\n * @param {number} maxX Maximum X.\r\n * @param {number} maxY Maximum Y.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\r\n  if (opt_extent) {\r\n    opt_extent[0] = minX;\r\n    opt_extent[1] = minY;\r\n    opt_extent[2] = maxX;\r\n    opt_extent[3] = maxY;\r\n    return opt_extent;\r\n  } else {\r\n    return [minX, minY, maxX, maxY];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Create a new empty extent or make the provided one empty.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateEmpty(opt_extent) {\r\n  return createOrUpdate(\r\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\r\n  const x = coordinate[0];\r\n  const y = coordinate[1];\r\n  return createOrUpdate(x, y, x, y, opt_extent);\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\r\n  const extent = createOrUpdateEmpty(opt_extent);\r\n  return extendCoordinates(extent, coordinates);\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\r\n  const extent = createOrUpdateEmpty(opt_extent);\r\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\r\n}\r\n\r\n/**\r\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromRings(rings, opt_extent) {\r\n  const extent = createOrUpdateEmpty(opt_extent);\r\n  return extendRings(extent, rings);\r\n}\r\n\r\n\r\n/**\r\n * Determine if two extents are equivalent.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {boolean} The two extents are equivalent.\r\n * @api\r\n */\r\nexport function equals(extent1, extent2) {\r\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\r\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\r\n}\r\n\r\n\r\n/**\r\n * Modify an extent to include another extent.\r\n * @param {Extent} extent1 The extent to be modified.\r\n * @param {Extent} extent2 The extent that will be included in the first.\r\n * @return {Extent} A reference to the first (extended) extent.\r\n * @api\r\n */\r\nexport function extend(extent1, extent2) {\r\n  if (extent2[0] < extent1[0]) {\r\n    extent1[0] = extent2[0];\r\n  }\r\n  if (extent2[2] > extent1[2]) {\r\n    extent1[2] = extent2[2];\r\n  }\r\n  if (extent2[1] < extent1[1]) {\r\n    extent1[1] = extent2[1];\r\n  }\r\n  if (extent2[3] > extent1[3]) {\r\n    extent1[3] = extent2[3];\r\n  }\r\n  return extent1;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n */\r\nexport function extendCoordinate(extent, coordinate) {\r\n  if (coordinate[0] < extent[0]) {\r\n    extent[0] = coordinate[0];\r\n  }\r\n  if (coordinate[0] > extent[2]) {\r\n    extent[2] = coordinate[0];\r\n  }\r\n  if (coordinate[1] < extent[1]) {\r\n    extent[1] = coordinate[1];\r\n  }\r\n  if (coordinate[1] > extent[3]) {\r\n    extent[3] = coordinate[1];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendCoordinates(extent, coordinates) {\r\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    extendCoordinate(extent, coordinates[i]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\r\n  for (; offset < end; offset += stride) {\r\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendRings(extent, rings) {\r\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\r\n    extendCoordinates(extent, rings[i]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n */\r\nexport function extendXY(extent, x, y) {\r\n  extent[0] = Math.min(extent[0], x);\r\n  extent[1] = Math.min(extent[1], y);\r\n  extent[2] = Math.max(extent[2], x);\r\n  extent[3] = Math.max(extent[3], y);\r\n}\r\n\r\n\r\n/**\r\n * This function calls `callback` for each corner of the extent. If the\r\n * callback returns a truthy value the function returns that value\r\n * immediately. Otherwise the function returns `false`.\r\n * @param {Extent} extent Extent.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\r\n * @return {S|boolean} Value.\r\n * @template S\r\n */\r\nexport function forEachCorner(extent, callback) {\r\n  let val;\r\n  val = callback(getBottomLeft(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  val = callback(getBottomRight(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  val = callback(getTopRight(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  val = callback(getTopLeft(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * Get the size of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Area.\r\n * @api\r\n */\r\nexport function getArea(extent) {\r\n  let area = 0;\r\n  if (!isEmpty(extent)) {\r\n    area = getWidth(extent) * getHeight(extent);\r\n  }\r\n  return area;\r\n}\r\n\r\n\r\n/**\r\n * Get the bottom left coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\r\n * @api\r\n */\r\nexport function getBottomLeft(extent) {\r\n  return [extent[0], extent[1]];\r\n}\r\n\r\n\r\n/**\r\n * Get the bottom right coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\r\n * @api\r\n */\r\nexport function getBottomRight(extent) {\r\n  return [extent[2], extent[1]];\r\n}\r\n\r\n\r\n/**\r\n * Get the center coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Center.\r\n * @api\r\n */\r\nexport function getCenter(extent) {\r\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\r\n}\r\n\r\n\r\n/**\r\n * Get a corner coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @param {Corner} corner Corner.\r\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\r\n */\r\nexport function getCorner(extent, corner) {\r\n  let coordinate;\r\n  if (corner === Corner.BOTTOM_LEFT) {\r\n    coordinate = getBottomLeft(extent);\r\n  } else if (corner === Corner.BOTTOM_RIGHT) {\r\n    coordinate = getBottomRight(extent);\r\n  } else if (corner === Corner.TOP_LEFT) {\r\n    coordinate = getTopLeft(extent);\r\n  } else if (corner === Corner.TOP_RIGHT) {\r\n    coordinate = getTopRight(extent);\r\n  } else {\r\n    assert(false, 13); // Invalid corner\r\n  }\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {number} Enlarged area.\r\n */\r\nexport function getEnlargedArea(extent1, extent2) {\r\n  const minX = Math.min(extent1[0], extent2[0]);\r\n  const minY = Math.min(extent1[1], extent2[1]);\r\n  const maxX = Math.max(extent1[2], extent2[2]);\r\n  const maxY = Math.max(extent1[3], extent2[3]);\r\n  return (maxX - minX) * (maxY - minY);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\r\n * @param {number} resolution Resolution.\r\n * @param {number} rotation Rotation.\r\n * @param {import(\"./size.js\").Size} size Size.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\r\n  const dx = resolution * size[0] / 2;\r\n  const dy = resolution * size[1] / 2;\r\n  const cosRotation = Math.cos(rotation);\r\n  const sinRotation = Math.sin(rotation);\r\n  const xCos = dx * cosRotation;\r\n  const xSin = dx * sinRotation;\r\n  const yCos = dy * cosRotation;\r\n  const ySin = dy * sinRotation;\r\n  const x = center[0];\r\n  const y = center[1];\r\n  const x0 = x - xCos + ySin;\r\n  const x1 = x - xCos - ySin;\r\n  const x2 = x + xCos - ySin;\r\n  const x3 = x + xCos + ySin;\r\n  const y0 = y - xSin - yCos;\r\n  const y1 = y - xSin + yCos;\r\n  const y2 = y + xSin + yCos;\r\n  const y3 = y + xSin - yCos;\r\n  return createOrUpdate(\r\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\r\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\r\n    opt_extent);\r\n}\r\n\r\n\r\n/**\r\n * Get the height of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Height.\r\n * @api\r\n */\r\nexport function getHeight(extent) {\r\n  return extent[3] - extent[1];\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {number} Intersection area.\r\n */\r\nexport function getIntersectionArea(extent1, extent2) {\r\n  const intersection = getIntersection(extent1, extent2);\r\n  return getArea(intersection);\r\n}\r\n\r\n\r\n/**\r\n * Get the intersection of two extents.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\r\n * @return {Extent} Intersecting extent.\r\n * @api\r\n */\r\nexport function getIntersection(extent1, extent2, opt_extent) {\r\n  const intersection = opt_extent ? opt_extent : createEmpty();\r\n  if (intersects(extent1, extent2)) {\r\n    if (extent1[0] > extent2[0]) {\r\n      intersection[0] = extent1[0];\r\n    } else {\r\n      intersection[0] = extent2[0];\r\n    }\r\n    if (extent1[1] > extent2[1]) {\r\n      intersection[1] = extent1[1];\r\n    } else {\r\n      intersection[1] = extent2[1];\r\n    }\r\n    if (extent1[2] < extent2[2]) {\r\n      intersection[2] = extent1[2];\r\n    } else {\r\n      intersection[2] = extent2[2];\r\n    }\r\n    if (extent1[3] < extent2[3]) {\r\n      intersection[3] = extent1[3];\r\n    } else {\r\n      intersection[3] = extent2[3];\r\n    }\r\n  } else {\r\n    createOrUpdateEmpty(intersection);\r\n  }\r\n  return intersection;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @return {number} Margin.\r\n */\r\nexport function getMargin(extent) {\r\n  return getWidth(extent) + getHeight(extent);\r\n}\r\n\r\n\r\n/**\r\n * Get the size (width, height) of an extent.\r\n * @param {Extent} extent The extent.\r\n * @return {import(\"./size.js\").Size} The extent size.\r\n * @api\r\n */\r\nexport function getSize(extent) {\r\n  return [extent[2] - extent[0], extent[3] - extent[1]];\r\n}\r\n\r\n\r\n/**\r\n * Get the top left coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\r\n * @api\r\n */\r\nexport function getTopLeft(extent) {\r\n  return [extent[0], extent[3]];\r\n}\r\n\r\n\r\n/**\r\n * Get the top right coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\r\n * @api\r\n */\r\nexport function getTopRight(extent) {\r\n  return [extent[2], extent[3]];\r\n}\r\n\r\n\r\n/**\r\n * Get the width of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Width.\r\n * @api\r\n */\r\nexport function getWidth(extent) {\r\n  return extent[2] - extent[0];\r\n}\r\n\r\n\r\n/**\r\n * Determine if one extent intersects another.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent.\r\n * @return {boolean} The two extents intersect.\r\n * @api\r\n */\r\nexport function intersects(extent1, extent2) {\r\n  return extent1[0] <= extent2[2] &&\r\n      extent1[2] >= extent2[0] &&\r\n      extent1[1] <= extent2[3] &&\r\n      extent1[3] >= extent2[1];\r\n}\r\n\r\n\r\n/**\r\n * Determine if an extent is empty.\r\n * @param {Extent} extent Extent.\r\n * @return {boolean} Is empty.\r\n * @api\r\n */\r\nexport function isEmpty(extent) {\r\n  return extent[2] < extent[0] || extent[3] < extent[1];\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function returnOrUpdate(extent, opt_extent) {\r\n  if (opt_extent) {\r\n    opt_extent[0] = extent[0];\r\n    opt_extent[1] = extent[1];\r\n    opt_extent[2] = extent[2];\r\n    opt_extent[3] = extent[3];\r\n    return opt_extent;\r\n  } else {\r\n    return extent;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} value Value.\r\n */\r\nexport function scaleFromCenter(extent, value) {\r\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\r\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\r\n  extent[0] -= deltaX;\r\n  extent[2] += deltaX;\r\n  extent[1] -= deltaY;\r\n  extent[3] += deltaY;\r\n}\r\n\r\n\r\n/**\r\n * Determine if the segment between two coordinates intersects (crosses,\r\n * touches, or is contained by) the provided extent.\r\n * @param {Extent} extent The extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\r\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\r\n * @return {boolean} The segment intersects the extent.\r\n */\r\nexport function intersectsSegment(extent, start, end) {\r\n  let intersects = false;\r\n  const startRel = coordinateRelationship(extent, start);\r\n  const endRel = coordinateRelationship(extent, end);\r\n  if (startRel === Relationship.INTERSECTING ||\r\n      endRel === Relationship.INTERSECTING) {\r\n    intersects = true;\r\n  } else {\r\n    const minX = extent[0];\r\n    const minY = extent[1];\r\n    const maxX = extent[2];\r\n    const maxY = extent[3];\r\n    const startX = start[0];\r\n    const startY = start[1];\r\n    const endX = end[0];\r\n    const endY = end[1];\r\n    const slope = (endY - startY) / (endX - startX);\r\n    let x, y;\r\n    if (!!(endRel & Relationship.ABOVE) &&\r\n        !(startRel & Relationship.ABOVE)) {\r\n      // potentially intersects top\r\n      x = endX - ((endY - maxY) / slope);\r\n      intersects = x >= minX && x <= maxX;\r\n    }\r\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\r\n        !(startRel & Relationship.RIGHT)) {\r\n      // potentially intersects right\r\n      y = endY - ((endX - maxX) * slope);\r\n      intersects = y >= minY && y <= maxY;\r\n    }\r\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\r\n        !(startRel & Relationship.BELOW)) {\r\n      // potentially intersects bottom\r\n      x = endX - ((endY - minY) / slope);\r\n      intersects = x >= minX && x <= maxX;\r\n    }\r\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\r\n        !(startRel & Relationship.LEFT)) {\r\n      // potentially intersects left\r\n      y = endY - ((endX - minX) * slope);\r\n      intersects = y >= minY && y <= maxY;\r\n    }\r\n\r\n  }\r\n  return intersects;\r\n}\r\n\r\n\r\n/**\r\n * Apply a transform function to the extent.\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\r\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @return {Extent} Extent.\r\n * @api\r\n */\r\nexport function applyTransform(extent, transformFn, opt_extent) {\r\n  const coordinates = [\r\n    extent[0], extent[1],\r\n    extent[0], extent[3],\r\n    extent[2], extent[1],\r\n    extent[2], extent[3]\r\n  ];\r\n  transformFn(coordinates, coordinates, 2);\r\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\r\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\r\n  return _boundingExtentXYs(xs, ys, opt_extent);\r\n}\r\n","/**\r\n * @module ol/resolutionconstraint\r\n */\r\nimport {linearFindNearest} from './array.js';\r\nimport {getHeight, getWidth} from './extent.js';\r\nimport {clamp} from './math.js';\r\n\r\n\r\n/**\r\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\r\n */\r\n\r\n/**\r\n * Returns a modified resolution taking into acocunt the viewport size and maximum\r\n * allowed extent.\r\n * @param {number} resolution Resolution\r\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\r\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\r\n * @return {number} Capped resolution.\r\n */\r\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\r\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\r\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\r\n  return Math.min(resolution, Math.min(xResolution, yResolution));\r\n}\r\n\r\n/**\r\n * Returns a modified resolution to be between maxResolution and minResolution while\r\n * still allowing the value to be slightly out of bounds.\r\n * Note: the computation is based on the logarithm function (ln):\r\n *  - at 1, ln(x) is 0\r\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\r\n * The final result is clamped to prevent getting too far away from bounds.\r\n * @param {number} resolution Resolution.\r\n * @param {number} maxResolution Max resolution.\r\n * @param {number} minResolution Min resolution.\r\n * @return {number} Smoothed resolution.\r\n */\r\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\r\n  let result = Math.min(resolution, maxResolution);\r\n  const ratio = 50;\r\n\r\n  result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\r\n  if (minResolution) {\r\n    result = Math.max(result, minResolution);\r\n    result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\r\n  }\r\n  return clamp(result, minResolution / 2, maxResolution * 2);\r\n}\r\n\r\n/**\r\n * @param {Array<number>} resolutions Resolutions.\r\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\r\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\r\n  return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} direction Direction.\r\n     * @param {import(\"./size.js\").Size} size Viewport size.\r\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function(resolution, direction, size, opt_isMoving) {\r\n      if (resolution !== undefined) {\r\n        const maxResolution = resolutions[0];\r\n        const minResolution = resolutions[resolutions.length - 1];\r\n        const cappedMaxRes = opt_maxExtent ?\r\n          getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\r\n          maxResolution;\r\n\r\n        // during interacting or animating, allow intermediary values\r\n        if (opt_isMoving) {\r\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\r\n          if (!smooth) {\r\n            return clamp(resolution, minResolution, cappedMaxRes);\r\n          }\r\n          return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\r\n        }\r\n\r\n        const capped = Math.min(cappedMaxRes, resolution);\r\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\r\n        return resolutions[z];\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {number} power Power.\r\n * @param {number} maxResolution Maximum resolution.\r\n * @param {number=} opt_minResolution Minimum resolution.\r\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\r\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\r\n  return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} direction Direction.\r\n     * @param {import(\"./size.js\").Size} size Viewport size.\r\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function(resolution, direction, size, opt_isMoving) {\r\n      if (resolution !== undefined) {\r\n        const cappedMaxRes = opt_maxExtent ?\r\n          getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\r\n          maxResolution;\r\n        const minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\r\n\r\n        // during interacting or animating, allow intermediary values\r\n        if (opt_isMoving) {\r\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\r\n          if (!smooth) {\r\n            return clamp(resolution, minResolution, cappedMaxRes);\r\n          }\r\n          return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\r\n        }\r\n\r\n        const offset = -direction * (0.5 - 1e-9) + 0.5;\r\n        const capped = Math.min(cappedMaxRes, resolution);\r\n        const zoomLevel = Math.floor(\r\n          Math.log(maxResolution / capped) / Math.log(power) + offset);\r\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\r\n        return clamp(newResolution, minResolution, cappedMaxRes);\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {number} maxResolution Max resolution.\r\n * @param {number} minResolution Min resolution.\r\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\r\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\r\n  return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} direction Direction.\r\n     * @param {import(\"./size.js\").Size} size Viewport size.\r\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function(resolution, direction, size, opt_isMoving) {\r\n      if (resolution !== undefined) {\r\n        const cappedMaxRes = opt_maxExtent ?\r\n          getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\r\n          maxResolution;\r\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\r\n\r\n        if (!smooth || !opt_isMoving) {\r\n          return clamp(resolution, minResolution, cappedMaxRes);\r\n        }\r\n        return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n","/**\r\n * @module ol/rotationconstraint\r\n */\r\nimport {toRadians} from './math.js';\r\n\r\n\r\n/**\r\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\r\n */\r\n\r\n\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function disable(rotation) {\r\n  if (rotation !== undefined) {\r\n    return 0;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function none(rotation) {\r\n  if (rotation !== undefined) {\r\n    return rotation;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {number} n N.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToN(n) {\r\n  const theta = 2 * Math.PI / n;\r\n  return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function(rotation, opt_isMoving) {\r\n      if (opt_isMoving) {\r\n        return rotation;\r\n      }\r\n\r\n      if (rotation !== undefined) {\r\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\r\n        return rotation;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * @param {number=} opt_tolerance Tolerance.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToZero(opt_tolerance) {\r\n  const tolerance = opt_tolerance || toRadians(5);\r\n  return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function(rotation, opt_isMoving) {\r\n      if (opt_isMoving) {\r\n        return rotation;\r\n      }\r\n\r\n      if (rotation !== undefined) {\r\n        if (Math.abs(rotation) <= tolerance) {\r\n          return 0;\r\n        } else {\r\n          return rotation;\r\n        }\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n}\r\n","/**\r\n * @module ol/ViewHint\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n  ANIMATING: 0,\r\n  INTERACTING: 1\r\n};\r\n","/**\r\n * @module ol/ViewProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  CENTER: 'center',\r\n  RESOLUTION: 'resolution',\r\n  ROTATION: 'rotation'\r\n};\r\n","/**\r\n * @module ol/string\r\n */\r\n\r\n/**\r\n * @param {number} number Number to be formatted\r\n * @param {number} width The desired width\r\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\r\n * @returns {string} Formatted string\r\n */\r\nexport function padNumber(number, width, opt_precision) {\r\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\r\n  let decimal = numberString.indexOf('.');\r\n  decimal = decimal === -1 ? numberString.length : decimal;\r\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\r\n}\r\n\r\n\r\n/**\r\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\r\n * @param {string|number} v1 First version\r\n * @param {string|number} v2 Second version\r\n * @returns {number} Value\r\n */\r\nexport function compareVersions(v1, v2) {\r\n  const s1 = ('' + v1).split('.');\r\n  const s2 = ('' + v2).split('.');\r\n\r\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\r\n    const n1 = parseInt(s1[i] || '0', 10);\r\n    const n2 = parseInt(s2[i] || '0', 10);\r\n\r\n    if (n1 > n2) {\r\n      return 1;\r\n    }\r\n    if (n2 > n1) {\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n","/**\r\n * @module ol/coordinate\r\n */\r\nimport {modulo} from './math.js';\r\nimport {padNumber} from './string.js';\r\n\r\n\r\n/**\r\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\r\n * @typedef {Array<number>} Coordinate\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\r\n * transforms it into a `{string}`.\r\n *\r\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\r\n * by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {add} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     add(coord, [-2, 4]);\r\n *     // coord is now [5.85, 51.983333]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {Coordinate} delta Delta.\r\n * @return {Coordinate} The input coordinate adjusted by\r\n * the given delta.\r\n * @api\r\n */\r\nexport function add(coordinate, delta) {\r\n  coordinate[0] += +delta[0];\r\n  coordinate[1] += +delta[1];\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * Calculates the point closest to the passed coordinate on the passed circle.\r\n *\r\n * @param {Coordinate} coordinate The coordinate.\r\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\r\n * @return {Coordinate} Closest point on the circumference.\r\n */\r\nexport function closestOnCircle(coordinate, circle) {\r\n  const r = circle.getRadius();\r\n  const center = circle.getCenter();\r\n  const x0 = center[0];\r\n  const y0 = center[1];\r\n  const x1 = coordinate[0];\r\n  const y1 = coordinate[1];\r\n\r\n  let dx = x1 - x0;\r\n  const dy = y1 - y0;\r\n  if (dx === 0 && dy === 0) {\r\n    dx = 1;\r\n  }\r\n  const d = Math.sqrt(dx * dx + dy * dy);\r\n\r\n  const x = x0 + r * dx / d;\r\n  const y = y0 + r * dy / d;\r\n\r\n  return [x, y];\r\n}\r\n\r\n\r\n/**\r\n * Calculates the point closest to the passed coordinate on the passed segment.\r\n * This is the foot of the perpendicular of the coordinate to the segment when\r\n * the foot is on the segment, or the closest segment coordinate when the foot\r\n * is outside the segment.\r\n *\r\n * @param {Coordinate} coordinate The coordinate.\r\n * @param {Array<Coordinate>} segment The two coordinates\r\n * of the segment.\r\n * @return {Coordinate} The foot of the perpendicular of\r\n * the coordinate to the segment.\r\n */\r\nexport function closestOnSegment(coordinate, segment) {\r\n  const x0 = coordinate[0];\r\n  const y0 = coordinate[1];\r\n  const start = segment[0];\r\n  const end = segment[1];\r\n  const x1 = start[0];\r\n  const y1 = start[1];\r\n  const x2 = end[0];\r\n  const y2 = end[1];\r\n  const dx = x2 - x1;\r\n  const dy = y2 - y1;\r\n  const along = (dx === 0 && dy === 0) ? 0 :\r\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\r\n  let x, y;\r\n  if (along <= 0) {\r\n    x = x1;\r\n    y = y1;\r\n  } else if (along >= 1) {\r\n    x = x2;\r\n    y = y2;\r\n  } else {\r\n    x = x1 + along * dx;\r\n    y = y1 + along * dy;\r\n  }\r\n  return [x, y];\r\n}\r\n\r\n\r\n/**\r\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\r\n * used to format\r\n * a {Coordinate} to a string.\r\n *\r\n * Example without specifying the fractional digits:\r\n *\r\n *     import {createStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var stringifyFunc = createStringXY();\r\n *     var out = stringifyFunc(coord);\r\n *     // out is now '8, 48'\r\n *\r\n * Example with explicitly specifying 2 fractional digits:\r\n *\r\n *     import {createStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var stringifyFunc = createStringXY(2);\r\n *     var out = stringifyFunc(coord);\r\n *     // out is now '7.85, 47.98'\r\n *\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {CoordinateFormat} Coordinate format.\r\n * @api\r\n */\r\nexport function createStringXY(opt_fractionDigits) {\r\n  return (\r\n    /**\r\n     * @param {Coordinate} coordinate Coordinate.\r\n     * @return {string} String XY.\r\n     */\r\n    function(coordinate) {\r\n      return toStringXY(coordinate, opt_fractionDigits);\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {string} hemispheres Hemispheres.\r\n * @param {number} degrees Degrees.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} String.\r\n */\r\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\r\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\r\n  const x = Math.abs(3600 * normalizedDegrees);\r\n  const dflPrecision = opt_fractionDigits || 0;\r\n  const precision = Math.pow(10, dflPrecision);\r\n\r\n  let deg = Math.floor(x / 3600);\r\n  let min = Math.floor((x - deg * 3600) / 60);\r\n  let sec = x - (deg * 3600) - (min * 60);\r\n  sec = Math.ceil(sec * precision) / precision;\r\n\r\n  if (sec >= 60) {\r\n    sec = 0;\r\n    min += 1;\r\n  }\r\n\r\n  if (min >= 60) {\r\n    min = 0;\r\n    deg += 1;\r\n  }\r\n\r\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\r\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\r\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\r\n}\r\n\r\n\r\n/**\r\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\r\n * using the given string template. The strings `{x}` and `{y}` in the template\r\n * will be replaced with the first and second coordinate values respectively.\r\n *\r\n * Example without specifying the fractional digits:\r\n *\r\n *     import {format} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var template = 'Coordinate is ({x}|{y}).';\r\n *     var out = format(coord, template);\r\n *     // out is now 'Coordinate is (8|48).'\r\n *\r\n * Example explicitly specifying the fractional digits:\r\n *\r\n *     import {format} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var template = 'Coordinate is ({x}|{y}).';\r\n *     var out = format(coord, template, 2);\r\n *     // out is now 'Coordinate is (7.85|47.98).'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {string} template A template string with `{x}` and `{y}` placeholders\r\n *     that will be replaced by first and second coordinate values.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} Formatted coordinate.\r\n * @api\r\n */\r\nexport function format(coordinate, template, opt_fractionDigits) {\r\n  if (coordinate) {\r\n    return template\r\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\r\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Coordinate} coordinate1 First coordinate.\r\n * @param {Coordinate} coordinate2 Second coordinate.\r\n * @return {boolean} The two coordinates are equal.\r\n */\r\nexport function equals(coordinate1, coordinate2) {\r\n  let equals = true;\r\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\r\n    if (coordinate1[i] != coordinate2[i]) {\r\n      equals = false;\r\n      break;\r\n    }\r\n  }\r\n  return equals;\r\n}\r\n\r\n\r\n/**\r\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\r\n * returned by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {rotate} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var rotateRadians = Math.PI / 2; // 90 degrees\r\n *     rotate(coord, rotateRadians);\r\n *     // coord is now [-47.983333, 7.85]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} angle Angle in radian.\r\n * @return {Coordinate} Coordinate.\r\n * @api\r\n */\r\nexport function rotate(coordinate, angle) {\r\n  const cosAngle = Math.cos(angle);\r\n  const sinAngle = Math.sin(angle);\r\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\r\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\r\n  coordinate[0] = x;\r\n  coordinate[1] = y;\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\r\n * by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var scale = 1.2;\r\n *     scaleCoordinate(coord, scale);\r\n *     // coord is now [9.42, 57.5799996]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} scale Scale factor.\r\n * @return {Coordinate} Coordinate.\r\n */\r\nexport function scale(coordinate, scale) {\r\n  coordinate[0] *= scale;\r\n  coordinate[1] *= scale;\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * @param {Coordinate} coord1 First coordinate.\r\n * @param {Coordinate} coord2 Second coordinate.\r\n * @return {number} Squared distance between coord1 and coord2.\r\n */\r\nexport function squaredDistance(coord1, coord2) {\r\n  const dx = coord1[0] - coord2[0];\r\n  const dy = coord1[1] - coord2[1];\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n\r\n/**\r\n * @param {Coordinate} coord1 First coordinate.\r\n * @param {Coordinate} coord2 Second coordinate.\r\n * @return {number} Distance between coord1 and coord2.\r\n */\r\nexport function distance(coord1, coord2) {\r\n  return Math.sqrt(squaredDistance(coord1, coord2));\r\n}\r\n\r\n\r\n/**\r\n * Calculate the squared distance from a coordinate to a line segment.\r\n *\r\n * @param {Coordinate} coordinate Coordinate of the point.\r\n * @param {Array<Coordinate>} segment Line segment (2\r\n * coordinates).\r\n * @return {number} Squared distance from the point to the line segment.\r\n */\r\nexport function squaredDistanceToSegment(coordinate, segment) {\r\n  return squaredDistance(coordinate,\r\n    closestOnSegment(coordinate, segment));\r\n}\r\n\r\n\r\n/**\r\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\r\n * seconds.\r\n *\r\n * Example without specifying fractional digits:\r\n *\r\n *     import {toStringHDMS} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringHDMS(coord);\r\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\r\n *\r\n * Example explicitly specifying 1 fractional digit:\r\n *\r\n *     import {toStringHDMS} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringHDMS(coord, 1);\r\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} Hemisphere, degrees, minutes and seconds.\r\n * @api\r\n */\r\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\r\n  if (coordinate) {\r\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\r\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Format a coordinate as a comma delimited string.\r\n *\r\n * Example without specifying fractional digits:\r\n *\r\n *     import {toStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringXY(coord);\r\n *     // out is now '8, 48'\r\n *\r\n * Example explicitly specifying 1 fractional digit:\r\n *\r\n *     import {toStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringXY(coord, 1);\r\n *     // out is now '7.8, 48.0'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} XY.\r\n * @api\r\n */\r\nexport function toStringXY(coordinate, opt_fractionDigits) {\r\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\r\n}\r\n","/**\r\n * @module ol/easing\r\n */\r\n\r\n\r\n/**\r\n * Start slow and speed up.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function easeIn(t) {\r\n  return Math.pow(t, 3);\r\n}\r\n\r\n\r\n/**\r\n * Start fast and slow down.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function easeOut(t) {\r\n  return 1 - easeIn(1 - t);\r\n}\r\n\r\n\r\n/**\r\n * Start slow, speed up, and then slow down again.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function inAndOut(t) {\r\n  return 3 * t * t - 2 * t * t * t;\r\n}\r\n\r\n\r\n/**\r\n * Maintain a constant speed over time.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function linear(t) {\r\n  return t;\r\n}\r\n\r\n\r\n/**\r\n * Start slow, speed up, and at the very end slow down again.  This has the\r\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\r\n * slowdown is delayed.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function upAndDown(t) {\r\n  if (t < 0.5) {\r\n    return inAndOut(2 * t);\r\n  } else {\r\n    return 1 - inAndOut(2 * (t - 0.5));\r\n  }\r\n}\r\n","/**\r\n * @module ol/geom/GeometryType\r\n */\r\n\r\n/**\r\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\r\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\r\n * `'GeometryCollection'`, `'Circle'`.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  POINT: 'Point',\r\n  LINE_STRING: 'LineString',\r\n  LINEAR_RING: 'LinearRing',\r\n  POLYGON: 'Polygon',\r\n  MULTI_POINT: 'MultiPoint',\r\n  MULTI_LINE_STRING: 'MultiLineString',\r\n  MULTI_POLYGON: 'MultiPolygon',\r\n  GEOMETRY_COLLECTION: 'GeometryCollection',\r\n  CIRCLE: 'Circle'\r\n};\r\n","/**\r\n * @module ol/geom/GeometryLayout\r\n */\r\n\r\n/**\r\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\r\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\r\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  XY: 'XY',\r\n  XYZ: 'XYZ',\r\n  XYM: 'XYM',\r\n  XYZM: 'XYZM'\r\n};\r\n","/**\r\n * @module ol/geom/flat/transform\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\r\n  const dest = opt_dest ? opt_dest : [];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    const x = flatCoordinates[j];\r\n    const y = flatCoordinates[j + 1];\r\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\r\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\r\n  }\r\n  if (opt_dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} angle Angle.\r\n * @param {Array<number>} anchor Rotation anchor point.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\r\n  const dest = opt_dest ? opt_dest : [];\r\n  const cos = Math.cos(angle);\r\n  const sin = Math.sin(angle);\r\n  const anchorX = anchor[0];\r\n  const anchorY = anchor[1];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    const deltaX = flatCoordinates[j] - anchorX;\r\n    const deltaY = flatCoordinates[j + 1] - anchorY;\r\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\r\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\r\n    for (let k = j + 2; k < j + stride; ++k) {\r\n      dest[i++] = flatCoordinates[k];\r\n    }\r\n  }\r\n  if (opt_dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n\r\n/**\r\n * Scale the coordinates.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} sx Scale factor in the x-direction.\r\n * @param {number} sy Scale factor in the y-direction.\r\n * @param {Array<number>} anchor Scale anchor point.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\r\n  const dest = opt_dest ? opt_dest : [];\r\n  const anchorX = anchor[0];\r\n  const anchorY = anchor[1];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    const deltaX = flatCoordinates[j] - anchorX;\r\n    const deltaY = flatCoordinates[j + 1] - anchorY;\r\n    dest[i++] = anchorX + sx * deltaX;\r\n    dest[i++] = anchorY + sy * deltaY;\r\n    for (let k = j + 2; k < j + stride; ++k) {\r\n      dest[i++] = flatCoordinates[k];\r\n    }\r\n  }\r\n  if (opt_dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} deltaX Delta X.\r\n * @param {number} deltaY Delta Y.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\r\n  const dest = opt_dest ? opt_dest : [];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    dest[i++] = flatCoordinates[j] + deltaX;\r\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\r\n    for (let k = j + 2; k < j + stride; ++k) {\r\n      dest[i++] = flatCoordinates[k];\r\n    }\r\n  }\r\n  if (opt_dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n","/**\r\n * @license\r\n * Latitude/longitude spherical geodesy formulae taken from\r\n * http://www.movable-type.co.uk/scripts/latlong.html\r\n * Licensed under CC-BY-3.0.\r\n */\r\n\r\n/**\r\n * @module ol/sphere\r\n */\r\nimport {toRadians, toDegrees} from './math.js';\r\nimport GeometryType from './geom/GeometryType.js';\r\n\r\n\r\n/**\r\n * Object literal with options for the {@link getLength} or {@link getArea}\r\n * functions.\r\n * @typedef {Object} SphereMetricOptions\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\r\n * Projection of the  geometry.  By default, the geometry is assumed to be in\r\n * Web Mercator.\r\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\r\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\r\n * for the WGS84 ellipsoid is used.\r\n */\r\n\r\n\r\n/**\r\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\r\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\r\n * @type {number}\r\n */\r\nexport const DEFAULT_RADIUS = 6371008.8;\r\n\r\n\r\n/**\r\n * Get the great circle distance (in meters) between two geographic coordinates.\r\n * @param {Array} c1 Starting coordinate.\r\n * @param {Array} c2 Ending coordinate.\r\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\r\n *     mean radius using the WGS84 ellipsoid.\r\n * @return {number} The great circle distance between the points (in meters).\r\n * @api\r\n */\r\nexport function getDistance(c1, c2, opt_radius) {\r\n  const radius = opt_radius || DEFAULT_RADIUS;\r\n  const lat1 = toRadians(c1[1]);\r\n  const lat2 = toRadians(c2[1]);\r\n  const deltaLatBy2 = (lat2 - lat1) / 2;\r\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\r\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\r\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\r\n      Math.cos(lat1) * Math.cos(lat2);\r\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n}\r\n\r\n\r\n/**\r\n * Get the cumulative great circle length of linestring coordinates (geographic).\r\n * @param {Array} coordinates Linestring coordinates.\r\n * @param {number} radius The sphere radius to use.\r\n * @return {number} The length (in meters).\r\n */\r\nfunction getLengthInternal(coordinates, radius) {\r\n  let length = 0;\r\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\r\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\r\n  }\r\n  return length;\r\n}\r\n\r\n\r\n/**\r\n * Get the spherical length of a geometry.  This length is the sum of the\r\n * great circle distances between coordinates.  For polygons, the length is\r\n * the sum of all rings.  For points, the length is zero.  For multi-part\r\n * geometries, the length is the sum of the length of each part.\r\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\r\n * @param {SphereMetricOptions=} opt_options Options for the\r\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\r\n * You can change this by providing a `projection` option.\r\n * @return {number} The spherical length (in meters).\r\n * @api\r\n */\r\nexport function getLength(geometry, opt_options) {\r\n  const options = opt_options || {};\r\n  const radius = options.radius || DEFAULT_RADIUS;\r\n  const projection = options.projection || 'EPSG:3857';\r\n  const type = geometry.getType();\r\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\r\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\r\n  }\r\n  let length = 0;\r\n  let coordinates, coords, i, ii, j, jj;\r\n  switch (type) {\r\n    case GeometryType.POINT:\r\n    case GeometryType.MULTI_POINT: {\r\n      break;\r\n    }\r\n    case GeometryType.LINE_STRING:\r\n    case GeometryType.LINEAR_RING: {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n      length = getLengthInternal(coordinates, radius);\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_LINE_STRING:\r\n    case GeometryType.POLYGON: {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        length += getLengthInternal(coordinates[i], radius);\r\n      }\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POLYGON: {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coords = coordinates[i];\r\n        for (j = 0, jj = coords.length; j < jj; ++j) {\r\n          length += getLengthInternal(coords[j], radius);\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case GeometryType.GEOMETRY_COLLECTION: {\r\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\r\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n        length += getLength(geometries[i], opt_options);\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported geometry type: ' + type);\r\n    }\r\n  }\r\n  return length;\r\n}\r\n\r\n\r\n/**\r\n * Returns the spherical area for a list of coordinates.\r\n *\r\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\r\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\r\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\r\n * Laboratory, Pasadena, CA, June 2007\r\n *\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\r\n * ring. If the ring is oriented clockwise, the area will be positive,\r\n * otherwise it will be negative.\r\n * @param {number} radius The sphere radius.\r\n * @return {number} Area (in square meters).\r\n */\r\nfunction getAreaInternal(coordinates, radius) {\r\n  let area = 0;\r\n  const len = coordinates.length;\r\n  let x1 = coordinates[len - 1][0];\r\n  let y1 = coordinates[len - 1][1];\r\n  for (let i = 0; i < len; i++) {\r\n    const x2 = coordinates[i][0];\r\n    const y2 = coordinates[i][1];\r\n    area += toRadians(x2 - x1) *\r\n        (2 + Math.sin(toRadians(y1)) +\r\n        Math.sin(toRadians(y2)));\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return area * radius * radius / 2.0;\r\n}\r\n\r\n\r\n/**\r\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\r\n * that polygon edges are segments of great circles on a sphere.\r\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\r\n * @param {SphereMetricOptions=} opt_options Options for the area\r\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\r\n *     You can change this by providing a `projection` option.\r\n * @return {number} The spherical area (in square meters).\r\n * @api\r\n */\r\nexport function getArea(geometry, opt_options) {\r\n  const options = opt_options || {};\r\n  const radius = options.radius || DEFAULT_RADIUS;\r\n  const projection = options.projection || 'EPSG:3857';\r\n  const type = geometry.getType();\r\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\r\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\r\n  }\r\n  let area = 0;\r\n  let coordinates, coords, i, ii, j, jj;\r\n  switch (type) {\r\n    case GeometryType.POINT:\r\n    case GeometryType.MULTI_POINT:\r\n    case GeometryType.LINE_STRING:\r\n    case GeometryType.MULTI_LINE_STRING:\r\n    case GeometryType.LINEAR_RING: {\r\n      break;\r\n    }\r\n    case GeometryType.POLYGON: {\r\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\r\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\r\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\r\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\r\n      }\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POLYGON: {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coords = coordinates[i];\r\n        area += Math.abs(getAreaInternal(coords[0], radius));\r\n        for (j = 1, jj = coords.length; j < jj; ++j) {\r\n          area -= Math.abs(getAreaInternal(coords[j], radius));\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case GeometryType.GEOMETRY_COLLECTION: {\r\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\r\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n        area += getArea(geometries[i], opt_options);\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported geometry type: ' + type);\r\n    }\r\n  }\r\n  return area;\r\n}\r\n\r\n\r\n/**\r\n * Returns the coordinate at the given distance and bearing from `c1`.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\r\n * @param {number} distance The great-circle distance between the origin\r\n *     point and the target point.\r\n * @param {number} bearing The bearing (in radians).\r\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\r\n *     mean radius using the WGS84 ellipsoid.\r\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\r\n */\r\nexport function offset(c1, distance, bearing, opt_radius) {\r\n  const radius = opt_radius || DEFAULT_RADIUS;\r\n  const lat1 = toRadians(c1[1]);\r\n  const lon1 = toRadians(c1[0]);\r\n  const dByR = distance / radius;\r\n  const lat = Math.asin(\r\n    Math.sin(lat1) * Math.cos(dByR) +\r\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\r\n  const lon = lon1 + Math.atan2(\r\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\r\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\r\n  return [toDegrees(lon), toDegrees(lat)];\r\n}\r\n","/**\r\n * @module ol/proj/Units\r\n */\r\n\r\n/**\r\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\r\n * `'us-ft'`.\r\n * @enum {string}\r\n */\r\nconst Units = {\r\n  DEGREES: 'degrees',\r\n  FEET: 'ft',\r\n  METERS: 'm',\r\n  PIXELS: 'pixels',\r\n  TILE_PIXELS: 'tile-pixels',\r\n  USFEET: 'us-ft'\r\n};\r\n\r\n\r\n/**\r\n * Meters per unit lookup table.\r\n * @const\r\n * @type {Object<Units, number>}\r\n * @api\r\n */\r\nexport const METERS_PER_UNIT = {};\r\n// use the radius of the Normal sphere\r\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\r\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\r\nMETERS_PER_UNIT[Units.METERS] = 1;\r\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\r\n\r\nexport default Units;\r\n","/**\r\n * @module ol/proj/Projection\r\n */\r\nimport {METERS_PER_UNIT} from './Units.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\r\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\r\n * proj4 projection is defined for `code`.\r\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\r\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\r\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\r\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\r\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\r\n * lookup table.\r\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\r\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\r\n * Function to determine resolution at a point. The function is called with a\r\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\r\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\r\n * the default {@link module:ol/proj#getPointResolution} function will be used.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Projection definition class. One of these is created for each projection\r\n * supported in the application and stored in the {@link module:ol/proj} namespace.\r\n * You can use these in applications, but this is not required, as API params\r\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\r\n * code will suffice.\r\n *\r\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\r\n * projection.\r\n *\r\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\r\n * with the following aliases:\r\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\r\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\r\n *     urn:x-ogc:def:crs:EPSG:4326\r\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\r\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\r\n *\r\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\r\n * be added using `proj4.defs()`. After all required projection definitions are\r\n * added, call the {@link module:ol/proj/proj4~register} function.\r\n *\r\n * @api\r\n */\r\nclass Projection {\r\n\r\n  /**\r\n   * @param {Options} options Projection options.\r\n   */\r\n  constructor(options) {\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.code_ = options.code;\r\n\r\n    /**\r\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\r\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\r\n     * tile.\r\n     * @private\r\n     * @type {import(\"./Units.js\").default}\r\n     */\r\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\r\n\r\n    /**\r\n     * Validity extent of the projection in projected coordinates. For projections\r\n     * with `TILE_PIXELS` units, this is the extent of the tile in\r\n     * tile pixel space.\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = options.extent !== undefined ? options.extent : null;\r\n\r\n    /**\r\n     * Extent of the world in EPSG:4326. For projections with\r\n     * `TILE_PIXELS` units, this is the extent of the tile in\r\n     * projected coordinate space.\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.worldExtent_ = options.worldExtent !== undefined ?\r\n      options.worldExtent : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\r\n      options.axisOrientation : 'enu';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.global_ = options.global !== undefined ? options.global : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.canWrapX_ = !!(this.global_ && this.extent_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\r\n     */\r\n    this.getPointResolutionFunc_ = options.getPointResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.defaultTileGrid_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.metersPerUnit_ = options.metersPerUnit;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} The projection is suitable for wrapping the x-axis\r\n   */\r\n  canWrapX() {\r\n    return this.canWrapX_;\r\n  }\r\n\r\n  /**\r\n   * Get the code for this projection, e.g. 'EPSG:4326'.\r\n   * @return {string} Code.\r\n   * @api\r\n   */\r\n  getCode() {\r\n    return this.code_;\r\n  }\r\n\r\n  /**\r\n   * Get the validity extent for this projection.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return this.extent_;\r\n  }\r\n\r\n  /**\r\n   * Get the units of this projection.\r\n   * @return {import(\"./Units.js\").default} Units.\r\n   * @api\r\n   */\r\n  getUnits() {\r\n    return this.units_;\r\n  }\r\n\r\n  /**\r\n   * Get the amount of meters per unit of this projection.  If the projection is\r\n   * not configured with `metersPerUnit` or a units identifier, the return is\r\n   * `undefined`.\r\n   * @return {number|undefined} Meters.\r\n   * @api\r\n   */\r\n  getMetersPerUnit() {\r\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\r\n  }\r\n\r\n  /**\r\n   * Get the world extent for this projection.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getWorldExtent() {\r\n    return this.worldExtent_;\r\n  }\r\n\r\n  /**\r\n   * Get the axis orientation of this projection.\r\n   * Example values are:\r\n   * enu - the default easting, northing, elevation.\r\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\r\n   *     or south orientated transverse mercator.\r\n   * wnu - westing, northing, up - some planetary coordinate systems have\r\n   *     \"west positive\" coordinate systems\r\n   * @return {string} Axis orientation.\r\n   * @api\r\n   */\r\n  getAxisOrientation() {\r\n    return this.axisOrientation_;\r\n  }\r\n\r\n  /**\r\n   * Is this projection a global projection which spans the whole world?\r\n   * @return {boolean} Whether the projection is global.\r\n   * @api\r\n   */\r\n  isGlobal() {\r\n    return this.global_;\r\n  }\r\n\r\n  /**\r\n   * Set if the projection is a global projection which spans the whole world\r\n   * @param {boolean} global Whether the projection is global.\r\n   * @api\r\n   */\r\n  setGlobal(global) {\r\n    this.global_ = global;\r\n    this.canWrapX_ = !!(global && this.extent_);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\r\n   */\r\n  getDefaultTileGrid() {\r\n    return this.defaultTileGrid_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\r\n   */\r\n  setDefaultTileGrid(tileGrid) {\r\n    this.defaultTileGrid_ = tileGrid;\r\n  }\r\n\r\n  /**\r\n   * Set the validity extent for this projection.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @api\r\n   */\r\n  setExtent(extent) {\r\n    this.extent_ = extent;\r\n    this.canWrapX_ = !!(this.global_ && extent);\r\n  }\r\n\r\n  /**\r\n   * Set the world extent for this projection.\r\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\r\n   *     [minlon, minlat, maxlon, maxlat].\r\n   * @api\r\n   */\r\n  setWorldExtent(worldExtent) {\r\n    this.worldExtent_ = worldExtent;\r\n  }\r\n\r\n  /**\r\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\r\n   * for this projection.\r\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\r\n   * @api\r\n   */\r\n  setGetPointResolution(func) {\r\n    this.getPointResolutionFunc_ = func;\r\n  }\r\n\r\n  /**\r\n   * Get the custom point resolution function for this projection (if set).\r\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\r\n   * resolution function (if set).\r\n   */\r\n  getPointResolutionFunc() {\r\n    return this.getPointResolutionFunc_;\r\n  }\r\n}\r\n\r\nexport default Projection;\r\n","/**\r\n * @module ol/proj/epsg3857\r\n */\r\nimport {cosh} from '../math.js';\r\nimport Projection from './Projection.js';\r\nimport Units from './Units.js';\r\n\r\n\r\n/**\r\n * Radius of WGS84 sphere\r\n *\r\n * @const\r\n * @type {number}\r\n */\r\nexport const RADIUS = 6378137;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const HALF_SIZE = Math.PI * RADIUS;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport const EXTENT = [\r\n  -HALF_SIZE, -HALF_SIZE,\r\n  HALF_SIZE, HALF_SIZE\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Projection object for web/spherical Mercator (EPSG:3857).\r\n */\r\nclass EPSG3857Projection extends Projection {\r\n\r\n  /**\r\n   * @param {string} code Code.\r\n   */\r\n  constructor(code) {\r\n    super({\r\n      code: code,\r\n      units: Units.METERS,\r\n      extent: EXTENT,\r\n      global: true,\r\n      worldExtent: WORLD_EXTENT,\r\n      getPointResolution: function(resolution, point) {\r\n        return resolution / cosh(point[1] / RADIUS);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Projections equal to EPSG:3857.\r\n *\r\n * @const\r\n * @type {Array<import(\"./Projection.js\").default>}\r\n */\r\nexport const PROJECTIONS = [\r\n  new EPSG3857Projection('EPSG:3857'),\r\n  new EPSG3857Projection('EPSG:102100'),\r\n  new EPSG3857Projection('EPSG:102113'),\r\n  new EPSG3857Projection('EPSG:900913'),\r\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\r\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\r\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\r\n];\r\n\r\n\r\n/**\r\n * Transformation from EPSG:4326 to EPSG:3857.\r\n *\r\n * @param {Array<number>} input Input array of coordinate values.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension (default is `2`).\r\n * @return {Array<number>} Output array of coordinate values.\r\n */\r\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\r\n  const length = input.length;\r\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\r\n  let output = opt_output;\r\n  if (output === undefined) {\r\n    if (dimension > 2) {\r\n      // preserve values beyond second dimension\r\n      output = input.slice();\r\n    } else {\r\n      output = new Array(length);\r\n    }\r\n  }\r\n  const halfSize = HALF_SIZE;\r\n  for (let i = 0; i < length; i += dimension) {\r\n    output[i] = halfSize * input[i] / 180;\r\n    let y = RADIUS *\r\n        Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\r\n    if (y > halfSize) {\r\n      y = halfSize;\r\n    } else if (y < -halfSize) {\r\n      y = -halfSize;\r\n    }\r\n    output[i + 1] = y;\r\n  }\r\n  return output;\r\n}\r\n\r\n\r\n/**\r\n * Transformation from EPSG:3857 to EPSG:4326.\r\n *\r\n * @param {Array<number>} input Input array of coordinate values.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension (default is `2`).\r\n * @return {Array<number>} Output array of coordinate values.\r\n */\r\nexport function toEPSG4326(input, opt_output, opt_dimension) {\r\n  const length = input.length;\r\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\r\n  let output = opt_output;\r\n  if (output === undefined) {\r\n    if (dimension > 2) {\r\n      // preserve values beyond second dimension\r\n      output = input.slice();\r\n    } else {\r\n      output = new Array(length);\r\n    }\r\n  }\r\n  for (let i = 0; i < length; i += dimension) {\r\n    output[i] = 180 * input[i] / HALF_SIZE;\r\n    output[i + 1] = 360 * Math.atan(\r\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\r\n  }\r\n  return output;\r\n}\r\n","/**\r\n * @module ol/proj/epsg4326\r\n */\r\nimport Projection from './Projection.js';\r\nimport Units from './Units.js';\r\n\r\n\r\n/**\r\n * Semi-major radius of the WGS84 ellipsoid.\r\n *\r\n * @const\r\n * @type {number}\r\n */\r\nexport const RADIUS = 6378137;\r\n\r\n\r\n/**\r\n * Extent of the EPSG:4326 projection which is the whole world.\r\n *\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport const EXTENT = [-180, -90, 180, 90];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\r\n *\r\n * Note that OpenLayers does not strictly comply with the EPSG definition.\r\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\r\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\r\n */\r\nclass EPSG4326Projection extends Projection {\r\n\r\n  /**\r\n   * @param {string} code Code.\r\n   * @param {string=} opt_axisOrientation Axis orientation.\r\n   */\r\n  constructor(code, opt_axisOrientation) {\r\n    super({\r\n      code: code,\r\n      units: Units.DEGREES,\r\n      extent: EXTENT,\r\n      axisOrientation: opt_axisOrientation,\r\n      global: true,\r\n      metersPerUnit: METERS_PER_UNIT,\r\n      worldExtent: EXTENT\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Projections equal to EPSG:4326.\r\n *\r\n * @const\r\n * @type {Array<import(\"./Projection.js\").default>}\r\n */\r\nexport const PROJECTIONS = [\r\n  new EPSG4326Projection('CRS:84'),\r\n  new EPSG4326Projection('EPSG:4326', 'neu'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\r\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\r\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\r\n];\r\n","/**\r\n * @module ol/proj/projections\r\n */\r\n\r\n\r\n/**\r\n * @type {Object<string, import(\"./Projection.js\").default>}\r\n */\r\nlet cache = {};\r\n\r\n\r\n/**\r\n * Clear the projections cache.\r\n */\r\nexport function clear() {\r\n  cache = {};\r\n}\r\n\r\n\r\n/**\r\n * Get a cached projection by code.\r\n * @param {string} code The code for the projection.\r\n * @return {import(\"./Projection.js\").default} The projection (if cached).\r\n */\r\nexport function get(code) {\r\n  return cache[code] || null;\r\n}\r\n\r\n\r\n/**\r\n * Add a projection to the cache.\r\n * @param {string} code The projection code.\r\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\r\n */\r\nexport function add(code, projection) {\r\n  cache[code] = projection;\r\n}\r\n","/**\r\n * @module ol/proj/transforms\r\n */\r\nimport {isEmpty} from '../obj.js';\r\n\r\n\r\n/**\r\n * @private\r\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\r\n */\r\nlet transforms = {};\r\n\r\n\r\n/**\r\n * Clear the transform cache.\r\n */\r\nexport function clear() {\r\n  transforms = {};\r\n}\r\n\r\n\r\n/**\r\n * Registers a conversion function to convert coordinates from the source\r\n * projection to the destination projection.\r\n *\r\n * @param {import(\"./Projection.js\").default} source Source.\r\n * @param {import(\"./Projection.js\").default} destination Destination.\r\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\r\n */\r\nexport function add(source, destination, transformFn) {\r\n  const sourceCode = source.getCode();\r\n  const destinationCode = destination.getCode();\r\n  if (!(sourceCode in transforms)) {\r\n    transforms[sourceCode] = {};\r\n  }\r\n  transforms[sourceCode][destinationCode] = transformFn;\r\n}\r\n\r\n\r\n/**\r\n * Unregisters the conversion function to convert coordinates from the source\r\n * projection to the destination projection.  This method is used to clean up\r\n * cached transforms during testing.\r\n *\r\n * @param {import(\"./Projection.js\").default} source Source projection.\r\n * @param {import(\"./Projection.js\").default} destination Destination projection.\r\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\r\n */\r\nexport function remove(source, destination) {\r\n  const sourceCode = source.getCode();\r\n  const destinationCode = destination.getCode();\r\n  const transform = transforms[sourceCode][destinationCode];\r\n  delete transforms[sourceCode][destinationCode];\r\n  if (isEmpty(transforms[sourceCode])) {\r\n    delete transforms[sourceCode];\r\n  }\r\n  return transform;\r\n}\r\n\r\n\r\n/**\r\n * Get a transform given a source code and a destination code.\r\n * @param {string} sourceCode The code for the source projection.\r\n * @param {string} destinationCode The code for the destination projection.\r\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\r\n */\r\nexport function get(sourceCode, destinationCode) {\r\n  let transform;\r\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\r\n    transform = transforms[sourceCode][destinationCode];\r\n  }\r\n  return transform;\r\n}\r\n","/**\r\n * @module ol/proj\r\n */\r\n\r\n/**\r\n * The ol/proj module stores:\r\n * * a list of {@link module:ol/proj/Projection}\r\n * objects, one for each projection supported by the application\r\n * * a list of transform functions needed to convert coordinates in one projection\r\n * into another.\r\n *\r\n * The static functions are the methods used to maintain these.\r\n * Each transform function can handle not only simple coordinate pairs, but also\r\n * large arrays of coordinates such as vector geometries.\r\n *\r\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\r\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\r\n * for example by Bing Maps or OpenStreetMap), together with the relevant\r\n * transform functions.\r\n *\r\n * Additional transforms may be added by using the http://proj4js.org/\r\n * library (version 2.2 or later). You can use the full build supplied by\r\n * Proj4js, or create a custom build to support those projections you need; see\r\n * the Proj4js website for how to do this. You also need the Proj4js definitions\r\n * for the required projections. These definitions can be obtained from\r\n * https://epsg.io/, and are a JS function, so can be loaded in a script\r\n * tag (as in the examples) or pasted into your application.\r\n *\r\n * After all required projection definitions are added to proj4's registry (by\r\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\r\n * package. Existing transforms are not changed by this function. See\r\n * examples/wms-image-custom-proj for an example of this.\r\n *\r\n * Additional projection definitions can be registered with `proj4.defs()` any\r\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\r\n * know in advance what projections are needed, you can initially load minimal\r\n * support and then load whichever are requested.\r\n *\r\n * Note that Proj4js does not support projection extents. If you want to add\r\n * one for creating default tile grids, you can add it after the Projection\r\n * object has been created with `setExtent`, for example,\r\n * `get('EPSG:1234').setExtent(extent)`.\r\n *\r\n * In addition to Proj4js support, any transform functions can be added with\r\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\r\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\r\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\r\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\r\n * examples/wms-custom-proj for an example of this.\r\n *\r\n * Note that if no transforms are needed and you only need to define the\r\n * projection, just add a {@link module:ol/proj/Projection} with\r\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\r\n * this.\r\n */\r\nimport {getDistance} from './sphere.js';\r\nimport {applyTransform} from './extent.js';\r\nimport {modulo} from './math.js';\r\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\r\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\r\nimport Projection from './proj/Projection.js';\r\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\r\nimport * as projections from './proj/projections.js';\r\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\r\n\r\n\r\n/**\r\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\r\n * string or undefined.\r\n * @typedef {Projection|string|undefined} ProjectionLike\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * A transform function accepts an array of input coordinate values, an optional\r\n * output array, and an optional dimension (default should be 2).  The function\r\n * transforms the input coordinate values, populates the output array, and\r\n * returns the output array.\r\n *\r\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\r\n * @api\r\n */\r\n\r\n\r\nexport {METERS_PER_UNIT};\r\n\r\nexport {Projection};\r\n\r\n/**\r\n * @param {Array<number>} input Input coordinate array.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension.\r\n * @return {Array<number>} Output coordinate array (new array, same coordinate\r\n *     values).\r\n */\r\nexport function cloneTransform(input, opt_output, opt_dimension) {\r\n  let output;\r\n  if (opt_output !== undefined) {\r\n    for (let i = 0, ii = input.length; i < ii; ++i) {\r\n      opt_output[i] = input[i];\r\n    }\r\n    output = opt_output;\r\n  } else {\r\n    output = input.slice();\r\n  }\r\n  return output;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} input Input coordinate array.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension.\r\n * @return {Array<number>} Input coordinate array (same array as input).\r\n */\r\nexport function identityTransform(input, opt_output, opt_dimension) {\r\n  if (opt_output !== undefined && input !== opt_output) {\r\n    for (let i = 0, ii = input.length; i < ii; ++i) {\r\n      opt_output[i] = input[i];\r\n    }\r\n    input = opt_output;\r\n  }\r\n  return input;\r\n}\r\n\r\n\r\n/**\r\n * Add a Projection object to the list of supported projections that can be\r\n * looked up by their code.\r\n *\r\n * @param {Projection} projection Projection instance.\r\n * @api\r\n */\r\nexport function addProjection(projection) {\r\n  projections.add(projection.getCode(), projection);\r\n  addTransformFunc(projection, projection, cloneTransform);\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<Projection>} projections Projections.\r\n */\r\nexport function addProjections(projections) {\r\n  projections.forEach(addProjection);\r\n}\r\n\r\n\r\n/**\r\n * Fetches a Projection object for the code specified.\r\n *\r\n * @param {ProjectionLike} projectionLike Either a code string which is\r\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\r\n *     existing projection object, or undefined.\r\n * @return {Projection} Projection object, or null if not in list.\r\n * @api\r\n */\r\nexport function get(projectionLike) {\r\n  return typeof projectionLike === 'string' ?\r\n    projections.get(/** @type {string} */ (projectionLike)) :\r\n    (/** @type {Projection} */ (projectionLike) || null);\r\n}\r\n\r\n\r\n/**\r\n * Get the resolution of the point in degrees or distance units.\r\n * For projections with degrees as the unit this will simply return the\r\n * provided resolution. For other projections the point resolution is\r\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\r\n * measuring its width and height on the normal sphere,\r\n * and taking the average of the width and height.\r\n * A custom function can be provided for a specific projection, either\r\n * by setting the `getPointResolution` option in the\r\n * {@link module:ol/proj/Projection~Projection} constructor or by using\r\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\r\n * projection object.\r\n * @param {ProjectionLike} projection The projection.\r\n * @param {number} resolution Nominal resolution in projection units.\r\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\r\n * @param {Units=} opt_units Units to get the point resolution in.\r\n * Default is the projection's units.\r\n * @return {number} Point resolution.\r\n * @api\r\n */\r\nexport function getPointResolution(projection, resolution, point, opt_units) {\r\n  projection = get(projection);\r\n  let pointResolution;\r\n  const getter = projection.getPointResolutionFunc();\r\n  if (getter) {\r\n    pointResolution = getter(resolution, point);\r\n    if (opt_units && opt_units !== projection.getUnits()) {\r\n      const metersPerUnit = projection.getMetersPerUnit();\r\n      if (metersPerUnit) {\r\n        pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\r\n      }\r\n    }\r\n  } else {\r\n    const units = projection.getUnits();\r\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\r\n      pointResolution = resolution;\r\n    } else {\r\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\r\n      // measuring its width and height on the normal sphere, and taking the\r\n      // average of the width and height.\r\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\r\n      let vertices = [\r\n        point[0] - resolution / 2, point[1],\r\n        point[0] + resolution / 2, point[1],\r\n        point[0], point[1] - resolution / 2,\r\n        point[0], point[1] + resolution / 2\r\n      ];\r\n      vertices = toEPSG4326(vertices, vertices, 2);\r\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\r\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\r\n      pointResolution = (width + height) / 2;\r\n      const metersPerUnit = opt_units ?\r\n        METERS_PER_UNIT[opt_units] :\r\n        projection.getMetersPerUnit();\r\n      if (metersPerUnit !== undefined) {\r\n        pointResolution /= metersPerUnit;\r\n      }\r\n    }\r\n  }\r\n  return pointResolution;\r\n}\r\n\r\n\r\n/**\r\n * Registers transformation functions that don't alter coordinates. Those allow\r\n * to transform between projections with equal meaning.\r\n *\r\n * @param {Array<Projection>} projections Projections.\r\n * @api\r\n */\r\nexport function addEquivalentProjections(projections) {\r\n  addProjections(projections);\r\n  projections.forEach(function(source) {\r\n    projections.forEach(function(destination) {\r\n      if (source !== destination) {\r\n        addTransformFunc(source, destination, cloneTransform);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Registers transformation functions to convert coordinates in any projection\r\n * in projection1 to any projection in projection2.\r\n *\r\n * @param {Array<Projection>} projections1 Projections with equal\r\n *     meaning.\r\n * @param {Array<Projection>} projections2 Projections with equal\r\n *     meaning.\r\n * @param {TransformFunction} forwardTransform Transformation from any\r\n *   projection in projection1 to any projection in projection2.\r\n * @param {TransformFunction} inverseTransform Transform from any projection\r\n *   in projection2 to any projection in projection1..\r\n */\r\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\r\n  projections1.forEach(function(projection1) {\r\n    projections2.forEach(function(projection2) {\r\n      addTransformFunc(projection1, projection2, forwardTransform);\r\n      addTransformFunc(projection2, projection1, inverseTransform);\r\n    });\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Clear all cached projections and transforms.\r\n */\r\nexport function clearAllProjections() {\r\n  projections.clear();\r\n  clearTransformFuncs();\r\n}\r\n\r\n\r\n/**\r\n * @param {Projection|string|undefined} projection Projection.\r\n * @param {string} defaultCode Default code.\r\n * @return {Projection} Projection.\r\n */\r\nexport function createProjection(projection, defaultCode) {\r\n  if (!projection) {\r\n    return get(defaultCode);\r\n  } else if (typeof projection === 'string') {\r\n    return get(projection);\r\n  } else {\r\n    return (\r\n      /** @type {Projection} */ (projection)\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\r\n * function.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\r\n *     transform.\r\n * @return {TransformFunction} Transform function.\r\n */\r\nexport function createTransformFromCoordinateTransform(coordTransform) {\r\n  return (\r\n    /**\r\n     * @param {Array<number>} input Input.\r\n     * @param {Array<number>=} opt_output Output.\r\n     * @param {number=} opt_dimension Dimension.\r\n     * @return {Array<number>} Output.\r\n     */\r\n    function(input, opt_output, opt_dimension) {\r\n      const length = input.length;\r\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\r\n      const output = opt_output !== undefined ? opt_output : new Array(length);\r\n      for (let i = 0; i < length; i += dimension) {\r\n        const point = coordTransform([input[i], input[i + 1]]);\r\n        output[i] = point[0];\r\n        output[i + 1] = point[1];\r\n        for (let j = dimension - 1; j >= 2; --j) {\r\n          output[i + j] = input[i + j];\r\n        }\r\n      }\r\n      return output;\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Registers coordinate transform functions to convert coordinates between the\r\n * source projection and the destination projection.\r\n * The forward and inverse functions convert coordinate pairs; this function\r\n * converts these into the functions used internally which also handle\r\n * extents and coordinate arrays.\r\n *\r\n * @param {ProjectionLike} source Source projection.\r\n * @param {ProjectionLike} destination Destination projection.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\r\n *     function (that is, from the source projection to the destination\r\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\r\n *     the transformed {@link module:ol/coordinate~Coordinate}.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\r\n *     function (that is, from the destination projection to the source\r\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\r\n *     the transformed {@link module:ol/coordinate~Coordinate}.\r\n * @api\r\n */\r\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\r\n  const sourceProj = get(source);\r\n  const destProj = get(destination);\r\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\r\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\r\n}\r\n\r\n\r\n/**\r\n * Transforms a coordinate from longitude/latitude to a different projection.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\r\n *     an array with longitude as 1st and latitude as 2nd element.\r\n * @param {ProjectionLike=} opt_projection Target projection. The\r\n *     default is Web Mercator, i.e. 'EPSG:3857'.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\r\n * @api\r\n */\r\nexport function fromLonLat(coordinate, opt_projection) {\r\n  return transform(coordinate, 'EPSG:4326',\r\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\r\n}\r\n\r\n\r\n/**\r\n * Transforms a coordinate to longitude/latitude.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\r\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\r\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\r\n *     with longitude as 1st and latitude as 2nd element.\r\n * @api\r\n */\r\nexport function toLonLat(coordinate, opt_projection) {\r\n  const lonLat = transform(coordinate,\r\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\r\n  const lon = lonLat[0];\r\n  if (lon < -180 || lon > 180) {\r\n    lonLat[0] = modulo(lon + 180, 360) - 180;\r\n  }\r\n  return lonLat;\r\n}\r\n\r\n\r\n/**\r\n * Checks if two projections are the same, that is every coordinate in one\r\n * projection does represent the same geographic point as the same coordinate in\r\n * the other projection.\r\n *\r\n * @param {Projection} projection1 Projection 1.\r\n * @param {Projection} projection2 Projection 2.\r\n * @return {boolean} Equivalent.\r\n * @api\r\n */\r\nexport function equivalent(projection1, projection2) {\r\n  if (projection1 === projection2) {\r\n    return true;\r\n  }\r\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\r\n  if (projection1.getCode() === projection2.getCode()) {\r\n    return equalUnits;\r\n  } else {\r\n    const transformFunc = getTransformFromProjections(projection1, projection2);\r\n    return transformFunc === cloneTransform && equalUnits;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Searches in the list of transform functions for the function for converting\r\n * coordinates from the source projection to the destination projection.\r\n *\r\n * @param {Projection} sourceProjection Source Projection object.\r\n * @param {Projection} destinationProjection Destination Projection\r\n *     object.\r\n * @return {TransformFunction} Transform function.\r\n */\r\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\r\n  const sourceCode = sourceProjection.getCode();\r\n  const destinationCode = destinationProjection.getCode();\r\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\r\n  if (!transformFunc) {\r\n    transformFunc = identityTransform;\r\n  }\r\n  return transformFunc;\r\n}\r\n\r\n\r\n/**\r\n * Given the projection-like objects, searches for a transformation\r\n * function to convert a coordinates array from the source projection to the\r\n * destination projection.\r\n *\r\n * @param {ProjectionLike} source Source.\r\n * @param {ProjectionLike} destination Destination.\r\n * @return {TransformFunction} Transform function.\r\n * @api\r\n */\r\nexport function getTransform(source, destination) {\r\n  const sourceProjection = get(source);\r\n  const destinationProjection = get(destination);\r\n  return getTransformFromProjections(sourceProjection, destinationProjection);\r\n}\r\n\r\n\r\n/**\r\n * Transforms a coordinate from source projection to destination projection.\r\n * This returns a new coordinate (and does not modify the original).\r\n *\r\n * See {@link module:ol/proj~transformExtent} for extent transformation.\r\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\r\n * subclasses for geometry transforms.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {ProjectionLike} source Source projection-like.\r\n * @param {ProjectionLike} destination Destination projection-like.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n * @api\r\n */\r\nexport function transform(coordinate, source, destination) {\r\n  const transformFunc = getTransform(source, destination);\r\n  return transformFunc(coordinate, undefined, coordinate.length);\r\n}\r\n\r\n\r\n/**\r\n * Transforms an extent from source projection to destination projection.  This\r\n * returns a new extent (and does not modify the original).\r\n *\r\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\r\n * @param {ProjectionLike} source Source projection-like.\r\n * @param {ProjectionLike} destination Destination projection-like.\r\n * @return {import(\"./extent.js\").Extent} The transformed extent.\r\n * @api\r\n */\r\nexport function transformExtent(extent, source, destination) {\r\n  const transformFunc = getTransform(source, destination);\r\n  return applyTransform(extent, transformFunc);\r\n}\r\n\r\n\r\n/**\r\n * Transforms the given point to the destination projection.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\r\n * @param {Projection} sourceProjection Source projection.\r\n * @param {Projection} destinationProjection Destination projection.\r\n * @return {import(\"./coordinate.js\").Coordinate} Point.\r\n */\r\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\r\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\r\n  return transformFunc(point);\r\n}\r\n\r\n/**\r\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\r\n * by when this module is executed and should only need to be called again after\r\n * `clearAllProjections()` is called (e.g. in tests).\r\n */\r\nexport function addCommon() {\r\n  // Add transformations that don't alter coordinates to convert within set of\r\n  // projections with equal meaning.\r\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\r\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\r\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\r\n  // coordinates and back.\r\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\r\n}\r\n\r\naddCommon();\r\n","/**\r\n * @module ol/transform\r\n */\r\nimport {assert} from './asserts.js';\r\n\r\n\r\n/**\r\n * An array representing an affine 2d transformation for use with\r\n * {@link module:ol/transform} functions. The array has 6 elements.\r\n * @typedef {!Array<number>} Transform\r\n */\r\n\r\n\r\n/**\r\n * Collection of affine 2d transformation functions. The functions work on an\r\n * array of 6 elements. The element order is compatible with the [SVGMatrix\r\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\r\n * a subset (elements a to f) of a 3×3 matrix:\r\n * ```\r\n * [ a c e ]\r\n * [ b d f ]\r\n * [ 0 0 1 ]\r\n * ```\r\n */\r\n\r\n\r\n/**\r\n * @private\r\n * @type {Transform}\r\n */\r\nconst tmp_ = new Array(6);\r\n\r\n\r\n/**\r\n * Create an identity transform.\r\n * @return {!Transform} Identity transform.\r\n */\r\nexport function create() {\r\n  return [1, 0, 0, 1, 0, 0];\r\n}\r\n\r\n\r\n/**\r\n * Resets the given transform to an identity transform.\r\n * @param {!Transform} transform Transform.\r\n * @return {!Transform} Transform.\r\n */\r\nexport function reset(transform) {\r\n  return set(transform, 1, 0, 0, 1, 0, 0);\r\n}\r\n\r\n\r\n/**\r\n * Multiply the underlying matrices of two transforms and return the result in\r\n * the first transform.\r\n * @param {!Transform} transform1 Transform parameters of matrix 1.\r\n * @param {!Transform} transform2 Transform parameters of matrix 2.\r\n * @return {!Transform} transform1 multiplied with transform2.\r\n */\r\nexport function multiply(transform1, transform2) {\r\n  const a1 = transform1[0];\r\n  const b1 = transform1[1];\r\n  const c1 = transform1[2];\r\n  const d1 = transform1[3];\r\n  const e1 = transform1[4];\r\n  const f1 = transform1[5];\r\n  const a2 = transform2[0];\r\n  const b2 = transform2[1];\r\n  const c2 = transform2[2];\r\n  const d2 = transform2[3];\r\n  const e2 = transform2[4];\r\n  const f2 = transform2[5];\r\n\r\n  transform1[0] = a1 * a2 + c1 * b2;\r\n  transform1[1] = b1 * a2 + d1 * b2;\r\n  transform1[2] = a1 * c2 + c1 * d2;\r\n  transform1[3] = b1 * c2 + d1 * d2;\r\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\r\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\r\n\r\n  return transform1;\r\n}\r\n\r\n/**\r\n * Set the transform components a-f on a given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} a The a component of the transform.\r\n * @param {number} b The b component of the transform.\r\n * @param {number} c The c component of the transform.\r\n * @param {number} d The d component of the transform.\r\n * @param {number} e The e component of the transform.\r\n * @param {number} f The f component of the transform.\r\n * @return {!Transform} Matrix with transform applied.\r\n */\r\nexport function set(transform, a, b, c, d, e, f) {\r\n  transform[0] = a;\r\n  transform[1] = b;\r\n  transform[2] = c;\r\n  transform[3] = d;\r\n  transform[4] = e;\r\n  transform[5] = f;\r\n  return transform;\r\n}\r\n\r\n\r\n/**\r\n * Set transform on one matrix from another matrix.\r\n * @param {!Transform} transform1 Matrix to set transform to.\r\n * @param {!Transform} transform2 Matrix to set transform from.\r\n * @return {!Transform} transform1 with transform from transform2 applied.\r\n */\r\nexport function setFromArray(transform1, transform2) {\r\n  transform1[0] = transform2[0];\r\n  transform1[1] = transform2[1];\r\n  transform1[2] = transform2[2];\r\n  transform1[3] = transform2[3];\r\n  transform1[4] = transform2[4];\r\n  transform1[5] = transform2[5];\r\n  return transform1;\r\n}\r\n\r\n\r\n/**\r\n * Transforms the given coordinate with the given transform returning the\r\n * resulting, transformed coordinate. The coordinate will be modified in-place.\r\n *\r\n * @param {Transform} transform The transformation.\r\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\r\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\r\n *     chained together.\r\n */\r\nexport function apply(transform, coordinate) {\r\n  const x = coordinate[0];\r\n  const y = coordinate[1];\r\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\r\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * Applies rotation to the given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} angle Angle in radians.\r\n * @return {!Transform} The rotated transform.\r\n */\r\nexport function rotate(transform, angle) {\r\n  const cos = Math.cos(angle);\r\n  const sin = Math.sin(angle);\r\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\r\n}\r\n\r\n\r\n/**\r\n * Applies scale to a given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} x Scale factor x.\r\n * @param {number} y Scale factor y.\r\n * @return {!Transform} The scaled transform.\r\n */\r\nexport function scale(transform, x, y) {\r\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\r\n}\r\n\r\n/**\r\n * Creates a scale transform.\r\n * @param {!Transform} target Transform to overwrite.\r\n * @param {number} x Scale factor x.\r\n * @param {number} y Scale factor y.\r\n * @return {!Transform} The scale transform.\r\n */\r\nexport function makeScale(target, x, y) {\r\n  return set(target, x, 0, 0, y, 0, 0);\r\n}\r\n\r\n/**\r\n * Applies translation to the given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} dx Translation x.\r\n * @param {number} dy Translation y.\r\n * @return {!Transform} The translated transform.\r\n */\r\nexport function translate(transform, dx, dy) {\r\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\r\n}\r\n\r\n\r\n/**\r\n * Creates a composite transform given an initial translation, scale, rotation, and\r\n * final translation (in that order only, not commutative).\r\n * @param {!Transform} transform The transform (will be modified in place).\r\n * @param {number} dx1 Initial translation x.\r\n * @param {number} dy1 Initial translation y.\r\n * @param {number} sx Scale factor x.\r\n * @param {number} sy Scale factor y.\r\n * @param {number} angle Rotation (in counter-clockwise radians).\r\n * @param {number} dx2 Final translation x.\r\n * @param {number} dy2 Final translation y.\r\n * @return {!Transform} The composite transform.\r\n */\r\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\r\n  const sin = Math.sin(angle);\r\n  const cos = Math.cos(angle);\r\n  transform[0] = sx * cos;\r\n  transform[1] = sy * sin;\r\n  transform[2] = -sx * sin;\r\n  transform[3] = sy * cos;\r\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\r\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\r\n  return transform;\r\n}\r\n\r\n\r\n/**\r\n * Invert the given transform.\r\n * @param {!Transform} source The source transform to invert.\r\n * @return {!Transform} The inverted (source) transform.\r\n */\r\nexport function invert(source) {\r\n  return makeInverse(source, source);\r\n}\r\n\r\n/**\r\n * Invert the given transform.\r\n * @param {!Transform} target Transform to be set as the inverse of\r\n *     the source transform.\r\n * @param {!Transform} source The source transform to invert.\r\n * @return {!Transform} The inverted (target) transform.\r\n */\r\nexport function makeInverse(target, source) {\r\n  const det = determinant(source);\r\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\r\n\r\n  const a = source[0];\r\n  const b = source[1];\r\n  const c = source[2];\r\n  const d = source[3];\r\n  const e = source[4];\r\n  const f = source[5];\r\n\r\n  target[0] = d / det;\r\n  target[1] = -b / det;\r\n  target[2] = -c / det;\r\n  target[3] = a / det;\r\n  target[4] = (c * f - d * e) / det;\r\n  target[5] = -(a * f - b * e) / det;\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * Returns the determinant of the given matrix.\r\n * @param {!Transform} mat Matrix.\r\n * @return {number} Determinant.\r\n */\r\nexport function determinant(mat) {\r\n  return mat[0] * mat[3] - mat[1] * mat[2];\r\n}\r\n\r\n/**\r\n * A string version of the transform.  This can be used\r\n * for CSS transforms.\r\n * @param {!Transform} mat Matrix.\r\n * @return {string} The transform as a string.\r\n */\r\nexport function toString(mat) {\r\n  return 'matrix(' + mat.join(', ') + ')';\r\n}\r\n","/**\r\n * @module ol/geom/Geometry\r\n */\r\nimport {abstract} from '../util.js';\r\nimport BaseObject from '../Object.js';\r\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\r\nimport {transform2D} from './flat/transform.js';\r\nimport {get as getProjection, getTransform} from '../proj.js';\r\nimport Units from '../proj/Units.js';\r\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\r\n\r\n\r\n/**\r\n * @type {import(\"../transform.js\").Transform}\r\n */\r\nconst tmpTransform = createTransform();\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for vector geometries.\r\n *\r\n * To get notified of changes to the geometry, register a listener for the\r\n * generic `change` event on your geometry instance.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nclass Geometry extends BaseObject {\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.extentRevision_ = -1;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Object<string, Geometry>}\r\n     */\r\n    this.simplifiedGeometryCache = {};\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.simplifiedGeometryRevision = 0;\r\n\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @abstract\r\n   * @return {!Geometry} Clone.\r\n   */\r\n  clone() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @return {boolean} Contains (x, y).\r\n   */\r\n  containsXY(x, y) {\r\n    const coord = this.getClosestPoint([x, y]);\r\n    return coord[0] === x && coord[1] === y;\r\n  }\r\n\r\n  /**\r\n   * Return the closest point of the geometry to the passed point as\r\n   * {@link module:ol/coordinate~Coordinate coordinate}.\r\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\r\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\r\n   * @api\r\n   */\r\n  getClosestPoint(point, opt_closestPoint) {\r\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\r\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\r\n    return closestPoint;\r\n  }\r\n\r\n  /**\r\n   * Returns true if this geometry includes the specified coordinate. If the\r\n   * coordinate is on the boundary of the geometry, returns false.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @return {boolean} Contains coordinate.\r\n   * @api\r\n   */\r\n  intersectsCoordinate(coordinate) {\r\n    return this.containsXY(coordinate[0], coordinate[1]);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @protected\r\n   * @return {import(\"../extent.js\").Extent} extent Extent.\r\n   */\r\n  computeExtent(extent) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the extent of the geometry.\r\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\r\n   * @return {import(\"../extent.js\").Extent} extent Extent.\r\n   * @api\r\n   */\r\n  getExtent(opt_extent) {\r\n    if (this.extentRevision_ != this.getRevision()) {\r\n      this.extent_ = this.computeExtent(this.extent_);\r\n      this.extentRevision_ = this.getRevision();\r\n    }\r\n    return returnOrUpdate(this.extent_, opt_extent);\r\n  }\r\n\r\n  /**\r\n   * Rotate the geometry around a given coordinate. This modifies the geometry\r\n   * coordinates in place.\r\n   * @abstract\r\n   * @param {number} angle Rotation angle in radians.\r\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\r\n   * @api\r\n   */\r\n  rotate(angle, anchor) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Scale the geometry (with an optional origin).  This modifies the geometry\r\n   * coordinates in place.\r\n   * @abstract\r\n   * @param {number} sx The scaling factor in the x-direction.\r\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\r\n   *     sx).\r\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\r\n   *     of the geometry extent).\r\n   * @api\r\n   */\r\n  scale(sx, opt_sy, opt_anchor) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Create a simplified version of this geometry.  For linestrings, this uses\r\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\r\n   * algorithm.  For polygons, a quantization-based\r\n   * simplification is used to preserve topology.\r\n   * @param {number} tolerance The tolerance distance for simplification.\r\n   * @return {Geometry} A new, simplified version of the original geometry.\r\n   * @api\r\n   */\r\n  simplify(tolerance) {\r\n    return this.getSimplifiedGeometry(tolerance * tolerance);\r\n  }\r\n\r\n  /**\r\n   * Create a simplified version of this geometry using the Douglas Peucker\r\n   * algorithm.\r\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\r\n   * @abstract\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {Geometry} Simplified geometry.\r\n   */\r\n  getSimplifiedGeometry(squaredTolerance) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @abstract\r\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\r\n   */\r\n  getType() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Apply a transform function to each coordinate of the geometry.\r\n   * The geometry is modified in place.\r\n   * If you do not want the geometry modified in place, first `clone()` it and\r\n   * then use this function on the clone.\r\n   * @abstract\r\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\r\n   */\r\n  applyTransform(transformFn) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @abstract\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   */\r\n  intersectsExtent(extent) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\r\n   * instead you want a new geometry, first `clone()` this geometry.\r\n   * @abstract\r\n   * @param {number} deltaX Delta X.\r\n   * @param {number} deltaY Delta Y.\r\n   * @api\r\n   */\r\n  translate(deltaX, deltaY) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Transform each coordinate of the geometry from one coordinate reference\r\n   * system to another. The geometry is modified in place.\r\n   * For example, a line will be transformed to a line and a circle to a circle.\r\n   * If you do not want the geometry modified in place, first `clone()` it and\r\n   * then use this function on the clone.\r\n   *\r\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\r\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\r\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n   * @return {Geometry} This geometry.  Note that original geometry is\r\n   *     modified in place.\r\n   * @api\r\n   */\r\n  transform(source, destination) {\r\n    /** @type {import(\"../proj/Projection.js\").default} */\r\n    const sourceProj = getProjection(source);\r\n    const transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\r\n      function(inCoordinates, outCoordinates, stride) {\r\n        const pixelExtent = sourceProj.getExtent();\r\n        const projectedExtent = sourceProj.getWorldExtent();\r\n        const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\r\n        composeTransform(tmpTransform,\r\n          projectedExtent[0], projectedExtent[3],\r\n          scale, -scale, 0,\r\n          0, 0);\r\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\r\n          tmpTransform, outCoordinates);\r\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\r\n      } :\r\n      getTransform(sourceProj, destination);\r\n    this.applyTransform(transformFn);\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Geometry;\r\n","/**\r\n * @module ol/geom/SimpleGeometry\r\n */\r\nimport {abstract} from '../util.js';\r\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\r\nimport {clear} from '../obj.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; only used for creating subclasses; do not instantiate\r\n * in apps, as cannot be rendered.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nclass SimpleGeometry extends Geometry {\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {GeometryLayout}\r\n     */\r\n    this.layout = GeometryLayout.XY;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.stride = 2;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.flatCoordinates = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  computeExtent(extent) {\r\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\r\n      0, this.flatCoordinates.length, this.stride, extent);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Array<*>} Coordinates.\r\n   */\r\n  getCoordinates() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Return the first coordinate of the geometry.\r\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\r\n   * @api\r\n   */\r\n  getFirstCoordinate() {\r\n    return this.flatCoordinates.slice(0, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat coordinates.\r\n   */\r\n  getFlatCoordinates() {\r\n    return this.flatCoordinates;\r\n  }\r\n\r\n  /**\r\n   * Return the last coordinate of the geometry.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\r\n   * @api\r\n   */\r\n  getLastCoordinate() {\r\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\r\n  }\r\n\r\n  /**\r\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\r\n   * @return {GeometryLayout} Layout.\r\n   * @api\r\n   */\r\n  getLayout() {\r\n    return this.layout;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometry(squaredTolerance) {\r\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\r\n      clear(this.simplifiedGeometryCache);\r\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n      this.simplifiedGeometryRevision = this.getRevision();\r\n    }\r\n    // If squaredTolerance is negative or if we know that simplification will not\r\n    // have any effect then just return this.\r\n    if (squaredTolerance < 0 ||\r\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\r\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\r\n      return this;\r\n    }\r\n    const key = squaredTolerance.toString();\r\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\r\n      return this.simplifiedGeometryCache[key];\r\n    } else {\r\n      const simplifiedGeometry =\r\n          this.getSimplifiedGeometryInternal(squaredTolerance);\r\n      const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\r\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\r\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\r\n        return simplifiedGeometry;\r\n      } else {\r\n        // Simplification did not actually remove any coordinates.  We now know\r\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\r\n        // than or equal to the current squaredTolerance will also not have any\r\n        // effect.  This allows us to short circuit simplification (saving CPU\r\n        // cycles) and prevents the cache of simplified geometries from filling\r\n        // up with useless identical copies of this geometry (saving memory).\r\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\r\n        return this;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {SimpleGeometry} Simplified geometry.\r\n   * @protected\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Stride.\r\n   */\r\n  getStride() {\r\n    return this.stride;\r\n  }\r\n\r\n  /**\r\n   * @param {GeometryLayout} layout Layout.\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   */\r\n  setFlatCoordinates(layout, flatCoordinates) {\r\n    this.stride = getStrideForLayout(layout);\r\n    this.layout = layout;\r\n    this.flatCoordinates = flatCoordinates;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {!Array<*>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {GeometryLayout|undefined} layout Layout.\r\n   * @param {Array<*>} coordinates Coordinates.\r\n   * @param {number} nesting Nesting.\r\n   * @protected\r\n   */\r\n  setLayout(layout, coordinates, nesting) {\r\n    /** @type {number} */\r\n    let stride;\r\n    if (layout) {\r\n      stride = getStrideForLayout(layout);\r\n    } else {\r\n      for (let i = 0; i < nesting; ++i) {\r\n        if (coordinates.length === 0) {\r\n          this.layout = GeometryLayout.XY;\r\n          this.stride = 2;\r\n          return;\r\n        } else {\r\n          coordinates = /** @type {Array} */ (coordinates[0]);\r\n        }\r\n      }\r\n      stride = coordinates.length;\r\n      layout = getLayoutForStride(stride);\r\n    }\r\n    this.layout = layout;\r\n    this.stride = stride;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  applyTransform(transformFn) {\r\n    if (this.flatCoordinates) {\r\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  rotate(angle, anchor) {\r\n    const flatCoordinates = this.getFlatCoordinates();\r\n    if (flatCoordinates) {\r\n      const stride = this.getStride();\r\n      rotate(\r\n        flatCoordinates, 0, flatCoordinates.length,\r\n        stride, angle, anchor, flatCoordinates);\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  scale(sx, opt_sy, opt_anchor) {\r\n    let sy = opt_sy;\r\n    if (sy === undefined) {\r\n      sy = sx;\r\n    }\r\n    let anchor = opt_anchor;\r\n    if (!anchor) {\r\n      anchor = getCenter(this.getExtent());\r\n    }\r\n    const flatCoordinates = this.getFlatCoordinates();\r\n    if (flatCoordinates) {\r\n      const stride = this.getStride();\r\n      scale(\r\n        flatCoordinates, 0, flatCoordinates.length,\r\n        stride, sx, sy, anchor, flatCoordinates);\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  translate(deltaX, deltaY) {\r\n    const flatCoordinates = this.getFlatCoordinates();\r\n    if (flatCoordinates) {\r\n      const stride = this.getStride();\r\n      translate(\r\n        flatCoordinates, 0, flatCoordinates.length, stride,\r\n        deltaX, deltaY, flatCoordinates);\r\n      this.changed();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {number} stride Stride.\r\n * @return {GeometryLayout} layout Layout.\r\n */\r\nfunction getLayoutForStride(stride) {\r\n  let layout;\r\n  if (stride == 2) {\r\n    layout = GeometryLayout.XY;\r\n  } else if (stride == 3) {\r\n    layout = GeometryLayout.XYZ;\r\n  } else if (stride == 4) {\r\n    layout = GeometryLayout.XYZM;\r\n  }\r\n  return (\r\n    /** @type {GeometryLayout} */ (layout)\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {GeometryLayout} layout Layout.\r\n * @return {number} Stride.\r\n */\r\nexport function getStrideForLayout(layout) {\r\n  let stride;\r\n  if (layout == GeometryLayout.XY) {\r\n    stride = 2;\r\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\r\n    stride = 3;\r\n  } else if (layout == GeometryLayout.XYZM) {\r\n    stride = 4;\r\n  }\r\n  return /** @type {number} */ (stride);\r\n}\r\n\r\n\r\n/**\r\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\r\n * @param {import(\"../transform.js\").Transform} transform Transform.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed flat coordinates.\r\n */\r\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\r\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\r\n  if (!flatCoordinates) {\r\n    return null;\r\n  } else {\r\n    const stride = simpleGeometry.getStride();\r\n    return transform2D(\r\n      flatCoordinates, 0, flatCoordinates.length, stride,\r\n      transform, opt_dest);\r\n  }\r\n}\r\n\r\nexport default SimpleGeometry;\r\n","/**\r\n * @module ol/geom/flat/area\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRing(flatCoordinates, offset, end, stride) {\r\n  let twiceArea = 0;\r\n  let x1 = flatCoordinates[end - stride];\r\n  let y1 = flatCoordinates[end - stride + 1];\r\n  for (; offset < end; offset += stride) {\r\n    const x2 = flatCoordinates[offset];\r\n    const y2 = flatCoordinates[offset + 1];\r\n    twiceArea += y1 * x2 - x1 * y2;\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return twiceArea / 2;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRings(flatCoordinates, offset, ends, stride) {\r\n  let area = 0;\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    area += linearRing(flatCoordinates, offset, end, stride);\r\n    offset = end;\r\n  }\r\n  return area;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\r\n  let area = 0;\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    area += linearRings(flatCoordinates, offset, ends, stride);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return area;\r\n}\r\n","/**\r\n * @module ol/geom/flat/closest\r\n */\r\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\r\n\r\n\r\n/**\r\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\r\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\r\n * dimensions are linearly interpolated.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset1 Offset 1.\r\n * @param {number} offset2 Offset 2.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n */\r\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\r\n  const x1 = flatCoordinates[offset1];\r\n  const y1 = flatCoordinates[offset1 + 1];\r\n  const dx = flatCoordinates[offset2] - x1;\r\n  const dy = flatCoordinates[offset2 + 1] - y1;\r\n  let offset;\r\n  if (dx === 0 && dy === 0) {\r\n    offset = offset1;\r\n  } else {\r\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\r\n    if (t > 1) {\r\n      offset = offset2;\r\n    } else if (t > 0) {\r\n      for (let i = 0; i < stride; ++i) {\r\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\r\n          flatCoordinates[offset2 + i], t);\r\n      }\r\n      closestPoint.length = stride;\r\n      return;\r\n    } else {\r\n      offset = offset1;\r\n    }\r\n  }\r\n  for (let i = 0; i < stride; ++i) {\r\n    closestPoint[i] = flatCoordinates[offset + i];\r\n  }\r\n  closestPoint.length = stride;\r\n}\r\n\r\n\r\n/**\r\n * Return the squared of the largest distance between any pair of consecutive\r\n * coordinates.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\r\n  let x1 = flatCoordinates[offset];\r\n  let y1 = flatCoordinates[offset + 1];\r\n  for (offset += stride; offset < end; offset += stride) {\r\n    const x2 = flatCoordinates[offset];\r\n    const y2 = flatCoordinates[offset + 1];\r\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\r\n    if (squaredDelta > max) {\r\n      max = squaredDelta;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return max;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    max = maxSquaredDelta(\r\n      flatCoordinates, offset, end, stride, max);\r\n    offset = end;\r\n  }\r\n  return max;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    max = arrayMaxSquaredDelta(\r\n      flatCoordinates, offset, ends, stride, max);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return max;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestPoint(flatCoordinates, offset, end,\r\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\r\n  opt_tmpPoint) {\r\n  if (offset == end) {\r\n    return minSquaredDistance;\r\n  }\r\n  let i, squaredDistance;\r\n  if (maxDelta === 0) {\r\n    // All points are identical, so just test the first point.\r\n    squaredDistance = squaredDx(\r\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      for (i = 0; i < stride; ++i) {\r\n        closestPoint[i] = flatCoordinates[offset + i];\r\n      }\r\n      closestPoint.length = stride;\r\n      return squaredDistance;\r\n    } else {\r\n      return minSquaredDistance;\r\n    }\r\n  }\r\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\r\n  let index = offset + stride;\r\n  while (index < end) {\r\n    assignClosest(\r\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\r\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      minSquaredDistance = squaredDistance;\r\n      for (i = 0; i < stride; ++i) {\r\n        closestPoint[i] = tmpPoint[i];\r\n      }\r\n      closestPoint.length = stride;\r\n      index += stride;\r\n    } else {\r\n      // Skip ahead multiple points, because we know that all the skipped\r\n      // points cannot be any closer than the closest point we have found so\r\n      // far.  We know this because we know how close the current point is, how\r\n      // close the closest point we have found so far is, and the maximum\r\n      // distance between consecutive points.  For example, if we're currently\r\n      // at distance 10, the best we've found so far is 3, and that the maximum\r\n      // distance between consecutive points is 2, then we'll need to skip at\r\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\r\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\r\n      // always advance at least one point, to avoid an infinite loop.\r\n      index += stride * Math.max(\r\n        ((Math.sqrt(squaredDistance) -\r\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\r\n    }\r\n  }\r\n  if (isRing) {\r\n    // Check the closing segment.\r\n    assignClosest(\r\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\r\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      minSquaredDistance = squaredDistance;\r\n      for (i = 0; i < stride; ++i) {\r\n        closestPoint[i] = tmpPoint[i];\r\n      }\r\n      closestPoint.length = stride;\r\n    }\r\n  }\r\n  return minSquaredDistance;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\r\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\r\n  opt_tmpPoint) {\r\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    minSquaredDistance = assignClosestPoint(\r\n      flatCoordinates, offset, end, stride,\r\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\r\n    offset = end;\r\n  }\r\n  return minSquaredDistance;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\r\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\r\n  opt_tmpPoint) {\r\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    minSquaredDistance = assignClosestArrayPoint(\r\n      flatCoordinates, offset, ends, stride,\r\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return minSquaredDistance;\r\n}\r\n","/**\r\n * @module ol/geom/flat/deflate\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {number} stride Stride.\r\n * @return {number} offset Offset.\r\n */\r\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\r\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\r\n    flatCoordinates[offset++] = coordinate[i];\r\n  }\r\n  return offset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @param {number} stride Stride.\r\n * @return {number} offset Offset.\r\n */\r\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\r\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    const coordinate = coordinates[i];\r\n    for (let j = 0; j < stride; ++j) {\r\n      flatCoordinates[offset++] = coordinate[j];\r\n    }\r\n  }\r\n  return offset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>=} opt_ends Ends.\r\n * @return {Array<number>} Ends.\r\n */\r\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\r\n  const ends = opt_ends ? opt_ends : [];\r\n  let i = 0;\r\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\r\n    const end = deflateCoordinates(\r\n      flatCoordinates, offset, coordinatess[j], stride);\r\n    ends[i++] = end;\r\n    offset = end;\r\n  }\r\n  ends.length = i;\r\n  return ends;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<number>>=} opt_endss Endss.\r\n * @return {Array<Array<number>>} Endss.\r\n */\r\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\r\n  const endss = opt_endss ? opt_endss : [];\r\n  let i = 0;\r\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\r\n    const ends = deflateCoordinatesArray(\r\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\r\n    endss[i++] = ends;\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  endss.length = i;\r\n  return endss;\r\n}\r\n","/**\r\n * @module ol/geom/flat/inflate\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\r\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\r\n */\r\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\r\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\r\n  }\r\n  coordinates.length = i;\r\n  return coordinates;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\r\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\r\n */\r\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\r\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\r\n  let i = 0;\r\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\r\n    const end = ends[j];\r\n    coordinatess[i++] = inflateCoordinates(\r\n      flatCoordinates, offset, end, stride, coordinatess[i]);\r\n    offset = end;\r\n  }\r\n  coordinatess.length = i;\r\n  return coordinatess;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\r\n *     Coordinatesss.\r\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\r\n */\r\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\r\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\r\n  let i = 0;\r\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\r\n    const ends = endss[j];\r\n    coordinatesss[i++] = inflateCoordinatesArray(\r\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  coordinatesss.length = i;\r\n  return coordinatesss;\r\n}\r\n","/**\r\n * @module ol/geom/flat/simplify\r\n */\r\n// Based on simplify-js https://github.com/mourner/simplify-js\r\n// Copyright (c) 2012, Vladimir Agafonkin\r\n// All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n//\r\n//    1. Redistributions of source code must retain the above copyright notice,\r\n//       this list of conditions and the following disclaimer.\r\n//\r\n//    2. Redistributions in binary form must reproduce the above copyright\r\n//       notice, this list of conditions and the following disclaimer in the\r\n//       documentation and/or other materials provided with the distribution.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n// POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {boolean} highQuality Highest quality.\r\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @return {Array<number>} Simplified line string.\r\n */\r\nexport function simplifyLineString(flatCoordinates, offset, end,\r\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\r\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\r\n    opt_simplifiedFlatCoordinates : [];\r\n  if (!highQuality) {\r\n    end = radialDistance(flatCoordinates, offset, end,\r\n      stride, squaredTolerance,\r\n      simplifiedFlatCoordinates, 0);\r\n    flatCoordinates = simplifiedFlatCoordinates;\r\n    offset = 0;\r\n    stride = 2;\r\n  }\r\n  simplifiedFlatCoordinates.length = douglasPeucker(\r\n    flatCoordinates, offset, end, stride, squaredTolerance,\r\n    simplifiedFlatCoordinates, 0);\r\n  return simplifiedFlatCoordinates;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeucker(flatCoordinates, offset, end,\r\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\r\n  const n = (end - offset) / stride;\r\n  if (n < 3) {\r\n    for (; offset < end; offset += stride) {\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset];\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset + 1];\r\n    }\r\n    return simplifiedOffset;\r\n  }\r\n  /** @type {Array<number>} */\r\n  const markers = new Array(n);\r\n  markers[0] = 1;\r\n  markers[n - 1] = 1;\r\n  /** @type {Array<number>} */\r\n  const stack = [offset, end - stride];\r\n  let index = 0;\r\n  while (stack.length > 0) {\r\n    const last = stack.pop();\r\n    const first = stack.pop();\r\n    let maxSquaredDistance = 0;\r\n    const x1 = flatCoordinates[first];\r\n    const y1 = flatCoordinates[first + 1];\r\n    const x2 = flatCoordinates[last];\r\n    const y2 = flatCoordinates[last + 1];\r\n    for (let i = first + stride; i < last; i += stride) {\r\n      const x = flatCoordinates[i];\r\n      const y = flatCoordinates[i + 1];\r\n      const squaredDistance = squaredSegmentDistance(\r\n        x, y, x1, y1, x2, y2);\r\n      if (squaredDistance > maxSquaredDistance) {\r\n        index = i;\r\n        maxSquaredDistance = squaredDistance;\r\n      }\r\n    }\r\n    if (maxSquaredDistance > squaredTolerance) {\r\n      markers[(index - offset) / stride] = 1;\r\n      if (first + stride < index) {\r\n        stack.push(first, index);\r\n      }\r\n      if (index + stride < last) {\r\n        stack.push(index, last);\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < n; ++i) {\r\n    if (markers[i]) {\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset + i * stride];\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset + i * stride + 1];\r\n    }\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<number>} simplifiedEnds Simplified ends.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeuckerArray(flatCoordinates, offset,\r\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\r\n  simplifiedOffset, simplifiedEnds) {\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    simplifiedOffset = douglasPeucker(\r\n      flatCoordinates, offset, end, stride, squaredTolerance,\r\n      simplifiedFlatCoordinates, simplifiedOffset);\r\n    simplifiedEnds.push(simplifiedOffset);\r\n    offset = end;\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeuckerMultiArray(\r\n  flatCoordinates, offset, endss, stride, squaredTolerance,\r\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    const simplifiedEnds = [];\r\n    simplifiedOffset = douglasPeuckerArray(\r\n      flatCoordinates, offset, ends, stride, squaredTolerance,\r\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\r\n    simplifiedEndss.push(simplifiedEnds);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function radialDistance(flatCoordinates, offset, end,\r\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\r\n  if (end <= offset + stride) {\r\n    // zero or one point, no simplification possible, so copy and return\r\n    for (; offset < end; offset += stride) {\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset + 1];\r\n    }\r\n    return simplifiedOffset;\r\n  }\r\n  let x1 = flatCoordinates[offset];\r\n  let y1 = flatCoordinates[offset + 1];\r\n  // copy first point\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\r\n  let x2 = x1;\r\n  let y2 = y1;\r\n  for (offset += stride; offset < end; offset += stride) {\r\n    x2 = flatCoordinates[offset];\r\n    y2 = flatCoordinates[offset + 1];\r\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\r\n      // copy point at offset\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n      x1 = x2;\r\n      y1 = y2;\r\n    }\r\n  }\r\n  if (x2 != x1 || y2 != y1) {\r\n    // copy last point\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {number} value Value.\r\n * @param {number} tolerance Tolerance.\r\n * @return {number} Rounded value.\r\n */\r\nexport function snap(value, tolerance) {\r\n  return tolerance * Math.round(value / tolerance);\r\n}\r\n\r\n\r\n/**\r\n * Simplifies a line string using an algorithm designed by Tim Schaub.\r\n * Coordinates are snapped to the nearest value in a virtual grid and\r\n * consecutive duplicate coordinates are discarded.  This effectively preserves\r\n * topology as the simplification of any subsection of a line string is\r\n * independent of the rest of the line string.  This means that, for examples,\r\n * the common edge between two polygons will be simplified to the same line\r\n * string independently in both polygons.  This implementation uses a single\r\n * pass over the coordinates and eliminates intermediate collinear points.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantize(flatCoordinates, offset, end, stride,\r\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\r\n  // do nothing if the line is empty\r\n  if (offset == end) {\r\n    return simplifiedOffset;\r\n  }\r\n  // snap the first coordinate (P1)\r\n  let x1 = snap(flatCoordinates[offset], tolerance);\r\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\r\n  offset += stride;\r\n  // add the first coordinate to the output\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\r\n  // find the next coordinate that does not snap to the same value as the first\r\n  // coordinate (P2)\r\n  let x2, y2;\r\n  do {\r\n    x2 = snap(flatCoordinates[offset], tolerance);\r\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\r\n    offset += stride;\r\n    if (offset == end) {\r\n      // all coordinates snap to the same value, the line collapses to a point\r\n      // push the last snapped value anyway to ensure that the output contains\r\n      // at least two points\r\n      // FIXME should we really return at least two points anyway?\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n      return simplifiedOffset;\r\n    }\r\n  } while (x2 == x1 && y2 == y1);\r\n  while (offset < end) {\r\n    // snap the next coordinate (P3)\r\n    const x3 = snap(flatCoordinates[offset], tolerance);\r\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\r\n    offset += stride;\r\n    // skip P3 if it is equal to P2\r\n    if (x3 == x2 && y3 == y2) {\r\n      continue;\r\n    }\r\n    // calculate the delta between P1 and P2\r\n    const dx1 = x2 - x1;\r\n    const dy1 = y2 - y1;\r\n    // calculate the delta between P3 and P1\r\n    const dx2 = x3 - x1;\r\n    const dy2 = y3 - y1;\r\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\r\n    // P1 in the same direction then P2 is on the straight line between P1 and\r\n    // P3\r\n    if ((dx1 * dy2 == dy1 * dx2) &&\r\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\r\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\r\n      // discard P2 and set P2 = P3\r\n      x2 = x3;\r\n      y2 = y3;\r\n      continue;\r\n    }\r\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\r\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\r\n    // and continue with P1 = P2 and P2 = P3\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n    x1 = x2;\r\n    y1 = y2;\r\n    x2 = x3;\r\n    y2 = y3;\r\n  }\r\n  // add the last point (P2)\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<number>} simplifiedEnds Simplified ends.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantizeArray(\r\n  flatCoordinates, offset, ends, stride,\r\n  tolerance,\r\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    simplifiedOffset = quantize(\r\n      flatCoordinates, offset, end, stride,\r\n      tolerance,\r\n      simplifiedFlatCoordinates, simplifiedOffset);\r\n    simplifiedEnds.push(simplifiedOffset);\r\n    offset = end;\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantizeMultiArray(\r\n  flatCoordinates, offset, endss, stride,\r\n  tolerance,\r\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    const simplifiedEnds = [];\r\n    simplifiedOffset = quantizeArray(\r\n      flatCoordinates, offset, ends, stride,\r\n      tolerance,\r\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\r\n    simplifiedEndss.push(simplifiedEnds);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n","/**\r\n * @module ol/geom/LinearRing\r\n */\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {linearRing as linearRingArea} from './flat/area.js';\r\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\r\nimport {deflateCoordinates} from './flat/deflate.js';\r\nimport {inflateCoordinates} from './flat/inflate.js';\r\nimport {douglasPeucker} from './flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\r\n * on its own.\r\n *\r\n * @api\r\n */\r\nclass LinearRing extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   */\r\n  constructor(coordinates, opt_layout) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!LinearRing} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\r\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestPoint(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n  }\r\n\r\n  /**\r\n   * Return the area of the linear ring on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  getArea() {\r\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the linear ring.\r\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    simplifiedFlatCoordinates.length = douglasPeucker(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      squaredTolerance, simplifiedFlatCoordinates, 0);\r\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.LINEAR_RING;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  intersectsExtent(extent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the linear ring.\r\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default LinearRing;\r\n","/**\r\n * @module ol/geom/Point\r\n */\r\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {deflateCoordinate} from './flat/deflate.js';\r\nimport {squaredDistance as squaredDx} from '../math.js';\r\n\r\n/**\r\n * @classdesc\r\n * Point geometry.\r\n *\r\n * @api\r\n */\r\nclass Point extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\r\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n   */\r\n  constructor(coordinates, opt_layout) {\r\n    super();\r\n    this.setCoordinates(coordinates, opt_layout);\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!Point} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\r\n    return point;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      const stride = this.stride;\r\n      for (let i = 0; i < stride; ++i) {\r\n        closestPoint[i] = flatCoordinates[i];\r\n      }\r\n      closestPoint.length = stride;\r\n      return squaredDistance;\r\n    } else {\r\n      return minSquaredDistance;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the coordinate of the point.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  computeExtent(extent) {\r\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.POINT;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 0);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinate(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default Point;\r\n","/**\r\n * @module ol/geom/flat/contains\r\n */\r\nimport {forEachCorner} from '../../extent.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} Contains extent.\r\n */\r\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\r\n  const outside = forEachCorner(extent,\r\n    /**\r\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @return {boolean} Contains (x, y).\r\n     */\r\n    function(coordinate) {\r\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\r\n    });\r\n  return !outside;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\r\n  // http://geomalgorithms.com/a03-_inclusion.html\r\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\r\n  // This code may be freely used and modified for any purpose\r\n  // providing that this copyright notice is included with it.\r\n  // SoftSurfer makes no warranty for this code, and cannot be held\r\n  // liable for any real or imagined damage resulting from its use.\r\n  // Users of this code must verify correctness for their application.\r\n  let wn = 0;\r\n  let x1 = flatCoordinates[end - stride];\r\n  let y1 = flatCoordinates[end - stride + 1];\r\n  for (; offset < end; offset += stride) {\r\n    const x2 = flatCoordinates[offset];\r\n    const y2 = flatCoordinates[offset + 1];\r\n    if (y1 <= y) {\r\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\r\n        wn++;\r\n      }\r\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\r\n      wn--;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return wn !== 0;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\r\n  if (ends.length === 0) {\r\n    return false;\r\n  }\r\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\r\n    return false;\r\n  }\r\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\r\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\r\n  if (endss.length === 0) {\r\n    return false;\r\n  }\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\r\n      return true;\r\n    }\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return false;\r\n}\r\n","/**\r\n * @module ol/geom/flat/interiorpoint\r\n */\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {linearRingsContainsXY} from './contains.js';\r\n\r\n\r\n/**\r\n * Calculates a point that is likely to lie in the interior of the linear rings.\r\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>} flatCenters Flat centers.\r\n * @param {number} flatCentersOffset Flat center offset.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\r\n * length of the horizontal intersection that the point belongs to.\r\n */\r\nexport function getInteriorPointOfArray(flatCoordinates, offset,\r\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\r\n  let i, ii, x, x1, x2, y1, y2;\r\n  const y = flatCenters[flatCentersOffset + 1];\r\n  /** @type {Array<number>} */\r\n  const intersections = [];\r\n  // Calculate intersections with the horizontal line\r\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\r\n    const end = ends[r];\r\n    x1 = flatCoordinates[end - stride];\r\n    y1 = flatCoordinates[end - stride + 1];\r\n    for (i = offset; i < end; i += stride) {\r\n      x2 = flatCoordinates[i];\r\n      y2 = flatCoordinates[i + 1];\r\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\r\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n        intersections.push(x);\r\n      }\r\n      x1 = x2;\r\n      y1 = y2;\r\n    }\r\n  }\r\n  // Find the longest segment of the horizontal line that has its center point\r\n  // inside the linear ring.\r\n  let pointX = NaN;\r\n  let maxSegmentLength = -Infinity;\r\n  intersections.sort(numberSafeCompareFunction);\r\n  x1 = intersections[0];\r\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\r\n    x2 = intersections[i];\r\n    const segmentLength = Math.abs(x2 - x1);\r\n    if (segmentLength > maxSegmentLength) {\r\n      x = (x1 + x2) / 2;\r\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\r\n        pointX = x;\r\n        maxSegmentLength = segmentLength;\r\n      }\r\n    }\r\n    x1 = x2;\r\n  }\r\n  if (isNaN(pointX)) {\r\n    // There is no horizontal line that has its center point inside the linear\r\n    // ring.  Use the center of the the linear ring's extent.\r\n    pointX = flatCenters[flatCentersOffset];\r\n  }\r\n  if (opt_dest) {\r\n    opt_dest.push(pointX, y, maxSegmentLength);\r\n    return opt_dest;\r\n  } else {\r\n    return [pointX, y, maxSegmentLength];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>} flatCenters Flat centers.\r\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\r\n * length of the horizontal intersection that the point belongs to.\r\n */\r\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\r\n  let interiorPoints = [];\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\r\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return interiorPoints;\r\n}\r\n","/**\r\n * @module ol/geom/flat/segments\r\n */\r\n\r\n\r\n/**\r\n * This function calls `callback` for each segment of the flat coordinates\r\n * array. If the callback returns a truthy value the function returns that\r\n * value immediately. Otherwise the function returns `false`.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\r\n *     called for each segment.\r\n * @return {T|boolean} Value.\r\n * @template T\r\n */\r\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\r\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\r\n  const point2 = [];\r\n  let ret;\r\n  for (; (offset + stride) < end; offset += stride) {\r\n    point2[0] = flatCoordinates[offset + stride];\r\n    point2[1] = flatCoordinates[offset + stride + 1];\r\n    ret = callback(point1, point2);\r\n    if (ret) {\r\n      return ret;\r\n    }\r\n    point1[0] = point2[0];\r\n    point1[1] = point2[1];\r\n  }\r\n  return false;\r\n}\r\n","/**\r\n * @module ol/geom/flat/intersectsextent\r\n */\r\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\r\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\r\nimport {forEach as forEachSegment} from './segments.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\r\n  const coordinatesExtent = extendFlatCoordinates(\r\n    createEmpty(), flatCoordinates, offset, end, stride);\r\n  if (!intersects(extent, coordinatesExtent)) {\r\n    return false;\r\n  }\r\n  if (containsExtent(extent, coordinatesExtent)) {\r\n    return true;\r\n  }\r\n  if (coordinatesExtent[0] >= extent[0] &&\r\n      coordinatesExtent[2] <= extent[2]) {\r\n    return true;\r\n  }\r\n  if (coordinatesExtent[1] >= extent[1] &&\r\n      coordinatesExtent[3] <= extent[3]) {\r\n    return true;\r\n  }\r\n  return forEachSegment(flatCoordinates, offset, end, stride,\r\n    /**\r\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\r\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\r\n     * @return {boolean} `true` if the segment and the extent intersect,\r\n     *     `false` otherwise.\r\n     */\r\n    function(point1, point2) {\r\n      return intersectsSegment(extent, point1, point2);\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    if (intersectsLineString(\r\n      flatCoordinates, offset, ends[i], stride, extent)) {\r\n      return true;\r\n    }\r\n    offset = ends[i];\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\r\n  if (intersectsLineString(\r\n    flatCoordinates, offset, end, stride, extent)) {\r\n    return true;\r\n  }\r\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\r\n    return true;\r\n  }\r\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\r\n    return true;\r\n  }\r\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\r\n    return true;\r\n  }\r\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\r\n  if (!intersectsLinearRing(\r\n    flatCoordinates, offset, ends[0], stride, extent)) {\r\n    return false;\r\n  }\r\n  if (ends.length === 1) {\r\n    return true;\r\n  }\r\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\r\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\r\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    if (intersectsLinearRingArray(\r\n      flatCoordinates, offset, ends, stride, extent)) {\r\n      return true;\r\n    }\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return false;\r\n}\r\n","/**\r\n * @module ol/geom/flat/reverse\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n */\r\nexport function coordinates(flatCoordinates, offset, end, stride) {\r\n  while (offset < end - stride) {\r\n    for (let i = 0; i < stride; ++i) {\r\n      const tmp = flatCoordinates[offset + i];\r\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\r\n      flatCoordinates[end - stride + i] = tmp;\r\n    }\r\n    offset += stride;\r\n    end -= stride;\r\n  }\r\n}\r\n","/**\r\n * @module ol/geom/flat/orient\r\n */\r\nimport {coordinates as reverseCoordinates} from './reverse.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {boolean} Is clockwise.\r\n */\r\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\r\n  // http://tinyurl.com/clockwise-method\r\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\r\n  let edge = 0;\r\n  let x1 = flatCoordinates[end - stride];\r\n  let y1 = flatCoordinates[end - stride + 1];\r\n  for (; offset < end; offset += stride) {\r\n    const x2 = flatCoordinates[offset];\r\n    const y2 = flatCoordinates[offset + 1];\r\n    edge += (x2 - x1) * (y2 + y1);\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return edge > 0;\r\n}\r\n\r\n\r\n/**\r\n * Determines if linear rings are oriented.  By default, left-hand orientation\r\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\r\n * To test for right-hand orientation, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Test for right-hand orientation\r\n *     (counter-clockwise exterior ring and clockwise interior rings).\r\n * @return {boolean} Rings are correctly oriented.\r\n */\r\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\r\n  const right = opt_right !== undefined ? opt_right : false;\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    const isClockwise = linearRingIsClockwise(\r\n      flatCoordinates, offset, end, stride);\r\n    if (i === 0) {\r\n      if ((right && isClockwise) || (!right && !isClockwise)) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if ((right && !isClockwise) || (!right && isClockwise)) {\r\n        return false;\r\n      }\r\n    }\r\n    offset = end;\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * Determines if linear rings are oriented.  By default, left-hand orientation\r\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\r\n * To test for right-hand orientation, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Array of array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Test for right-hand orientation\r\n *     (counter-clockwise exterior ring and clockwise interior rings).\r\n * @return {boolean} Rings are correctly oriented.\r\n */\r\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    if (!linearRingsAreOriented(\r\n      flatCoordinates, offset, ends, stride, opt_right)) {\r\n      return false;\r\n    }\r\n    if (ends.length) {\r\n      offset = ends[ends.length - 1];\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * Orient coordinates in a flat array of linear rings.  By default, rings\r\n * are oriented following the left-hand rule (clockwise for exterior and\r\n * counter-clockwise for interior rings).  To orient according to the\r\n * right-hand rule, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\r\n * @return {number} End.\r\n */\r\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\r\n  const right = opt_right !== undefined ? opt_right : false;\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    const isClockwise = linearRingIsClockwise(\r\n      flatCoordinates, offset, end, stride);\r\n    const reverse = i === 0 ?\r\n      (right && isClockwise) || (!right && !isClockwise) :\r\n      (right && !isClockwise) || (!right && isClockwise);\r\n    if (reverse) {\r\n      reverseCoordinates(flatCoordinates, offset, end, stride);\r\n    }\r\n    offset = end;\r\n  }\r\n  return offset;\r\n}\r\n\r\n\r\n/**\r\n * Orient coordinates in a flat array of linear rings.  By default, rings\r\n * are oriented following the left-hand rule (clockwise for exterior and\r\n * counter-clockwise for interior rings).  To orient according to the\r\n * right-hand rule, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Array of array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\r\n * @return {number} End.\r\n */\r\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    offset = orientLinearRings(\r\n      flatCoordinates, offset, endss[i], stride, opt_right);\r\n  }\r\n  return offset;\r\n}\r\n","/**\r\n * @module ol/geom/Polygon\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport LinearRing from './LinearRing.js';\r\nimport Point from './Point.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {offset as sphereOffset} from '../sphere.js';\r\nimport {linearRings as linearRingsArea} from './flat/area.js';\r\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\r\nimport {linearRingsContainsXY} from './flat/contains.js';\r\nimport {deflateCoordinatesArray} from './flat/deflate.js';\r\nimport {inflateCoordinatesArray} from './flat/inflate.js';\r\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\r\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\r\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\r\nimport {quantizeArray} from './flat/simplify.js';\r\nimport {modulo} from '../math.js';\r\n\r\n/**\r\n * @classdesc\r\n * Polygon geometry.\r\n *\r\n * @api\r\n */\r\nclass Polygon extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\r\n   *     Array of linear rings that define the polygon. The first linear ring of the\r\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\r\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\r\n   *     an array of vertices' coordinates where the first coordinate and the last are\r\n   *     equivalent. (For internal use, flat coordinates in combination with\r\n   *     `opt_layout` and `opt_ends` are also accepted.)\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\r\n   */\r\n  constructor(coordinates, opt_layout, opt_ends) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.ends_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatInteriorPointRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.flatInteriorPoint_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.orientedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.orientedFlatCoordinates_ = null;\r\n\r\n    if (opt_layout !== undefined && opt_ends) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n      this.ends_ = opt_ends;\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Append the passed linear ring to this polygon.\r\n   * @param {LinearRing} linearRing Linear ring.\r\n   * @api\r\n   */\r\n  appendLinearRing(linearRing) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\r\n    }\r\n    this.ends_.push(this.flatCoordinates.length);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!Polygon} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\r\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestArrayPoint(\r\n      this.flatCoordinates, 0, this.ends_, this.stride,\r\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  containsXY(x, y) {\r\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\r\n  }\r\n\r\n  /**\r\n   * Return the area of the polygon on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  getArea() {\r\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate array for this geometry.  This array has the structure\r\n   * of a GeoJSON coordinate array for polygons.\r\n   *\r\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\r\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\r\n   *     If `false`, coordinates will be oriented according to the left-hand rule\r\n   *     (clockwise for exterior and counter-clockwise for interior rings).\r\n   *     By default, coordinate orientation will depend on how the geometry was\r\n   *     constructed.\r\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates(opt_right) {\r\n    let flatCoordinates;\r\n    if (opt_right !== undefined) {\r\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\r\n      orientLinearRings(\r\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\r\n    } else {\r\n      flatCoordinates = this.flatCoordinates;\r\n    }\r\n\r\n    return inflateCoordinatesArray(\r\n      flatCoordinates, 0, this.ends_, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Ends.\r\n   */\r\n  getEnds() {\r\n    return this.ends_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Interior point.\r\n   */\r\n  getFlatInteriorPoint() {\r\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\r\n      const flatCenter = getCenter(this.getExtent());\r\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\r\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\r\n        flatCenter, 0);\r\n      this.flatInteriorPointRevision_ = this.getRevision();\r\n    }\r\n    return this.flatInteriorPoint_;\r\n  }\r\n\r\n  /**\r\n   * Return an interior point of the polygon.\r\n   * @return {Point} Interior point as XYM coordinate, where M is the\r\n   * length of the horizontal intersection that the point belongs to.\r\n   * @api\r\n   */\r\n  getInteriorPoint() {\r\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\r\n  }\r\n\r\n  /**\r\n   * Return the number of rings of the polygon,  this includes the exterior\r\n   * ring and any interior rings.\r\n   *\r\n   * @return {number} Number of rings.\r\n   * @api\r\n   */\r\n  getLinearRingCount() {\r\n    return this.ends_.length;\r\n  }\r\n\r\n  /**\r\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\r\n   * given index is out of range.\r\n   * The exterior linear ring is available at index `0` and the interior rings\r\n   * at index `1` and beyond.\r\n   *\r\n   * @param {number} index Index.\r\n   * @return {LinearRing} Linear ring.\r\n   * @api\r\n   */\r\n  getLinearRing(index) {\r\n    if (index < 0 || this.ends_.length <= index) {\r\n      return null;\r\n    }\r\n    return new LinearRing(this.flatCoordinates.slice(\r\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\r\n  }\r\n\r\n  /**\r\n   * Return the linear rings of the polygon.\r\n   * @return {Array<LinearRing>} Linear rings.\r\n   * @api\r\n   */\r\n  getLinearRings() {\r\n    const layout = this.layout;\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const ends = this.ends_;\r\n    const linearRings = [];\r\n    let offset = 0;\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\r\n      linearRings.push(linearRing);\r\n      offset = end;\r\n    }\r\n    return linearRings;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Oriented flat coordinates.\r\n   */\r\n  getOrientedFlatCoordinates() {\r\n    if (this.orientedRevision_ != this.getRevision()) {\r\n      const flatCoordinates = this.flatCoordinates;\r\n      if (linearRingsAreOriented(\r\n        flatCoordinates, 0, this.ends_, this.stride)) {\r\n        this.orientedFlatCoordinates_ = flatCoordinates;\r\n      } else {\r\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\r\n        this.orientedFlatCoordinates_.length =\r\n            orientLinearRings(\r\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\r\n      }\r\n      this.orientedRevision_ = this.getRevision();\r\n    }\r\n    return this.orientedFlatCoordinates_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    const simplifiedEnds = [];\r\n    simplifiedFlatCoordinates.length = quantizeArray(\r\n      this.flatCoordinates, 0, this.ends_, this.stride,\r\n      Math.sqrt(squaredTolerance),\r\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\r\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.POLYGON;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return intersectsLinearRingArray(\r\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the polygon.\r\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 2);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    const ends = deflateCoordinatesArray(\r\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\r\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default Polygon;\r\n\r\n\r\n/**\r\n * Create an approximation of a circle on the surface of a sphere.\r\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\r\n * @param {number} radius The great-circle distance from the center to\r\n *     the polygon vertices.\r\n * @param {number=} opt_n Optional number of vertices for the resulting\r\n *     polygon. Default is `32`.\r\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\r\n *     the Earth's mean radius using the WGS84 ellipsoid).\r\n * @return {Polygon} The \"circular\" polygon.\r\n * @api\r\n */\r\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\r\n  const n = opt_n ? opt_n : 32;\r\n  /** @type {Array<number>} */\r\n  const flatCoordinates = [];\r\n  for (let i = 0; i < n; ++i) {\r\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\r\n  }\r\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\r\n}\r\n\r\n\r\n/**\r\n * Create a polygon from an extent. The layout used is `XY`.\r\n * @param {import(\"../extent.js\").Extent} extent The extent.\r\n * @return {Polygon} The polygon.\r\n * @api\r\n */\r\nexport function fromExtent(extent) {\r\n  const minX = extent[0];\r\n  const minY = extent[1];\r\n  const maxX = extent[2];\r\n  const maxY = extent[3];\r\n  const flatCoordinates =\r\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\r\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\r\n}\r\n\r\n\r\n/**\r\n * Create a regular polygon from a circle.\r\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\r\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\r\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\r\n *     radians. Default is 0.\r\n * @return {Polygon} Polygon geometry.\r\n * @api\r\n */\r\nexport function fromCircle(circle, opt_sides, opt_angle) {\r\n  const sides = opt_sides ? opt_sides : 32;\r\n  const stride = circle.getStride();\r\n  const layout = circle.getLayout();\r\n  const center = circle.getCenter();\r\n  const arrayLength = stride * (sides + 1);\r\n  const flatCoordinates = new Array(arrayLength);\r\n  for (let i = 0; i < arrayLength; i += stride) {\r\n    flatCoordinates[i] = 0;\r\n    flatCoordinates[i + 1] = 0;\r\n    for (let j = 2; j < stride; j++) {\r\n      flatCoordinates[i + j] = center[j];\r\n    }\r\n  }\r\n  const ends = [flatCoordinates.length];\r\n  const polygon = new Polygon(flatCoordinates, layout, ends);\r\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\r\n  return polygon;\r\n}\r\n\r\n\r\n/**\r\n * Modify the coordinates of a polygon to make it a regular polygon.\r\n * @param {Polygon} polygon Polygon geometry.\r\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\r\n * @param {number} radius Radius of the regular polygon.\r\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\r\n *     radians. Default is 0.\r\n */\r\nexport function makeRegular(polygon, center, radius, opt_angle) {\r\n  const flatCoordinates = polygon.getFlatCoordinates();\r\n  const stride = polygon.getStride();\r\n  const sides = flatCoordinates.length / stride - 1;\r\n  const startAngle = opt_angle ? opt_angle : 0;\r\n  for (let i = 0; i <= sides; ++i) {\r\n    const offset = i * stride;\r\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\r\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\r\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\r\n  }\r\n  polygon.changed();\r\n}\r\n","/**\r\n * @module ol/View\r\n */\r\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\r\nimport {getUid} from './util.js';\r\nimport {VOID} from './functions.js';\r\nimport {createExtent, none as centerNone} from './centerconstraint.js';\r\nimport BaseObject from './Object.js';\r\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\r\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport ViewProperty from './ViewProperty.js';\r\nimport {linearFindNearest} from './array.js';\r\nimport {assert} from './asserts.js';\r\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\r\nimport {inAndOut} from './easing.js';\r\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\r\nimport GeometryType from './geom/GeometryType.js';\r\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\r\nimport {clamp, modulo} from './math.js';\r\nimport {assign} from './obj.js';\r\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\r\nimport Units from './proj/Units.js';\r\nimport {equals} from './coordinate.js';\r\nimport {easeOut} from './easing.js';\r\nimport {createMinMaxResolution} from './resolutionconstraint.js';\r\n\r\n\r\n/**\r\n * An animation configuration\r\n *\r\n * @typedef {Object} Animation\r\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\r\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\r\n * @property {number} [sourceResolution]\r\n * @property {number} [targetResolution]\r\n * @property {number} [sourceRotation]\r\n * @property {number} [targetRotation]\r\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\r\n * @property {number} start\r\n * @property {number} duration\r\n * @property {boolean} complete\r\n * @property {function(number):number} easing\r\n * @property {function(boolean)} callback\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Constraints\r\n * @property {import(\"./centerconstraint.js\").Type} center\r\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\r\n * @property {import(\"./rotationconstraint.js\").Type} rotation\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} FitOptions\r\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\r\n * the extent into. Default is the current size of the first map in the DOM that\r\n * uses this view, or `[100, 100]` if no such map is found.\r\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\r\n * cleared inside the view. Values in the array are top, right, bottom and left\r\n * padding.\r\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\r\n * get the nearest extent instead of the closest that actually fits the view.\r\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\r\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\r\n * `minResolution` is given, this property is ignored.\r\n * @property {number} [duration] The duration of the animation in milliseconds.\r\n * By default, there is no animation to the target extent.\r\n * @property {function(number):number} [easing] The easing function used during\r\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\r\n * The function will be called for each frame with a number representing a\r\n * fraction of the animation's duration.  The function should return a number\r\n * between 0 and 1 representing the progress toward the destination state.\r\n * @property {function(boolean)} [callback] Function called when the view is in\r\n * its final position. The callback will be called with `true` if the animation\r\n * series completed on its own or `false` if it was cancelled.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} ViewOptions\r\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\r\n * the view. The coordinate system for the center is specified with the\r\n * `projection` option. Layer sources will not be fetched if this is not set,\r\n * but the center can be set later with {@link #setCenter}.\r\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\r\n * `false` means no constraint. `true` means no constraint, but snap to zero\r\n * near zero. A number constrains the rotation to that number of values. For\r\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\r\n * @property {boolean} [enableRotation=true] Enable rotation.\r\n * If `false`, a rotation constraint that always sets the rotation to zero is\r\n * used. The `constrainRotation` option has no effect if `enableRotation` is\r\n * `false`.\r\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\r\n * view, in other words, nothing outside of this extent can be visible on the map.\r\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\r\n * constraint will only apply to the view center and not the whole extent.\r\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\r\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\r\n * of the given `extent`.\r\n * @property {number} [maxResolution] The maximum resolution used to determine\r\n * the resolution constraint. It is used together with `minResolution` (or\r\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\r\n * that the projection's validity extent fits in a 256x256 px tile. If the\r\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\r\n * to `40075016.68557849 / 256 = 156543.03392804097`.\r\n * @property {number} [minResolution] The minimum resolution used to determine\r\n * the resolution constraint.  It is used together with `maxResolution` (or\r\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\r\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\r\n * (the default) then `minResolution` defaults to\r\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\r\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\r\n * resolution constraint. It is used together with `minZoom` (or\r\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\r\n * provided, it is given precedence over `maxZoom`.\r\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\r\n * resolution constraint. It is used together with `maxZoom` (or\r\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\r\n * provided, it is given precedence over `minZoom`.\r\n * @property {boolean} [multiWorld=false] No more than one world is visible.\r\n * @property {boolean} [constrainResolution=false] If true, the view will always\r\n * animate to the closest zoom level after an interaction; false means\r\n * intermediary zoom levels are allowed.\r\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\r\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\r\n * the given resolution or zoom bounds.\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\r\n * projection. The default is Spherical Mercator.\r\n * @property {number} [resolution] The initial resolution for the view. The\r\n * units are `projection` units per pixel (e.g. meters per pixel). An\r\n * alternative to setting this is to set `zoom`. Layer sources will not be\r\n * fetched if neither this nor `zoom` are defined, but they can be set later\r\n * with {@link #setZoom} or {@link #setResolution}.\r\n * @property {Array<number>} [resolutions] Resolutions to determine the\r\n * resolution constraint. If set the `maxResolution`, `minResolution`,\r\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\r\n * @property {number} [rotation=0] The initial rotation for the view in radians\r\n * (positive rotation clockwise, 0 means North).\r\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\r\n * level used to calculate the initial resolution for the view.\r\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\r\n * corresponding resolution.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} AnimationOptions\r\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\r\n * the animation.\r\n * @property {number} [zoom] The zoom level of the view at the end of the\r\n * animation. This takes precedence over `resolution`.\r\n * @property {number} [resolution] The resolution of the view at the end\r\n * of the animation.  If `zoom` is also provided, this option will be ignored.\r\n * @property {number} [rotation] The rotation of the view at the end of\r\n * the animation.\r\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\r\n * during a rotation or resolution animation.\r\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\r\n * @property {function(number):number} [easing] The easing function used\r\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\r\n * The function will be called for each frame with a number representing a\r\n * fraction of the animation's duration.  The function should return a number\r\n * between 0 and 1 representing the progress toward the destination state.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {import(\"./coordinate.js\").Coordinate} center\r\n * @property {import(\"./proj/Projection.js\").default} projection\r\n * @property {number} resolution\r\n * @property {number} rotation\r\n * @property {number} zoom\r\n */\r\n\r\n\r\n/**\r\n * Default min zoom level for the map view.\r\n * @type {number}\r\n */\r\nconst DEFAULT_MIN_ZOOM = 0;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A View object represents a simple 2D view of the map.\r\n *\r\n * This is the object to act upon to change the center, resolution,\r\n * and rotation of the map.\r\n *\r\n * A View has a `projection`. The projection determines the\r\n * coordinate system of the center, and its units determine the units of the\r\n * resolution (projection units per pixel). The default projection is\r\n * Spherical Mercator (EPSG:3857).\r\n *\r\n * ### The view states\r\n *\r\n * An View is determined by three states: `center`, `resolution`,\r\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\r\n * `getCenter` and `setCenter` for the `center` state.\r\n *\r\n * The `zoom` state is actually not saved on the view: all computations\r\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\r\n * methods are available, as well as `getResolutionForZoom` and\r\n * `getZoomForResolution` to switch from one system to the other.\r\n *\r\n * ### The constraints\r\n *\r\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\r\n * states of the view, but any constraint defined in the constructor will\r\n * be applied along the way.\r\n *\r\n * A View object can have a *resolution constraint*, a *rotation constraint*\r\n * and a *center constraint*.\r\n *\r\n * The *resolution constraint* typically restricts min/max values and\r\n * snaps to specific resolutions. It is determined by the following\r\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\r\n * If `resolutions` is set, the other three options are ignored. See\r\n * documentation for each option for more information. By default, the view\r\n * only has a min/max restriction and allow intermediary zoom levels when\r\n * pinch-zooming for example.\r\n *\r\n * The *rotation constraint* snaps to specific angles. It is determined\r\n * by the following options: `enableRotation` and `constrainRotation`.\r\n * By default rotation is allowed and its value is snapped to zero when approaching the\r\n * horizontal.\r\n *\r\n * The *center constraint* is determined by the `extent` option. By\r\n * default the view center is not constrained at all.\r\n *\r\n * ### Changing the view state\r\n *\r\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\r\n * `setRotation` are subject to the above mentioned constraints. As such, it\r\n * may sometimes not be possible to know in advance the resulting state of the\r\n * View. For example, calling `setResolution(10)` does not guarantee that\r\n * `getResolution()` will return `10`.\r\n *\r\n * A consequence of this is that, when applying a delta on the view state, one\r\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\r\n * rather than the corresponding setters. This will let view do its internal\r\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\r\n * argument which allows specifying an origin for the transformation.\r\n *\r\n * ### Interacting with the view\r\n *\r\n * View constraints are usually only applied when the view is *at rest*, meaning that\r\n * no interaction or animation is ongoing. As such, if the user puts the view in a\r\n * state that is not equivalent to a constrained one (e.g. rotating the view when\r\n * the snap angle is 0), an animation will be triggered at the interaction end to\r\n * put back the view to a stable state;\r\n *\r\n * @api\r\n */\r\nclass View extends BaseObject {\r\n\r\n  /**\r\n   * @param {ViewOptions=} opt_options View options.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = assign({}, opt_options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.hints_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Array<Animation>>}\r\n     */\r\n    this.animations_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.updateAnimationKey_;\r\n\r\n    /**\r\n     * @private\r\n     * @const\r\n     * @type {import(\"./proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\r\n     */\r\n    this.targetCenter_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.targetResolution_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.targetRotation_;\r\n\r\n    this.applyOptions_(options);\r\n  }\r\n\r\n  /**\r\n   * Set up the view with the given options.\r\n   * @param {ViewOptions} options View options.\r\n   */\r\n  applyOptions_(options) {\r\n\r\n    /**\r\n     * @type {Object<string, *>}\r\n     */\r\n    const properties = {};\r\n\r\n    const resolutionConstraintInfo = createResolutionConstraint(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>|undefined}\r\n     */\r\n    this.resolutions_ = options.resolutions;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\r\n\r\n    const centerConstraint = createCenterConstraint(options);\r\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\r\n    const rotationConstraint = createRotationConstraint(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Constraints}\r\n     */\r\n    this.constraints_ = {\r\n      center: centerConstraint,\r\n      resolution: resolutionConstraint,\r\n      rotation: rotationConstraint\r\n    };\r\n\r\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\r\n    this.setCenter(options.center !== undefined ? options.center : null);\r\n    if (options.resolution !== undefined) {\r\n      this.setResolution(options.resolution);\r\n    } else if (options.zoom !== undefined) {\r\n      this.setZoom(options.zoom);\r\n    }\r\n    this.resolveConstraints(0);\r\n\r\n    this.setProperties(properties);\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {ViewOptions}\r\n     */\r\n    this.options_ = options;\r\n\r\n  }\r\n\r\n  /**\r\n   * Get an updated version of the view options used to construct the view.  The\r\n   * current resolution (or zoom), center, and rotation are applied to any stored\r\n   * options.  The provided options can be used to apply new min/max zoom or\r\n   * resolution limits.\r\n   * @param {ViewOptions} newOptions New options to be applied.\r\n   * @return {ViewOptions} New options updated with the current view state.\r\n   */\r\n  getUpdatedOptions_(newOptions) {\r\n    const options = assign({}, this.options_);\r\n\r\n    // preserve resolution (or zoom)\r\n    if (options.resolution !== undefined) {\r\n      options.resolution = this.getResolution();\r\n    } else {\r\n      options.zoom = this.getZoom();\r\n    }\r\n\r\n    // preserve center\r\n    options.center = this.getCenter();\r\n\r\n    // preserve rotation\r\n    options.rotation = this.getRotation();\r\n\r\n    return assign({}, options, newOptions);\r\n  }\r\n\r\n  /**\r\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\r\n   * can be animated for smooth transitions between view states.  For example,\r\n   * to animate the view to a new zoom level:\r\n   *\r\n   *     view.animate({zoom: view.getZoom() + 1});\r\n   *\r\n   * By default, the animation lasts one second and uses in-and-out easing.  You\r\n   * can customize this behavior by including `duration` (in milliseconds) and\r\n   * `easing` options (see {@link module:ol/easing}).\r\n   *\r\n   * To chain together multiple animations, call the method with multiple\r\n   * animation objects.  For example, to first zoom and then pan:\r\n   *\r\n   *     view.animate({zoom: 10}, {center: [0, 0]});\r\n   *\r\n   * If you provide a function as the last argument to the animate method, it\r\n   * will get called at the end of an animation series.  The callback will be\r\n   * called with `true` if the animation series completed on its own or `false`\r\n   * if it was cancelled.\r\n   *\r\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\r\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\r\n   * (or another method that calls one of these).\r\n   *\r\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\r\n   *     options.  Multiple animations can be run in series by passing multiple\r\n   *     options objects.  To run multiple animations in parallel, call the method\r\n   *     multiple times.  An optional callback can be provided as a final\r\n   *     argument.  The callback will be called with a boolean indicating whether\r\n   *     the animation completed without being cancelled.\r\n   * @api\r\n   */\r\n  animate(var_args) {\r\n    if (this.isDef() && !this.getAnimating()) {\r\n      this.resolveConstraints(0);\r\n    }\r\n    this.animate_.apply(this, arguments);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\r\n   */\r\n  animate_(var_args) {\r\n    let animationCount = arguments.length;\r\n    let callback;\r\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\r\n      callback = arguments[animationCount - 1];\r\n      --animationCount;\r\n    }\r\n    if (!this.isDef()) {\r\n      // if view properties are not yet set, shortcut to the final state\r\n      const state = arguments[animationCount - 1];\r\n      if (state.center) {\r\n        this.setCenter(state.center);\r\n      }\r\n      if (state.zoom !== undefined) {\r\n        this.setZoom(state.zoom);\r\n      }\r\n      if (state.rotation !== undefined) {\r\n        this.setRotation(state.rotation);\r\n      }\r\n      if (callback) {\r\n        animationCallback(callback, true);\r\n      }\r\n      return;\r\n    }\r\n    let start = Date.now();\r\n    let center = this.targetCenter_.slice();\r\n    let resolution = this.targetResolution_;\r\n    let rotation = this.targetRotation_;\r\n    const series = [];\r\n    for (let i = 0; i < animationCount; ++i) {\r\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\r\n\r\n      const animation = {\r\n        start: start,\r\n        complete: false,\r\n        anchor: options.anchor,\r\n        duration: options.duration !== undefined ? options.duration : 1000,\r\n        easing: options.easing || inAndOut,\r\n        callback: callback\r\n      };\r\n\r\n      if (options.center) {\r\n        animation.sourceCenter = center;\r\n        animation.targetCenter = options.center.slice();\r\n        center = animation.targetCenter;\r\n      }\r\n\r\n      if (options.zoom !== undefined) {\r\n        animation.sourceResolution = resolution;\r\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\r\n        resolution = animation.targetResolution;\r\n      } else if (options.resolution) {\r\n        animation.sourceResolution = resolution;\r\n        animation.targetResolution = options.resolution;\r\n        resolution = animation.targetResolution;\r\n      }\r\n\r\n      if (options.rotation !== undefined) {\r\n        animation.sourceRotation = rotation;\r\n        const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\r\n        animation.targetRotation = rotation + delta;\r\n        rotation = animation.targetRotation;\r\n      }\r\n\r\n      // check if animation is a no-op\r\n      if (isNoopAnimation(animation)) {\r\n        animation.complete = true;\r\n        // we still push it onto the series for callback handling\r\n      } else {\r\n        start += animation.duration;\r\n      }\r\n      series.push(animation);\r\n    }\r\n    this.animations_.push(series);\r\n    this.setHint(ViewHint.ANIMATING, 1);\r\n    this.updateAnimations_();\r\n  }\r\n\r\n  /**\r\n   * Determine if the view is being animated.\r\n   * @return {boolean} The view is being animated.\r\n   * @api\r\n   */\r\n  getAnimating() {\r\n    return this.hints_[ViewHint.ANIMATING] > 0;\r\n  }\r\n\r\n  /**\r\n   * Determine if the user is interacting with the view, such as panning or zooming.\r\n   * @return {boolean} The view is being interacted with.\r\n   * @api\r\n   */\r\n  getInteracting() {\r\n    return this.hints_[ViewHint.INTERACTING] > 0;\r\n  }\r\n\r\n  /**\r\n   * Cancel any ongoing animations.\r\n   * @api\r\n   */\r\n  cancelAnimations() {\r\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\r\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\r\n      const series = this.animations_[i];\r\n      if (series[0].callback) {\r\n        animationCallback(series[0].callback, false);\r\n      }\r\n    }\r\n    this.animations_.length = 0;\r\n  }\r\n\r\n  /**\r\n   * Update all animations.\r\n   */\r\n  updateAnimations_() {\r\n    if (this.updateAnimationKey_ !== undefined) {\r\n      cancelAnimationFrame(this.updateAnimationKey_);\r\n      this.updateAnimationKey_ = undefined;\r\n    }\r\n    if (!this.getAnimating()) {\r\n      return;\r\n    }\r\n    const now = Date.now();\r\n    let more = false;\r\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\r\n      const series = this.animations_[i];\r\n      let seriesComplete = true;\r\n      for (let j = 0, jj = series.length; j < jj; ++j) {\r\n        const animation = series[j];\r\n        if (animation.complete) {\r\n          continue;\r\n        }\r\n        const elapsed = now - animation.start;\r\n        let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\r\n        if (fraction >= 1) {\r\n          animation.complete = true;\r\n          fraction = 1;\r\n        } else {\r\n          seriesComplete = false;\r\n        }\r\n        const progress = animation.easing(fraction);\r\n        if (animation.sourceCenter) {\r\n          const x0 = animation.sourceCenter[0];\r\n          const y0 = animation.sourceCenter[1];\r\n          const x1 = animation.targetCenter[0];\r\n          const y1 = animation.targetCenter[1];\r\n          const x = x0 + progress * (x1 - x0);\r\n          const y = y0 + progress * (y1 - y0);\r\n          this.targetCenter_ = [x, y];\r\n        }\r\n        if (animation.sourceResolution && animation.targetResolution) {\r\n          const resolution = progress === 1 ?\r\n            animation.targetResolution :\r\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\r\n          if (animation.anchor) {\r\n            const size = this.getSizeFromViewport_(this.getRotation());\r\n            const constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\r\n            this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\r\n          }\r\n          this.targetResolution_ = resolution;\r\n          this.applyTargetState_(true);\r\n        }\r\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\r\n          const rotation = progress === 1 ?\r\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\r\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\r\n          if (animation.anchor) {\r\n            const constrainedRotation = this.constraints_.rotation(rotation, true);\r\n            this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\r\n          }\r\n          this.targetRotation_ = rotation;\r\n        }\r\n        this.applyTargetState_(true);\r\n        more = true;\r\n        if (!animation.complete) {\r\n          break;\r\n        }\r\n      }\r\n      if (seriesComplete) {\r\n        this.animations_[i] = null;\r\n        this.setHint(ViewHint.ANIMATING, -1);\r\n        const callback = series[0].callback;\r\n        if (callback) {\r\n          animationCallback(callback, true);\r\n        }\r\n      }\r\n    }\r\n    // prune completed series\r\n    this.animations_ = this.animations_.filter(Boolean);\r\n    if (more && this.updateAnimationKey_ === undefined) {\r\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} rotation Target rotation.\r\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\r\n   */\r\n  calculateCenterRotate(rotation, anchor) {\r\n    let center;\r\n    const currentCenter = this.getCenter();\r\n    if (currentCenter !== undefined) {\r\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\r\n      rotateCoordinate(center, rotation - this.getRotation());\r\n      addCoordinate(center, anchor);\r\n    }\r\n    return center;\r\n  }\r\n\r\n  /**\r\n   * @param {number} resolution Target resolution.\r\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\r\n   */\r\n  calculateCenterZoom(resolution, anchor) {\r\n    let center;\r\n    const currentCenter = this.getCenter();\r\n    const currentResolution = this.getResolution();\r\n    if (currentCenter !== undefined && currentResolution !== undefined) {\r\n      const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\r\n      const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\r\n      center = [x, y];\r\n    }\r\n    return center;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\r\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\r\n   */\r\n  getSizeFromViewport_(opt_rotation) {\r\n    const size = [100, 100];\r\n    const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\r\n    const element = document.querySelector(selector);\r\n    if (element) {\r\n      const metrics = getComputedStyle(element);\r\n      size[0] = parseInt(metrics.width, 10);\r\n      size[1] = parseInt(metrics.height, 10);\r\n    }\r\n    if (opt_rotation) {\r\n      const w = size[0];\r\n      const h = size[1];\r\n      size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\r\n      size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\r\n    }\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Get the view center.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getCenter() {\r\n    return (\r\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return {Constraints} Constraints.\r\n   */\r\n  getConstraints() {\r\n    return this.constraints_;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>=} opt_hints Destination array.\r\n   * @return {Array<number>} Hint.\r\n   */\r\n  getHints(opt_hints) {\r\n    if (opt_hints !== undefined) {\r\n      opt_hints[0] = this.hints_[0];\r\n      opt_hints[1] = this.hints_[1];\r\n      return opt_hints;\r\n    } else {\r\n      return this.hints_.slice();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the extent for the current view state and the passed size.\r\n   * The size is the pixel dimensions of the box into which the calculated extent\r\n   * should fit. In most cases you want to get the extent of the entire map,\r\n   * that is `map.getSize()`.\r\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\r\n   * first map that uses this view will be used.\r\n   * @return {import(\"./extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  calculateExtent(opt_size) {\r\n    const size = opt_size || this.getSizeFromViewport_();\r\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\r\n    assert(center, 1); // The view center is not defined\r\n    const resolution = /** @type {!number} */ (this.getResolution());\r\n    assert(resolution !== undefined, 2); // The view resolution is not defined\r\n    const rotation = /** @type {!number} */ (this.getRotation());\r\n    assert(rotation !== undefined, 3); // The view rotation is not defined\r\n\r\n    return getForViewAndSize(center, resolution, rotation, size);\r\n  }\r\n\r\n  /**\r\n   * Get the maximum resolution of the view.\r\n   * @return {number} The maximum resolution of the view.\r\n   * @api\r\n   */\r\n  getMaxResolution() {\r\n    return this.maxResolution_;\r\n  }\r\n\r\n  /**\r\n   * Get the minimum resolution of the view.\r\n   * @return {number} The minimum resolution of the view.\r\n   * @api\r\n   */\r\n  getMinResolution() {\r\n    return this.minResolution_;\r\n  }\r\n\r\n  /**\r\n   * Get the maximum zoom level for the view.\r\n   * @return {number} The maximum zoom level.\r\n   * @api\r\n   */\r\n  getMaxZoom() {\r\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\r\n  }\r\n\r\n  /**\r\n   * Set a new maximum zoom level for the view.\r\n   * @param {number} zoom The maximum zoom level.\r\n   * @api\r\n   */\r\n  setMaxZoom(zoom) {\r\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\r\n  }\r\n\r\n  /**\r\n   * Get the minimum zoom level for the view.\r\n   * @return {number} The minimum zoom level.\r\n   * @api\r\n   */\r\n  getMinZoom() {\r\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\r\n  }\r\n\r\n  /**\r\n   * Set a new minimum zoom level for the view.\r\n   * @param {number} zoom The minimum zoom level.\r\n   * @api\r\n   */\r\n  setMinZoom(zoom) {\r\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\r\n  }\r\n\r\n  /**\r\n   * Set whether the view shoud allow intermediary zoom levels.\r\n   * @param {boolean} enabled Whether the resolution is constrained.\r\n   * @api\r\n   */\r\n  setConstrainResolution(enabled) {\r\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\r\n  }\r\n\r\n  /**\r\n   * Get the view projection.\r\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return this.projection_;\r\n  }\r\n\r\n  /**\r\n   * Get the view resolution.\r\n   * @return {number|undefined} The resolution of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getResolution() {\r\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\r\n  }\r\n\r\n  /**\r\n   * Get the resolutions for the view. This returns the array of resolutions\r\n   * passed to the constructor of the View, or undefined if none were given.\r\n   * @return {Array<number>|undefined} The resolutions of the view.\r\n   * @api\r\n   */\r\n  getResolutions() {\r\n    return this.resolutions_;\r\n  }\r\n\r\n  /**\r\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\r\n   * @return {number} The resolution at which the provided extent will render at\r\n   *     the given size.\r\n   * @api\r\n   */\r\n  getResolutionForExtent(extent, opt_size) {\r\n    const size = opt_size || this.getSizeFromViewport_();\r\n    const xResolution = getWidth(extent) / size[0];\r\n    const yResolution = getHeight(extent) / size[1];\r\n    return Math.max(xResolution, yResolution);\r\n  }\r\n\r\n  /**\r\n   * Return a function that returns a value between 0 and 1 for a\r\n   * resolution. Exponential scaling is assumed.\r\n   * @param {number=} opt_power Power.\r\n   * @return {function(number): number} Resolution for value function.\r\n   */\r\n  getResolutionForValueFunction(opt_power) {\r\n    const power = opt_power || 2;\r\n    const maxResolution = this.maxResolution_;\r\n    const minResolution = this.minResolution_;\r\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n    return (\r\n      /**\r\n       * @param {number} value Value.\r\n       * @return {number} Resolution.\r\n       */\r\n      function(value) {\r\n        const resolution = maxResolution / Math.pow(power, value * max);\r\n        return resolution;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get the view rotation.\r\n   * @return {number} The rotation of the view in radians.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getRotation() {\r\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\r\n  }\r\n\r\n  /**\r\n   * Return a function that returns a resolution for a value between\r\n   * 0 and 1. Exponential scaling is assumed.\r\n   * @param {number=} opt_power Power.\r\n   * @return {function(number): number} Value for resolution function.\r\n   */\r\n  getValueForResolutionFunction(opt_power) {\r\n    const power = opt_power || 2;\r\n    const maxResolution = this.maxResolution_;\r\n    const minResolution = this.minResolution_;\r\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n    return (\r\n      /**\r\n       * @param {number} resolution Resolution.\r\n       * @return {number} Value.\r\n       */\r\n      function(resolution) {\r\n        const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\r\n        return value;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio for center rounding.\r\n   * @return {State} View state.\r\n   */\r\n  getState(pixelRatio) {\r\n    const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\r\n    const projection = this.getProjection();\r\n    const resolution = /** @type {number} */ (this.getResolution());\r\n    const rotation = this.getRotation();\r\n    return {\r\n      center: center.slice(0),\r\n      projection: projection !== undefined ? projection : null,\r\n      resolution: resolution,\r\n      rotation: rotation,\r\n      zoom: this.getZoom()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the current zoom level. This method may return non-integer zoom levels\r\n   * if the view does not constrain the resolution, or if an interaction or\r\n   * animation is underway.\r\n   * @return {number|undefined} Zoom.\r\n   * @api\r\n   */\r\n  getZoom() {\r\n    let zoom;\r\n    const resolution = this.getResolution();\r\n    if (resolution !== undefined) {\r\n      zoom = this.getZoomForResolution(resolution);\r\n    }\r\n    return zoom;\r\n  }\r\n\r\n  /**\r\n   * Get the zoom level for a resolution.\r\n   * @param {number} resolution The resolution.\r\n   * @return {number|undefined} The zoom level for the provided resolution.\r\n   * @api\r\n   */\r\n  getZoomForResolution(resolution) {\r\n    let offset = this.minZoom_ || 0;\r\n    let max, zoomFactor;\r\n    if (this.resolutions_) {\r\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\r\n      offset = nearest;\r\n      max = this.resolutions_[nearest];\r\n      if (nearest == this.resolutions_.length - 1) {\r\n        zoomFactor = 2;\r\n      } else {\r\n        zoomFactor = max / this.resolutions_[nearest + 1];\r\n      }\r\n    } else {\r\n      max = this.maxResolution_;\r\n      zoomFactor = this.zoomFactor_;\r\n    }\r\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Get the resolution for a zoom level.\r\n   * @param {number} zoom Zoom level.\r\n   * @return {number} The view resolution for the provided zoom level.\r\n   * @api\r\n   */\r\n  getResolutionForZoom(zoom) {\r\n    if (this.resolutions_) {\r\n      if (this.resolutions_.length <= 1) {\r\n        return 0;\r\n      }\r\n      const baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\r\n      const zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\r\n      return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\r\n    } else {\r\n      return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fit the given geometry or extent based on the given map size and border.\r\n   * The size is pixel dimensions of the box to fit the extent into.\r\n   * In most cases you will want to use the map size, that is `map.getSize()`.\r\n   * Takes care of the map angle.\r\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\r\n   *     extent to fit the view to.\r\n   * @param {FitOptions=} opt_options Options.\r\n   * @api\r\n   */\r\n  fit(geometryOrExtent, opt_options) {\r\n    const options = opt_options || {};\r\n    let size = options.size;\r\n    if (!size) {\r\n      size = this.getSizeFromViewport_();\r\n    }\r\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\r\n    let geometry;\r\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\r\n      24); // Invalid extent or geometry provided as `geometry`\r\n    if (Array.isArray(geometryOrExtent)) {\r\n      assert(!isEmpty(geometryOrExtent),\r\n        25); // Cannot fit empty extent provided as `geometry`\r\n      geometry = polygonFromExtent(geometryOrExtent);\r\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\r\n      geometryOrExtent = geometryOrExtent.getExtent();\r\n      geometry = polygonFromExtent(geometryOrExtent);\r\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\r\n    } else {\r\n      geometry = geometryOrExtent;\r\n    }\r\n\r\n    const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\r\n    const nearest = options.nearest !== undefined ? options.nearest : false;\r\n    let minResolution;\r\n    if (options.minResolution !== undefined) {\r\n      minResolution = options.minResolution;\r\n    } else if (options.maxZoom !== undefined) {\r\n      minResolution = this.getResolutionForZoom(options.maxZoom);\r\n    } else {\r\n      minResolution = 0;\r\n    }\r\n    const coords = geometry.getFlatCoordinates();\r\n\r\n    // calculate rotated extent\r\n    const rotation = this.getRotation();\r\n    const cosAngle = Math.cos(-rotation);\r\n    let sinAngle = Math.sin(-rotation);\r\n    let minRotX = +Infinity;\r\n    let minRotY = +Infinity;\r\n    let maxRotX = -Infinity;\r\n    let maxRotY = -Infinity;\r\n    const stride = geometry.getStride();\r\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\r\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\r\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\r\n      minRotX = Math.min(minRotX, rotX);\r\n      minRotY = Math.min(minRotY, rotY);\r\n      maxRotX = Math.max(maxRotX, rotX);\r\n      maxRotY = Math.max(maxRotY, rotY);\r\n    }\r\n\r\n    // calculate resolution\r\n    let resolution = this.getResolutionForExtent(\r\n      [minRotX, minRotY, maxRotX, maxRotY],\r\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\r\n    resolution = isNaN(resolution) ? minResolution :\r\n      Math.max(resolution, minResolution);\r\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\r\n\r\n    // calculate center\r\n    sinAngle = -sinAngle; // go back to original rotation\r\n    let centerRotX = (minRotX + maxRotX) / 2;\r\n    let centerRotY = (minRotY + maxRotY) / 2;\r\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\r\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\r\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\r\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\r\n    const center = [centerX, centerY];\r\n    const callback = options.callback ? options.callback : VOID;\r\n\r\n    if (options.duration !== undefined) {\r\n      this.animate_({\r\n        resolution: resolution,\r\n        center: this.getConstrainedCenter(center, resolution),\r\n        duration: options.duration,\r\n        easing: options.easing\r\n      }, callback);\r\n    } else {\r\n      this.targetResolution_ = resolution;\r\n      this.targetCenter_ = center;\r\n      this.applyTargetState_(false, true);\r\n      animationCallback(callback, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Center on coordinate and view position.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"./size.js\").Size} size Box pixel size.\r\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\r\n   * @api\r\n   */\r\n  centerOn(coordinate, size, position) {\r\n    // calculate rotated position\r\n    const rotation = this.getRotation();\r\n    const cosAngle = Math.cos(-rotation);\r\n    let sinAngle = Math.sin(-rotation);\r\n    let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\r\n    let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\r\n    const resolution = this.getResolution();\r\n    rotX += (size[0] / 2 - position[0]) * resolution;\r\n    rotY += (position[1] - size[1] / 2) * resolution;\r\n\r\n    // go back to original angle\r\n    sinAngle = -sinAngle; // go back to original rotation\r\n    const centerX = rotX * cosAngle - rotY * sinAngle;\r\n    const centerY = rotY * cosAngle + rotX * sinAngle;\r\n\r\n    this.setCenter([centerX, centerY]);\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is defined.\r\n   */\r\n  isDef() {\r\n    return !!this.getCenter() && this.getResolution() !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\r\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\r\n   * @api\r\n   */\r\n  adjustCenter(deltaCoordinates) {\r\n    const center = this.targetCenter_;\r\n    this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\r\n  }\r\n\r\n  /**\r\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\r\n   * constraint will apply.\r\n   * @param {number} ratio The ratio to apply on the view resolution.\r\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\r\n   * @observable\r\n   * @api\r\n   */\r\n  adjustResolution(ratio, opt_anchor) {\r\n    const isMoving = this.getAnimating() || this.getInteracting();\r\n    const size = this.getSizeFromViewport_(this.getRotation());\r\n    const newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\r\n\r\n    if (opt_anchor !== undefined) {\r\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\r\n    }\r\n\r\n    this.targetResolution_ *= ratio;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\r\n   * constraint will apply.\r\n   * @param {number} delta Relative value to add to the zoom level.\r\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\r\n   * @api\r\n   */\r\n  adjustZoom(delta, opt_anchor) {\r\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\r\n  }\r\n\r\n  /**\r\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\r\n   * constraint will apply.\r\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\r\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\r\n   * @observable\r\n   * @api\r\n   */\r\n  adjustRotation(delta, opt_anchor) {\r\n    const isMoving = this.getAnimating() || this.getInteracting();\r\n    const newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\r\n    if (opt_anchor !== undefined) {\r\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\r\n    }\r\n    this.targetRotation_ += delta;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * Set the center of the current view. Any extent constraint will apply.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setCenter(center) {\r\n    this.targetCenter_ = center;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * @param {ViewHint} hint Hint.\r\n   * @param {number} delta Delta.\r\n   * @return {number} New value.\r\n   */\r\n  setHint(hint, delta) {\r\n    this.hints_[hint] += delta;\r\n    this.changed();\r\n    return this.hints_[hint];\r\n  }\r\n\r\n  /**\r\n   * Set the resolution for this view. Any resolution constraint will apply.\r\n   * @param {number|undefined} resolution The resolution of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setResolution(resolution) {\r\n    this.targetResolution_ = resolution;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * Set the rotation for this view. Any rotation constraint will apply.\r\n   * @param {number} rotation The rotation of the view in radians.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setRotation(rotation) {\r\n    this.targetRotation_ = rotation;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\r\n   * @param {number} zoom Zoom level.\r\n   * @api\r\n   */\r\n  setZoom(zoom) {\r\n    this.setResolution(this.getResolutionForZoom(zoom));\r\n  }\r\n\r\n  /**\r\n   * Recompute rotation/resolution/center based on target values.\r\n   * Note: we have to compute rotation first, then resolution and center considering that\r\n   * parameters can influence one another in case a view extent constraint is present.\r\n   * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\r\n   * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\r\n   * @private\r\n   */\r\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\r\n    const isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\r\n\r\n    // compute rotation\r\n    const newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\r\n    const size = this.getSizeFromViewport_(newRotation);\r\n    const newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\r\n    const newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\r\n\r\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\r\n      this.set(ViewProperty.ROTATION, newRotation);\r\n    }\r\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\r\n      this.set(ViewProperty.RESOLUTION, newResolution);\r\n    }\r\n    if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\r\n      this.set(ViewProperty.CENTER, newCenter);\r\n    }\r\n\r\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\r\n      this.cancelAnimations();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If any constraints need to be applied, an animation will be triggered.\r\n   * This is typically done on interaction end.\r\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\r\n   * without animation.\r\n   * @param {number=} opt_duration The animation duration in ms.\r\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\r\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\r\n   */\r\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\r\n    const duration = opt_duration !== undefined ? opt_duration : 200;\r\n    const direction = opt_resolutionDirection || 0;\r\n\r\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\r\n    const size = this.getSizeFromViewport_(newRotation);\r\n    const newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\r\n    const newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\r\n\r\n    if (duration === 0) {\r\n      this.targetResolution_ = newResolution;\r\n      this.targetRotation_ = newRotation;\r\n      this.targetCenter_ = newCenter;\r\n      this.applyTargetState_();\r\n      return;\r\n    }\r\n\r\n    if (this.getResolution() !== newResolution ||\r\n      this.getRotation() !== newRotation ||\r\n      !this.getCenter() ||\r\n      !equals(this.getCenter(), newCenter)) {\r\n\r\n      if (this.getAnimating()) {\r\n        this.cancelAnimations();\r\n      }\r\n\r\n      this.animate_({\r\n        rotation: newRotation,\r\n        center: newCenter,\r\n        resolution: newResolution,\r\n        duration: duration,\r\n        easing: easeOut,\r\n        anchor: opt_anchor\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Notify the View that an interaction has started.\r\n   * The view state will be resolved to a stable one if needed\r\n   * (depending on its constraints).\r\n   * @api\r\n   */\r\n  beginInteraction() {\r\n    this.resolveConstraints(0);\r\n\r\n    this.setHint(ViewHint.INTERACTING, 1);\r\n  }\r\n\r\n  /**\r\n   * Notify the View that an interaction has ended. The view state will be resolved\r\n   * to a stable one if needed (depending on its constraints).\r\n   * @param {number=} opt_duration Animation duration in ms.\r\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\r\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\r\n   * @api\r\n   */\r\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\r\n    this.setHint(ViewHint.INTERACTING, -1);\r\n\r\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\r\n  }\r\n\r\n  /**\r\n   * Get a valid position for the view center according to the current constraints.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\r\n   * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\r\n   * This is useful to guess a valid center position at a different zoom level.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\r\n   */\r\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\r\n    const size = this.getSizeFromViewport_(this.getRotation());\r\n    return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\r\n  }\r\n\r\n  /**\r\n   * Get a valid zoom level according to the current view constraints.\r\n   * @param {number|undefined} targetZoom Target zoom.\r\n   * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\r\n   * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\r\n   * the nearest available value.\r\n   * @return {number|undefined} Valid zoom level.\r\n   */\r\n  getConstrainedZoom(targetZoom, opt_direction) {\r\n    const targetRes = this.getResolutionForZoom(targetZoom);\r\n    return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\r\n  }\r\n\r\n  /**\r\n   * Get a valid resolution according to the current view constraints.\r\n   * @param {number|undefined} targetResolution Target resolution.\r\n   * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\r\n   * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\r\n   * the nearest available value.\r\n   * @return {number|undefined} Valid resolution.\r\n   */\r\n  getConstrainedResolution(targetResolution, opt_direction) {\r\n    const direction = opt_direction || 0;\r\n    const size = this.getSizeFromViewport_(this.getRotation());\r\n\r\n    return this.constraints_.resolution(targetResolution, direction, size);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Function} callback Callback.\r\n * @param {*} returnValue Return value.\r\n */\r\nfunction animationCallback(callback, returnValue) {\r\n  setTimeout(function() {\r\n    callback(returnValue);\r\n  }, 0);\r\n}\r\n\r\n\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\r\n */\r\nexport function createCenterConstraint(options) {\r\n  if (options.extent !== undefined) {\r\n    const smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\r\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\r\n  }\r\n\r\n  const projection = createProjection(options.projection, 'EPSG:3857');\r\n  if (options.multiWorld !== true && projection.isGlobal()) {\r\n    const extent = projection.getExtent().slice();\r\n    extent[0] = -Infinity;\r\n    extent[2] = Infinity;\r\n    return createExtent(extent, false, false);\r\n  }\r\n\r\n  return centerNone;\r\n}\r\n\r\n\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\r\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\r\n */\r\nexport function createResolutionConstraint(options) {\r\n  let resolutionConstraint;\r\n  let maxResolution;\r\n  let minResolution;\r\n\r\n  // TODO: move these to be ol constants\r\n  // see https://github.com/openlayers/openlayers/issues/2076\r\n  const defaultMaxZoom = 28;\r\n  const defaultZoomFactor = 2;\r\n\r\n  let minZoom = options.minZoom !== undefined ?\r\n    options.minZoom : DEFAULT_MIN_ZOOM;\r\n\r\n  let maxZoom = options.maxZoom !== undefined ?\r\n    options.maxZoom : defaultMaxZoom;\r\n\r\n  const zoomFactor = options.zoomFactor !== undefined ?\r\n    options.zoomFactor : defaultZoomFactor;\r\n\r\n  const multiWorld = options.multiWorld !== undefined ?\r\n    options.multiWorld : false;\r\n\r\n  const smooth =\r\n      options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\r\n\r\n  if (options.resolutions !== undefined) {\r\n    const resolutions = options.resolutions;\r\n    maxResolution = resolutions[minZoom];\r\n    minResolution = resolutions[maxZoom] !== undefined ?\r\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\r\n\r\n    if (options.constrainResolution) {\r\n      resolutionConstraint = createSnapToResolutions(resolutions, smooth,\r\n        !options.constrainOnlyCenter && options.extent);\r\n    } else {\r\n      resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth,\r\n        !options.constrainOnlyCenter && options.extent);\r\n    }\r\n  } else {\r\n    // calculate the default min and max resolution\r\n    const projection = createProjection(options.projection, 'EPSG:3857');\r\n    const extent = projection.getExtent();\r\n    const size = !extent ?\r\n      // use an extent that can fit the whole world if need be\r\n      360 * METERS_PER_UNIT[Units.DEGREES] /\r\n            projection.getMetersPerUnit() :\r\n      Math.max(getWidth(extent), getHeight(extent));\r\n\r\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\r\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\r\n\r\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\r\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\r\n\r\n    // user provided maxResolution takes precedence\r\n    maxResolution = options.maxResolution;\r\n    if (maxResolution !== undefined) {\r\n      minZoom = 0;\r\n    } else {\r\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\r\n    }\r\n\r\n    // user provided minResolution takes precedence\r\n    minResolution = options.minResolution;\r\n    if (minResolution === undefined) {\r\n      if (options.maxZoom !== undefined) {\r\n        if (options.maxResolution !== undefined) {\r\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\r\n        } else {\r\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\r\n        }\r\n      } else {\r\n        minResolution = defaultMinResolution;\r\n      }\r\n    }\r\n\r\n    // given discrete zoom levels, minResolution may be different than provided\r\n    maxZoom = minZoom + Math.floor(\r\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\r\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\r\n\r\n    if (options.constrainResolution) {\r\n      resolutionConstraint = createSnapToPower(\r\n        zoomFactor, maxResolution, minResolution, smooth,\r\n        !options.constrainOnlyCenter && options.extent);\r\n    } else {\r\n      let constrainOnlyCenter = options.constrainOnlyCenter;\r\n      let extent = options.extent;\r\n      if (!multiWorld && !extent && projection.isGlobal()) {\r\n        constrainOnlyCenter = false;\r\n        extent = projection.getExtent();\r\n      }\r\n      resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth,\r\n        !constrainOnlyCenter && extent);\r\n    }\r\n  }\r\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\r\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\r\n}\r\n\r\n\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\r\n */\r\nexport function createRotationConstraint(options) {\r\n  const enableRotation = options.enableRotation !== undefined ?\r\n    options.enableRotation : true;\r\n  if (enableRotation) {\r\n    const constrainRotation = options.constrainRotation;\r\n    if (constrainRotation === undefined || constrainRotation === true) {\r\n      return createSnapToZero();\r\n    } else if (constrainRotation === false) {\r\n      return rotationNone;\r\n    } else if (typeof constrainRotation === 'number') {\r\n      return createSnapToN(constrainRotation);\r\n    } else {\r\n      return rotationNone;\r\n    }\r\n  } else {\r\n    return disable;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Determine if an animation involves no view change.\r\n * @param {Animation} animation The animation.\r\n * @return {boolean} The animation involves no view change.\r\n */\r\nexport function isNoopAnimation(animation) {\r\n  if (animation.sourceCenter && animation.targetCenter) {\r\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\r\n      return false;\r\n    }\r\n  }\r\n  if (animation.sourceResolution !== animation.targetResolution) {\r\n    return false;\r\n  }\r\n  if (animation.sourceRotation !== animation.targetRotation) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default View;\r\n","/**\r\n * @module ol/dom\r\n */\r\n\r\n\r\n/**\r\n * Create an html canvas element and returns its 2d context.\r\n * @param {number=} opt_width Canvas width.\r\n * @param {number=} opt_height Canvas height.\r\n * @return {CanvasRenderingContext2D} The context.\r\n */\r\nexport function createCanvasContext2D(opt_width, opt_height) {\r\n  const canvas = document.createElement('canvas');\r\n  if (opt_width) {\r\n    canvas.width = opt_width;\r\n  }\r\n  if (opt_height) {\r\n    canvas.height = opt_height;\r\n  }\r\n  return canvas.getContext('2d');\r\n}\r\n\r\n\r\n/**\r\n * Get the current computed width for the given element including margin,\r\n * padding and border.\r\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\r\n * @param {!HTMLElement} element Element.\r\n * @return {number} The width.\r\n */\r\nexport function outerWidth(element) {\r\n  let width = element.offsetWidth;\r\n  const style = getComputedStyle(element);\r\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\r\n\r\n  return width;\r\n}\r\n\r\n\r\n/**\r\n * Get the current computed height for the given element including margin,\r\n * padding and border.\r\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\r\n * @param {!HTMLElement} element Element.\r\n * @return {number} The height.\r\n */\r\nexport function outerHeight(element) {\r\n  let height = element.offsetHeight;\r\n  const style = getComputedStyle(element);\r\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\r\n\r\n  return height;\r\n}\r\n\r\n/**\r\n * @param {Node} newNode Node to replace old node\r\n * @param {Node} oldNode The node to be replaced\r\n */\r\nexport function replaceNode(newNode, oldNode) {\r\n  const parent = oldNode.parentNode;\r\n  if (parent) {\r\n    parent.replaceChild(newNode, oldNode);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Node} node The node to remove.\r\n * @returns {Node} The node that was removed or null.\r\n */\r\nexport function removeNode(node) {\r\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\r\n}\r\n\r\n/**\r\n * @param {Node} node The node to remove the children from.\r\n */\r\nexport function removeChildren(node) {\r\n  while (node.lastChild) {\r\n    node.removeChild(node.lastChild);\r\n  }\r\n}\r\n\r\n/**\r\n * Transform the children of a parent node so they match the\r\n * provided list of children.  This function aims to efficiently\r\n * remove, add, and reorder child nodes while maintaining a simple\r\n * implementation (it is not guaranteed to minimize DOM operations).\r\n * @param {Node} node The parent node whose children need reworking.\r\n * @param {Array<Node>} children The desired children.\r\n */\r\nexport function replaceChildren(node, children) {\r\n  const oldChildren = node.childNodes;\r\n\r\n  for (let i = 0; true; ++i) {\r\n    const oldChild = oldChildren[i];\r\n    const newChild = children[i];\r\n\r\n    // check if our work is done\r\n    if (!oldChild && !newChild) {\r\n      break;\r\n    }\r\n\r\n    // check if children match\r\n    if (oldChild === newChild) {\r\n      continue;\r\n    }\r\n\r\n    // check if a new child needs to be added\r\n    if (!oldChild) {\r\n      node.appendChild(newChild);\r\n      continue;\r\n    }\r\n\r\n    // check if an old child needs to be removed\r\n    if (!newChild) {\r\n      node.removeChild(oldChild);\r\n      --i;\r\n      continue;\r\n    }\r\n\r\n    // reorder\r\n    node.insertBefore(newChild, oldChild);\r\n  }\r\n}\r\n","/**\r\n * @module ol/layer/Property\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  OPACITY: 'opacity',\r\n  VISIBLE: 'visible',\r\n  EXTENT: 'extent',\r\n  Z_INDEX: 'zIndex',\r\n  MAX_RESOLUTION: 'maxResolution',\r\n  MIN_RESOLUTION: 'minResolution',\r\n  SOURCE: 'source'\r\n};\r\n","/**\r\n * @module ol/layer/Base\r\n */\r\nimport {abstract} from '../util.js';\r\nimport BaseObject from '../Object.js';\r\nimport LayerProperty from './Property.js';\r\nimport {clamp} from '../math.js';\r\nimport {assign} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\r\n * the options is set as a {@link module:ol/Object} property on the layer object, so\r\n * is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nclass BaseLayer extends BaseObject {\r\n  /**\r\n   * @param {Options} options Layer options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @type {Object<string, *>}\r\n     */\r\n    const properties = assign({}, options);\r\n    properties[LayerProperty.OPACITY] =\r\n       options.opacity !== undefined ? options.opacity : 1;\r\n    properties[LayerProperty.VISIBLE] =\r\n       options.visible !== undefined ? options.visible : true;\r\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\r\n    properties[LayerProperty.MAX_RESOLUTION] =\r\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\r\n    properties[LayerProperty.MIN_RESOLUTION] =\r\n       options.minResolution !== undefined ? options.minResolution : 0;\r\n\r\n    /**\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\r\n    delete properties.className;\r\n\r\n    this.setProperties(properties);\r\n\r\n    /**\r\n     * @type {import(\"./Layer.js\").State}\r\n     * @private\r\n     */\r\n    this.state_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @return {string} CSS class name.\r\n   */\r\n  getClassName() {\r\n    return this.className_;\r\n  }\r\n\r\n  /**\r\n   * This method is not meant to be called by layers or layer renderers because the state\r\n   * is incorrect if the layer is included in a layer group.\r\n   *\r\n   * @param {boolean=} opt_managed Layer is managed.\r\n   * @return {import(\"./Layer.js\").State} Layer state.\r\n   */\r\n  getLayerState(opt_managed) {\r\n    /** @type {import(\"./Layer.js\").State} */\r\n    const state = this.state_ || /** @type {?} */ ({\r\n      layer: this,\r\n      managed: opt_managed === undefined ? true : opt_managed\r\n    });\r\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\r\n    state.sourceState = this.getSourceState();\r\n    state.visible = this.getVisible();\r\n    state.extent = this.getExtent();\r\n    state.zIndex = this.getZIndex() || (state.managed === false ? Infinity : 0);\r\n    state.maxResolution = this.getMaxResolution();\r\n    state.minResolution = Math.max(this.getMinResolution(), 0);\r\n    this.state_ = state;\r\n\r\n    return state;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\r\n   *     modified in place).\r\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n   */\r\n  getLayersArray(opt_array) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\r\n   *     states (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n   */\r\n  getLayerStatesArray(opt_states) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\r\n   * will be visible regardless of extent.\r\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return (\r\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the maximum resolution of the layer.\r\n   * @return {number} The maximum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getMaxResolution() {\r\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\r\n  }\r\n\r\n  /**\r\n   * Return the minimum resolution of the layer.\r\n   * @return {number} The minimum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getMinResolution() {\r\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\r\n  }\r\n\r\n  /**\r\n   * Return the opacity of the layer (between 0 and 1).\r\n   * @return {number} The opacity of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getOpacity() {\r\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../source/State.js\").default} Source state.\r\n   */\r\n  getSourceState() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Return the visibility of the layer (`true` or `false`).\r\n   * @return {boolean} The visibility of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getVisible() {\r\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\r\n  }\r\n\r\n  /**\r\n   * Return the Z-index of the layer, which is used to order layers before\r\n   * rendering. The default Z-index is 0.\r\n   * @return {number} The Z-index of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getZIndex() {\r\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\r\n  }\r\n\r\n  /**\r\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\r\n   * will be visible at all extents.\r\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setExtent(extent) {\r\n    this.set(LayerProperty.EXTENT, extent);\r\n  }\r\n\r\n  /**\r\n   * Set the maximum resolution at which the layer is visible.\r\n   * @param {number} maxResolution The maximum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setMaxResolution(maxResolution) {\r\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\r\n  }\r\n\r\n  /**\r\n   * Set the minimum resolution at which the layer is visible.\r\n   * @param {number} minResolution The minimum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setMinResolution(minResolution) {\r\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\r\n  }\r\n\r\n  /**\r\n   * Set the opacity of the layer, allowed values range from 0 to 1.\r\n   * @param {number} opacity The opacity of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setOpacity(opacity) {\r\n    this.set(LayerProperty.OPACITY, opacity);\r\n  }\r\n\r\n  /**\r\n   * Set the visibility of the layer (`true` or `false`).\r\n   * @param {boolean} visible The visibility of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setVisible(visible) {\r\n    this.set(LayerProperty.VISIBLE, visible);\r\n  }\r\n\r\n  /**\r\n   * Set Z-index of the layer, which is used to order layers before rendering.\r\n   * The default Z-index is 0.\r\n   * @param {number} zindex The z-index of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setZIndex(zindex) {\r\n    this.set(LayerProperty.Z_INDEX, zindex);\r\n  }\r\n}\r\n\r\n\r\nexport default BaseLayer;\r\n","/**\r\n * @module ol/source/State\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\r\n */\r\nexport default {\r\n  UNDEFINED: 'undefined',\r\n  LOADING: 'loading',\r\n  READY: 'ready',\r\n  ERROR: 'error'\r\n};\r\n","/**\r\n * @module ol/layer/Group\r\n */\r\nimport {getUid} from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport {assert} from '../asserts.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getIntersection} from '../extent.js';\r\nimport BaseLayer from './Base.js';\r\nimport {assign, clear} from '../obj.js';\r\nimport SourceState from '../source/State.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  LAYERS: 'layers'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\r\n *\r\n * A generic `change` event is triggered when the group/Collection changes.\r\n *\r\n * @api\r\n */\r\nclass LayerGroup extends BaseLayer {\r\n  /**\r\n   * @param {Options=} opt_options Layer options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n    const baseOptions = /** @type {Options} */ (assign({}, options));\r\n    delete baseOptions.layers;\r\n\r\n    let layers = options.layers;\r\n\r\n    super(baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.layersListenerKeys_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\r\n    this.listenerKeys_ = {};\r\n\r\n    listen(this,\r\n      getChangeEventType(Property.LAYERS),\r\n      this.handleLayersChanged_, this);\r\n\r\n    if (layers) {\r\n      if (Array.isArray(layers)) {\r\n        layers = new Collection(layers.slice(), {unique: true});\r\n      } else {\r\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\r\n          43); // Expected `layers` to be an array or a `Collection`\r\n      }\r\n    } else {\r\n      layers = new Collection(undefined, {unique: true});\r\n    }\r\n\r\n    this.setLayers(layers);\r\n\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayerChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayersChanged_() {\r\n    this.layersListenerKeys_.forEach(unlistenByKey);\r\n    this.layersListenerKeys_.length = 0;\r\n\r\n    const layers = this.getLayers();\r\n    this.layersListenerKeys_.push(\r\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\r\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\r\n    );\r\n\r\n    for (const id in this.listenerKeys_) {\r\n      this.listenerKeys_[id].forEach(unlistenByKey);\r\n    }\r\n    clear(this.listenerKeys_);\r\n\r\n    const layersArray = layers.getArray();\r\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\r\n      const layer = layersArray[i];\r\n      this.listenerKeys_[getUid(layer)] = [\r\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\r\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\r\n      ];\r\n    }\r\n\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersAdd_(collectionEvent) {\r\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\r\n    this.listenerKeys_[getUid(layer)] = [\r\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\r\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\r\n    ];\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersRemove_(collectionEvent) {\r\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\r\n    const key = getUid(layer);\r\n    this.listenerKeys_[key].forEach(unlistenByKey);\r\n    delete this.listenerKeys_[key];\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\r\n   *   {@link module:ol/layer/Base layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLayers() {\r\n    return (\r\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\r\n   *   {@link module:ol/layer/Base layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setLayers(layers) {\r\n    this.set(Property.LAYERS, layers);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getLayersArray(opt_array) {\r\n    const array = opt_array !== undefined ? opt_array : [];\r\n    this.getLayers().forEach(function(layer) {\r\n      layer.getLayersArray(array);\r\n    });\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getLayerStatesArray(opt_states) {\r\n    const states = opt_states !== undefined ? opt_states : [];\r\n\r\n    const pos = states.length;\r\n\r\n    this.getLayers().forEach(function(layer) {\r\n      layer.getLayerStatesArray(states);\r\n    });\r\n\r\n    const ownLayerState = this.getLayerState();\r\n    for (let i = pos, ii = states.length; i < ii; i++) {\r\n      const layerState = states[i];\r\n      layerState.opacity *= ownLayerState.opacity;\r\n      layerState.visible = layerState.visible && ownLayerState.visible;\r\n      layerState.maxResolution = Math.min(\r\n        layerState.maxResolution, ownLayerState.maxResolution);\r\n      layerState.minResolution = Math.max(\r\n        layerState.minResolution, ownLayerState.minResolution);\r\n      if (ownLayerState.extent !== undefined) {\r\n        if (layerState.extent !== undefined) {\r\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\r\n        } else {\r\n          layerState.extent = ownLayerState.extent;\r\n        }\r\n      }\r\n    }\r\n\r\n    return states;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSourceState() {\r\n    return SourceState.READY;\r\n  }\r\n}\r\n\r\n\r\nexport default LayerGroup;\r\n","/**\r\n * @module ol/size\r\n */\r\n\r\n\r\n/**\r\n * An array of numbers representing a size: `[width, height]`.\r\n * @typedef {Array<number>} Size\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Returns a buffered size.\r\n * @param {Size} size Size.\r\n * @param {number} num The amount by which to buffer.\r\n * @param {Size=} opt_size Optional reusable size array.\r\n * @return {Size} The buffered size.\r\n */\r\nexport function buffer(size, num, opt_size) {\r\n  if (opt_size === undefined) {\r\n    opt_size = [0, 0];\r\n  }\r\n  opt_size[0] = size[0] + 2 * num;\r\n  opt_size[1] = size[1] + 2 * num;\r\n  return opt_size;\r\n}\r\n\r\n\r\n/**\r\n * Determines if a size has a positive area.\r\n * @param {Size} size The size to test.\r\n * @return {boolean} The size has a positive area.\r\n */\r\nexport function hasArea(size) {\r\n  return size[0] > 0 && size[1] > 0;\r\n}\r\n\r\n\r\n/**\r\n * Returns a size scaled by a ratio. The result will be an array of integers.\r\n * @param {Size} size Size.\r\n * @param {number} ratio Ratio.\r\n * @param {Size=} opt_size Optional reusable size array.\r\n * @return {Size} The scaled size.\r\n */\r\nexport function scale(size, ratio, opt_size) {\r\n  if (opt_size === undefined) {\r\n    opt_size = [0, 0];\r\n  }\r\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\r\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\r\n  return opt_size;\r\n}\r\n\r\n\r\n/**\r\n * Returns an `Size` array for the passed in number (meaning: square) or\r\n * `Size` array.\r\n * (meaning: non-square),\r\n * @param {number|Size} size Width and height.\r\n * @param {Size=} opt_size Optional reusable size array.\r\n * @return {Size} Size.\r\n * @api\r\n */\r\nexport function toSize(size, opt_size) {\r\n  if (Array.isArray(size)) {\r\n    return size;\r\n  } else {\r\n    if (opt_size === undefined) {\r\n      opt_size = [size, size];\r\n    } else {\r\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\r\n    }\r\n    return opt_size;\r\n  }\r\n}\r\n","/**\r\n * @module ol/PluggableMap\r\n */\r\nimport {getUid} from './util.js';\r\nimport Collection from './Collection.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapEvent from './MapEvent.js';\r\nimport MapEventType from './MapEventType.js';\r\nimport MapProperty from './MapProperty.js';\r\nimport RenderEventType from './render/EventType.js';\r\nimport BaseObject, {getChangeEventType} from './Object.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport TileQueue from './TileQueue.js';\r\nimport View from './View.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport {assert} from './asserts.js';\r\nimport {removeNode} from './dom.js';\r\nimport {listen, unlistenByKey, unlisten} from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\r\nimport {TRUE} from './functions.js';\r\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\r\nimport LayerGroup from './layer/Group.js';\r\nimport {hasArea} from './size.js';\r\nimport {DROP} from './structs/PriorityQueue.js';\r\nimport {create as createTransform, apply as applyTransform} from './transform.js';\r\n\r\n\r\n/**\r\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\r\n * be used in applications.\r\n * @typedef {Object} FrameState\r\n * @property {number} pixelRatio The pixel ratio of the frame.\r\n * @property {number} time The time when rendering of the frame was requested.\r\n * @property {import(\"./View.js\").State} viewState The state of the current view.\r\n * @property {boolean} animate\r\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\r\n * @property {null|import(\"./extent.js\").Extent} extent\r\n * @property {Array<DeclutterItems>} declutterItems\r\n * @property {import(\"./coordinate.js\").Coordinate} focus\r\n * @property {number} index\r\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\r\n * @property {number} layerIndex\r\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\r\n * @property {Array<PostRenderFunction>} postRenderFunctions\r\n * @property {import(\"./size.js\").Size} size\r\n * @property {!Object<string, boolean>} skippedFeatureUids\r\n * @property {TileQueue} tileQueue\r\n * @property {!Object<string, Object<string, boolean>>} usedTiles\r\n * @property {Array<number>} viewHints\r\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} DeclutterItems\r\n * @property {Array<*>} items Declutter items of an executor.\r\n * @property {number} opacity Layer opacity.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} AtPixelOptions\r\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\r\n * function. The filter function will receive one argument, the\r\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\r\n * Only layers which are visible and for which this function returns `true`\r\n * will be tested for features. By default, all visible layers will be tested.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\r\n * inside the radius around the given position will be checked for features.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} MapOptionsInternal\r\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\r\n * @property {HTMLElement|Document} keyboardEventTarget\r\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\r\n * @property {Object<string, *>} values\r\n */\r\n\r\n\r\n/**\r\n * Object literal with config options for the map.\r\n * @typedef {Object} MapOptions\r\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\r\n * Controls initially added to the map. If not specified,\r\n * {@link module:ol/control~defaults} is used.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\r\n * physical pixels and device-independent pixels (dips) on the device.\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\r\n * Interactions that are initially added to the map. If not specified,\r\n * {@link module:ol/interaction~defaults} is used.\r\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\r\n * listen to keyboard events on. This determines when the `KeyboardPan` and\r\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\r\n * `document` the keyboard interactions will always trigger. If this option is\r\n * not specified, the element the library listens to keyboard events on is the\r\n * map target (i.e. the user-provided div for the map). If this is not\r\n * `document`, the target element needs to be focused for key events to be\r\n * emitted, requiring that the target element has a `tabindex` attribute.\r\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\r\n * Layers. If this is not defined, a map with no layers will be rendered. Note\r\n * that layers are rendered in the order supplied, so if you want, for example,\r\n * a vector layer to appear on top of a tile layer, it must come after the tile\r\n * layer.\r\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\r\n * simultaneously.\r\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\r\n * cursor must move to be detected as a map move event instead of a click.\r\n * Increasing this value can make it easier to click on the map.\r\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\r\n * Overlays initially added to the map. By default, no overlays are added.\r\n * @property {HTMLElement|string} [target] The container for the map, either the\r\n * element itself or the `id` of the element. If not specified at construction\r\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\r\n * rendered.\r\n * @property {View} [view] The map's view.  No layer sources will be\r\n * fetched unless this is specified at construction time or through\r\n * {@link module:ol/Map~Map#setView}.\r\n */\r\n\r\n\r\n/**\r\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\r\n * @fires import(\"./MapEvent.js\").MapEvent\r\n * @fires import(\"./render/Event.js\").default#precompose\r\n * @fires import(\"./render/Event.js\").default#postcompose\r\n * @fires import(\"./render/Event.js\").default#rendercomplete\r\n * @api\r\n */\r\nclass PluggableMap extends BaseObject {\r\n\r\n  /**\r\n   * @param {MapOptions} options Map options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super();\r\n\r\n    const optionsInternal = createOptionsInternal(options);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\r\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.animationDelayKey_;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.animationDelay_ = function() {\r\n      this.animationDelayKey_ = undefined;\r\n      this.renderFrame_(Date.now());\r\n    }.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.coordinateToPixelTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.pixelToCoordinateTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.frameIndex_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?FrameState}\r\n     */\r\n    this.frameState_ = null;\r\n\r\n    /**\r\n     * The extent at the previous 'moveend' event.\r\n     * @private\r\n     * @type {import(\"./extent.js\").Extent}\r\n     */\r\n    this.previousExtent_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewPropertyListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewChangeListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.layerGroupPropertyListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.viewport_ = document.createElement('div');\r\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\r\n    this.viewport_.style.position = 'relative';\r\n    this.viewport_.style.overflow = 'hidden';\r\n    this.viewport_.style.width = '100%';\r\n    this.viewport_.style.height = '100%';\r\n    // prevent page zoom on IE >= 10 browsers\r\n    this.viewport_.style.msTouchAction = 'none';\r\n    this.viewport_.style.touchAction = 'none';\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainer_ = document.createElement('div');\r\n    this.overlayContainer_.style.position = 'absolute';\r\n    this.overlayContainer_.style.zIndex = '0';\r\n    this.overlayContainer_.style.width = '100%';\r\n    this.overlayContainer_.style.height = '100%';\r\n    this.overlayContainer_.className = 'ol-overlaycontainer';\r\n    this.viewport_.appendChild(this.overlayContainer_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainerStopEvent_ = document.createElement('div');\r\n    this.overlayContainerStopEvent_.style.position = 'absolute';\r\n    this.overlayContainerStopEvent_.style.zIndex = '0';\r\n    this.overlayContainerStopEvent_.style.width = '100%';\r\n    this.overlayContainerStopEvent_.style.height = '100%';\r\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\r\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {MapBrowserEventHandler}\r\n     */\r\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\r\n    for (const key in MapBrowserEventType) {\r\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\r\n        this.handleMapBrowserEvent, this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|Document}\r\n     */\r\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.keyHandlerKeys_ = null;\r\n\r\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\r\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\r\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\r\n\r\n    /**\r\n     * @type {Collection<import(\"./control/Control.js\").default>}\r\n     * @protected\r\n     */\r\n    this.controls = optionsInternal.controls || new Collection();\r\n\r\n    /**\r\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\r\n     * @protected\r\n     */\r\n    this.interactions = optionsInternal.interactions || new Collection();\r\n\r\n    /**\r\n     * @type {import(\"./events.js\").EventsKey}\r\n     */\r\n    this.labelCacheListenerKey_;\r\n\r\n    /**\r\n     * @type {Collection<import(\"./Overlay.js\").default>}\r\n     * @private\r\n     */\r\n    this.overlays_ = optionsInternal.overlays;\r\n\r\n    /**\r\n     * A lookup of overlays by id.\r\n     * @private\r\n     * @type {Object<string, import(\"./Overlay.js\").default>}\r\n     */\r\n    this.overlayIdIndex_ = {};\r\n\r\n    /**\r\n     * @type {import(\"./renderer/Map.js\").default}\r\n     * @private\r\n     */\r\n    this.renderer_ = this.createRenderer();\r\n\r\n    /**\r\n     * @type {function(Event): void|undefined}\r\n     * @private\r\n     */\r\n    this.handleResize_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./coordinate.js\").Coordinate}\r\n     */\r\n    this.focus_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<PostRenderFunction>}\r\n     */\r\n    this.postRenderFunctions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {TileQueue}\r\n     */\r\n    this.tileQueue_ = new TileQueue(\r\n      this.getTilePriority.bind(this),\r\n      this.handleTileChange_.bind(this));\r\n\r\n    /**\r\n     * Uids of features to skip at rendering time.\r\n     * @type {Object<string, boolean>}\r\n     * @private\r\n     */\r\n    this.skippedFeatureUids_ = {};\r\n\r\n    listen(\r\n      this, getChangeEventType(MapProperty.LAYERGROUP),\r\n      this.handleLayerGroupChanged_, this);\r\n    listen(this, getChangeEventType(MapProperty.VIEW),\r\n      this.handleViewChanged_, this);\r\n    listen(this, getChangeEventType(MapProperty.SIZE),\r\n      this.handleSizeChanged_, this);\r\n    listen(this, getChangeEventType(MapProperty.TARGET),\r\n      this.handleTargetChanged_, this);\r\n\r\n    // setProperties will trigger the rendering of the map if the map\r\n    // is \"defined\" already.\r\n    this.setProperties(optionsInternal.values);\r\n\r\n    this.controls.forEach(\r\n      /**\r\n       * @param {import(\"./control/Control.js\").default} control Control.\r\n       * @this {PluggableMap}\r\n       */\r\n      (function(control) {\r\n        control.setMap(this);\r\n      }).bind(this));\r\n\r\n    listen(this.controls, CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        event.element.setMap(this);\r\n      }, this);\r\n\r\n    listen(this.controls, CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        event.element.setMap(null);\r\n      }, this);\r\n\r\n    this.interactions.forEach(\r\n      /**\r\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\r\n       * @this {PluggableMap}\r\n       */\r\n      (function(interaction) {\r\n        interaction.setMap(this);\r\n      }).bind(this));\r\n\r\n    listen(this.interactions, CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        event.element.setMap(this);\r\n      }, this);\r\n\r\n    listen(this.interactions, CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        event.element.setMap(null);\r\n      }, this);\r\n\r\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\r\n\r\n    listen(this.overlays_, CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\r\n      }, this);\r\n\r\n    listen(this.overlays_, CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\r\n        const id = overlay.getId();\r\n        if (id !== undefined) {\r\n          delete this.overlayIdIndex_[id.toString()];\r\n        }\r\n        event.element.setMap(null);\r\n      }, this);\r\n\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\r\n   */\r\n  createRenderer() {\r\n    throw new Error('Use a map type that has a createRenderer method');\r\n  }\r\n\r\n  /**\r\n   * Add the given control to the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @api\r\n   */\r\n  addControl(control) {\r\n    this.getControls().push(control);\r\n  }\r\n\r\n  /**\r\n   * Add the given interaction to the map. If you want to add an interaction\r\n   * at another point of the collection use `getInteraction()` and the methods\r\n   * available on {@link module:ol/Collection~Collection}. This can be used to\r\n   * stop the event propagation from the handleEvent function. The interactions\r\n   * get to handle the events in the reverse order of this collection.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\r\n   * @api\r\n   */\r\n  addInteraction(interaction) {\r\n    this.getInteractions().push(interaction);\r\n  }\r\n\r\n  /**\r\n   * Adds the given layer to the top of this map. If you want to add a layer\r\n   * elsewhere in the stack, use `getLayers()` and the methods available on\r\n   * {@link module:ol/Collection~Collection}.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @api\r\n   */\r\n  addLayer(layer) {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    layers.push(layer);\r\n  }\r\n\r\n  /**\r\n   * Add the given overlay to the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @api\r\n   */\r\n  addOverlay(overlay) {\r\n    this.getOverlays().push(overlay);\r\n  }\r\n\r\n  /**\r\n   * This deals with map's overlay collection changes.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @private\r\n   */\r\n  addOverlayInternal_(overlay) {\r\n    const id = overlay.getId();\r\n    if (id !== undefined) {\r\n      this.overlayIdIndex_[id.toString()] = overlay;\r\n    }\r\n    overlay.setMap(this);\r\n  }\r\n\r\n  /**\r\n   * Attach a label cache for listening to font changes.\r\n   * @param {import(\"./events/Target.js\").default} labelCache Label cache.\r\n   */\r\n  attachLabelCache(labelCache) {\r\n    this.detachLabelCache();\r\n    this.labelCacheListenerKey_ = listen(labelCache, EventType.CLEAR, this.redrawText.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Detach the label cache, i.e. no longer listen to font changes.\r\n   */\r\n  detachLabelCache() {\r\n    if (this.labelCacheListenerKey_) {\r\n      unlistenByKey(this.labelCacheListenerKey_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.mapBrowserEventHandler_.dispose();\r\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\r\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\r\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\r\n    if (this.handleResize_ !== undefined) {\r\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\r\n      this.handleResize_ = undefined;\r\n    }\r\n    if (this.animationDelayKey_) {\r\n      cancelAnimationFrame(this.animationDelayKey_);\r\n      this.animationDelayKey_ = undefined;\r\n    }\r\n    this.detachLabelCache();\r\n    this.setTarget(null);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Detect features that intersect a pixel on the viewport, and execute a\r\n   * callback with each intersecting feature. Layers included in the detection can\r\n   * be configured through the `layerFilter` option in `opt_options`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\r\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\r\n   *     called with two arguments. The first argument is one\r\n   *     {@link module:ol/Feature feature} or\r\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\r\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\r\n   *     unmanaged layers. To stop detection, callback functions can return a\r\n   *     truthy value.\r\n   * @param {AtPixelOptions=} opt_options Optional options.\r\n   * @return {T|undefined} Callback result, i.e. the return value of last\r\n   * callback execution, or the first truthy callback return value.\r\n   * @template S,T\r\n   * @api\r\n   */\r\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\r\n    if (!this.frameState_) {\r\n      return;\r\n    }\r\n    const coordinate = this.getCoordinateFromPixel(pixel);\r\n    opt_options = opt_options !== undefined ? opt_options :\r\n      /** @type {AtPixelOptions} */ ({});\r\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\r\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\r\n    const layerFilter = opt_options.layerFilter !== undefined ?\r\n      opt_options.layerFilter : TRUE;\r\n    return this.renderer_.forEachFeatureAtCoordinate(\r\n      coordinate, this.frameState_, hitTolerance, callback, null,\r\n      layerFilter, null);\r\n  }\r\n\r\n  /**\r\n   * Get all features that intersect a pixel on the viewport.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions=} opt_options Optional options.\r\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\r\n   * `null` if none were found.\r\n   * @api\r\n   */\r\n  getFeaturesAtPixel(pixel, opt_options) {\r\n    let features = null;\r\n    this.forEachFeatureAtPixel(pixel, function(feature) {\r\n      if (!features) {\r\n        features = [];\r\n      }\r\n      features.push(feature);\r\n    }, opt_options);\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * Detect layers that have a color value at a pixel on the viewport, and\r\n   * execute a callback with each matching layer. Layers included in the\r\n   * detection can be configured through `opt_layerFilter`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\r\n   *     Layer callback. This callback will receive two arguments: first is the\r\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\r\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\r\n   *     that do not currently support this argument. To stop detection, callback\r\n   *     functions can return a truthy value.\r\n   * @param {AtPixelOptions=} opt_options Configuration options.\r\n   * @return {T|undefined} Callback result, i.e. the return value of last\r\n   * callback execution, or the first truthy callback return value.\r\n   * @template S,T\r\n   * @api\r\n   */\r\n  forEachLayerAtPixel(pixel, callback, opt_options) {\r\n    if (!this.frameState_) {\r\n      return;\r\n    }\r\n    const options = opt_options || /** @type {AtPixelOptions} */ ({});\r\n    const hitTolerance = options.hitTolerance !== undefined ?\r\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\r\n    const layerFilter = options.layerFilter || TRUE;\r\n    return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\r\n  }\r\n\r\n  /**\r\n   * Detect if features intersect a pixel on the viewport. Layers included in the\r\n   * detection can be configured through `opt_layerFilter`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions=} opt_options Optional options.\r\n   * @return {boolean} Is there a feature at the given pixel?\r\n   * @api\r\n   */\r\n  hasFeatureAtPixel(pixel, opt_options) {\r\n    if (!this.frameState_) {\r\n      return false;\r\n    }\r\n    const coordinate = this.getCoordinateFromPixel(pixel);\r\n    opt_options = opt_options !== undefined ? opt_options :\r\n      /** @type {AtPixelOptions} */ ({});\r\n    const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\r\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\r\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\r\n    return this.renderer_.hasFeatureAtCoordinate(\r\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate in view projection for a browser event.\r\n   * @param {Event} event Event.\r\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n   * @api\r\n   */\r\n  getEventCoordinate(event) {\r\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\r\n  }\r\n\r\n  /**\r\n   * Returns the map pixel position for a browser event relative to the viewport.\r\n   * @param {Event|TouchEvent} event Event.\r\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\r\n   * @api\r\n   */\r\n  getEventPixel(event) {\r\n    const viewportPosition = this.viewport_.getBoundingClientRect();\r\n    const eventPosition = 'changedTouches' in event ?\r\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\r\n      /** @type {MouseEvent} */ (event);\r\n\r\n    return [\r\n      eventPosition.clientX - viewportPosition.left,\r\n      eventPosition.clientY - viewportPosition.top\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Get the target in which this map is rendered.\r\n   * Note that this returns what is entered as an option or in setTarget:\r\n   * if that was an element, it returns an element; if a string, it returns that.\r\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\r\n   *     map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getTarget() {\r\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\r\n  }\r\n\r\n  /**\r\n   * Get the DOM element into which this map is rendered. In contrast to\r\n   * `getTarget` this method always return an `Element`, or `null` if the\r\n   * map has no target.\r\n   * @return {HTMLElement} The element that the map is rendered in.\r\n   * @api\r\n   */\r\n  getTargetElement() {\r\n    const target = this.getTarget();\r\n    if (target !== undefined) {\r\n      return typeof target === 'string' ? document.getElementById(target) : target;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\r\n   * map view projection.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\r\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\r\n   * @api\r\n   */\r\n  getCoordinateFromPixel(pixel) {\r\n    const frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    } else {\r\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the map controls. Modifying this collection changes the controls\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\r\n   * @api\r\n   */\r\n  getControls() {\r\n    return this.controls;\r\n  }\r\n\r\n  /**\r\n   * Get the map overlays. Modifying this collection changes the overlays\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\r\n   * @api\r\n   */\r\n  getOverlays() {\r\n    return this.overlays_;\r\n  }\r\n\r\n  /**\r\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\r\n   * Note that the index treats string and numeric identifiers as the same. So\r\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\r\n   * @param {string|number} id Overlay identifier.\r\n   * @return {import(\"./Overlay.js\").default} Overlay.\r\n   * @api\r\n   */\r\n  getOverlayById(id) {\r\n    const overlay = this.overlayIdIndex_[id.toString()];\r\n    return overlay !== undefined ? overlay : null;\r\n  }\r\n\r\n  /**\r\n   * Get the map interactions. Modifying this collection changes the interactions\r\n   * associated with the map.\r\n   *\r\n   * Interactions are used for e.g. pan, zoom and rotate.\r\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\r\n   * @api\r\n   */\r\n  getInteractions() {\r\n    return this.interactions;\r\n  }\r\n\r\n  /**\r\n   * Get the layergroup associated with this map.\r\n   * @return {LayerGroup} A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLayerGroup() {\r\n    return (\r\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the collection of layers associated with this map.\r\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\r\n   * @api\r\n   */\r\n  getLayers() {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    return layers;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Layers have sources that are still loading.\r\n   */\r\n  getLoading() {\r\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const layer = layerStatesArray[i].layer;\r\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\r\n      if (source && source.loading) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\r\n   * projection and returns the corresponding pixel.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\r\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\r\n   * @api\r\n   */\r\n  getPixelFromCoordinate(coordinate) {\r\n    const frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    } else {\r\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the map renderer.\r\n   * @return {import(\"./renderer/Map.js\").default} Renderer\r\n   */\r\n  getRenderer() {\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Get the size of this map.\r\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return (\r\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the view associated with this map. A view manages properties such as\r\n   * center and resolution.\r\n   * @return {View} The view that controls this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getView() {\r\n    return (\r\n      /** @type {View} */ (this.get(MapProperty.VIEW))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as the map viewport.\r\n   * @return {HTMLElement} Viewport.\r\n   * @api\r\n   */\r\n  getViewport() {\r\n    return this.viewport_;\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as the container for overlays.  Elements added to\r\n   * this container will let mousedown and touchstart events through to the map,\r\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\r\n   * events.\r\n   * @return {!HTMLElement} The map's overlay container.\r\n   */\r\n  getOverlayContainer() {\r\n    return this.overlayContainer_;\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as a container for overlays that don't allow\r\n   * event propagation. Elements added to this container won't let mousedown and\r\n   * touchstart events through to the map, so clicks and gestures on an overlay\r\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n   * @return {!HTMLElement} The map's overlay container that stops events.\r\n   */\r\n  getOverlayContainerStopEvent() {\r\n    return this.overlayContainerStopEvent_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Tile.js\").default} tile Tile.\r\n   * @param {string} tileSourceKey Tile source key.\r\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\r\n   * @param {number} tileResolution Tile resolution.\r\n   * @return {number} Tile priority.\r\n   */\r\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\r\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\r\n    // are outside the visible extent.\r\n    const frameState = this.frameState_;\r\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\r\n      return DROP;\r\n    }\r\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\r\n      return DROP;\r\n    }\r\n    // Prioritize the highest zoom level tiles closest to the focus.\r\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\r\n    // Within a zoom level, tiles are prioritized by the distance in pixels\r\n    // between the center of the tile and the focus.  The factor of 65536 means\r\n    // that the prioritization should behave as desired for tiles up to\r\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\r\n    const deltaX = tileCenter[0] - frameState.focus[0];\r\n    const deltaY = tileCenter[1] - frameState.focus[1];\r\n    return 65536 * Math.log(tileResolution) +\r\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\r\n  }\r\n\r\n  /**\r\n   * @param {Event} browserEvent Browser event.\r\n   * @param {string=} opt_type Type.\r\n   */\r\n  handleBrowserEvent(browserEvent, opt_type) {\r\n    const type = opt_type || browserEvent.type;\r\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\r\n    this.handleMapBrowserEvent(mapBrowserEvent);\r\n  }\r\n\r\n  /**\r\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\r\n   */\r\n  handleMapBrowserEvent(mapBrowserEvent) {\r\n    if (!this.frameState_) {\r\n      // With no view defined, we cannot translate pixels into geographical\r\n      // coordinates so interactions cannot be used.\r\n      return;\r\n    }\r\n    let target = mapBrowserEvent.originalEvent.target;\r\n    while (target instanceof HTMLElement) {\r\n      if (target.parentElement === this.overlayContainerStopEvent_) {\r\n        return;\r\n      }\r\n      target = target.parentElement;\r\n    }\r\n    this.focus_ = mapBrowserEvent.coordinate;\r\n    mapBrowserEvent.frameState = this.frameState_;\r\n    const interactionsArray = this.getInteractions().getArray();\r\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\r\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\r\n        const interaction = interactionsArray[i];\r\n        if (!interaction.getActive()) {\r\n          continue;\r\n        }\r\n        const cont = interaction.handleEvent(mapBrowserEvent);\r\n        if (!cont) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePostRender() {\r\n\r\n    const frameState = this.frameState_;\r\n\r\n    // Manage the tile queue\r\n    // Image loads are expensive and a limited resource, so try to use them\r\n    // efficiently:\r\n    // * When the view is static we allow a large number of parallel tile loads\r\n    //   to complete the frame as quickly as possible.\r\n    // * When animating or interacting, image loads can cause janks, so we reduce\r\n    //   the maximum number of loads per frame and limit the number of parallel\r\n    //   tile loads to remain reactive to view changes and to reduce the chance of\r\n    //   loading tiles that will quickly disappear from view.\r\n    const tileQueue = this.tileQueue_;\r\n    if (!tileQueue.isEmpty()) {\r\n      let maxTotalLoading = this.maxTilesLoading_;\r\n      let maxNewLoads = maxTotalLoading;\r\n      if (frameState) {\r\n        const hints = frameState.viewHints;\r\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\r\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\r\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\r\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\r\n        }\r\n      }\r\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\r\n        tileQueue.reprioritize(); // FIXME only call if view has changed\r\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\r\n      }\r\n    }\r\n\r\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\r\n        !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\r\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\r\n    }\r\n\r\n    const postRenderFunctions = this.postRenderFunctions_;\r\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\r\n      postRenderFunctions[i](this, frameState);\r\n    }\r\n    postRenderFunctions.length = 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSizeChanged_() {\r\n    if (this.getView()) {\r\n      this.getView().resolveConstraints(0);\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTargetChanged_() {\r\n    // target may be undefined, null, a string or an Element.\r\n    // If it's a string we convert it to an Element before proceeding.\r\n    // If it's not now an Element we remove the viewport from the DOM.\r\n    // If it's an Element we append the viewport element to it.\r\n\r\n    let targetElement;\r\n    if (this.getTarget()) {\r\n      targetElement = this.getTargetElement();\r\n    }\r\n\r\n    if (this.keyHandlerKeys_) {\r\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\r\n        unlistenByKey(this.keyHandlerKeys_[i]);\r\n      }\r\n      this.keyHandlerKeys_ = null;\r\n    }\r\n\r\n    if (!targetElement) {\r\n      removeNode(this.viewport_);\r\n      if (this.handleResize_ !== undefined) {\r\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\r\n        this.handleResize_ = undefined;\r\n      }\r\n    } else {\r\n      targetElement.appendChild(this.viewport_);\r\n\r\n      const keyboardEventTarget = !this.keyboardEventTarget_ ?\r\n        targetElement : this.keyboardEventTarget_;\r\n      this.keyHandlerKeys_ = [\r\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\r\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\r\n      ];\r\n\r\n      if (!this.handleResize_) {\r\n        this.handleResize_ = this.updateSize.bind(this);\r\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\r\n      }\r\n    }\r\n\r\n    this.updateSize();\r\n    // updateSize calls setSize, so no need to call this.render\r\n    // ourselves here.\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTileChange_() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleViewPropertyChanged_() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleViewChanged_() {\r\n    if (this.viewPropertyListenerKey_) {\r\n      unlistenByKey(this.viewPropertyListenerKey_);\r\n      this.viewPropertyListenerKey_ = null;\r\n    }\r\n    if (this.viewChangeListenerKey_) {\r\n      unlistenByKey(this.viewChangeListenerKey_);\r\n      this.viewChangeListenerKey_ = null;\r\n    }\r\n    const view = this.getView();\r\n    if (view) {\r\n      this.viewport_.setAttribute('data-view', getUid(view));\r\n      this.viewPropertyListenerKey_ = listen(\r\n        view, ObjectEventType.PROPERTYCHANGE,\r\n        this.handleViewPropertyChanged_, this);\r\n      this.viewChangeListenerKey_ = listen(\r\n        view, EventType.CHANGE,\r\n        this.handleViewPropertyChanged_, this);\r\n\r\n      view.resolveConstraints(0);\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayerGroupChanged_() {\r\n    if (this.layerGroupPropertyListenerKeys_) {\r\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\r\n      this.layerGroupPropertyListenerKeys_ = null;\r\n    }\r\n    const layerGroup = this.getLayerGroup();\r\n    if (layerGroup) {\r\n      this.layerGroupPropertyListenerKeys_ = [\r\n        listen(\r\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\r\n          this.render, this),\r\n        listen(\r\n          layerGroup, EventType.CHANGE,\r\n          this.render, this)\r\n      ];\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is rendered.\r\n   */\r\n  isRendered() {\r\n    return !!this.frameState_;\r\n  }\r\n\r\n  /**\r\n   * Requests an immediate render in a synchronous manner.\r\n   * @api\r\n   */\r\n  renderSync() {\r\n    if (this.animationDelayKey_) {\r\n      cancelAnimationFrame(this.animationDelayKey_);\r\n    }\r\n    this.animationDelay_();\r\n  }\r\n\r\n  /**\r\n   * Redraws all text after new fonts have loaded\r\n   */\r\n  redrawText() {\r\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\r\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\r\n      const layer = layerStates[i].layer;\r\n      if (layer.hasRenderer()) {\r\n        layer.getRenderer().handleFontsChanged();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request a map rendering (at the next animation frame).\r\n   * @api\r\n   */\r\n  render() {\r\n    if (this.animationDelayKey_ === undefined) {\r\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the given control from the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\r\n   *     if the control was not found).\r\n   * @api\r\n   */\r\n  removeControl(control) {\r\n    return this.getControls().remove(control);\r\n  }\r\n\r\n  /**\r\n   * Remove the given interaction from the map.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\r\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\r\n   *     undefined if the interaction was not found).\r\n   * @api\r\n   */\r\n  removeInteraction(interaction) {\r\n    return this.getInteractions().remove(interaction);\r\n  }\r\n\r\n  /**\r\n   * Removes the given layer from the map.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\r\n   *     layer was not found).\r\n   * @api\r\n   */\r\n  removeLayer(layer) {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    return layers.remove(layer);\r\n  }\r\n\r\n  /**\r\n   * Remove the given overlay from the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\r\n   *     if the overlay was not found).\r\n   * @api\r\n   */\r\n  removeOverlay(overlay) {\r\n    return this.getOverlays().remove(overlay);\r\n  }\r\n\r\n  /**\r\n   * @param {number} time Time.\r\n   * @private\r\n   */\r\n  renderFrame_(time) {\r\n    let viewState;\r\n\r\n    const size = this.getSize();\r\n    const view = this.getView();\r\n    const extent = createEmpty();\r\n    const previousFrameState = this.frameState_;\r\n    /** @type {?FrameState} */\r\n    let frameState = null;\r\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\r\n      const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\r\n      viewState = view.getState(this.pixelRatio_);\r\n      frameState = {\r\n        animate: false,\r\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\r\n        declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\r\n        extent: extent,\r\n        focus: this.focus_ ? this.focus_ : viewState.center,\r\n        index: this.frameIndex_++,\r\n        layerIndex: 0,\r\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\r\n        pixelRatio: this.pixelRatio_,\r\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\r\n        postRenderFunctions: [],\r\n        size: size,\r\n        skippedFeatureUids: this.skippedFeatureUids_,\r\n        tileQueue: this.tileQueue_,\r\n        time: time,\r\n        usedTiles: {},\r\n        viewState: viewState,\r\n        viewHints: viewHints,\r\n        wantedTiles: {}\r\n      };\r\n    }\r\n\r\n    if (frameState) {\r\n      frameState.extent = getForViewAndSize(viewState.center,\r\n        viewState.resolution, viewState.rotation, frameState.size, extent);\r\n    }\r\n\r\n    this.frameState_ = frameState;\r\n    this.renderer_.renderFrame(frameState);\r\n\r\n    if (frameState) {\r\n      if (frameState.animate) {\r\n        this.render();\r\n      }\r\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\r\n\r\n      if (previousFrameState) {\r\n        const moveStart = !this.previousExtent_ ||\r\n                    (!isEmpty(this.previousExtent_) &&\r\n                    !equals(frameState.extent, this.previousExtent_));\r\n        if (moveStart) {\r\n          this.dispatchEvent(\r\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\r\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\r\n        }\r\n      }\r\n\r\n      const idle = this.previousExtent_ &&\r\n          !frameState.viewHints[ViewHint.ANIMATING] &&\r\n          !frameState.viewHints[ViewHint.INTERACTING] &&\r\n          !equals(frameState.extent, this.previousExtent_);\r\n\r\n      if (idle) {\r\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\r\n        clone(frameState.extent, this.previousExtent_);\r\n      }\r\n    }\r\n\r\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\r\n\r\n    setTimeout(this.handlePostRender.bind(this), 0);\r\n\r\n  }\r\n\r\n  /**\r\n   * Sets the layergroup of this map.\r\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setLayerGroup(layerGroup) {\r\n    this.set(MapProperty.LAYERGROUP, layerGroup);\r\n  }\r\n\r\n  /**\r\n   * Set the size of this map.\r\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setSize(size) {\r\n    this.set(MapProperty.SIZE, size);\r\n  }\r\n\r\n  /**\r\n   * Set the target element to render this map into.\r\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\r\n   *     that the map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setTarget(target) {\r\n    this.set(MapProperty.TARGET, target);\r\n  }\r\n\r\n  /**\r\n   * Set the view for this map.\r\n   * @param {View} view The view that controls this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setView(view) {\r\n    this.set(MapProperty.VIEW, view);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Feature.js\").default} feature Feature.\r\n   */\r\n  skipFeature(feature) {\r\n    this.skippedFeatureUids_[getUid(feature)] = true;\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Force a recalculation of the map viewport size.  This should be called when\r\n   * third-party code changes the size of the map viewport.\r\n   * @api\r\n   */\r\n  updateSize() {\r\n    const targetElement = this.getTargetElement();\r\n\r\n    if (!targetElement) {\r\n      this.setSize(undefined);\r\n    } else {\r\n      const computedStyle = getComputedStyle(targetElement);\r\n      this.setSize([\r\n        targetElement.offsetWidth -\r\n            parseFloat(computedStyle['borderLeftWidth']) -\r\n            parseFloat(computedStyle['paddingLeft']) -\r\n            parseFloat(computedStyle['paddingRight']) -\r\n            parseFloat(computedStyle['borderRightWidth']),\r\n        targetElement.offsetHeight -\r\n            parseFloat(computedStyle['borderTopWidth']) -\r\n            parseFloat(computedStyle['paddingTop']) -\r\n            parseFloat(computedStyle['paddingBottom']) -\r\n            parseFloat(computedStyle['borderBottomWidth'])\r\n      ]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Feature.js\").default} feature Feature.\r\n   */\r\n  unskipFeature(feature) {\r\n    delete this.skippedFeatureUids_[getUid(feature)];\r\n    this.render();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {MapOptions} options Map options.\r\n * @return {MapOptionsInternal} Internal map options.\r\n */\r\nfunction createOptionsInternal(options) {\r\n\r\n  /**\r\n   * @type {HTMLElement|Document}\r\n   */\r\n  let keyboardEventTarget = null;\r\n  if (options.keyboardEventTarget !== undefined) {\r\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\r\n      document.getElementById(options.keyboardEventTarget) :\r\n      options.keyboardEventTarget;\r\n  }\r\n\r\n  /**\r\n   * @type {Object<string, *>}\r\n   */\r\n  const values = {};\r\n\r\n  const layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\r\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\r\n  values[MapProperty.LAYERGROUP] = layerGroup;\r\n\r\n  values[MapProperty.TARGET] = options.target;\r\n\r\n  values[MapProperty.VIEW] = options.view !== undefined ?\r\n    options.view : new View();\r\n\r\n  let controls;\r\n  if (options.controls !== undefined) {\r\n    if (Array.isArray(options.controls)) {\r\n      controls = new Collection(options.controls.slice());\r\n    } else {\r\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\r\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\r\n      controls = /** @type {Collection} */ (options.controls);\r\n    }\r\n  }\r\n\r\n  let interactions;\r\n  if (options.interactions !== undefined) {\r\n    if (Array.isArray(options.interactions)) {\r\n      interactions = new Collection(options.interactions.slice());\r\n    } else {\r\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\r\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\r\n      interactions = /** @type {Collection} */ (options.interactions);\r\n    }\r\n  }\r\n\r\n  let overlays;\r\n  if (options.overlays !== undefined) {\r\n    if (Array.isArray(options.overlays)) {\r\n      overlays = new Collection(options.overlays.slice());\r\n    } else {\r\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\r\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\r\n      overlays = options.overlays;\r\n    }\r\n  } else {\r\n    overlays = new Collection();\r\n  }\r\n\r\n  return {\r\n    controls: controls,\r\n    interactions: interactions,\r\n    keyboardEventTarget: keyboardEventTarget,\r\n    overlays: overlays,\r\n    values: values\r\n  };\r\n\r\n}\r\nexport default PluggableMap;\r\n","/**\r\n * @module ol/control/Control\r\n */\r\nimport {VOID} from '../functions.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport BaseObject from '../Object.js';\r\nimport {removeNode} from '../dom.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {HTMLElement} [element] The element is the control's\r\n * container element. This only needs to be specified if you're developing\r\n * a custom control.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want\r\n * the control to be rendered outside of the map's viewport.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control is a visible widget with a DOM element in a fixed position on the\r\n * screen. They can involve user input (buttons), or be informational only;\r\n * the position is determined using CSS. By default these are placed in the\r\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\r\n * any outside DOM element.\r\n *\r\n * This is the base class for controls. You can use it for simple custom\r\n * controls by creating the element with listeners, creating an instance:\r\n * ```js\r\n * var myControl = new Control({element: myElement});\r\n * ```\r\n * and then adding this to the map.\r\n *\r\n * The main advantage of having this as a control rather than a simple separate\r\n * DOM element is that preventing propagation is handled for you. Controls\r\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\r\n *\r\n * You can also extend this base for your own control class. See\r\n * examples/custom-controls for an example of how to do this.\r\n *\r\n * @api\r\n */\r\nclass Control extends BaseObject {\r\n\r\n  /**\r\n   * @param {Options} options Control options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = options.element ? options.element : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.target_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.listenerKeys = [];\r\n\r\n    /**\r\n     * @type {function(import(\"../MapEvent.js\").default): void}\r\n     */\r\n    this.render = options.render ? options.render : VOID;\r\n\r\n    if (options.target) {\r\n      this.setTarget(options.target);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    removeNode(this.element);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this control.\r\n   * @return {import(\"../PluggableMap.js\").default} Map.\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    if (this.map_) {\r\n      removeNode(this.element);\r\n    }\r\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\r\n      unlistenByKey(this.listenerKeys[i]);\r\n    }\r\n    this.listenerKeys.length = 0;\r\n    this.map_ = map;\r\n    if (this.map_) {\r\n      const target = this.target_ ?\r\n        this.target_ : map.getOverlayContainerStopEvent();\r\n      target.appendChild(this.element);\r\n      if (this.render !== VOID) {\r\n        this.listenerKeys.push(listen(map,\r\n          MapEventType.POSTRENDER, this.render, this));\r\n      }\r\n      map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function is used to set a target element for the control. It has no\r\n   * effect if it is called after the control has been added to the map (i.e.\r\n   * after `setMap` is called on the control). If no `target` is set in the\r\n   * options passed to the control constructor and if `setTarget` is not called\r\n   * then the control is added to the map's overlay container.\r\n   * @param {HTMLElement|string} target Target.\r\n   * @api\r\n   */\r\n  setTarget(target) {\r\n    this.target_ = typeof target === 'string' ?\r\n      document.getElementById(target) :\r\n      target;\r\n  }\r\n}\r\n\r\n\r\nexport default Control;\r\n","/**\r\n * @module ol/css\r\n */\r\n\r\n\r\n/**\r\n * The CSS class for hidden feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_HIDDEN = 'ol-hidden';\r\n\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them selectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_SELECTABLE = 'ol-selectable';\r\n\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them unselectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\r\n\r\n\r\n/**\r\n * The CSS class for unsupported feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\r\n\r\n\r\n/**\r\n * The CSS class for controls.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_CONTROL = 'ol-control';\r\n\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\r\n * to those elements which usually can be expanded.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_COLLAPSED = 'ol-collapsed';\r\n\r\n\r\n/**\r\n * Get the list of font families from a font spec.  Note that this doesn't work\r\n * for font families that have commas in them.\r\n * @param {string} The CSS font property.\r\n * @return {Object<string>} The font families (or null if the input spec is invalid).\r\n */\r\nexport const getFontFamilies = (function() {\r\n  let style;\r\n  const cache = {};\r\n  return function(font) {\r\n    if (!style) {\r\n      style = document.createElement('div').style;\r\n    }\r\n    if (!(font in cache)) {\r\n      style.font = font;\r\n      const family = style.fontFamily;\r\n      style.font = '';\r\n      if (!family) {\r\n        return null;\r\n      }\r\n      cache[font] = family.split(/,\\s?/);\r\n    }\r\n    return cache[font];\r\n  };\r\n})();\r\n","/**\r\n * @module ol/layer/Layer\r\n */\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport BaseLayer from './Base.js';\r\nimport LayerProperty from './Property.js';\r\nimport {assign} from '../obj.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport SourceState from '../source/State.js';\r\n\r\n/**\r\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\r\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\r\n * construction.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\r\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\r\n * HTML element. Will overwrite the default rendering for the layer.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {import(\"./Base.js\").default} layer\r\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\r\n * @property {SourceState} sourceState\r\n * @property {boolean} visible\r\n * @property {boolean} managed\r\n * @property {import(\"../extent.js\").Extent} [extent]\r\n * @property {number} zIndex\r\n * @property {number} maxResolution\r\n * @property {number} minResolution\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Base class from which all layer types are derived. This should only be instantiated\r\n * in the case where a custom layer is be added to the map with a custom `render` function.\r\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\r\n *\r\n * A visual representation of raster or vector map data.\r\n * Layers group together those properties that pertain to how the data is to be\r\n * displayed, irrespective of the source of that data.\r\n *\r\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\r\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\r\n * internally. These unmanaged layers are associated with the map using\r\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\r\n *\r\n * A generic `change` event is fired when the state of the source changes.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\r\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\r\n *\r\n * @template {import(\"../source/Source.js\").default} SourceType\r\n * @api\r\n */\r\nclass Layer extends BaseLayer {\r\n  /**\r\n   * @param {Options} options Layer options.\r\n   */\r\n  constructor(options) {\r\n\r\n    const baseOptions = assign({}, options);\r\n    delete baseOptions.source;\r\n\r\n    super(baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.mapPrecomposeKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.mapRenderKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.sourceChangeKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../renderer/Layer.js\").default}\r\n     */\r\n    this.renderer_ = null;\r\n\r\n    // Overwrite default render method with a custom one\r\n    if (options.render) {\r\n      this.render = options.render;\r\n    }\r\n\r\n    if (options.map) {\r\n      this.setMap(options.map);\r\n    }\r\n\r\n    listen(this,\r\n      getChangeEventType(LayerProperty.SOURCE),\r\n      this.handleSourcePropertyChange_, this);\r\n\r\n    const source = options.source ? /** @type {SourceType} */ (options.source) : null;\r\n    this.setSource(source);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getLayersArray(opt_array) {\r\n    const array = opt_array ? opt_array : [];\r\n    array.push(this);\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getLayerStatesArray(opt_states) {\r\n    const states = opt_states ? opt_states : [];\r\n    states.push(this.getLayerState());\r\n    return states;\r\n  }\r\n\r\n  /**\r\n   * Get the layer source.\r\n   * @return {SourceType} The layer source (or `null` if not yet set).\r\n   * @observable\r\n   * @api\r\n   */\r\n  getSource() {\r\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\r\n  }\r\n\r\n  /**\r\n    * @inheritDoc\r\n    */\r\n  getSourceState() {\r\n    const source = this.getSource();\r\n    return !source ? SourceState.UNDEFINED : source.getState();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSourceChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSourcePropertyChange_() {\r\n    if (this.sourceChangeKey_) {\r\n      unlistenByKey(this.sourceChangeKey_);\r\n      this.sourceChangeKey_ = null;\r\n    }\r\n    const source = this.getSource();\r\n    if (source) {\r\n      this.sourceChangeKey_ = listen(source,\r\n        EventType.CHANGE, this.handleSourceChange_, this);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * In charge to manage the rendering of the layer. One layer type is\r\n   * bounded with one layer renderer.\r\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\r\n   * for rendering its content.\r\n   * @return {HTMLElement} The rendered element.\r\n   */\r\n  render(frameState, target) {\r\n    const layerRenderer = this.getRenderer();\r\n\r\n    if (layerRenderer.prepareFrame(frameState)) {\r\n      return layerRenderer.renderFrame(frameState, target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the layer to be rendered on top of other layers on a map. The map will\r\n   * not manage this layer in its layers collection, and the callback in\r\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\r\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\r\n   * use `#setMap(null)`.\r\n   *\r\n   * To add the layer to a map and have it managed by the map, use\r\n   * {@link module:ol/Map#addLayer} instead.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    if (this.mapPrecomposeKey_) {\r\n      unlistenByKey(this.mapPrecomposeKey_);\r\n      this.mapPrecomposeKey_ = null;\r\n    }\r\n    if (!map) {\r\n      this.changed();\r\n    }\r\n    if (this.mapRenderKey_) {\r\n      unlistenByKey(this.mapRenderKey_);\r\n      this.mapRenderKey_ = null;\r\n    }\r\n    if (map) {\r\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\r\n        const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\r\n        renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\r\n      }, this);\r\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the layer source.\r\n   * @param {SourceType} source The layer source.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setSource(source) {\r\n    this.set(LayerProperty.SOURCE, source);\r\n  }\r\n\r\n  /**\r\n   * Get the renderer for this layer.\r\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\r\n   */\r\n  getRenderer() {\r\n    if (!this.renderer_) {\r\n      this.renderer_ = this.createRenderer();\r\n    }\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} The layer has a renderer.\r\n   */\r\n  hasRenderer() {\r\n    return !!this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Create a renderer for this layer.\r\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n   * @protected\r\n   */\r\n  createRenderer() {\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Return `true` if the layer is visible, and if the passed resolution is\r\n * between the layer's minResolution and maxResolution. The comparison is\r\n * inclusive for `minResolution` and exclusive for `maxResolution`.\r\n * @param {State} layerState Layer state.\r\n * @param {number} resolution Resolution.\r\n * @return {boolean} The layer is visible at the given resolution.\r\n */\r\nexport function visibleAtResolution(layerState, resolution) {\r\n  return layerState.visible && resolution >= layerState.minResolution &&\r\n      resolution < layerState.maxResolution;\r\n}\r\n\r\n\r\nexport default Layer;\r\n","/**\r\n * @module ol/control/Attribution\r\n */\r\nimport {equals} from '../array.js';\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\r\nimport {removeChildren, replaceNode} from '../dom.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {visibleAtResolution} from '../layer/Layer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-attribution'] CSS class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you\r\n * want the control to be rendered outside of the map's\r\n * viewport.\r\n * @property {boolean} [collapsible] Specify if attributions can\r\n * be collapsed. If not specified, sources control this behavior with their\r\n * `attributionsCollapsible` setting.\r\n * @property {boolean} [collapsed=true] Specify if attributions should\r\n * be collapsed at startup.\r\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\r\n * @property {string} [label='i'] Text label to use for the\r\n * collapsed attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\r\n * for the expanded attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Control to show all the attributions associated with the layer sources\r\n * in the map. This control is one of the default controls included in maps.\r\n * By default it will show in the bottom right portion of the map, but this can\r\n * be changed by using a css selector for `.ol-attribution`.\r\n *\r\n * @api\r\n */\r\nclass Attribution extends Control {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Attribution options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.ulElement_ = document.createElement('ul');\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overrideCollapsible_ = options.collapsible !== undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible_ = options.collapsible !== undefined ?\r\n      options.collapsible : true;\r\n\r\n    if (!this.collapsible_) {\r\n      this.collapsed_ = false;\r\n    }\r\n\r\n    const className = options.className !== undefined ? options.className : 'ol-attribution';\r\n\r\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\r\n\r\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\r\n\r\n    if (typeof collapseLabel === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.collapseLabel_ = document.createElement('span');\r\n      this.collapseLabel_.textContent = collapseLabel;\r\n    } else {\r\n      this.collapseLabel_ = collapseLabel;\r\n    }\r\n\r\n    const label = options.label !== undefined ? options.label : 'i';\r\n\r\n    if (typeof label === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.label_ = document.createElement('span');\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n    }\r\n\r\n\r\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\r\n      this.collapseLabel_ : this.label_;\r\n    const button = document.createElement('button');\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(activeLabel);\r\n\r\n    listen(button, EventType.CLICK, this.handleClick_, this);\r\n\r\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\r\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.ulElement_);\r\n    element.appendChild(button);\r\n\r\n    /**\r\n     * A list of currently rendered resolutions.\r\n     * @type {Array<string>}\r\n     * @private\r\n     */\r\n    this.renderedAttributions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n\r\n  }\r\n\r\n  /**\r\n   * Collect a list of visible attributions and set the collapsible state.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @return {Array<string>} Attributions.\r\n   * @private\r\n   */\r\n  collectSourceAttributions_(frameState) {\r\n    /**\r\n     * Used to determine if an attribution already exists.\r\n     * @type {!Object<string, boolean>}\r\n     */\r\n    const lookup = {};\r\n\r\n    /**\r\n     * A list of visible attributions.\r\n     * @type {Array<string>}\r\n     */\r\n    const visibleAttributions = [];\r\n\r\n    const layerStatesArray = frameState.layerStatesArray;\r\n    const resolution = frameState.viewState.resolution;\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const layerState = layerStatesArray[i];\r\n      if (!visibleAtResolution(layerState, resolution)) {\r\n        continue;\r\n      }\r\n\r\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\r\n      if (!source) {\r\n        continue;\r\n      }\r\n\r\n      const attributionGetter = source.getAttributions();\r\n      if (!attributionGetter) {\r\n        continue;\r\n      }\r\n\r\n      const attributions = attributionGetter(frameState);\r\n      if (!attributions) {\r\n        continue;\r\n      }\r\n\r\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\r\n        this.setCollapsible(false);\r\n      }\r\n\r\n      if (Array.isArray(attributions)) {\r\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\r\n          if (!(attributions[j] in lookup)) {\r\n            visibleAttributions.push(attributions[j]);\r\n            lookup[attributions[j]] = true;\r\n          }\r\n        }\r\n      } else {\r\n        if (!(attributions in lookup)) {\r\n          visibleAttributions.push(attributions);\r\n          lookup[attributions] = true;\r\n        }\r\n      }\r\n    }\r\n    return visibleAttributions;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  updateElement_(frameState) {\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const attributions = this.collectSourceAttributions_(frameState);\r\n\r\n    const visible = attributions.length > 0;\r\n    if (this.renderedVisible_ != visible) {\r\n      this.element.style.display = visible ? '' : 'none';\r\n      this.renderedVisible_ = visible;\r\n    }\r\n\r\n    if (equals(attributions, this.renderedAttributions_)) {\r\n      return;\r\n    }\r\n\r\n    removeChildren(this.ulElement_);\r\n\r\n    // append the attributions\r\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\r\n      const element = document.createElement('li');\r\n      element.innerHTML = attributions[i];\r\n      this.ulElement_.appendChild(element);\r\n    }\r\n\r\n    this.renderedAttributions_ = attributions;\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleToggle_() {\r\n    this.element.classList.toggle(CLASS_COLLAPSED);\r\n    if (this.collapsed_) {\r\n      replaceNode(this.collapseLabel_, this.label_);\r\n    } else {\r\n      replaceNode(this.label_, this.collapseLabel_);\r\n    }\r\n    this.collapsed_ = !this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * Return `true` if the attribution is collapsible, `false` otherwise.\r\n   * @return {boolean} True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  getCollapsible() {\r\n    return this.collapsible_;\r\n  }\r\n\r\n  /**\r\n   * Set whether the attribution should be collapsible.\r\n   * @param {boolean} collapsible True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  setCollapsible(collapsible) {\r\n    if (this.collapsible_ === collapsible) {\r\n      return;\r\n    }\r\n    this.collapsible_ = collapsible;\r\n    this.element.classList.toggle('ol-uncollapsible');\r\n    if (!collapsible && this.collapsed_) {\r\n      this.handleToggle_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapse or expand the attribution according to the passed parameter. Will\r\n   * not do anything if the attribution isn't collapsible or if the current\r\n   * collapsed state is already the one requested.\r\n   * @param {boolean} collapsed True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  setCollapsed(collapsed) {\r\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n      return;\r\n    }\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * Return `true` when the attribution is currently collapsed or `false`\r\n   * otherwise.\r\n   * @return {boolean} True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  getCollapsed() {\r\n    return this.collapsed_;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Update the attribution element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {Attribution}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  this.updateElement_(mapEvent.frameState);\r\n}\r\n\r\n\r\nexport default Attribution;\r\n","/**\r\n * @module ol/control/Rotate\r\n */\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-rotate'] CSS class name.\r\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\r\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {function()} [resetNorth] Function called when the control is clicked.\r\n * This will override the default `resetNorth`.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A button control to reset rotation to 0.\r\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\r\n * selector is added to the button when the rotation is 0.\r\n *\r\n * @api\r\n */\r\nclass Rotate extends Control {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Rotate options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    const className = options.className !== undefined ? options.className : 'ol-rotate';\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u21E7';\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.label_ = null;\r\n\r\n    if (typeof label === 'string') {\r\n      this.label_ = document.createElement('span');\r\n      this.label_.className = 'ol-compass';\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n      this.label_.classList.add('ol-compass');\r\n    }\r\n\r\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\r\n\r\n    const button = document.createElement('button');\r\n    button.className = className + '-reset';\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(this.label_);\r\n\r\n    listen(button, EventType.CLICK, this.handleClick_, this);\r\n\r\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(button);\r\n\r\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = undefined;\r\n\r\n    if (this.autoHide_) {\r\n      this.element.classList.add(CLASS_HIDDEN);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    if (this.callResetNorth_ !== undefined) {\r\n      this.callResetNorth_();\r\n    } else {\r\n      this.resetNorth_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  resetNorth_() {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    if (view.getRotation() !== undefined) {\r\n      if (this.duration_ > 0) {\r\n        view.animate({\r\n          rotation: 0,\r\n          duration: this.duration_,\r\n          easing: easeOut\r\n        });\r\n      } else {\r\n        view.setRotation(0);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Update the rotate control element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {Rotate}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  const frameState = mapEvent.frameState;\r\n  if (!frameState) {\r\n    return;\r\n  }\r\n  const rotation = frameState.viewState.rotation;\r\n  if (rotation != this.rotation_) {\r\n    const transform = 'rotate(' + rotation + 'rad)';\r\n    if (this.autoHide_) {\r\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\r\n      if (!contains && rotation === 0) {\r\n        this.element.classList.add(CLASS_HIDDEN);\r\n      } else if (contains && rotation !== 0) {\r\n        this.element.classList.remove(CLASS_HIDDEN);\r\n      }\r\n    }\r\n    this.label_.style.transform = transform;\r\n  }\r\n  this.rotation_ = rotation;\r\n}\r\n\r\nexport default Rotate;\r\n","/**\r\n * @module ol/control/Zoom\r\n */\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {string} [className='ol-zoom'] CSS class name.\r\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\r\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\r\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\r\n * @property {number} [delta=1] The zoom delta applied on each click.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control with 2 buttons, one for zoom in and one for zoom out.\r\n * This control is one of the default controls of a map. To style this control\r\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\r\n *\r\n * @api\r\n */\r\nclass Zoom extends Control {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Zoom options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      target: options.target\r\n    });\r\n\r\n    const className = options.className !== undefined ? options.className : 'ol-zoom';\r\n\r\n    const delta = options.delta !== undefined ? options.delta : 1;\r\n\r\n    const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\r\n    const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\r\n\r\n    const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\r\n      options.zoomInTipLabel : 'Zoom in';\r\n    const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\r\n      options.zoomOutTipLabel : 'Zoom out';\r\n\r\n    const inElement = document.createElement('button');\r\n    inElement.className = className + '-in';\r\n    inElement.setAttribute('type', 'button');\r\n    inElement.title = zoomInTipLabel;\r\n    inElement.appendChild(\r\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\r\n    );\r\n\r\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\r\n\r\n    const outElement = document.createElement('button');\r\n    outElement.className = className + '-out';\r\n    outElement.setAttribute('type', 'button');\r\n    outElement.title = zoomOutTipLabel;\r\n    outElement.appendChild(\r\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\r\n    );\r\n\r\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\r\n\r\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(inElement);\r\n    element.appendChild(outElement);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(delta, event) {\r\n    event.preventDefault();\r\n    this.zoomByDelta_(delta);\r\n  }\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @private\r\n   */\r\n  zoomByDelta_(delta) {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    const currentZoom = view.getZoom();\r\n    if (currentZoom !== undefined) {\r\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\r\n      if (this.duration_ > 0) {\r\n        if (view.getAnimating()) {\r\n          view.cancelAnimations();\r\n        }\r\n        view.animate({\r\n          zoom: newZoom,\r\n          duration: this.duration_,\r\n          easing: easeOut\r\n        });\r\n      } else {\r\n        view.setZoom(newZoom);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Zoom;\r\n","/**\r\n * @module ol/control/FullScreen\r\n */\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\r\nimport {replaceNode} from '../dom.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\n\r\nconst events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-full-screen'] CSS class name.\r\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\r\n * button when full-screen is active.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\r\n * @property {boolean} [keys=false] Full keyboard access.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {HTMLElement|string} [source] The element to be displayed\r\n * fullscreen. When not provided, the element containing the map viewport will\r\n * be displayed fullscreen.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Provides a button that when clicked fills up the full screen with the map.\r\n * The full screen source element is by default the element containing the map viewport unless\r\n * overridden by providing the `source` option. In which case, the dom\r\n * element introduced using this parameter will be displayed in full screen.\r\n *\r\n * When in full screen mode, a close button is shown to exit full screen mode.\r\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\r\n * toggle the map in full screen mode.\r\n *\r\n * @api\r\n */\r\nclass FullScreen extends Control {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.cssClassName_ = options.className !== undefined ? options.className :\r\n      'ol-full-screen';\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u2922';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Text}\r\n     */\r\n    this.labelNode_ = typeof label === 'string' ?\r\n      document.createTextNode(label) : label;\r\n\r\n    const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Text}\r\n     */\r\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\r\n      document.createTextNode(labelActive) : labelActive;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.button_ = document.createElement('button');\r\n\r\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\r\n    this.setClassName_(this.button_, isFullScreen());\r\n    this.button_.setAttribute('type', 'button');\r\n    this.button_.title = tipLabel;\r\n    this.button_.appendChild(this.labelNode_);\r\n\r\n    listen(this.button_, EventType.CLICK,\r\n      this.handleClick_, this);\r\n\r\n    const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\r\n        ' ' + CLASS_CONTROL + ' ' +\r\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.button_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.keys_ = options.keys !== undefined ? options.keys : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|string|undefined}\r\n     */\r\n    this.source_ = options.source;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleFullScreen_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleFullScreen_() {\r\n    if (!isFullScreenSupported()) {\r\n      return;\r\n    }\r\n    const map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    if (isFullScreen()) {\r\n      exitFullScreen();\r\n    } else {\r\n      let element;\r\n      if (this.source_) {\r\n        element = typeof this.source_ === 'string' ?\r\n          document.getElementById(this.source_) :\r\n          this.source_;\r\n      } else {\r\n        element = map.getTargetElement();\r\n      }\r\n      if (this.keys_) {\r\n        requestFullScreenWithKeys(element);\r\n\r\n      } else {\r\n        requestFullScreen(element);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleFullScreenChange_() {\r\n    const map = this.getMap();\r\n    if (isFullScreen()) {\r\n      this.setClassName_(this.button_, true);\r\n      replaceNode(this.labelActiveNode_, this.labelNode_);\r\n    } else {\r\n      this.setClassName_(this.button_, false);\r\n      replaceNode(this.labelNode_, this.labelActiveNode_);\r\n    }\r\n    if (map) {\r\n      map.updateSize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} element Target element\r\n   * @param {boolean} fullscreen True if fullscreen class name should be active\r\n   * @private\r\n   */\r\n  setClassName_(element, fullscreen) {\r\n    const activeClassName = this.cssClassName_ + '-true';\r\n    const inactiveClassName = this.cssClassName_ + '-false';\r\n    const nextClassName = fullscreen ? activeClassName : inactiveClassName;\r\n    element.classList.remove(activeClassName);\r\n    element.classList.remove(inactiveClassName);\r\n    element.classList.add(nextClassName);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    if (map) {\r\n      for (let i = 0, ii = events.length; i < ii; ++i) {\r\n        this.listenerKeys.push(\r\n          listen(document, events[i], this.handleFullScreenChange_, this));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @return {boolean} Fullscreen is supported by the current platform.\r\n */\r\nfunction isFullScreenSupported() {\r\n  const body = document.body;\r\n  return !!(\r\n    body.webkitRequestFullscreen ||\r\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\r\n    (body.requestFullscreen && document.fullscreenEnabled)\r\n  );\r\n}\r\n\r\n/**\r\n * @return {boolean} Element is currently in fullscreen.\r\n */\r\nfunction isFullScreen() {\r\n  return !!(\r\n    document.webkitIsFullScreen || document.msFullscreenElement || document.fullscreenElement\r\n  );\r\n}\r\n\r\n/**\r\n * Request to fullscreen an element.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreen(element) {\r\n  if (element.requestFullscreen) {\r\n    element.requestFullscreen();\r\n  } else if (element.msRequestFullscreen) {\r\n    element.msRequestFullscreen();\r\n  } else if (element.webkitRequestFullscreen) {\r\n    element.webkitRequestFullscreen();\r\n  }\r\n}\r\n\r\n/**\r\n * Request to fullscreen an element with keyboard input.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreenWithKeys(element) {\r\n  if (element.webkitRequestFullscreen) {\r\n    element.webkitRequestFullscreen();\r\n  } else {\r\n    requestFullScreen(element);\r\n  }\r\n}\r\n\r\n/**\r\n * Exit fullscreen.\r\n */\r\nfunction exitFullScreen() {\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen();\r\n  } else if (document.msExitFullscreen) {\r\n    document.msExitFullscreen();\r\n  } else if (document.webkitExitFullscreen) {\r\n    document.webkitExitFullscreen();\r\n  }\r\n}\r\n\r\nexport default FullScreen;\r\n","/**\r\n * @module ol/control/MousePosition\r\n */\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport Control from './Control.js';\r\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst PROJECTION = 'projection';\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst COORDINATE_FORMAT = 'coordinateFormat';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-mouse-position'] CSS class name.\r\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\r\n * control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\r\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\r\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\r\n * retain the last rendered position, set this option to something falsey (like an empty\r\n * string `''`).\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control to show the 2D coordinates of the mouse cursor. By default, these\r\n * are in the view projection, but can be in any supported projection.\r\n * By default the control is shown in the top right corner of the map, but this\r\n * can be changed by using the css selector `.ol-mouse-position`.\r\n *\r\n * On touch devices, which usually do not have a mouse cursor, the coordinates\r\n * of the currently touched position are shown.\r\n *\r\n * @api\r\n */\r\nclass MousePosition extends Control {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Mouse position options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const element = document.createElement('div');\r\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\r\n\r\n    super({\r\n      element: element,\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    listen(this,\r\n      getChangeEventType(PROJECTION),\r\n      this.handleProjectionChanged_, this);\r\n\r\n    if (options.coordinateFormat) {\r\n      this.setCoordinateFormat(options.coordinateFormat);\r\n    }\r\n    if (options.projection) {\r\n      this.setProjection(options.projection);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.renderedHTML_ = element.innerHTML;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.mapProjection_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../proj.js\").TransformFunction}\r\n     */\r\n    this.transform_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.lastMouseMovePixel_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleProjectionChanged_() {\r\n    this.transform_ = null;\r\n  }\r\n\r\n  /**\r\n   * Return the coordinate format type used to render the current position or\r\n   * undefined.\r\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getCoordinateFormat() {\r\n    return (\r\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the projection that is used to report the mouse position.\r\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return (\r\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event Browser event.\r\n   * @protected\r\n   */\r\n  handleMouseMove(event) {\r\n    const map = this.getMap();\r\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\r\n    this.updateHTML_(this.lastMouseMovePixel_);\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event Browser event.\r\n   * @protected\r\n   */\r\n  handleMouseOut(event) {\r\n    this.updateHTML_(null);\r\n    this.lastMouseMovePixel_ = null;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    if (map) {\r\n      const viewport = map.getViewport();\r\n      this.listenerKeys.push(\r\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\r\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\r\n      );\r\n      if (this.renderOnMouseOut_) {\r\n        this.listenerKeys.push(\r\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\r\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the coordinate format type used to render the current position.\r\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setCoordinateFormat(format) {\r\n    this.set(COORDINATE_FORMAT, format);\r\n  }\r\n\r\n  /**\r\n   * Set the projection that is used to report the mouse position.\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setProjection(projection) {\r\n    this.set(PROJECTION, getProjection(projection));\r\n  }\r\n\r\n  /**\r\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @private\r\n   */\r\n  updateHTML_(pixel) {\r\n    let html = this.undefinedHTML_;\r\n    if (pixel && this.mapProjection_) {\r\n      if (!this.transform_) {\r\n        const projection = this.getProjection();\r\n        if (projection) {\r\n          this.transform_ = getTransformFromProjections(\r\n            this.mapProjection_, projection);\r\n        } else {\r\n          this.transform_ = identityTransform;\r\n        }\r\n      }\r\n      const map = this.getMap();\r\n      const coordinate = map.getCoordinateFromPixel(pixel);\r\n      if (coordinate) {\r\n        this.transform_(coordinate, coordinate);\r\n        const coordinateFormat = this.getCoordinateFormat();\r\n        if (coordinateFormat) {\r\n          html = coordinateFormat(coordinate);\r\n        } else {\r\n          html = coordinate.toString();\r\n        }\r\n      }\r\n    }\r\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\r\n      this.element.innerHTML = html;\r\n      this.renderedHTML_ = html;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Update the projection. Rendering of the coordinates is done in\r\n * `handleMouseMove` and `handleMouseUp`.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {MousePosition}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  const frameState = mapEvent.frameState;\r\n  if (!frameState) {\r\n    this.mapProjection_ = null;\r\n  } else {\r\n    if (this.mapProjection_ != frameState.viewState.projection) {\r\n      this.mapProjection_ = frameState.viewState.projection;\r\n      this.transform_ = null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default MousePosition;\r\n","/**\r\n * @module ol/render/Event\r\n */\r\n\r\nimport Event from '../events/Event.js';\r\n\r\nclass RenderEvent extends Event {\r\n\r\n  /**\r\n   * @param {import(\"./EventType.js\").default} type Type.\r\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\r\n   *     CSS pixels to rendered pixels.\r\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\r\n   * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\r\n   */\r\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\r\n\r\n    super(type);\r\n\r\n    /**\r\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\r\n     * to rendered pixels on this event's `context`.\r\n     * @type {import(\"../transform.js\").Transform|undefined}\r\n     * @api\r\n     */\r\n    this.inversePixelTransform = opt_inversePixelTransform;\r\n\r\n    /**\r\n     * An object representing the current render frame state.\r\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\r\n     * @api\r\n     */\r\n    this.frameState = opt_frameState;\r\n\r\n    /**\r\n     * Canvas context. Only available when a Canvas renderer is used, null\r\n     * otherwise.\r\n     * @type {CanvasRenderingContext2D|null|undefined}\r\n     * @api\r\n     */\r\n    this.context = opt_context;\r\n\r\n    /**\r\n     * WebGL context. Only available when a WebGL renderer is used, null\r\n     * otherwise.\r\n     * @type {import(\"../webgl/Helper.js\").default|null|undefined}\r\n     * @api\r\n     */\r\n    this.glContext = opt_glContext;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default RenderEvent;\r\n","/**\r\n * @module ol/color\r\n */\r\nimport {assert} from './asserts.js';\r\nimport {clamp} from './math.js';\r\n\r\n\r\n/**\r\n * A color represented as a short array [red, green, blue, alpha].\r\n * red, green, and blue should be integers in the range 0..255 inclusive.\r\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\r\n * given then `1` will be used.\r\n * @typedef {Array<number>} Color\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\r\n\r\n\r\n/**\r\n * Regular expression for matching potential named color style strings.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\r\n\r\n\r\n/**\r\n * Return the color as an rgba string.\r\n * @param {Color|string} color Color.\r\n * @return {string} Rgba string.\r\n * @api\r\n */\r\nexport function asString(color) {\r\n  if (typeof color === 'string') {\r\n    return color;\r\n  } else {\r\n    return toString(color);\r\n  }\r\n}\r\n\r\n/**\r\n * Return named color as an rgba string.\r\n * @param {string} color Named color.\r\n * @return {string} Rgb string.\r\n */\r\nfunction fromNamed(color) {\r\n  const el = document.createElement('div');\r\n  el.style.color = color;\r\n  if (el.style.color !== '') {\r\n    document.body.appendChild(el);\r\n    const rgb = getComputedStyle(el).color;\r\n    document.body.removeChild(el);\r\n    return rgb;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} s String.\r\n * @return {Color} Color.\r\n */\r\nexport const fromString = (\r\n  function() {\r\n\r\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\r\n    // semantics, whenever the cache grows too large we simply delete an\r\n    // arbitrary 25% of the entries.\r\n\r\n    /**\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    const MAX_CACHE_SIZE = 1024;\r\n\r\n    /**\r\n     * @type {Object<string, Color>}\r\n     */\r\n    const cache = {};\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    let cacheSize = 0;\r\n\r\n    return (\r\n      /**\r\n       * @param {string} s String.\r\n       * @return {Color} Color.\r\n       */\r\n      function(s) {\r\n        let color;\r\n        if (cache.hasOwnProperty(s)) {\r\n          color = cache[s];\r\n        } else {\r\n          if (cacheSize >= MAX_CACHE_SIZE) {\r\n            let i = 0;\r\n            for (const key in cache) {\r\n              if ((i++ & 3) === 0) {\r\n                delete cache[key];\r\n                --cacheSize;\r\n              }\r\n            }\r\n          }\r\n          color = fromStringInternal_(s);\r\n          cache[s] = color;\r\n          ++cacheSize;\r\n        }\r\n        return color;\r\n      }\r\n    );\r\n\r\n  })();\r\n\r\n/**\r\n * Return the color as an array. This function maintains a cache of calculated\r\n * arrays which means the result should not be modified.\r\n * @param {Color|string} color Color.\r\n * @return {Color} Color.\r\n * @api\r\n */\r\nexport function asArray(color) {\r\n  if (Array.isArray(color)) {\r\n    return color;\r\n  } else {\r\n    return fromString(color);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} s String.\r\n * @private\r\n * @return {Color} Color.\r\n */\r\nfunction fromStringInternal_(s) {\r\n  let r, g, b, a, color;\r\n\r\n  if (NAMED_COLOR_RE_.exec(s)) {\r\n    s = fromNamed(s);\r\n  }\r\n\r\n  if (HEX_COLOR_RE_.exec(s)) { // hex\r\n    const n = s.length - 1; // number of hex digits\r\n    let d; // number of digits per channel\r\n    if (n <= 4) {\r\n      d = 1;\r\n    } else {\r\n      d = 2;\r\n    }\r\n    const hasAlpha = n === 4 || n === 8;\r\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\r\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\r\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\r\n    if (hasAlpha) {\r\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\r\n    } else {\r\n      a = 255;\r\n    }\r\n    if (d == 1) {\r\n      r = (r << 4) + r;\r\n      g = (g << 4) + g;\r\n      b = (b << 4) + b;\r\n      if (hasAlpha) {\r\n        a = (a << 4) + a;\r\n      }\r\n    }\r\n    color = [r, g, b, a / 255];\r\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\r\n    color = s.slice(5, -1).split(',').map(Number);\r\n    normalize(color);\r\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\r\n    color = s.slice(4, -1).split(',').map(Number);\r\n    color.push(1);\r\n    normalize(color);\r\n  } else {\r\n    assert(false, 14); // Invalid color\r\n  }\r\n  return color;\r\n}\r\n\r\n\r\n/**\r\n * TODO this function is only used in the test, we probably shouldn't export it\r\n * @param {Color} color Color.\r\n * @return {Color} Clamped color.\r\n */\r\nexport function normalize(color) {\r\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\r\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\r\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\r\n  color[3] = clamp(color[3], 0, 1);\r\n  return color;\r\n}\r\n\r\n\r\n/**\r\n * @param {Color} color Color.\r\n * @return {string} String.\r\n */\r\nexport function toString(color) {\r\n  let r = color[0];\r\n  if (r != (r | 0)) {\r\n    r = (r + 0.5) | 0;\r\n  }\r\n  let g = color[1];\r\n  if (g != (g | 0)) {\r\n    g = (g + 0.5) | 0;\r\n  }\r\n  let b = color[2];\r\n  if (b != (b | 0)) {\r\n    b = (b + 0.5) | 0;\r\n  }\r\n  const a = color[3] === undefined ? 1 : color[3];\r\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\r\n}\r\n","/**\r\n * @module ol/style/IconImageCache\r\n */\r\nimport {asString} from '../color.js';\r\n\r\n/**\r\n * @classdesc\r\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\r\n */\r\nclass IconImageCache {\r\n  constructor() {\r\n\r\n    /**\r\n    * @type {!Object<string, import(\"./IconImage.js\").default>}\r\n    * @private\r\n    */\r\n    this.cache_ = {};\r\n\r\n    /**\r\n    * @type {number}\r\n    * @private\r\n    */\r\n    this.cacheSize_ = 0;\r\n\r\n    /**\r\n    * @type {number}\r\n    * @private\r\n    */\r\n    this.maxCacheSize_ = 32;\r\n  }\r\n\r\n  /**\r\n  * FIXME empty description for jsdoc\r\n  */\r\n  clear() {\r\n    this.cache_ = {};\r\n    this.cacheSize_ = 0;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  canExpireCache() {\r\n    return this.cacheSize_ > this.maxCacheSize_;\r\n  }\r\n\r\n  /**\r\n  * FIXME empty description for jsdoc\r\n  */\r\n  expire() {\r\n    if (this.canExpireCache()) {\r\n      let i = 0;\r\n      for (const key in this.cache_) {\r\n        const iconImage = this.cache_[key];\r\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\r\n          delete this.cache_[key];\r\n          --this.cacheSize_;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @param {string} src Src.\r\n  * @param {?string} crossOrigin Cross origin.\r\n  * @param {import(\"../color.js\").Color} color Color.\r\n  * @return {import(\"./IconImage.js\").default} Icon image.\r\n  */\r\n  get(src, crossOrigin, color) {\r\n    const key = getKey(src, crossOrigin, color);\r\n    return key in this.cache_ ? this.cache_[key] : null;\r\n  }\r\n\r\n  /**\r\n  * @param {string} src Src.\r\n  * @param {?string} crossOrigin Cross origin.\r\n  * @param {import(\"../color.js\").Color} color Color.\r\n  * @param {import(\"./IconImage.js\").default} iconImage Icon image.\r\n  */\r\n  set(src, crossOrigin, color, iconImage) {\r\n    const key = getKey(src, crossOrigin, color);\r\n    this.cache_[key] = iconImage;\r\n    ++this.cacheSize_;\r\n  }\r\n\r\n  /**\r\n  * Set the cache size of the icon cache. Default is `32`. Change this value when\r\n  * your map uses more than 32 different icon images and you are not caching icon\r\n  * styles on the application level.\r\n  * @param {number} maxCacheSize Cache max size.\r\n  * @api\r\n  */\r\n  setSize(maxCacheSize) {\r\n    this.maxCacheSize_ = maxCacheSize;\r\n    this.expire();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} src Src.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../color.js\").Color} color Color.\r\n * @return {string} Cache key.\r\n */\r\nfunction getKey(src, crossOrigin, color) {\r\n  const colorString = color ? asString(color) : 'null';\r\n  return crossOrigin + ':' + src + ':' + colorString;\r\n}\r\n\r\n\r\nexport default IconImageCache;\r\n\r\n\r\n/**\r\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\r\n * {@link module:ol/style/Icon~Icon} images.\r\n * @api\r\n */\r\nexport const shared = new IconImageCache();\r\n","/**\r\n * @module ol/colorlike\r\n */\r\nimport {toString} from './color.js';\r\n\r\n\r\n/**\r\n * A type accepted by CanvasRenderingContext2D.fillStyle\r\n * or CanvasRenderingContext2D.strokeStyle.\r\n * Represents a color, pattern, or gradient. The origin for patterns and\r\n * gradients as fill style is an increment of 512 css pixels from map coordinate\r\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\r\n * must be a factor of two (2, 4, 8, ..., 512).\r\n *\r\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\r\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\r\n * @api\r\n */\r\nexport function asColorLike(color) {\r\n  if (Array.isArray(color)) {\r\n    return toString(color);\r\n  } else {\r\n    return color;\r\n  }\r\n}\r\n","/**\r\n * @module ol/render/VectorContext\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Context for drawing geometries.  A vector context is available on render\r\n * events and does not need to be constructed directly.\r\n * @api\r\n */\r\nclass VectorContext {\r\n  /**\r\n   * Render a geometry with a custom renderer.\r\n   *\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {Function} renderer Renderer.\r\n   */\r\n  drawCustom(geometry, feature, renderer) {}\r\n\r\n  /**\r\n   * Render a geometry.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\r\n   */\r\n  drawGeometry(geometry) {}\r\n\r\n  /**\r\n   * Set the rendering style.\r\n   *\r\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\r\n   */\r\n  setStyle(style) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  drawCircle(circleGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../style/Style.js\").default} style Style.\r\n   */\r\n  drawFeature(feature, style) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawLineString(lineStringGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawMultiLineString(multiLineStringGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawMultiPoint(multiPointGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawPoint(pointGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawPolygon(polygonGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawText(geometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\r\n\r\n  /**\r\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\r\n   * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\r\n   */\r\n  setImageStyle(imageStyle, opt_declutterGroup) {}\r\n\r\n  /**\r\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\r\n   * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\r\n   */\r\n  setTextStyle(textStyle, opt_declutterGroup) {}\r\n}\r\n\r\nexport default VectorContext;\r\n","/**\r\n * @module ol/structs/LRUCache\r\n */\r\n\r\nimport {assert} from '../asserts.js';\r\nimport EventTarget from '../events/Target.js';\r\nimport EventType from '../events/EventType.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Entry\r\n * @property {string} key_\r\n * @property {Object} newer\r\n * @property {Object} older\r\n * @property {*} value_\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Implements a Least-Recently-Used cache where the keys do not conflict with\r\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\r\n * items from the cache is the responsibility of the user.\r\n *\r\n * @fires import(\"../events/Event.js\").Event\r\n * @template T\r\n */\r\nclass LRUCache extends EventTarget {\r\n\r\n  /**\r\n   * @param {number=} opt_highWaterMark High water mark.\r\n   */\r\n  constructor(opt_highWaterMark) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.count_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, Entry>}\r\n     */\r\n    this.entries_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Entry}\r\n     */\r\n    this.oldest_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Entry}\r\n     */\r\n    this.newest_ = null;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  canExpireCache() {\r\n    return this.getCount() > this.highWaterMark;\r\n  }\r\n\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  clear() {\r\n    this.count_ = 0;\r\n    this.entries_ = {};\r\n    this.oldest_ = null;\r\n    this.newest_ = null;\r\n    this.dispatchEvent(EventType.CLEAR);\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @return {boolean} Contains key.\r\n   */\r\n  containsKey(key) {\r\n    return this.entries_.hasOwnProperty(key);\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {function(T, string, LRUCache): ?} f The function\r\n   *     to call for every entry from the oldest to the newer. This function takes\r\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\r\n   *     The return value is ignored.\r\n   */\r\n  forEach(f) {\r\n    let entry = this.oldest_;\r\n    while (entry) {\r\n      f(entry.value_, entry.key_, this);\r\n      entry = entry.newer;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @param {*=} opt_options Options (reserverd for subclasses).\r\n   * @return {T} Value.\r\n   */\r\n  get(key, opt_options) {\r\n    const entry = this.entries_[key];\r\n    assert(entry !== undefined,\r\n      15); // Tried to get a value for a key that does not exist in the cache\r\n    if (entry === this.newest_) {\r\n      return entry.value_;\r\n    } else if (entry === this.oldest_) {\r\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\r\n      this.oldest_.older = null;\r\n    } else {\r\n      entry.newer.older = entry.older;\r\n      entry.older.newer = entry.newer;\r\n    }\r\n    entry.newer = null;\r\n    entry.older = this.newest_;\r\n    this.newest_.newer = entry;\r\n    this.newest_ = entry;\r\n    return entry.value_;\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove an entry from the cache.\r\n   * @param {string} key The entry key.\r\n   * @return {T} The removed entry.\r\n   */\r\n  remove(key) {\r\n    const entry = this.entries_[key];\r\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\r\n    if (entry === this.newest_) {\r\n      this.newest_ = /** @type {Entry} */ (entry.older);\r\n      if (this.newest_) {\r\n        this.newest_.newer = null;\r\n      }\r\n    } else if (entry === this.oldest_) {\r\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\r\n      if (this.oldest_) {\r\n        this.oldest_.older = null;\r\n      }\r\n    } else {\r\n      entry.newer.older = entry.older;\r\n      entry.older.newer = entry.newer;\r\n    }\r\n    delete this.entries_[key];\r\n    --this.count_;\r\n    return entry.value_;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {number} Count.\r\n   */\r\n  getCount() {\r\n    return this.count_;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {Array<string>} Keys.\r\n   */\r\n  getKeys() {\r\n    const keys = new Array(this.count_);\r\n    let i = 0;\r\n    let entry;\r\n    for (entry = this.newest_; entry; entry = entry.older) {\r\n      keys[i++] = entry.key_;\r\n    }\r\n    return keys;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {Array<T>} Values.\r\n   */\r\n  getValues() {\r\n    const values = new Array(this.count_);\r\n    let i = 0;\r\n    let entry;\r\n    for (entry = this.newest_; entry; entry = entry.older) {\r\n      values[i++] = entry.value_;\r\n    }\r\n    return values;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {T} Last value.\r\n   */\r\n  peekLast() {\r\n    return this.oldest_.value_;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {string} Last key.\r\n   */\r\n  peekLastKey() {\r\n    return this.oldest_.key_;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\r\n   * @return {string} The newest key.\r\n   */\r\n  peekFirstKey() {\r\n    return this.newest_.key_;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {T} value Value.\r\n   */\r\n  pop() {\r\n    const entry = this.oldest_;\r\n    delete this.entries_[entry.key_];\r\n    if (entry.newer) {\r\n      entry.newer.older = null;\r\n    }\r\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\r\n    if (!this.oldest_) {\r\n      this.newest_ = null;\r\n    }\r\n    --this.count_;\r\n    return entry.value_;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @param {T} value Value.\r\n   */\r\n  replace(key, value) {\r\n    this.get(key); // update `newest_`\r\n    this.entries_[key].value_ = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @param {T} value Value.\r\n   */\r\n  set(key, value) {\r\n    assert(!(key in this.entries_),\r\n      16); // Tried to set a value for a key that is used already\r\n    const entry = {\r\n      key_: key,\r\n      newer: null,\r\n      older: this.newest_,\r\n      value_: value\r\n    };\r\n    if (!this.newest_) {\r\n      this.oldest_ = entry;\r\n    } else {\r\n      this.newest_.newer = entry;\r\n    }\r\n    this.newest_ = entry;\r\n    this.entries_[key] = entry;\r\n    ++this.count_;\r\n  }\r\n\r\n\r\n  /**\r\n   * Set a maximum number of entries for the cache.\r\n   * @param {number} size Cache size.\r\n   * @api\r\n   */\r\n  setSize(size) {\r\n    this.highWaterMark = size;\r\n  }\r\n\r\n}\r\n\r\nexport default LRUCache;\r\n","import {getUid} from '../../util.js';\r\nimport LRUCache from '../../structs/LRUCache.js';\r\n\r\n/**\r\n * @module ol/render/canvas/LabelCache\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Cache of pre-rendered labels.\r\n * @fires import(\"../events/Event.js\").Event\r\n */\r\nclass LabelCache extends LRUCache {\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  constructor(opt_highWaterMark) {\r\n    super(opt_highWaterMark);\r\n    this.consumers = {};\r\n  }\r\n\r\n  clear() {\r\n    super.clear();\r\n    this.consumers = {};\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {string} key Label key.\r\n   * @param {import(\"./Executor.js\").default} consumer Label consumer.\r\n   * @return {HTMLCanvasElement} Label.\r\n   */\r\n  get(key, consumer) {\r\n    const canvas = super.get(key);\r\n    const consumerId = getUid(consumer);\r\n    if (!(consumerId in this.consumers)) {\r\n      this.consumers[consumerId] = {};\r\n    }\r\n    this.consumers[consumerId][key] = true;\r\n    return canvas;\r\n  }\r\n\r\n  prune() {\r\n    outer:\r\n    while (this.canExpireCache()) {\r\n      const key = this.peekLastKey();\r\n      for (const consumerId in this.consumers) {\r\n        if (key in this.consumers[consumerId]) {\r\n          break outer;\r\n        }\r\n      }\r\n      const canvas = this.pop();\r\n      canvas.width = canvas.height = 0;\r\n      for (const consumerId in this.consumers) {\r\n        delete this.consumers[consumerId][key];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Executor.js\").default} consumer Label consumer.\r\n   */\r\n  release(consumer) {\r\n    delete this.consumers[getUid(consumer)];\r\n  }\r\n}\r\n\r\nexport default LabelCache;\r\n","/**\r\n * @module ol/render/canvas\r\n */\r\nimport {getFontFamilies} from '../css.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {clear} from '../obj.js';\r\nimport {create as createTransform} from '../transform.js';\r\nimport LabelCache from './canvas/LabelCache.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} FillState\r\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} FillStrokeState\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\r\n * @property {string} [currentLineCap]\r\n * @property {Array<number>} currentLineDash\r\n * @property {number} [currentLineDashOffset]\r\n * @property {string} [currentLineJoin]\r\n * @property {number} [currentLineWidth]\r\n * @property {number} [currentMiterLimit]\r\n * @property {number} [lastStroke]\r\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\r\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\r\n * @property {string} [lineCap]\r\n * @property {Array<number>} lineDash\r\n * @property {number} [lineDashOffset]\r\n * @property {string} [lineJoin]\r\n * @property {number} [lineWidth]\r\n * @property {number} [miterLimit]\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} StrokeState\r\n * @property {string} lineCap\r\n * @property {Array<number>} lineDash\r\n * @property {number} lineDashOffset\r\n * @property {string} lineJoin\r\n * @property {number} lineWidth\r\n * @property {number} miterLimit\r\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} TextState\r\n * @property {string} font\r\n * @property {string} [textAlign]\r\n * @property {string} textBaseline\r\n * @property {string} [placement]\r\n * @property {number} [maxAngle]\r\n * @property {boolean} [overflow]\r\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\r\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\r\n * @property {number} [scale]\r\n * @property {Array<number>} [padding]\r\n */\r\n\r\n\r\n/**\r\n * Container for decluttered replay instructions that need to be rendered or\r\n * omitted together, i.e. when styles render both an image and text, or for the\r\n * characters that form text along lines. The basic elements of this array are\r\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\r\n * rendered extent of the group in pixel space. `count` is the number of styles\r\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\r\n * In addition to these four elements, declutter instruction arrays (i.e. the\r\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\r\n * @typedef {Array<*>} DeclutterGroup\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const defaultFont = '10px sans-serif';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../colorlike.js\").ColorLike}\r\n */\r\nexport const defaultFillStyle = '#000';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const defaultLineCap = 'round';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport const defaultLineDash = [];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const defaultLineDashOffset = 0;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const defaultLineJoin = 'round';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const defaultMiterLimit = 10;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../colorlike.js\").ColorLike}\r\n */\r\nexport const defaultStrokeStyle = '#000';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const defaultTextAlign = 'center';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const defaultTextBaseline = 'middle';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport const defaultPadding = [0, 0, 0, 0];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const defaultLineWidth = 1;\r\n\r\n\r\n/**\r\n * The label cache for text rendering. To change the default cache size of 2048\r\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\r\n * @type {LabelCache}\r\n * @api\r\n */\r\nexport const labelCache = new LabelCache();\r\n\r\n\r\n/**\r\n * @type {!Object<string, number>}\r\n */\r\nexport const checkedFonts = {};\r\n\r\n\r\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\r\nlet measureContext = null;\r\n\r\n\r\n/**\r\n * @type {!Object<string, number>}\r\n */\r\nexport const textHeights = {};\r\n\r\n\r\n/**\r\n * Clears the label cache when a font becomes available.\r\n * @param {string} fontSpec CSS font spec.\r\n */\r\nexport const checkFont = (function() {\r\n  const retries = 60;\r\n  const checked = checkedFonts;\r\n  const size = '32px ';\r\n  const referenceFonts = ['monospace', 'serif'];\r\n  const len = referenceFonts.length;\r\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\r\n  let interval, referenceWidth;\r\n\r\n  function isAvailable(font) {\r\n    const context = getMeasureContext();\r\n    // Check weight ranges according to\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\r\n    for (let weight = 100; weight <= 700; weight += 300) {\r\n      const fontWeight = weight + ' ';\r\n      let available = true;\r\n      for (let i = 0; i < len; ++i) {\r\n        const referenceFont = referenceFonts[i];\r\n        context.font = fontWeight + size + referenceFont;\r\n        referenceWidth = context.measureText(text).width;\r\n        if (font != referenceFont) {\r\n          context.font = fontWeight + size + font + ',' + referenceFont;\r\n          const width = context.measureText(text).width;\r\n          // If width and referenceWidth are the same, then the fallback was used\r\n          // instead of the font we wanted, so the font is not available.\r\n          available = available && width != referenceWidth;\r\n        }\r\n      }\r\n      if (available) {\r\n        // Consider font available when it is available in one weight range.\r\n        //FIXME With this we miss rare corner cases, so we should consider\r\n        //FIXME checking availability for each requested weight range.\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function check() {\r\n    let done = true;\r\n    for (const font in checked) {\r\n      if (checked[font] < retries) {\r\n        if (isAvailable(font)) {\r\n          checked[font] = retries;\r\n          clear(textHeights);\r\n          // Make sure that loaded fonts are picked up by Safari\r\n          measureContext = null;\r\n          labelCache.clear();\r\n        } else {\r\n          ++checked[font];\r\n          done = false;\r\n        }\r\n      }\r\n    }\r\n    if (done) {\r\n      clearInterval(interval);\r\n      interval = undefined;\r\n    }\r\n  }\r\n\r\n  return function(fontSpec) {\r\n    const fontFamilies = getFontFamilies(fontSpec);\r\n    if (!fontFamilies) {\r\n      return;\r\n    }\r\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\r\n      const fontFamily = fontFamilies[i];\r\n      if (!(fontFamily in checked)) {\r\n        checked[fontFamily] = retries;\r\n        if (!isAvailable(fontFamily)) {\r\n          checked[fontFamily] = 0;\r\n          if (interval === undefined) {\r\n            interval = setInterval(check, 32);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n})();\r\n\r\n\r\n/**\r\n * @return {CanvasRenderingContext2D} Measure context.\r\n */\r\nfunction getMeasureContext() {\r\n  if (!measureContext) {\r\n    measureContext = createCanvasContext2D(1, 1);\r\n  }\r\n  return measureContext;\r\n}\r\n\r\n\r\n/**\r\n * @param {string} font Font to use for measuring.\r\n * @return {import(\"../size.js\").Size} Measurement.\r\n */\r\nexport const measureTextHeight = (function() {\r\n  let div;\r\n  const heights = textHeights;\r\n  return function(font) {\r\n    let height = heights[font];\r\n    if (height == undefined) {\r\n      if (!div) {\r\n        div = document.createElement('div');\r\n        div.innerHTML = 'M';\r\n        div.style.margin = div.style.padding = '0 !important';\r\n        div.style.position = 'absolute !important';\r\n        div.style.left = '-99999px !important';\r\n      }\r\n      div.style.font = font;\r\n      document.body.appendChild(div);\r\n      height = heights[font] = div.offsetHeight;\r\n      document.body.removeChild(div);\r\n    }\r\n    return height;\r\n  };\r\n})();\r\n\r\n\r\n/**\r\n * @param {string} font Font.\r\n * @param {string} text Text.\r\n * @return {number} Width.\r\n */\r\nexport function measureTextWidth(font, text) {\r\n  const measureContext = getMeasureContext();\r\n  if (font != measureContext.font) {\r\n    measureContext.font = font;\r\n  }\r\n  return measureContext.measureText(text).width;\r\n}\r\n\r\n\r\n/**\r\n * Measure text width using a cache.\r\n * @param {string} font The font.\r\n * @param {string} text The text to measure.\r\n * @param {Object<string, number>} cache A lookup of cached widths by text.\r\n * @returns {number} The text width.\r\n */\r\nexport function measureAndCacheTextWidth(font, text, cache) {\r\n  if (text in cache) {\r\n    return cache[text];\r\n  }\r\n  const width = cache[text] = measureTextWidth(font, text);\r\n  return width;\r\n}\r\n\r\n\r\n/**\r\n * @param {string} font Font to use for measuring.\r\n * @param {Array<string>} lines Lines to measure.\r\n * @param {Array<number>} widths Array will be populated with the widths of\r\n * each line.\r\n * @return {number} Width of the whole text.\r\n */\r\nexport function measureTextWidths(font, lines, widths) {\r\n  const numLines = lines.length;\r\n  let width = 0;\r\n  for (let i = 0; i < numLines; ++i) {\r\n    const currentWidth = measureTextWidth(font, lines[i]);\r\n    width = Math.max(width, currentWidth);\r\n    widths.push(currentWidth);\r\n  }\r\n  return width;\r\n}\r\n\r\n\r\n/**\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {number} rotation Rotation.\r\n * @param {number} offsetX X offset.\r\n * @param {number} offsetY Y offset.\r\n */\r\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\r\n  if (rotation !== 0) {\r\n    context.translate(offsetX, offsetY);\r\n    context.rotate(rotation);\r\n    context.translate(-offsetX, -offsetY);\r\n  }\r\n}\r\n\r\n\r\nexport const resetTransform = createTransform();\r\n\r\n\r\n/**\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\r\n * @param {number} opacity Opacity.\r\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\r\n * @param {number} originX Origin X.\r\n * @param {number} originY Origin Y.\r\n * @param {number} w Width.\r\n * @param {number} h Height.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {number} scale Scale.\r\n */\r\nexport function drawImage(context,\r\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\r\n  let alpha;\r\n  if (opacity != 1) {\r\n    alpha = context.globalAlpha;\r\n    context.globalAlpha = alpha * opacity;\r\n  }\r\n  if (transform) {\r\n    context.setTransform.apply(context, transform);\r\n  }\r\n\r\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\r\n\r\n  if (opacity != 1) {\r\n    context.globalAlpha = alpha;\r\n  }\r\n  if (transform) {\r\n    context.setTransform.apply(context, resetTransform);\r\n  }\r\n}\r\n","/**\r\n * @module ol/render/canvas/Immediate\r\n */\r\n// FIXME test, especially polygons with holes and multipolygons\r\n// FIXME need to handle large thick features (where pixel size matters)\r\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\r\n\r\nimport {equals} from '../../array.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {intersects} from '../../extent.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\r\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\r\n\r\n/**\r\n * @classdesc\r\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\r\n * direct rendering of features and geometries to an HTML5 Canvas context.\r\n * Instances of this class are created internally by the library and\r\n * provided to application code as vectorContext member of the\r\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\r\n * render events emitted by layers and maps.\r\n */\r\nclass CanvasImmediateRenderer extends VectorContext {\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   */\r\n  constructor(context, pixelRatio, extent, transform, viewRotation) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context_ = context;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.extent_ = extent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.transform_ = transform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = viewRotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.contextFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.contextStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.contextTextState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.fillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.strokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageHeight_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOpacity_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.imageRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageScale_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageWidth_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.textRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textScale_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.textFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.textStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.textState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.tmpLocalTransform_ = createTransform();\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  drawImages_(flatCoordinates, offset, end, stride) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates, offset, end, 2, this.transform_,\r\n      this.pixelCoordinates_);\r\n    const context = this.context_;\r\n    const localTransform = this.tmpLocalTransform_;\r\n    const alpha = context.globalAlpha;\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha * this.imageOpacity_;\r\n    }\r\n    let rotation = this.imageRotation_;\r\n    if (this.imageRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\r\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\r\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\r\n      if (rotation !== 0 || this.imageScale_ != 1) {\r\n        const centerX = x + this.imageAnchorX_;\r\n        const centerY = y + this.imageAnchorY_;\r\n        composeTransform(localTransform,\r\n          centerX, centerY,\r\n          this.imageScale_, this.imageScale_,\r\n          rotation,\r\n          -centerX, -centerY);\r\n        context.setTransform.apply(context, localTransform);\r\n      }\r\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\r\n        this.imageWidth_, this.imageHeight_, x, y,\r\n        this.imageWidth_, this.imageHeight_);\r\n    }\r\n    if (rotation !== 0 || this.imageScale_ != 1) {\r\n      context.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  drawText_(flatCoordinates, offset, end, stride) {\r\n    if (!this.textState_ || this.text_ === '') {\r\n      return;\r\n    }\r\n    if (this.textFillState_) {\r\n      this.setContextFillState_(this.textFillState_);\r\n    }\r\n    if (this.textStrokeState_) {\r\n      this.setContextStrokeState_(this.textStrokeState_);\r\n    }\r\n    this.setContextTextState_(this.textState_);\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates, offset, end, stride, this.transform_,\r\n      this.pixelCoordinates_);\r\n    const context = this.context_;\r\n    let rotation = this.textRotation_;\r\n    if (this.textRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (; offset < end; offset += stride) {\r\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\r\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\r\n      if (rotation !== 0 || this.textScale_ != 1) {\r\n        const localTransform = composeTransform(this.tmpLocalTransform_,\r\n          x, y,\r\n          this.textScale_, this.textScale_,\r\n          rotation,\r\n          -x, -y);\r\n        context.setTransform.apply(context, localTransform);\r\n      }\r\n      if (this.textStrokeState_) {\r\n        context.strokeText(this.text_, x, y);\r\n      }\r\n      if (this.textFillState_) {\r\n        context.fillText(this.text_, x, y);\r\n      }\r\n    }\r\n    if (rotation !== 0 || this.textScale_ != 1) {\r\n      context.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} close Close.\r\n   * @private\r\n   * @return {number} end End.\r\n   */\r\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\r\n    const context = this.context_;\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates, offset, end, stride, this.transform_,\r\n      this.pixelCoordinates_);\r\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\r\n    let length = pixelCoordinates.length;\r\n    if (close) {\r\n      length -= 2;\r\n    }\r\n    for (let i = 2; i < length; i += 2) {\r\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\r\n    }\r\n    if (close) {\r\n      context.closePath();\r\n    }\r\n    return end;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\r\n  drawRings_(flatCoordinates, offset, ends, stride) {\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\r\n   * the current fill and stroke styles.\r\n   *\r\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\r\n   * @override\r\n   * @api\r\n   */\r\n  drawCircle(geometry) {\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.fillState_ || this.strokeState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const pixelCoordinates = transformGeom2D(\r\n        geometry, this.transform_, this.pixelCoordinates_);\r\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\r\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\r\n      const radius = Math.sqrt(dx * dx + dy * dy);\r\n      const context = this.context_;\r\n      context.beginPath();\r\n      context.arc(\r\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the rendering style.  Note that since this is an immediate rendering API,\r\n   * any `zIndex` on the provided style will be ignored.\r\n   *\r\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\r\n   * @override\r\n   * @api\r\n   */\r\n  setStyle(style) {\r\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\r\n    this.setImageStyle(style.getImage());\r\n    this.setTextStyle(style.getText());\r\n  }\r\n\r\n  /**\r\n   * Render a geometry into the canvas.  Call\r\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\r\n   *\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\r\n   * @override\r\n   * @api\r\n   */\r\n  drawGeometry(geometry) {\r\n    const type = geometry.getType();\r\n    switch (type) {\r\n      case GeometryType.POINT:\r\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.LINE_STRING:\r\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.POLYGON:\r\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.MULTI_POINT:\r\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.MULTI_LINE_STRING:\r\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.MULTI_POLYGON:\r\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.GEOMETRY_COLLECTION:\r\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.CIRCLE:\r\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\r\n   * style will be ignored - features are rendered immediately in the order that\r\n   * this method is called.  If you need `zIndex` support, you should be using an\r\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\r\n   *\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../../style/Style.js\").default} style Style.\r\n   * @override\r\n   * @api\r\n   */\r\n  drawFeature(feature, style) {\r\n    const geometry = style.getGeometryFunction()(feature);\r\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    this.setStyle(style);\r\n    this.drawGeometry(geometry);\r\n  }\r\n\r\n  /**\r\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\r\n   * uses the current styles appropriate for each geometry in the collection.\r\n   *\r\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\r\n   * @override\r\n   */\r\n  drawGeometryCollection(geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      this.drawGeometry(geometries[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\r\n   * @override\r\n   */\r\n  drawPoint(geometry) {\r\n    const flatCoordinates = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\r\n   * @override\r\n   */\r\n  drawMultiPoint(geometry) {\r\n    const flatCoordinates = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a LineString into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\r\n   * @override\r\n   */\r\n  drawLineString(geometry) {\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getFlatCoordinates();\r\n      context.beginPath();\r\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\r\n        geometry.getStride(), false);\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatMidpoint = geometry.getFlatMidpoint();\r\n      this.drawText_(flatMidpoint, 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\r\n   * and uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\r\n   * @override\r\n   */\r\n  drawMultiLineString(geometry) {\r\n    const geometryExtent = geometry.getExtent();\r\n    if (!intersects(this.extent_, geometryExtent)) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getFlatCoordinates();\r\n      let offset = 0;\r\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\r\n      const stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\r\n      }\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatMidpoints = geometry.getFlatMidpoints();\r\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\r\n   * @override\r\n   */\r\n  drawPolygon(geometry) {\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const context = this.context_;\r\n      context.beginPath();\r\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\r\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\r\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n   * @override\r\n   */\r\n  drawMultiPolygon(geometry) {\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n      let offset = 0;\r\n      const endss = geometry.getEndss();\r\n      const stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n        const ends = endss[i];\r\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\r\n      }\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\r\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\r\n   * @private\r\n   */\r\n  setContextFillState_(fillState) {\r\n    const context = this.context_;\r\n    const contextFillState = this.contextFillState_;\r\n    if (!contextFillState) {\r\n      context.fillStyle = fillState.fillStyle;\r\n      this.contextFillState_ = {\r\n        fillStyle: fillState.fillStyle\r\n      };\r\n    } else {\r\n      if (contextFillState.fillStyle != fillState.fillStyle) {\r\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\r\n   * @private\r\n   */\r\n  setContextStrokeState_(strokeState) {\r\n    const context = this.context_;\r\n    const contextStrokeState = this.contextStrokeState_;\r\n    if (!contextStrokeState) {\r\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n      if (context.setLineDash) {\r\n        context.setLineDash(strokeState.lineDash);\r\n        context.lineDashOffset = strokeState.lineDashOffset;\r\n      }\r\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n      context.lineWidth = strokeState.lineWidth;\r\n      context.miterLimit = strokeState.miterLimit;\r\n      context.strokeStyle = strokeState.strokeStyle;\r\n      this.contextStrokeState_ = {\r\n        lineCap: strokeState.lineCap,\r\n        lineDash: strokeState.lineDash,\r\n        lineDashOffset: strokeState.lineDashOffset,\r\n        lineJoin: strokeState.lineJoin,\r\n        lineWidth: strokeState.lineWidth,\r\n        miterLimit: strokeState.miterLimit,\r\n        strokeStyle: strokeState.strokeStyle\r\n      };\r\n    } else {\r\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\r\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n      }\r\n      if (context.setLineDash) {\r\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\r\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\r\n        }\r\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\r\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\r\n              strokeState.lineDashOffset;\r\n        }\r\n      }\r\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\r\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n      }\r\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\r\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\r\n      }\r\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\r\n        contextStrokeState.miterLimit = context.miterLimit =\r\n            strokeState.miterLimit;\r\n      }\r\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\r\n        contextStrokeState.strokeStyle = context.strokeStyle =\r\n            strokeState.strokeStyle;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\r\n   * @private\r\n   */\r\n  setContextTextState_(textState) {\r\n    const context = this.context_;\r\n    const contextTextState = this.contextTextState_;\r\n    const textAlign = textState.textAlign ?\r\n      textState.textAlign : defaultTextAlign;\r\n    if (!contextTextState) {\r\n      context.font = textState.font;\r\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\r\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\r\n      this.contextTextState_ = {\r\n        font: textState.font,\r\n        textAlign: textAlign,\r\n        textBaseline: textState.textBaseline\r\n      };\r\n    } else {\r\n      if (contextTextState.font != textState.font) {\r\n        contextTextState.font = context.font = textState.font;\r\n      }\r\n      if (contextTextState.textAlign != textAlign) {\r\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\r\n      }\r\n      if (contextTextState.textBaseline != textState.textBaseline) {\r\n        contextTextState.textBaseline = context.textBaseline =\r\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the fill and stroke style for subsequent draw operations.  To clear\r\n   * either fill or stroke styles, pass null for the appropriate parameter.\r\n   *\r\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   * @override\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {\r\n    if (!fillStyle) {\r\n      this.fillState_ = null;\r\n    } else {\r\n      const fillStyleColor = fillStyle.getColor();\r\n      this.fillState_ = {\r\n        fillStyle: asColorLike(fillStyleColor ?\r\n          fillStyleColor : defaultFillStyle)\r\n      };\r\n    }\r\n    if (!strokeStyle) {\r\n      this.strokeState_ = null;\r\n    } else {\r\n      const strokeStyleColor = strokeStyle.getColor();\r\n      const strokeStyleLineCap = strokeStyle.getLineCap();\r\n      const strokeStyleLineDash = strokeStyle.getLineDash();\r\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      const strokeStyleWidth = strokeStyle.getWidth();\r\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      this.strokeState_ = {\r\n        lineCap: strokeStyleLineCap !== undefined ?\r\n          strokeStyleLineCap : defaultLineCap,\r\n        lineDash: strokeStyleLineDash ?\r\n          strokeStyleLineDash : defaultLineDash,\r\n        lineDashOffset: strokeStyleLineDashOffset ?\r\n          strokeStyleLineDashOffset : defaultLineDashOffset,\r\n        lineJoin: strokeStyleLineJoin !== undefined ?\r\n          strokeStyleLineJoin : defaultLineJoin,\r\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\r\n          strokeStyleWidth : defaultLineWidth),\r\n        miterLimit: strokeStyleMiterLimit !== undefined ?\r\n          strokeStyleMiterLimit : defaultMiterLimit,\r\n        strokeStyle: asColorLike(strokeStyleColor ?\r\n          strokeStyleColor : defaultStrokeStyle)\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the image style for subsequent draw operations.  Pass null to remove\r\n   * the image style.\r\n   *\r\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\r\n   * @override\r\n   */\r\n  setImageStyle(imageStyle) {\r\n    if (!imageStyle) {\r\n      this.image_ = null;\r\n    } else {\r\n      const imageAnchor = imageStyle.getAnchor();\r\n      // FIXME pixel ratio\r\n      const imageImage = imageStyle.getImage(1);\r\n      const imageOrigin = imageStyle.getOrigin();\r\n      const imageSize = imageStyle.getSize();\r\n      this.imageAnchorX_ = imageAnchor[0];\r\n      this.imageAnchorY_ = imageAnchor[1];\r\n      this.imageHeight_ = imageSize[1];\r\n      this.image_ = imageImage;\r\n      this.imageOpacity_ = imageStyle.getOpacity();\r\n      this.imageOriginX_ = imageOrigin[0];\r\n      this.imageOriginY_ = imageOrigin[1];\r\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\r\n      this.imageRotation_ = imageStyle.getRotation();\r\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\r\n      this.imageWidth_ = imageSize[0];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the text style for subsequent draw operations.  Pass null to\r\n   * remove the text style.\r\n   *\r\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\r\n   * @override\r\n   */\r\n  setTextStyle(textStyle) {\r\n    if (!textStyle) {\r\n      this.text_ = '';\r\n    } else {\r\n      const textFillStyle = textStyle.getFill();\r\n      if (!textFillStyle) {\r\n        this.textFillState_ = null;\r\n      } else {\r\n        const textFillStyleColor = textFillStyle.getColor();\r\n        this.textFillState_ = {\r\n          fillStyle: asColorLike(textFillStyleColor ?\r\n            textFillStyleColor : defaultFillStyle)\r\n        };\r\n      }\r\n      const textStrokeStyle = textStyle.getStroke();\r\n      if (!textStrokeStyle) {\r\n        this.textStrokeState_ = null;\r\n      } else {\r\n        const textStrokeStyleColor = textStrokeStyle.getColor();\r\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\r\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\r\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\r\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\r\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\r\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\r\n        this.textStrokeState_ = {\r\n          lineCap: textStrokeStyleLineCap !== undefined ?\r\n            textStrokeStyleLineCap : defaultLineCap,\r\n          lineDash: textStrokeStyleLineDash ?\r\n            textStrokeStyleLineDash : defaultLineDash,\r\n          lineDashOffset: textStrokeStyleLineDashOffset ?\r\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\r\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\r\n            textStrokeStyleLineJoin : defaultLineJoin,\r\n          lineWidth: textStrokeStyleWidth !== undefined ?\r\n            textStrokeStyleWidth : defaultLineWidth,\r\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\r\n            textStrokeStyleMiterLimit : defaultMiterLimit,\r\n          strokeStyle: asColorLike(textStrokeStyleColor ?\r\n            textStrokeStyleColor : defaultStrokeStyle)\r\n        };\r\n      }\r\n      const textFont = textStyle.getFont();\r\n      const textOffsetX = textStyle.getOffsetX();\r\n      const textOffsetY = textStyle.getOffsetY();\r\n      const textRotateWithView = textStyle.getRotateWithView();\r\n      const textRotation = textStyle.getRotation();\r\n      const textScale = textStyle.getScale();\r\n      const textText = textStyle.getText();\r\n      const textTextAlign = textStyle.getTextAlign();\r\n      const textTextBaseline = textStyle.getTextBaseline();\r\n      this.textState_ = {\r\n        font: textFont !== undefined ?\r\n          textFont : defaultFont,\r\n        textAlign: textTextAlign !== undefined ?\r\n          textTextAlign : defaultTextAlign,\r\n        textBaseline: textTextBaseline !== undefined ?\r\n          textTextBaseline : defaultTextBaseline\r\n      };\r\n      this.text_ = textText !== undefined ? textText : '';\r\n      this.textOffsetX_ =\r\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\r\n      this.textOffsetY_ =\r\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\r\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\r\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\r\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\r\n        textScale : 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasImmediateRenderer;\r\n","/**\r\n * @module ol/render\r\n */\r\nimport {DEVICE_PIXEL_RATIO} from './has.js';\r\nimport {\r\n  apply as applyTransform,\r\n  create as createTransform,\r\n  multiply as multiplyTransform,\r\n  scale as scaleTransform\r\n} from './transform.js';\r\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\r\n * @property {import(\"./Feature.js\").FeatureLike} feature\r\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\r\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\r\n * @property {number} resolution Resolution that the render batch was created and optimized for.\r\n * This is not the view's resolution that is being rendered.\r\n * @property {number} rotation Rotation of the rendered layer in radians.\r\n */\r\n\r\n\r\n/**\r\n * A function to be used when sorting features before rendering.\r\n * It takes two instances of {@link module:ol/Feature} or\r\n * {@link module:ol/render/Feature} and returns a `{number}`.\r\n *\r\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} ToContextOptions\r\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\r\n * pixels. When provided, both canvas and css size will be set according to the\r\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\r\n * altered.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\r\n * pixel to css pixel ratio) for the canvas.\r\n */\r\n\r\n\r\n/**\r\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\r\n * to the context's canvas.\r\n *\r\n * The units for geometry coordinates are css pixels relative to the top left\r\n * corner of the canvas element.\r\n * ```js\r\n * import {toContext} from 'ol/render';\r\n * import Fill from 'ol/style/Fill';\r\n * import Polygon from 'ol/geom/Polygon';\r\n *\r\n * var canvas = document.createElement('canvas');\r\n * var render = toContext(canvas.getContext('2d'),\r\n *     { size: [100, 100] });\r\n * render.setFillStrokeStyle(new Fill({ color: blue }));\r\n * render.drawPolygon(\r\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\r\n * ```\r\n *\r\n * @param {CanvasRenderingContext2D} context Canvas context.\r\n * @param {ToContextOptions=} opt_options Options.\r\n * @return {CanvasImmediateRenderer} Canvas Immediate.\r\n * @api\r\n */\r\nexport function toContext(context, opt_options) {\r\n  const canvas = context.canvas;\r\n  const options = opt_options ? opt_options : {};\r\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\r\n  const size = options.size;\r\n  if (size) {\r\n    canvas.width = size[0] * pixelRatio;\r\n    canvas.height = size[1] * pixelRatio;\r\n    canvas.style.width = size[0] + 'px';\r\n    canvas.style.height = size[1] + 'px';\r\n  }\r\n  const extent = [0, 0, canvas.width, canvas.height];\r\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\r\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\r\n}\r\n\r\n/**\r\n * Gets a vector context for drawing to the event's canvas.\r\n * @param {import(\"./render/Event.js\").default} event Render event.\r\n * @returns {CanvasImmediateRenderer} Vector context.\r\n * @api\r\n */\r\nexport function getVectorContext(event) {\r\n  const frameState = event.frameState;\r\n  const transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\r\n  return new CanvasImmediateRenderer(\r\n    event.context, frameState.pixelRatio, frameState.extent, transform,\r\n    frameState.viewState.rotation);\r\n}\r\n\r\n/**\r\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\r\n * @param {import(\"./render/Event.js\").default} event Render event.\r\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\r\n * corner of the map viewport.\r\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\r\n * @api\r\n */\r\nexport function getRenderPixel(event, pixel) {\r\n  const result = pixel.slice(0);\r\n  applyTransform(event.inversePixelTransform.slice(), result);\r\n  return result;\r\n}\r\n\r\n/**\r\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\r\n * @param {?} declutterTree Declutter tree.\r\n * @returns {?} Declutter tree.\r\n */\r\nexport function renderDeclutterItems(frameState, declutterTree) {\r\n  if (declutterTree) {\r\n    declutterTree.clear();\r\n  }\r\n  const items = frameState.declutterItems;\r\n  for (let z = items.length - 1; z >= 0; --z) {\r\n    const item = items[z];\r\n    const zIndexItems = item.items;\r\n    for (let i = 0, ii = zIndexItems.length; i < ii; i += 3) {\r\n      declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\r\n    }\r\n  }\r\n  items.length = 0;\r\n  return declutterTree;\r\n}\r\n","/**\r\n * @module ol/renderer/Map\r\n */\r\nimport {abstract, getUid} from '../util.js';\r\nimport Disposable from '../Disposable.js';\r\nimport {getWidth} from '../extent.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {visibleAtResolution} from '../layer/Layer.js';\r\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\r\nimport {compose as composeTransform, makeInverse} from '../transform.js';\r\nimport {renderDeclutterItems} from '../render.js';\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass MapRenderer extends Disposable {\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  constructor(map) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = map;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.declutterTree_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  dispatchRenderEvent(type, frameState) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @protected\r\n   */\r\n  calculateMatrices2D(frameState) {\r\n    const viewState = frameState.viewState;\r\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\r\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\r\n\r\n    composeTransform(coordinateToPixelTransform,\r\n      frameState.size[0] / 2, frameState.size[1] / 2,\r\n      1 / viewState.resolution, -1 / viewState.resolution,\r\n      -viewState.rotation,\r\n      -viewState.center[0], -viewState.center[1]);\r\n\r\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\r\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\r\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\r\n   * @return {T|undefined} Callback result.\r\n   * @template S,T,U\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    callback,\r\n    thisArg,\r\n    layerFilter,\r\n    thisArg2\r\n  ) {\r\n    let result;\r\n    const viewState = frameState.viewState;\r\n    const viewResolution = viewState.resolution;\r\n\r\n    /**\r\n     * @param {boolean} managed Managed layer.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n     * @return {?} Callback result.\r\n     */\r\n    function forEachFeatureAtCoordinate(managed, feature, layer) {\r\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\r\n        return callback.call(thisArg, feature, managed ? layer : null);\r\n      }\r\n    }\r\n\r\n    const projection = viewState.projection;\r\n\r\n    let translatedCoordinate = coordinate;\r\n    if (projection.canWrapX()) {\r\n      const projectionExtent = projection.getExtent();\r\n      const worldWidth = getWidth(projectionExtent);\r\n      const x = coordinate[0];\r\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\r\n        const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\r\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\r\n      }\r\n    }\r\n\r\n    const layerStates = frameState.layerStatesArray;\r\n    const numLayers = layerStates.length;\r\n    let declutteredFeatures;\r\n    if (this.declutterTree_) {\r\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\r\n        return entry.value;\r\n      });\r\n    }\r\n    let i;\r\n    for (i = numLayers - 1; i >= 0; --i) {\r\n      const layerState = layerStates[i];\r\n      const layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\r\n      if (layer.hasRenderer() && visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\r\n        const layerRenderer = layer.getRenderer();\r\n        const source = layer.getSource();\r\n        if (layerRenderer && source) {\r\n          const callback = forEachFeatureAtCoordinate.bind(null, layerState.managed);\r\n          result = layerRenderer.forEachFeatureAtCoordinate(\r\n            source.getWrapX() ? translatedCoordinate : coordinate,\r\n            frameState, hitTolerance, callback, declutteredFeatures);\r\n        }\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\r\n   *     callback.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @return {T|undefined} Callback result.\r\n   * @template S,T,U\r\n   */\r\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\r\n   * @return {boolean} Is there a feature at the given coordinate?\r\n   * @template U\r\n   */\r\n  hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\r\n    const hasFeature = this.forEachFeatureAtCoordinate(\r\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\r\n\r\n    return hasFeature !== undefined;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../PluggableMap.js\").default} Map.\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Render.\r\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderFrame(frameState) {\r\n    this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  scheduleExpireIconCache(frameState) {\r\n    if (iconImageCache.canExpireCache()) {\r\n      frameState.postRenderFunctions.push(expireIconCache);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../PluggableMap.js\").default} map Map.\r\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n */\r\nfunction expireIconCache(map, frameState) {\r\n  iconImageCache.expire();\r\n}\r\n\r\nexport default MapRenderer;\r\n","/**\r\n * @module ol/renderer/Composite\r\n */\r\nimport {CLASS_UNSELECTABLE} from '../css.js';\r\nimport {visibleAtResolution} from '../layer/Layer.js';\r\nimport RenderEvent from '../render/Event.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport MapRenderer from './Map.js';\r\nimport SourceState from '../source/State.js';\r\nimport {replaceChildren} from '../dom.js';\r\nimport {labelCache} from '../render/canvas.js';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Canvas map renderer.\r\n * @api\r\n */\r\nclass CompositeMapRenderer extends MapRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  constructor(map) {\r\n    super(map);\r\n    map.attachLabelCache(labelCache);\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLDivElement}\r\n     */\r\n    this.element_ = document.createElement('div');\r\n    const style = this.element_.style;\r\n    style.position = 'absolute';\r\n    style.width = '100%';\r\n    style.height = '100%';\r\n    style.zIndex = '0';\r\n\r\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\r\n\r\n    const container = map.getViewport();\r\n    container.insertBefore(this.element_, container.firstChild || null);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<HTMLElement>}\r\n     */\r\n    this.children_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  dispatchRenderEvent(type, frameState) {\r\n    const map = this.getMap();\r\n    if (map.hasListener(type)) {\r\n      const event = new RenderEvent(type, undefined, frameState);\r\n      map.dispatchEvent(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  renderFrame(frameState) {\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.element_.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.calculateMatrices2D(frameState);\r\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\r\n\r\n    const layerStatesArray = frameState.layerStatesArray.sort(function(a, b) {\r\n      return a.zIndex - b.zIndex;\r\n    });\r\n    const viewResolution = frameState.viewState.resolution;\r\n\r\n    this.children_.length = 0;\r\n    let previousElement = null;\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const layerState = layerStatesArray[i];\r\n      frameState.layerIndex = i;\r\n      if (!visibleAtResolution(layerState, viewResolution) ||\r\n        (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\r\n        continue;\r\n      }\r\n\r\n      const layer = layerState.layer;\r\n      const element = layer.render(frameState, previousElement);\r\n      if (element !== previousElement) {\r\n        this.children_.push(element);\r\n        previousElement = element;\r\n      }\r\n    }\r\n    super.renderFrame(frameState);\r\n\r\n    replaceChildren(this.element_, this.children_);\r\n\r\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.element_.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n\r\n    this.scheduleExpireIconCache(frameState);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\r\n    const viewState = frameState.viewState;\r\n    const viewResolution = viewState.resolution;\r\n\r\n    const layerStates = frameState.layerStatesArray;\r\n    const numLayers = layerStates.length;\r\n\r\n    for (let i = numLayers - 1; i >= 0; --i) {\r\n      const layerState = layerStates[i];\r\n      const layer = layerState.layer;\r\n      if (layer.hasRenderer() && visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\r\n        const layerRenderer = layer.getRenderer();\r\n        const data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\r\n        if (data) {\r\n          const result = callback(layer, data);\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default CompositeMapRenderer;\r\n","/**\r\n * @module ol/OverlayPositioning\r\n */\r\n\r\n/**\r\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, `'top-right'`\r\n * @enum {string}\r\n */\r\nexport default {\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_CENTER: 'bottom-center',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n  CENTER_LEFT: 'center-left',\r\n  CENTER_CENTER: 'center-center',\r\n  CENTER_RIGHT: 'center-right',\r\n  TOP_LEFT: 'top-left',\r\n  TOP_CENTER: 'top-center',\r\n  TOP_RIGHT: 'top-right'\r\n};\r\n","/**\r\n * @module ol/Overlay\r\n */\r\nimport MapEventType from './MapEventType.js';\r\nimport BaseObject, {getChangeEventType} from './Object.js';\r\nimport OverlayPositioning from './OverlayPositioning.js';\r\nimport {CLASS_SELECTABLE} from './css.js';\r\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {containsExtent} from './extent.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\r\n * with the {@link module:ol/Map~Map#getOverlayById} method.\r\n * @property {HTMLElement} [element] The overlay element.\r\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\r\n * the overlay. The first element in the\r\n * array is the horizontal offset. A positive value shifts the overlay right.\r\n * The second element in the array is the vertical offset. A positive value\r\n * shifts the overlay down.\r\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\r\n * in map projection.\r\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\r\n * the overlay is actually positioned with respect to its `position` property.\r\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, and `'top-right'`.\r\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\r\n * viewport should be stopped. If `true` the overlay is placed in the same\r\n * container as that of the controls (CSS class name\r\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\r\n * with CSS class name specified by the `className` property.\r\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\r\n * in the overlay container, or appended. If the overlay is placed in the same\r\n * container as that of the controls (see the `stopEvent` option) you will\r\n * probably set `insertFirst` to `true` so the overlay is displayed below the\r\n * controls.\r\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\r\n * calling `setPosition`, so that the overlay is entirely visible in the current\r\n * viewport.\r\n * @property {PanOptions} [autoPanAnimation] The\r\n * animation options used to pan the overlay into view. This animation is only\r\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\r\n * customize the animation.\r\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\r\n * overlay and the borders of the map when autopanning.\r\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\r\n * name.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} PanOptions\r\n * @property {number} [duration=1000] The duration of the animation in\r\n * milliseconds.\r\n * @property {function(number):number} [easing] The easing function to use. Can\r\n * be one from {@link module:ol/easing} or a custom function.\r\n * Default is {@link module:ol/easing~inAndOut}.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @protected\r\n */\r\nconst Property = {\r\n  ELEMENT: 'element',\r\n  MAP: 'map',\r\n  OFFSET: 'offset',\r\n  POSITION: 'position',\r\n  POSITIONING: 'positioning'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * An element to be displayed over the map and attached to a single map\r\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\r\n * visible widgets. Unlike Controls, they are not in a fixed position on the\r\n * screen, but are tied to a geographical coordinate, so panning the map will\r\n * move an Overlay but not a Control.\r\n *\r\n * Example:\r\n *\r\n *     import Overlay from 'ol/Overlay';\r\n *\r\n *     var popup = new Overlay({\r\n *       element: document.getElementById('popup')\r\n *     });\r\n *     popup.setPosition(coordinate);\r\n *     map.addOverlay(popup);\r\n *\r\n * @api\r\n */\r\nclass Overlay extends BaseObject {\r\n\r\n  /**\r\n   * @param {Options} options Overlay options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Options}\r\n     */\r\n    this.options = options;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|string|undefined}\r\n     */\r\n    this.id = options.id;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.insertFirst = options.insertFirst !== undefined ?\r\n      options.insertFirst : true;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = document.createElement('div');\r\n    this.element.className = options.className !== undefined ?\r\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\r\n    this.element.style.position = 'absolute';\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {PanOptions}\r\n     */\r\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\r\n      options.autoPanMargin : 20;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {{bottom_: string,\r\n     *         left_: string,\r\n     *         right_: string,\r\n     *         top_: string,\r\n     *         visible: boolean}}\r\n     */\r\n    this.rendered = {\r\n      bottom_: '',\r\n      left_: '',\r\n      right_: '',\r\n      top_: '',\r\n      visible: true\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.mapPostrenderListenerKey = null;\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.ELEMENT),\r\n      this.handleElementChanged, this);\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.MAP),\r\n      this.handleMapChanged, this);\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.OFFSET),\r\n      this.handleOffsetChanged, this);\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.POSITION),\r\n      this.handlePositionChanged, this);\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.POSITIONING),\r\n      this.handlePositioningChanged, this);\r\n\r\n    if (options.element !== undefined) {\r\n      this.setElement(options.element);\r\n    }\r\n\r\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\r\n\r\n    this.setPositioning(options.positioning !== undefined ?\r\n      /** @type {OverlayPositioning} */ (options.positioning) :\r\n      OverlayPositioning.TOP_LEFT);\r\n\r\n    if (options.position !== undefined) {\r\n      this.setPosition(options.position);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Get the DOM element of this overlay.\r\n   * @return {HTMLElement|undefined} The Element containing the overlay.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getElement() {\r\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\r\n  }\r\n\r\n  /**\r\n   * Get the overlay identifier which is set on constructor.\r\n   * @return {number|string|undefined} Id.\r\n   * @api\r\n   */\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this overlay.\r\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\r\n   * overlay is part of.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return (\r\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the offset of this overlay.\r\n   * @return {Array<number>} The offset.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getOffset() {\r\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\r\n  }\r\n\r\n  /**\r\n   * Get the current position of this overlay.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\r\n   *     anchored at.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPosition() {\r\n    return (\r\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the current positioning of this overlay.\r\n   * @return {OverlayPositioning} How the overlay is positioned\r\n   *     relative to its point on the map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPositioning() {\r\n    return (\r\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleElementChanged() {\r\n    removeChildren(this.element);\r\n    const element = this.getElement();\r\n    if (element) {\r\n      this.element.appendChild(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleMapChanged() {\r\n    if (this.mapPostrenderListenerKey) {\r\n      removeNode(this.element);\r\n      unlistenByKey(this.mapPostrenderListenerKey);\r\n      this.mapPostrenderListenerKey = null;\r\n    }\r\n    const map = this.getMap();\r\n    if (map) {\r\n      this.mapPostrenderListenerKey = listen(map,\r\n        MapEventType.POSTRENDER, this.render, this);\r\n      this.updatePixelPosition();\r\n      const container = this.stopEvent ?\r\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\r\n      if (this.insertFirst) {\r\n        container.insertBefore(this.element, container.childNodes[0] || null);\r\n      } else {\r\n        container.appendChild(this.element);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  render() {\r\n    this.updatePixelPosition();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleOffsetChanged() {\r\n    this.updatePixelPosition();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePositionChanged() {\r\n    this.updatePixelPosition();\r\n    if (this.get(Property.POSITION) && this.autoPan) {\r\n      this.panIntoView();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePositioningChanged() {\r\n    this.updatePixelPosition();\r\n  }\r\n\r\n  /**\r\n   * Set the DOM element to be associated with this overlay.\r\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setElement(element) {\r\n    this.set(Property.ELEMENT, element);\r\n  }\r\n\r\n  /**\r\n   * Set the map to be associated with this overlay.\r\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\r\n   * overlay is part of.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    this.set(Property.MAP, map);\r\n  }\r\n\r\n  /**\r\n   * Set the offset for this overlay.\r\n   * @param {Array<number>} offset Offset.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setOffset(offset) {\r\n    this.set(Property.OFFSET, offset);\r\n  }\r\n\r\n  /**\r\n   * Set the position for this overlay. If the position is `undefined` the\r\n   * overlay is hidden.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\r\n   *     is anchored at.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setPosition(position) {\r\n    this.set(Property.POSITION, position);\r\n  }\r\n\r\n  /**\r\n   * Pan the map so that the overlay is entirely visible in the current viewport\r\n   * (if necessary).\r\n   * @protected\r\n   */\r\n  panIntoView() {\r\n    const map = this.getMap();\r\n\r\n    if (!map || !map.getTargetElement()) {\r\n      return;\r\n    }\r\n\r\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\r\n    const element = this.getElement();\r\n    const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\r\n\r\n    const margin = this.autoPanMargin;\r\n    if (!containsExtent(mapRect, overlayRect)) {\r\n      // the overlay is not completely inside the viewport, so pan the map\r\n      const offsetLeft = overlayRect[0] - mapRect[0];\r\n      const offsetRight = mapRect[2] - overlayRect[2];\r\n      const offsetTop = overlayRect[1] - mapRect[1];\r\n      const offsetBottom = mapRect[3] - overlayRect[3];\r\n\r\n      const delta = [0, 0];\r\n      if (offsetLeft < 0) {\r\n        // move map to the left\r\n        delta[0] = offsetLeft - margin;\r\n      } else if (offsetRight < 0) {\r\n        // move map to the right\r\n        delta[0] = Math.abs(offsetRight) + margin;\r\n      }\r\n      if (offsetTop < 0) {\r\n        // move map up\r\n        delta[1] = offsetTop - margin;\r\n      } else if (offsetBottom < 0) {\r\n        // move map down\r\n        delta[1] = Math.abs(offsetBottom) + margin;\r\n      }\r\n\r\n      if (delta[0] !== 0 || delta[1] !== 0) {\r\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\r\n        const centerPx = map.getPixelFromCoordinate(center);\r\n        const newCenterPx = [\r\n          centerPx[0] + delta[0],\r\n          centerPx[1] + delta[1]\r\n        ];\r\n\r\n        map.getView().animate({\r\n          center: map.getCoordinateFromPixel(newCenterPx),\r\n          duration: this.autoPanAnimation.duration,\r\n          easing: this.autoPanAnimation.easing\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the extent of an element relative to the document\r\n   * @param {HTMLElement|undefined} element The element.\r\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\r\n   * @return {import(\"./extent.js\").Extent} The extent.\r\n   * @protected\r\n   */\r\n  getRect(element, size) {\r\n    const box = element.getBoundingClientRect();\r\n    const offsetX = box.left + window.pageXOffset;\r\n    const offsetY = box.top + window.pageYOffset;\r\n    return [\r\n      offsetX,\r\n      offsetY,\r\n      offsetX + size[0],\r\n      offsetY + size[1]\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Set the positioning for this overlay.\r\n   * @param {OverlayPositioning} positioning how the overlay is\r\n   *     positioned relative to its point on the map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setPositioning(positioning) {\r\n    this.set(Property.POSITIONING, positioning);\r\n  }\r\n\r\n  /**\r\n   * Modify the visibility of the element.\r\n   * @param {boolean} visible Element visibility.\r\n   * @protected\r\n   */\r\n  setVisible(visible) {\r\n    if (this.rendered.visible !== visible) {\r\n      this.element.style.display = visible ? '' : 'none';\r\n      this.rendered.visible = visible;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update pixel position.\r\n   * @protected\r\n   */\r\n  updatePixelPosition() {\r\n    const map = this.getMap();\r\n    const position = this.getPosition();\r\n    if (!map || !map.isRendered() || !position) {\r\n      this.setVisible(false);\r\n      return;\r\n    }\r\n\r\n    const pixel = map.getPixelFromCoordinate(position);\r\n    const mapSize = map.getSize();\r\n    this.updateRenderedPosition(pixel, mapSize);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\r\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\r\n   * @protected\r\n   */\r\n  updateRenderedPosition(pixel, mapSize) {\r\n    const style = this.element.style;\r\n    const offset = this.getOffset();\r\n\r\n    const positioning = this.getPositioning();\r\n\r\n    this.setVisible(true);\r\n\r\n    let offsetX = offset[0];\r\n    let offsetY = offset[1];\r\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\r\n        positioning == OverlayPositioning.CENTER_RIGHT ||\r\n        positioning == OverlayPositioning.TOP_RIGHT) {\r\n      if (this.rendered.left_ !== '') {\r\n        this.rendered.left_ = style.left = '';\r\n      }\r\n      const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\r\n      if (this.rendered.right_ != right) {\r\n        this.rendered.right_ = style.right = right;\r\n      }\r\n    } else {\r\n      if (this.rendered.right_ !== '') {\r\n        this.rendered.right_ = style.right = '';\r\n      }\r\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\r\n          positioning == OverlayPositioning.CENTER_CENTER ||\r\n          positioning == OverlayPositioning.TOP_CENTER) {\r\n        offsetX -= this.element.offsetWidth / 2;\r\n      }\r\n      const left = Math.round(pixel[0] + offsetX) + 'px';\r\n      if (this.rendered.left_ != left) {\r\n        this.rendered.left_ = style.left = left;\r\n      }\r\n    }\r\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\r\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\r\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\r\n      if (this.rendered.top_ !== '') {\r\n        this.rendered.top_ = style.top = '';\r\n      }\r\n      const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\r\n      if (this.rendered.bottom_ != bottom) {\r\n        this.rendered.bottom_ = style.bottom = bottom;\r\n      }\r\n    } else {\r\n      if (this.rendered.bottom_ !== '') {\r\n        this.rendered.bottom_ = style.bottom = '';\r\n      }\r\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\r\n          positioning == OverlayPositioning.CENTER_CENTER ||\r\n          positioning == OverlayPositioning.CENTER_RIGHT) {\r\n        offsetY -= this.element.offsetHeight / 2;\r\n      }\r\n      const top = Math.round(pixel[1] + offsetY) + 'px';\r\n      if (this.rendered.top_ != top) {\r\n        this.rendered.top_ = style.top = top;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * returns the options this Overlay has been created with\r\n   * @return {Options} overlay options\r\n   */\r\n  getOptions() {\r\n    return this.options;\r\n  }\r\n}\r\n\r\n\r\nexport default Overlay;\r\n","/**\r\n * @module ol/control/OverviewMap\r\n */\r\nimport PluggableMap from '../PluggableMap.js';\r\nimport CompositeMapRenderer from '../renderer/Composite.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport MapProperty from '../MapProperty.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport Overlay from '../Overlay.js';\r\nimport OverlayPositioning from '../OverlayPositioning.js';\r\nimport ViewProperty from '../ViewProperty.js';\r\nimport Control from './Control.js';\r\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\r\nimport {replaceNode} from '../dom.js';\r\nimport {listen, listenOnce, unlisten} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\r\n\r\n\r\n/**\r\n * Maximum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed out.\r\n * @type {number}\r\n */\r\nconst MAX_RATIO = 0.75;\r\n\r\n\r\n/**\r\n * Minimum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed in.\r\n * @type {number}\r\n */\r\nconst MIN_RATIO = 0.1;\r\n\r\n\r\nclass ControlledMap extends PluggableMap {\r\n  createRenderer() {\r\n    return new CompositeMapRenderer(this);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-overviewmap'] CSS class name.\r\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\r\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\r\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\r\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\r\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} layers\r\n * Layers for the overview map (mandatory).\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\r\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\r\n * a default view with an EPSG:3857 projection will be used.\r\n */\r\n\r\n\r\n/**\r\n * Create a new control with a map acting as an overview map for an other\r\n * defined map.\r\n *\r\n * @api\r\n */\r\nclass OverviewMap extends Control {\r\n\r\n  /**\r\n   * @param {Options=} opt_options OverviewMap options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible_ = options.collapsible !== undefined ?\r\n      options.collapsible : true;\r\n\r\n    if (!this.collapsible_) {\r\n      this.collapsed_ = false;\r\n    }\r\n\r\n    const className = options.className !== undefined ? options.className : 'ol-overviewmap';\r\n\r\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\r\n\r\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\r\n\r\n    if (typeof collapseLabel === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.collapseLabel_ = document.createElement('span');\r\n      this.collapseLabel_.textContent = collapseLabel;\r\n    } else {\r\n      this.collapseLabel_ = collapseLabel;\r\n    }\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u00BB';\r\n\r\n\r\n    if (typeof label === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.label_ = document.createElement('span');\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n    }\r\n\r\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\r\n      this.collapseLabel_ : this.label_;\r\n    const button = document.createElement('button');\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(activeLabel);\r\n\r\n    listen(button, EventType.CLICK,\r\n      this.handleClick_, this);\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.ovmapDiv_ = document.createElement('div');\r\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\r\n\r\n    /**\r\n     * @type {ControlledMap}\r\n     * @private\r\n     */\r\n    this.ovmap_ = new ControlledMap({\r\n      view: options.view\r\n    });\r\n    const ovmap = this.ovmap_;\r\n\r\n    if (options.layers) {\r\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\r\n        /**\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         */\r\n        (function(layer) {\r\n          ovmap.addLayer(layer);\r\n        }).bind(this));\r\n    }\r\n\r\n    const box = document.createElement('div');\r\n    box.className = 'ol-overviewmap-box';\r\n    box.style.boxSizing = 'border-box';\r\n\r\n    /**\r\n     * @type {import(\"../Overlay.js\").default}\r\n     * @private\r\n     */\r\n    this.boxOverlay_ = new Overlay({\r\n      position: [0, 0],\r\n      positioning: OverlayPositioning.BOTTOM_LEFT,\r\n      element: box\r\n    });\r\n    this.ovmap_.addOverlay(this.boxOverlay_);\r\n\r\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\r\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.ovmapDiv_);\r\n    element.appendChild(button);\r\n\r\n    /* Interactive map */\r\n\r\n    const scope = this;\r\n\r\n    const overlay = this.boxOverlay_;\r\n    const overlayBox = this.boxOverlay_.getElement();\r\n\r\n    /* Functions definition */\r\n\r\n    const computeDesiredMousePosition = function(mousePosition) {\r\n      return {\r\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\r\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\r\n      };\r\n    };\r\n\r\n    const move = function(event) {\r\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\r\n      const coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\r\n\r\n      overlay.setPosition(coordinates);\r\n    };\r\n\r\n    const endMoving = function(event) {\r\n      const coordinates = ovmap.getEventCoordinate(event);\r\n\r\n      scope.getMap().getView().setCenter(coordinates);\r\n\r\n      window.removeEventListener('mousemove', move);\r\n      window.removeEventListener('mouseup', endMoving);\r\n    };\r\n\r\n    /* Binding */\r\n\r\n    overlayBox.addEventListener('mousedown', function() {\r\n      window.addEventListener('mousemove', move);\r\n      window.addEventListener('mouseup', endMoving);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    const oldMap = this.getMap();\r\n    if (map === oldMap) {\r\n      return;\r\n    }\r\n    if (oldMap) {\r\n      const oldView = oldMap.getView();\r\n      if (oldView) {\r\n        this.unbindView_(oldView);\r\n      }\r\n      this.ovmap_.setTarget(null);\r\n    }\r\n    super.setMap(map);\r\n\r\n    if (map) {\r\n      this.ovmap_.setTarget(this.ovmapDiv_);\r\n      this.listenerKeys.push(listen(\r\n        map, ObjectEventType.PROPERTYCHANGE,\r\n        this.handleMapPropertyChange_, this));\r\n\r\n      const view = map.getView();\r\n      if (view) {\r\n        this.bindView_(view);\r\n        if (view.isDef()) {\r\n          this.ovmap_.updateSize();\r\n          this.resetExtent_();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle map property changes.  This only deals with changes to the map's view.\r\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\r\n   * @private\r\n   */\r\n  handleMapPropertyChange_(event) {\r\n    if (event.key === MapProperty.VIEW) {\r\n      const oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\r\n      if (oldView) {\r\n        this.unbindView_(oldView);\r\n      }\r\n      const newView = this.getMap().getView();\r\n      this.bindView_(newView);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register listeners for view property changes.\r\n   * @param {import(\"../View.js\").default} view The view.\r\n   * @private\r\n   */\r\n  bindView_(view) {\r\n    listen(view,\r\n      getChangeEventType(ViewProperty.ROTATION),\r\n      this.handleRotationChanged_, this);\r\n  }\r\n\r\n  /**\r\n   * Unregister listeners for view property changes.\r\n   * @param {import(\"../View.js\").default} view The view.\r\n   * @private\r\n   */\r\n  unbindView_(view) {\r\n    unlisten(view,\r\n      getChangeEventType(ViewProperty.ROTATION),\r\n      this.handleRotationChanged_, this);\r\n  }\r\n\r\n  /**\r\n   * Handle rotation changes to the main map.\r\n   * TODO: This should rotate the extent rectrangle instead of the\r\n   * overview map's view.\r\n   * @private\r\n   */\r\n  handleRotationChanged_() {\r\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\r\n  }\r\n\r\n  /**\r\n   * Reset the overview map extent if the box size (width or\r\n   * height) is less than the size of the overview map size times minRatio\r\n   * or is greater than the size of the overview size times maxRatio.\r\n   *\r\n   * If the map extent was not reset, the box size can fits in the defined\r\n   * ratio sizes. This method then checks if is contained inside the overview\r\n   * map current extent. If not, recenter the overview map to the current\r\n   * main map center location.\r\n   * @private\r\n   */\r\n  validateExtent_() {\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    if (!map.isRendered() || !ovmap.isRendered()) {\r\n      return;\r\n    }\r\n\r\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n\r\n    const view = map.getView();\r\n    const extent = view.calculateExtent(mapSize);\r\n\r\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\r\n\r\n    const ovview = ovmap.getView();\r\n    const ovextent = ovview.calculateExtent(ovmapSize);\r\n\r\n    const topLeftPixel =\r\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\r\n    const bottomRightPixel =\r\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\r\n\r\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\r\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\r\n\r\n    const ovmapWidth = ovmapSize[0];\r\n    const ovmapHeight = ovmapSize[1];\r\n\r\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\r\n        boxHeight < ovmapHeight * MIN_RATIO ||\r\n        boxWidth > ovmapWidth * MAX_RATIO ||\r\n        boxHeight > ovmapHeight * MAX_RATIO) {\r\n      this.resetExtent_();\r\n    } else if (!containsExtent(ovextent, extent)) {\r\n      this.recenter_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the overview map extent to half calculated min and max ratio times\r\n   * the extent of the main map.\r\n   * @private\r\n   */\r\n  resetExtent_() {\r\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\r\n      return;\r\n    }\r\n\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n\r\n    const view = map.getView();\r\n    const extent = view.calculateExtent(mapSize);\r\n\r\n    const ovview = ovmap.getView();\r\n\r\n    // get how many times the current map overview could hold different\r\n    // box sizes using the min and max ratio, pick the step in the middle used\r\n    // to calculate the extent from the main map to set it to the overview map,\r\n    const steps = Math.log(\r\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\r\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\r\n    scaleFromCenter(extent, ratio);\r\n    ovview.fit(extent);\r\n  }\r\n\r\n  /**\r\n   * Set the center of the overview map to the map center without changing its\r\n   * resolution.\r\n   * @private\r\n   */\r\n  recenter_() {\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    const view = map.getView();\r\n\r\n    const ovview = ovmap.getView();\r\n\r\n    ovview.setCenter(view.getCenter());\r\n  }\r\n\r\n  /**\r\n   * Update the box using the main map extent\r\n   * @private\r\n   */\r\n  updateBox_() {\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    if (!map.isRendered() || !ovmap.isRendered()) {\r\n      return;\r\n    }\r\n\r\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n\r\n    const view = map.getView();\r\n\r\n    const ovview = ovmap.getView();\r\n\r\n    const rotation = view.getRotation();\r\n\r\n    const overlay = this.boxOverlay_;\r\n    const box = this.boxOverlay_.getElement();\r\n    const extent = view.calculateExtent(mapSize);\r\n    const ovresolution = ovview.getResolution();\r\n    const bottomLeft = getBottomLeft(extent);\r\n    const topRight = getTopRight(extent);\r\n\r\n    // set position using bottom left coordinates\r\n    const rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\r\n    overlay.setPosition(rotateBottomLeft);\r\n\r\n    // set box size calculated from map extent size and overview map resolution\r\n    if (box) {\r\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\r\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} rotation Target rotation.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\r\n   * @private\r\n   */\r\n  calculateCoordinateRotate_(rotation, coordinate) {\r\n    let coordinateRotate;\r\n\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n\r\n    const currentCenter = view.getCenter();\r\n\r\n    if (currentCenter) {\r\n      coordinateRotate = [\r\n        coordinate[0] - currentCenter[0],\r\n        coordinate[1] - currentCenter[1]\r\n      ];\r\n      rotateCoordinate(coordinateRotate, rotation);\r\n      addCoordinate(coordinateRotate, currentCenter);\r\n    }\r\n    return coordinateRotate;\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleToggle_() {\r\n    this.element.classList.toggle(CLASS_COLLAPSED);\r\n    if (this.collapsed_) {\r\n      replaceNode(this.collapseLabel_, this.label_);\r\n    } else {\r\n      replaceNode(this.label_, this.collapseLabel_);\r\n    }\r\n    this.collapsed_ = !this.collapsed_;\r\n\r\n    // manage overview map if it had not been rendered before and control\r\n    // is expanded\r\n    const ovmap = this.ovmap_;\r\n    if (!this.collapsed_ && !ovmap.isRendered()) {\r\n      ovmap.updateSize();\r\n      this.resetExtent_();\r\n      listenOnce(ovmap, MapEventType.POSTRENDER,\r\n        function(event) {\r\n          this.updateBox_();\r\n        },\r\n        this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return `true` if the overview map is collapsible, `false` otherwise.\r\n   * @return {boolean} True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  getCollapsible() {\r\n    return this.collapsible_;\r\n  }\r\n\r\n  /**\r\n   * Set whether the overview map should be collapsible.\r\n   * @param {boolean} collapsible True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  setCollapsible(collapsible) {\r\n    if (this.collapsible_ === collapsible) {\r\n      return;\r\n    }\r\n    this.collapsible_ = collapsible;\r\n    this.element.classList.toggle('ol-uncollapsible');\r\n    if (!collapsible && this.collapsed_) {\r\n      this.handleToggle_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapse or expand the overview map according to the passed parameter. Will\r\n   * not do anything if the overview map isn't collapsible or if the current\r\n   * collapsed state is already the one requested.\r\n   * @param {boolean} collapsed True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  setCollapsed(collapsed) {\r\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n      return;\r\n    }\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * Determine if the overview map is collapsed.\r\n   * @return {boolean} The overview map is collapsed.\r\n   * @api\r\n   */\r\n  getCollapsed() {\r\n    return this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * Return the overview map.\r\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\r\n   * @api\r\n   */\r\n  getOverviewMap() {\r\n    return this.ovmap_;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Update the overview map element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {OverviewMap}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  this.validateExtent_();\r\n  this.updateBox_();\r\n}\r\n\r\n\r\nexport default OverviewMap;\r\n","/**\r\n * @module ol/control/ScaleLine\r\n */\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {assert} from '../asserts.js';\r\nimport Control from './Control.js';\r\nimport {CLASS_UNSELECTABLE} from '../css.js';\r\nimport {listen} from '../events.js';\r\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\r\nimport ProjUnits from '../proj/Units.js';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst UNITS_PROP = 'units';\r\n\r\n/**\r\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\r\n * `'nautical'`, `'metric'`, `'us'`.\r\n * @enum {string}\r\n */\r\nexport const Units = {\r\n  DEGREES: 'degrees',\r\n  IMPERIAL: 'imperial',\r\n  NAUTICAL: 'nautical',\r\n  METRIC: 'metric',\r\n  US: 'us'\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nconst LEADING_DIGITS = [1, 2, 5];\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-scale-line'] CSS Class name.\r\n * @property {number} [minWidth=64] Minimum width in pixels.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {Units|string} [units='metric'] Units.\r\n * @property {boolean} [bar=false] Render scalebars instead of a line.\r\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\r\n * for best results. Only applies when `bar` is `true`.\r\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\r\n * when `bar` is `true`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control displaying rough y-axis distances, calculated for the center of the\r\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\r\n * projection in OpenLayers), the scale is valid for all directions.\r\n * No scale line will be shown when the y-axis distance of a pixel at the\r\n * viewport center cannot be calculated in the view projection.\r\n * By default the scale line will show in the bottom left portion of the map,\r\n * but this can be changed by using the css selector `.ol-scale-line`.\r\n * When specifying `bar` as `true`, a scalebar will be rendered instead\r\n * of a scaleline.\r\n *\r\n * @api\r\n */\r\nclass ScaleLine extends Control {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Scale line options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const className = options.className !== undefined ? options.className :\r\n      options.bar ? 'ol-scale-bar' : 'ol-scale-line';\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.innerElement_ = document.createElement('div');\r\n    this.innerElement_.className = className + '-inner';\r\n\r\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\r\n    this.element.appendChild(this.innerElement_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../View.js\").State}\r\n     */\r\n    this.viewState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderedWidth_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.renderedHTML_ = '';\r\n\r\n    listen(\r\n      this, getChangeEventType(UNITS_PROP),\r\n      this.handleUnitsChanged_, this);\r\n\r\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.scaleBar_ = options.bar || false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.scaleBarSteps_ = options.steps || 4;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.scaleBarText_ = options.text || false;\r\n\r\n  }\r\n\r\n  /**\r\n   * Return the units to use in the scale line.\r\n   * @return {Units} The units\r\n   * to use in the scale line.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getUnits() {\r\n    return this.get(UNITS_PROP);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleUnitsChanged_() {\r\n    this.updateElement_();\r\n  }\r\n\r\n  /**\r\n   * Set the units to use in the scale line.\r\n   * @param {Units} units The units to use in the scale line.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setUnits(units) {\r\n    this.set(UNITS_PROP, units);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateElement_() {\r\n    const viewState = this.viewState_;\r\n\r\n    if (!viewState) {\r\n      if (this.renderedVisible_) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const center = viewState.center;\r\n    const projection = viewState.projection;\r\n    const units = this.getUnits();\r\n    const pointResolutionUnits = units == Units.DEGREES ?\r\n      ProjUnits.DEGREES :\r\n      ProjUnits.METERS;\r\n    let pointResolution =\r\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\r\n\r\n    let nominalCount = this.minWidth_ * pointResolution;\r\n    let suffix = '';\r\n    if (units == Units.DEGREES) {\r\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\r\n      nominalCount *= metersPerDegree;\r\n      if (nominalCount < metersPerDegree / 60) {\r\n        suffix = '\\u2033'; // seconds\r\n        pointResolution *= 3600;\r\n      } else if (nominalCount < metersPerDegree) {\r\n        suffix = '\\u2032'; // minutes\r\n        pointResolution *= 60;\r\n      } else {\r\n        suffix = '\\u00b0'; // degrees\r\n      }\r\n    } else if (units == Units.IMPERIAL) {\r\n      if (nominalCount < 0.9144) {\r\n        suffix = 'in';\r\n        pointResolution /= 0.0254;\r\n      } else if (nominalCount < 1609.344) {\r\n        suffix = 'ft';\r\n        pointResolution /= 0.3048;\r\n      } else {\r\n        suffix = 'mi';\r\n        pointResolution /= 1609.344;\r\n      }\r\n    } else if (units == Units.NAUTICAL) {\r\n      pointResolution /= 1852;\r\n      suffix = 'nm';\r\n    } else if (units == Units.METRIC) {\r\n      if (nominalCount < 0.001) {\r\n        suffix = 'μm';\r\n        pointResolution *= 1000000;\r\n      } else if (nominalCount < 1) {\r\n        suffix = 'mm';\r\n        pointResolution *= 1000;\r\n      } else if (nominalCount < 1000) {\r\n        suffix = 'm';\r\n      } else {\r\n        suffix = 'km';\r\n        pointResolution /= 1000;\r\n      }\r\n    } else if (units == Units.US) {\r\n      if (nominalCount < 0.9144) {\r\n        suffix = 'in';\r\n        pointResolution *= 39.37;\r\n      } else if (nominalCount < 1609.344) {\r\n        suffix = 'ft';\r\n        pointResolution /= 0.30480061;\r\n      } else {\r\n        suffix = 'mi';\r\n        pointResolution /= 1609.3472;\r\n      }\r\n    } else {\r\n      assert(false, 33); // Invalid units\r\n    }\r\n\r\n    let i = 3 * Math.floor(\r\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\r\n    let count, width, decimalCount;\r\n    while (true) {\r\n      decimalCount = Math.floor(i / 3);\r\n      const decimal = Math.pow(10, decimalCount);\r\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\r\n      width = Math.round(count / pointResolution);\r\n      if (isNaN(width)) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n        return;\r\n      } else if (width >= this.minWidth_) {\r\n        break;\r\n      }\r\n      ++i;\r\n    }\r\n    let html;\r\n    if (this.scaleBar_) {\r\n      html = this.createScaleBar(width, count, suffix);\r\n    } else {\r\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\r\n    }\r\n\r\n    if (this.renderedHTML_ != html) {\r\n      this.innerElement_.innerHTML = html;\r\n      this.renderedHTML_ = html;\r\n    }\r\n\r\n    if (this.renderedWidth_ != width) {\r\n      this.innerElement_.style.width = width + 'px';\r\n      this.renderedWidth_ = width;\r\n    }\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.element.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} width The current width of the scalebar.\r\n   * @param {number} scale The current scale.\r\n   * @param {string} suffix The suffix to append to the scale text.\r\n   * @returns {string} The stringified HTML of the scalebar.\r\n   */\r\n  createScaleBar(width, scale, suffix) {\r\n    const mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\r\n    const scaleSteps = [];\r\n    const stepWidth = width / this.scaleBarSteps_;\r\n    let backgroundColor = '#ffffff';\r\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\r\n      if (i === 0) {\r\n        // create the first marker at position 0\r\n        scaleSteps.push(this.createMarker('absolute', i));\r\n      }\r\n      scaleSteps.push(\r\n        '<div>' +\r\n          '<div ' +\r\n            'class=\"ol-scale-singlebar\" ' +\r\n            'style=' +\r\n              '\"width: ' + stepWidth + 'px;' +\r\n              'background-color: ' + backgroundColor + ';\"' +\r\n          '>' +\r\n          '</div>' +\r\n          this.createMarker('relative', i) +\r\n          /*render text every second step, except when only 2 steps */\r\n          (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\r\n            this.createStepText(i, width, false, scale, suffix) :\r\n            ''\r\n          ) +\r\n        '</div>'\r\n      );\r\n      if (i === this.scaleBarSteps_ - 1) {\r\n        {/*render text at the end */}\r\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\r\n      }\r\n      // switch colors of steps between black and white\r\n      if (backgroundColor === '#ffffff') {\r\n        backgroundColor = '#000000';\r\n      } else {\r\n        backgroundColor = '#ffffff';\r\n      }\r\n    }\r\n\r\n    let scaleBarText;\r\n    if (this.scaleBarText_) {\r\n      scaleBarText = '<div ' +\r\n      'class=\"ol-scale-text\" ' +\r\n      'style=\"width: ' + width + 'px;\">' +\r\n      mapScale +\r\n    '</div>';\r\n    } else {\r\n      scaleBarText = '';\r\n    }\r\n    const container = '<div ' +\r\n      'style=\"display: flex;\">' +\r\n      scaleBarText +\r\n      scaleSteps.join('') +\r\n    '</div>';\r\n    return container;\r\n  }\r\n\r\n  /**\r\n   * Creates a marker at given position\r\n   * @param {string} position - The position, absolute or relative\r\n   * @param {number} i - The iterator\r\n   * @returns {string} The stringified div containing the marker\r\n   */\r\n  createMarker(position, i) {\r\n    const top = position === 'absolute' ? 3 : -10;\r\n    return '<div ' +\r\n        'class=\"ol-scale-step-marker\" ' +\r\n        'style=\"position: ' + position + ';' +\r\n          'top: ' + top + 'px;\"' +\r\n      '></div>';\r\n  }\r\n\r\n  /**\r\n   * Creates the label for a marker marker at given position\r\n   * @param {number} i - The iterator\r\n   * @param {number} width - The width the scalebar will currently use\r\n   * @param {boolean} isLast - Flag indicating if we add the last step text\r\n   * @param {number} scale - The current scale for the whole scalebar\r\n   * @param {string} suffix - The suffix for the scale\r\n   * @returns {string} The stringified div containing the step text\r\n   */\r\n  createStepText(i, width, isLast, scale, suffix) {\r\n    const length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\r\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\r\n    const margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\r\n    const minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\r\n    return '<div ' +\r\n      'class=\"ol-scale-step-text\" ' +\r\n      'style=\"' +\r\n        'margin-left: ' + margin + 'px;' +\r\n        'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\r\n        'min-width: ' + minWidth + 'px;' +\r\n        'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\r\n      '>' +\r\n      lengthString +\r\n    '</div>';\r\n  }\r\n\r\n  /**\r\n   * Returns the appropriate scale for the given resolution and units.\r\n   * @return {number} The appropriate scale.\r\n   */\r\n  getScaleForResolution() {\r\n    const resolution = this.getMap().getView().getResolution();\r\n    const dpi = 25.4 / 0.28;\r\n    const mpu = this.viewState_.projection.getMetersPerUnit();\r\n    const inchesPerMeter = 39.37;\r\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\r\n  }\r\n}\r\n\r\n/**\r\n * Update the scale line element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {ScaleLine}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  const frameState = mapEvent.frameState;\r\n  if (!frameState) {\r\n    this.viewState_ = null;\r\n  } else {\r\n    this.viewState_ = frameState.viewState;\r\n  }\r\n  this.updateElement_();\r\n}\r\n\r\n\r\nexport default ScaleLine;\r\n","/**\r\n * @module ol/control/ZoomSlider\r\n */\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {stopPropagation} from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {clamp} from '../math.js';\r\nimport PointerEventType from '../pointer/EventType.js';\r\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\r\n\r\n\r\n/**\r\n * The enum for available directions.\r\n *\r\n * @enum {number}\r\n */\r\nconst Direction = {\r\n  VERTICAL: 0,\r\n  HORIZONTAL: 1\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoomslider'] CSS class name.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A slider type of control for zooming.\r\n *\r\n * Example:\r\n *\r\n *     map.addControl(new ZoomSlider());\r\n *\r\n * @api\r\n */\r\nclass ZoomSlider extends Control {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Zoom slider options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render || render\r\n    });\r\n\r\n    /**\r\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\r\n      * @private\r\n      */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * Will hold the current resolution of the view.\r\n     *\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.currentResolution_ = undefined;\r\n\r\n    /**\r\n     * The direction of the slider. Will be determined from actual display of the\r\n     * container and defaults to Direction.VERTICAL.\r\n     *\r\n     * @type {Direction}\r\n     * @private\r\n     */\r\n    this.direction_ = Direction.VERTICAL;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.heightLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.widthLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.startX_;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.startY_;\r\n\r\n    /**\r\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\r\n     * is called.\r\n     * @type {import(\"../size.js\").Size}\r\n     * @private\r\n     */\r\n    this.thumbSize_ = null;\r\n\r\n    /**\r\n     * Whether the slider is initialized.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.sliderInitialized_ = false;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    const className = options.className !== undefined ? options.className : 'ol-zoomslider';\r\n    const thumbElement = document.createElement('button');\r\n    thumbElement.setAttribute('type', 'button');\r\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\r\n    const containerElement = this.element;\r\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    containerElement.appendChild(thumbElement);\r\n    /**\r\n     * @type {PointerEventHandler}\r\n     * @private\r\n     */\r\n    this.dragger_ = new PointerEventHandler(containerElement);\r\n\r\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\r\n      this.handleDraggerStart_, this);\r\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\r\n      this.handleDraggerDrag_, this);\r\n    listen(this.dragger_, PointerEventType.POINTERUP,\r\n      this.handleDraggerEnd_, this);\r\n\r\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\r\n    listen(thumbElement, EventType.CLICK, stopPropagation);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.dragger_.dispose();\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    if (map) {\r\n      map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the slider element. This will determine and set this controls\r\n   * direction_ and also constrain the dragging of the thumb to always be within\r\n   * the bounds of the container.\r\n   *\r\n   * @private\r\n   */\r\n  initSlider_() {\r\n    const container = this.element;\r\n    const containerSize = {\r\n      width: container.offsetWidth, height: container.offsetHeight\r\n    };\r\n\r\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\r\n    const computedStyle = getComputedStyle(thumb);\r\n    const thumbWidth = thumb.offsetWidth +\r\n        parseFloat(computedStyle['marginRight']) +\r\n        parseFloat(computedStyle['marginLeft']);\r\n    const thumbHeight = thumb.offsetHeight +\r\n        parseFloat(computedStyle['marginTop']) +\r\n        parseFloat(computedStyle['marginBottom']);\r\n    this.thumbSize_ = [thumbWidth, thumbHeight];\r\n\r\n    if (containerSize.width > containerSize.height) {\r\n      this.direction_ = Direction.HORIZONTAL;\r\n      this.widthLimit_ = containerSize.width - thumbWidth;\r\n    } else {\r\n      this.direction_ = Direction.VERTICAL;\r\n      this.heightLimit_ = containerSize.height - thumbHeight;\r\n    }\r\n    this.sliderInitialized_ = true;\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The browser event to handle.\r\n   * @private\r\n   */\r\n  handleContainerClick_(event) {\r\n    const view = this.getMap().getView();\r\n\r\n    const relativePosition = this.getRelativePosition_(\r\n      event.offsetX - this.thumbSize_[0] / 2,\r\n      event.offsetY - this.thumbSize_[1] / 2);\r\n\r\n    const resolution = this.getResolutionForPosition_(relativePosition);\r\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\r\n\r\n    view.animate({\r\n      zoom: zoom,\r\n      duration: this.duration_,\r\n      easing: easeOut\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle dragger start events.\r\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerStart_(event) {\r\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\r\n      const element = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n      this.getMap().getView().beginInteraction();\r\n      this.startX_ = event.clientX - parseFloat(element.style.left);\r\n      this.startY_ = event.clientY - parseFloat(element.style.top);\r\n      this.dragging_ = true;\r\n\r\n      if (this.dragListenerKeys_.length === 0) {\r\n        const drag = this.handleDraggerDrag_;\r\n        const end = this.handleDraggerEnd_;\r\n        this.dragListenerKeys_.push(\r\n          listen(document, EventType.MOUSEMOVE, drag, this),\r\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\r\n          listen(document, EventType.MOUSEUP, end, this),\r\n          listen(document, PointerEventType.POINTERUP, end, this)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dragger drag events.\r\n   *\r\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerDrag_(event) {\r\n    if (this.dragging_) {\r\n      const deltaX = event.clientX - this.startX_;\r\n      const deltaY = event.clientY - this.startY_;\r\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\r\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\r\n      this.getMap().getView().setResolution(this.currentResolution_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dragger end events.\r\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerEnd_(event) {\r\n    if (this.dragging_) {\r\n      const view = this.getMap().getView();\r\n      view.endInteraction();\r\n\r\n      this.dragging_ = false;\r\n      this.startX_ = undefined;\r\n      this.startY_ = undefined;\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Positions the thumb inside its container according to the given resolution.\r\n   *\r\n   * @param {number} res The res.\r\n   * @private\r\n   */\r\n  setThumbPosition_(res) {\r\n    const position = this.getPositionForResolution_(res);\r\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n\r\n    if (this.direction_ == Direction.HORIZONTAL) {\r\n      thumb.style.left = this.widthLimit_ * position + 'px';\r\n    } else {\r\n      thumb.style.top = this.heightLimit_ * position + 'px';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates the relative position of the thumb given x and y offsets.  The\r\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\r\n   * in pixel units within the dragger limits.\r\n   *\r\n   * @param {number} x Pixel position relative to the left of the slider.\r\n   * @param {number} y Pixel position relative to the top of the slider.\r\n   * @return {number} The relative position of the thumb.\r\n   * @private\r\n   */\r\n  getRelativePosition_(x, y) {\r\n    let amount;\r\n    if (this.direction_ === Direction.HORIZONTAL) {\r\n      amount = x / this.widthLimit_;\r\n    } else {\r\n      amount = y / this.heightLimit_;\r\n    }\r\n    return clamp(amount, 0, 1);\r\n  }\r\n\r\n  /**\r\n   * Calculates the corresponding resolution of the thumb given its relative\r\n   * position (where 0 is the minimum and 1 is the maximum).\r\n   *\r\n   * @param {number} position The relative position of the thumb.\r\n   * @return {number} The corresponding resolution.\r\n   * @private\r\n   */\r\n  getResolutionForPosition_(position) {\r\n    const fn = this.getMap().getView().getResolutionForValueFunction();\r\n    return fn(1 - position);\r\n  }\r\n\r\n  /**\r\n   * Determines the relative position of the slider for the given resolution.  A\r\n   * relative position of 0 corresponds to the minimum view resolution.  A\r\n   * relative position of 1 corresponds to the maximum view resolution.\r\n   *\r\n   * @param {number} res The resolution.\r\n   * @return {number} The relative position value (between 0 and 1).\r\n   * @private\r\n   */\r\n  getPositionForResolution_(res) {\r\n    const fn = this.getMap().getView().getValueForResolutionFunction();\r\n    return clamp(1 - fn(res), 0, 1);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Update the zoomslider element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {ZoomSlider}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  if (!mapEvent.frameState) {\r\n    return;\r\n  }\r\n  if (!this.sliderInitialized_) {\r\n    this.initSlider_();\r\n  }\r\n  const res = mapEvent.frameState.viewState.resolution;\r\n  this.currentResolution_ = res;\r\n  this.setThumbPosition_(res);\r\n}\r\n\r\n\r\nexport default ZoomSlider;\r\n","/**\r\n * @module ol/control/ZoomToExtent\r\n */\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoom-extent'] Class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\r\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\r\n * extent of the view projection is used.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A button control which, when pressed, changes the map view to a specific\r\n * extent. To style this control use the css selector `.ol-zoom-extent`.\r\n *\r\n * @api\r\n */\r\nclass ZoomToExtent extends Control {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @protected\r\n     */\r\n    this.extent = options.extent ? options.extent : null;\r\n\r\n    const className = options.className !== undefined ? options.className : 'ol-zoom-extent';\r\n\r\n    const label = options.label !== undefined ? options.label : 'E';\r\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\r\n    const button = document.createElement('button');\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(\r\n      typeof label === 'string' ? document.createTextNode(label) : label\r\n    );\r\n\r\n    listen(button, EventType.CLICK, this.handleClick_, this);\r\n\r\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(button);\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleZoomToExtent();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleZoomToExtent() {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    const extent = !this.extent ? view.getProjection().getExtent() : this.extent;\r\n    view.fit(extent);\r\n  }\r\n}\r\n\r\nexport default ZoomToExtent;\r\n","/**\r\n * @module ol/control\r\n */\r\nimport Collection from './Collection.js';\r\nimport Attribution from './control/Attribution.js';\r\nimport Rotate from './control/Rotate.js';\r\nimport Zoom from './control/Zoom.js';\r\n\r\nexport {default as Attribution} from './control/Attribution.js';\r\nexport {default as Control} from './control/Control.js';\r\nexport {default as FullScreen} from './control/FullScreen.js';\r\nexport {default as MousePosition} from './control/MousePosition.js';\r\nexport {default as OverviewMap} from './control/OverviewMap.js';\r\nexport {default as Rotate} from './control/Rotate.js';\r\nexport {default as ScaleLine} from './control/ScaleLine.js';\r\nexport {default as Zoom} from './control/Zoom.js';\r\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\r\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [attribution=true] Include\r\n * {@link module:ol/control/Attribution~Attribution}.\r\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\r\n * Options for {@link module:ol/control/Attribution~Attribution}.\r\n * @property {boolean} [rotate=true] Include\r\n * {@link module:ol/control/Rotate~Rotate}.\r\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\r\n * for {@link module:ol/control/Rotate~Rotate}.\r\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\r\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\r\n * {@link module:ol/control/Zoom~Zoom}.\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Set of controls included in maps by default. Unless configured otherwise,\r\n * this returns a collection containing an instance of each of the following\r\n * controls:\r\n * * {@link module:ol/control/Zoom~Zoom}\r\n * * {@link module:ol/control/Rotate~Rotate}\r\n * * {@link module:ol/control/Attribution~Attribution}\r\n *\r\n * @param {DefaultsOptions=} opt_options\r\n * Defaults options.\r\n * @return {Collection<import(\"./control/Control.js\").default>}\r\n * Controls.\r\n * @api\r\n */\r\nexport function defaults(opt_options) {\r\n\r\n  const options = opt_options ? opt_options : {};\r\n\r\n  const controls = new Collection();\r\n\r\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\r\n  if (zoomControl) {\r\n    controls.push(new Zoom(options.zoomOptions));\r\n  }\r\n\r\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\r\n  if (rotateControl) {\r\n    controls.push(new Rotate(options.rotateOptions));\r\n  }\r\n\r\n  const attributionControl = options.attribution !== undefined ?\r\n    options.attribution : true;\r\n  if (attributionControl) {\r\n    controls.push(new Attribution(options.attributionOptions));\r\n  }\r\n\r\n  return controls;\r\n}\r\n","/**\r\n * @module ol/Kinetic\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Implementation of inertial deceleration for map movement.\r\n *\r\n * @api\r\n */\r\nclass Kinetic {\r\n\r\n  /**\r\n   * @param {number} decay Rate of decay (must be negative).\r\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\r\n   * @param {number} delay Delay to consider to calculate the kinetic\r\n   *     initial values (milliseconds).\r\n   */\r\n  constructor(decay, minVelocity, delay) {\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.decay_ = decay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minVelocity_ = minVelocity;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delay_ = delay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.points_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.angle_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  begin() {\r\n    this.points_.length = 0;\r\n    this.angle_ = 0;\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   */\r\n  update(x, y) {\r\n    this.points_.push(x, y, Date.now());\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether we should do kinetic animation.\r\n   */\r\n  end() {\r\n    if (this.points_.length < 6) {\r\n      // at least 2 points are required (i.e. there must be at least 6 elements\r\n      // in the array)\r\n      return false;\r\n    }\r\n    const delay = Date.now() - this.delay_;\r\n    const lastIndex = this.points_.length - 3;\r\n    if (this.points_[lastIndex + 2] < delay) {\r\n      // the last tracked point is too old, which means that the user stopped\r\n      // panning before releasing the map\r\n      return false;\r\n    }\r\n\r\n    // get the first point which still falls into the delay time\r\n    let firstIndex = lastIndex - 3;\r\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\r\n      firstIndex -= 3;\r\n    }\r\n\r\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\r\n    // we don't want a duration of 0 (divide by zero)\r\n    // we also make sure the user panned for a duration of at least one frame\r\n    // (1/60s) to compute sane displacement values\r\n    if (duration < 1000 / 60) {\r\n      return false;\r\n    }\r\n\r\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\r\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\r\n    this.angle_ = Math.atan2(dy, dx);\r\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\r\n    return this.initialVelocity_ > this.minVelocity_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Total distance travelled (pixels).\r\n   */\r\n  getDistance() {\r\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Angle of the kinetic panning animation (radians).\r\n   */\r\n  getAngle() {\r\n    return this.angle_;\r\n  }\r\n}\r\n\r\nexport default Kinetic;\r\n","/**\r\n * @module ol/interaction/Property\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  ACTIVE: 'active'\r\n};\r\n","/**\r\n * @module ol/interaction/Interaction\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport {easeOut, linear} from '../easing.js';\r\nimport InteractionProperty from './Property.js';\r\n\r\n\r\n/**\r\n * Object literal with config options for interactions.\r\n * @typedef {Object} InteractionOptions\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. If the function returns a falsy value, propagation of\r\n * the event to other interactions in the map's interactions chain will be\r\n * prevented (this includes functions with no explicit return). The interactions\r\n * are traversed in reverse order of the interactions collection of the map.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * User actions that change the state of the map. Some are similar to controls,\r\n * but are not associated with a DOM element.\r\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\r\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\r\n * by a keyboard event not a button element event.\r\n * Although interactions do not have a DOM element, some of them do render\r\n * vectors and so are visible on the screen.\r\n * @api\r\n */\r\nclass Interaction extends BaseObject {\r\n  /**\r\n   * @param {InteractionOptions} options Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    if (options.handleEvent) {\r\n      this.handleEvent = options.handleEvent;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = null;\r\n\r\n    this.setActive(true);\r\n  }\r\n\r\n  /**\r\n   * Return whether the interaction is currently active.\r\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getActive() {\r\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this interaction.\r\n   * @return {import(\"../PluggableMap.js\").default} Map.\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @api\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the interaction.\r\n   * @param {boolean} active Active.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setActive(active) {\r\n    this.set(InteractionProperty.ACTIVE, active);\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  setMap(map) {\r\n    this.map_ = map;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function pan(view, delta, opt_duration) {\r\n  const currentCenter = view.getCenter();\r\n  if (currentCenter) {\r\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\r\n    view.animate_({\r\n      duration: opt_duration !== undefined ? opt_duration : 250,\r\n      easing: linear,\r\n      center: view.getConstrainedCenter(center)\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number} delta Delta from previous zoom level.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\r\n  const currentZoom = view.getZoom();\r\n\r\n  if (currentZoom === undefined) {\r\n    return;\r\n  }\r\n\r\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\r\n  const newResolution = view.getResolutionForZoom(newZoom);\r\n\r\n  if (view.getAnimating()) {\r\n    view.cancelAnimations();\r\n  }\r\n  view.animate({\r\n    resolution: newResolution,\r\n    anchor: opt_anchor,\r\n    duration: opt_duration !== undefined ? opt_duration : 250,\r\n    easing: easeOut\r\n  });\r\n}\r\n\r\nexport default Interaction;\r\n","/**\r\n * @module ol/interaction/DoubleClickZoom\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [delta=1] The zoom delta applied on each double click.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom by double-clicking on the map.\r\n * @api\r\n */\r\nclass DoubleClickZoom extends Interaction {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super({\r\n      handleEvent: handleEvent\r\n    });\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\r\n * doubleclick) and eventually zooms the map.\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {DoubleClickZoom}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  let stopEvent = false;\r\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\r\n    const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\r\n    const map = mapBrowserEvent.map;\r\n    const anchor = mapBrowserEvent.coordinate;\r\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\r\n    const view = map.getView();\r\n    zoomByDelta(view, delta, anchor, this.duration_);\r\n    mapBrowserEvent.preventDefault();\r\n    stopEvent = true;\r\n  }\r\n  return !stopEvent;\r\n}\r\n\r\nexport default DoubleClickZoom;\r\n","/**\r\n * @module ol/events/condition\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport {assert} from '../asserts.js';\r\nimport {TRUE, FALSE} from '../functions.js';\r\nimport {WEBKIT, MAC} from '../has.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\r\n * `{boolean}`. If the condition is met, true should be returned.\r\n *\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\r\n */\r\n\r\n\r\n/**\r\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\r\n * additionally the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt key is pressed.\r\n * @api\r\n */\r\nexport const altKeyOnly = function(mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return (\r\n    originalEvent.altKey &&\r\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n      !originalEvent.shiftKey);\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\r\n * (e.g. when additionally the platform-modifier-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt and shift keys are pressed.\r\n * @api\r\n */\r\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return (\r\n    originalEvent.altKey &&\r\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n      originalEvent.shiftKey);\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the map has the focus. This condition requires a map target\r\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\r\n * @return {boolean} The map has the focus.\r\n * @api\r\n */\r\nexport const focus = function(event) {\r\n  return event.target.getTargetElement() === document.activeElement;\r\n};\r\n\r\n\r\n/**\r\n * Return always true.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True.\r\n * @api\r\n */\r\nexport const always = TRUE;\r\n\r\n\r\n/**\r\n * Return `true` if the event is a `click` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `click` event.\r\n * @api\r\n */\r\nexport const click = function(mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the event has an \"action\"-producing mouse button.\r\n *\r\n * By definition, this includes left-click on windows/linux, and left-click\r\n * without the ctrl key on Macs.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} The result.\r\n */\r\nexport const mouseActionButton = function(mapBrowserEvent) {\r\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\r\n  return originalEvent.button == 0 &&\r\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\r\n};\r\n\r\n\r\n/**\r\n * Return always false.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} False.\r\n * @api\r\n */\r\nexport const never = FALSE;\r\n\r\n\r\n/**\r\n * Return `true` if the browser event is a `pointermove` event, `false`\r\n * otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the browser event is a `pointermove` event.\r\n * @api\r\n */\r\nexport const pointerMove = function(mapBrowserEvent) {\r\n  return mapBrowserEvent.type == 'pointermove';\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `singleclick` event.\r\n * @api\r\n */\r\nexport const singleClick = function(mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `dblclick` event.\r\n * @api\r\n */\r\nexport const doubleClick = function(mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\r\n * pressed.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if there no modifier keys are pressed.\r\n * @api\r\n */\r\nexport const noModifierKeys = function(mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return (\r\n    !originalEvent.altKey &&\r\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n      !originalEvent.shiftKey);\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\r\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\r\n * the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the platform modifier key is pressed.\r\n * @api\r\n */\r\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return !originalEvent.altKey &&\r\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey;\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\r\n * additionally the alt-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the shift key is pressed.\r\n * @api\r\n */\r\nexport const shiftKeyOnly = function(mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return (\r\n    !originalEvent.altKey &&\r\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n      originalEvent.shiftKey);\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\r\n * `<select>`- or `<textarea>`-element, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if the target element is not editable.\r\n * @api\r\n */\r\nexport const targetNotEditable = function(mapBrowserEvent) {\r\n  const target = mapBrowserEvent.originalEvent.target;\r\n  const tagName = /** @type {Element} */ (target).tagName;\r\n  return (\r\n    tagName !== 'INPUT' &&\r\n      tagName !== 'SELECT' &&\r\n      tagName !== 'TEXTAREA');\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the event originates from a mouse device.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a mouse device.\r\n * @api\r\n */\r\nexport const mouseOnly = function(mapBrowserEvent) {\r\n  const pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\r\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvent.pointerType == 'mouse';\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a touchable device.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a touchable device.\r\n * @api\r\n */\r\nexport const touchOnly = function(mapBrowserEvent) {\r\n  const pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\r\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvt.pointerType === 'touch';\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a digital pen.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a digital pen.\r\n * @api\r\n */\r\nexport const penOnly = function(mapBrowserEvent) {\r\n  const pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\r\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvt.pointerType === 'pen';\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a primary pointer in\r\n * contact with the surface or if the left mouse button is pressed.\r\n * See http://www.w3.org/TR/pointerevents/#button-states.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a primary pointer.\r\n * @api\r\n */\r\nexport const primaryAction = function(mapBrowserEvent) {\r\n  const pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\r\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\r\n};\r\n","/**\r\n * @module ol/interaction/Pointer\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport Interaction from './Interaction.js';\r\nimport {getValues} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\r\n * Function handling \"down\" events. If the function returns `true` then a drag\r\n * sequence is started.\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\r\n * Function handling \"drag\" events. This function is called on \"move\" events\r\n * during a drag sequence.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. The function may return `false` to prevent the\r\n * propagation of the event to other interactions in the map's interactions\r\n * chain.\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\r\n * Function handling \"move\" events. This function is called on \"move\" events,\r\n * also during a drag sequence (so during a drag sequence both the\r\n * `handleDragEvent` function and this function are called).\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\r\n *  Function handling \"up\" events. If the function returns `false` then the\r\n * current drag sequence is stopped.\r\n * @property {function(boolean):boolean} [stopDown]\r\n * Should the down event be propagated to other interactions, or should be\r\n * stopped?\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class that calls user-defined functions on `down`, `move` and `up`\r\n * events. This class also manages \"drag sequences\".\r\n *\r\n * When the `handleDownEvent` user function returns `true` a drag sequence is\r\n * started. During a drag sequence the `handleDragEvent` user function is\r\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\r\n * user function is called and returns `false`.\r\n * @api\r\n */\r\nclass PointerInteraction extends Interaction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super(/** @type {import(\"./Interaction.js\").InteractionOptions} */ (options));\r\n\r\n    if (options.handleDownEvent) {\r\n      this.handleDownEvent = options.handleDownEvent;\r\n    }\r\n\r\n    if (options.handleDragEvent) {\r\n      this.handleDragEvent = options.handleDragEvent;\r\n    }\r\n\r\n    if (options.handleMoveEvent) {\r\n      this.handleMoveEvent = options.handleMoveEvent;\r\n    }\r\n\r\n    if (options.handleUpEvent) {\r\n      this.handleUpEvent = options.handleUpEvent;\r\n    }\r\n\r\n    if (options.stopDown) {\r\n      this.stopDown = options.stopDown;\r\n    }\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    this.handlingDownUpSequence = false;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\r\n     * @private\r\n     */\r\n    this.trackedPointers_ = {};\r\n\r\n    /**\r\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\r\n     * @protected\r\n     */\r\n    this.targetPointers = [];\r\n\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @protected\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @protected\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {}\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\r\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\r\n   * detected.\r\n   * @override\r\n   * @api\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\r\n      return true;\r\n    }\r\n\r\n    let stopEvent = false;\r\n    this.updateTrackedPointers_(mapBrowserEvent);\r\n    if (this.handlingDownUpSequence) {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\r\n        this.handleDragEvent(mapBrowserEvent);\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\r\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\r\n      }\r\n    } else {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\r\n        const handled = this.handleDownEvent(mapBrowserEvent);\r\n        if (handled) {\r\n          mapBrowserEvent.preventDefault();\r\n        }\r\n        this.handlingDownUpSequence = handled;\r\n        stopEvent = this.stopDown(handled);\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\r\n        this.handleMoveEvent(mapBrowserEvent);\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer move events.\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @protected\r\n   */\r\n  handleMoveEvent(mapBrowserEvent) {}\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @protected\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * This function is used to determine if \"down\" events should be propagated\r\n   * to other interactions or should be stopped.\r\n   * @param {boolean} handled Was the event handled by the interaction?\r\n   * @return {boolean} Should the `down` event be stopped?\r\n   */\r\n  stopDown(handled) {\r\n    return handled;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @private\r\n   */\r\n  updateTrackedPointers_(mapBrowserEvent) {\r\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\r\n      const event = mapBrowserEvent.pointerEvent;\r\n\r\n      const id = event.pointerId.toString();\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n        delete this.trackedPointers_[id];\r\n      } else if (mapBrowserEvent.type ==\r\n          MapBrowserEventType.POINTERDOWN) {\r\n        this.trackedPointers_[id] = event;\r\n      } else if (id in this.trackedPointers_) {\r\n        // update only when there was a pointerdown event for this pointer\r\n        this.trackedPointers_[id] = event;\r\n      }\r\n      this.targetPointers = getValues(this.trackedPointers_);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\r\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\r\n */\r\nexport function centroid(pointerEvents) {\r\n  const length = pointerEvents.length;\r\n  let clientX = 0;\r\n  let clientY = 0;\r\n  for (let i = 0; i < length; i++) {\r\n    clientX += pointerEvents[i].clientX;\r\n    clientY += pointerEvents[i].clientY;\r\n  }\r\n  return [clientX / length, clientY / length];\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\r\n *     or pointerup event.\r\n */\r\nfunction isPointerDraggingEvent(mapBrowserEvent) {\r\n  const type = mapBrowserEvent.type;\r\n  return type === MapBrowserEventType.POINTERDOWN ||\r\n    type === MapBrowserEventType.POINTERDRAG ||\r\n    type === MapBrowserEventType.POINTERUP;\r\n}\r\n\r\n\r\nexport default PointerInteraction;\r\n","/**\r\n * @module ol/interaction/DragPan\r\n */\r\nimport {scale as scaleCoordinate, rotate as rotateCoordinate} from '../coordinate.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {noModifierKeys, primaryAction} from '../events/condition.js';\r\nimport {FALSE} from '../functions.js';\r\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\r\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map by dragging the map.\r\n * @api\r\n */\r\nclass DragPan extends PointerInteraction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    super({\r\n      stopDown: FALSE\r\n    });\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Kinetic.js\").default|undefined}\r\n     */\r\n    this.kinetic_ = options.kinetic;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.lastCentroid = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.lastPointersCount_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.panning_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : defaultCondition;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.noKinetic_ = false;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!this.panning_) {\r\n      this.panning_ = true;\r\n      this.getMap().getView().beginInteraction();\r\n    }\r\n    const targetPointers = this.targetPointers;\r\n    const centroid = centroidFromPointers(targetPointers);\r\n    if (targetPointers.length == this.lastPointersCount_) {\r\n      if (this.kinetic_) {\r\n        this.kinetic_.update(centroid[0], centroid[1]);\r\n      }\r\n      if (this.lastCentroid) {\r\n        const delta = [\r\n          this.lastCentroid[0] - centroid[0],\r\n          centroid[1] - this.lastCentroid[1]\r\n        ];\r\n        const map = mapBrowserEvent.map;\r\n        const view = map.getView();\r\n        scaleCoordinate(delta, view.getResolution());\r\n        rotateCoordinate(delta, view.getRotation());\r\n        view.adjustCenter(delta);\r\n      }\r\n    } else if (this.kinetic_) {\r\n      // reset so we don't overestimate the kinetic energy after\r\n      // after one finger down, tiny drag, second finger down\r\n      this.kinetic_.begin();\r\n    }\r\n    this.lastCentroid = centroid;\r\n    this.lastPointersCount_ = targetPointers.length;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (this.targetPointers.length === 0) {\r\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\r\n        const distance = this.kinetic_.getDistance();\r\n        const angle = this.kinetic_.getAngle();\r\n        const center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\r\n        const centerpx = map.getPixelFromCoordinate(center);\r\n        const dest = map.getCoordinateFromPixel([\r\n          centerpx[0] - distance * Math.cos(angle),\r\n          centerpx[1] - distance * Math.sin(angle)\r\n        ]);\r\n        view.animate({\r\n          center: view.getConstrainedCenter(dest),\r\n          duration: 500,\r\n          easing: easeOut\r\n        });\r\n      }\r\n      if (this.panning_) {\r\n        this.panning_ = false;\r\n        view.endInteraction();\r\n      }\r\n      return false;\r\n    } else {\r\n      if (this.kinetic_) {\r\n        // reset so we don't overestimate the kinetic energy after\r\n        // after one finger up, tiny drag, second finger up\r\n        this.kinetic_.begin();\r\n      }\r\n      this.lastCentroid = null;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      this.lastCentroid = null;\r\n      // stop any current animation\r\n      if (view.getAnimating()) {\r\n        view.cancelAnimations();\r\n      }\r\n      if (this.kinetic_) {\r\n        this.kinetic_.begin();\r\n      }\r\n      // No kinetic as soon as more than one pointer on the screen is\r\n      // detected. This is to prevent nasty pans after pinch.\r\n      this.noKinetic_ = this.targetPointers.length > 1;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\r\n * @return {boolean} Combined condition result.\r\n */\r\nfunction defaultCondition(mapBrowserEvent) {\r\n  return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\r\n}\r\n\r\nexport default DragPan;\r\n","/**\r\n * @module ol/interaction/DragRotate\r\n */\r\nimport {disable} from '../rotationconstraint.js';\r\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\r\nimport {FALSE} from '../functions.js';\r\nimport PointerInteraction from './Pointer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\r\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the alt and shift keys are held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n * @api\r\n */\r\nclass DragRotate extends PointerInteraction {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      stopDown: FALSE\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n    const size = map.getSize();\r\n    const offset = mapBrowserEvent.pixel;\r\n    const theta =\r\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\r\n    if (this.lastAngle_ !== undefined) {\r\n      const delta = theta - this.lastAngle_;\r\n      view.adjustRotation(-delta);\r\n    }\r\n    this.lastAngle_ = theta;\r\n  }\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    view.endInteraction(this.duration_);\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\r\n      const map = mapBrowserEvent.map;\r\n      map.getView().beginInteraction();\r\n      this.lastAngle_ = undefined;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragRotate;\r\n","/**\r\n * @module ol/render/Box\r\n */\r\n\r\nimport Disposable from '../Disposable.js';\r\nimport Polygon from '../geom/Polygon.js';\r\n\r\nclass RenderBox extends Disposable {\r\n  /**\r\n   * @param {string} className CSS class name.\r\n   */\r\n  constructor(className) {\r\n    super();\r\n\r\n    /**\r\n     * @type {import(\"../geom/Polygon.js\").default}\r\n     * @private\r\n     */\r\n    this.geometry_ = null;\r\n\r\n    /**\r\n     * @type {HTMLDivElement}\r\n     * @private\r\n     */\r\n    this.element_ = document.createElement('div');\r\n    this.element_.style.position = 'absolute';\r\n    this.element_.className = 'ol-box ' + className;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.endPixel_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.setMap(null);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  render_() {\r\n    const startPixel = this.startPixel_;\r\n    const endPixel = this.endPixel_;\r\n    const px = 'px';\r\n    const style = this.element_.style;\r\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\r\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\r\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\r\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  setMap(map) {\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().removeChild(this.element_);\r\n      const style = this.element_.style;\r\n      style.left = style.top = style.width = style.height = 'inherit';\r\n    }\r\n    this.map_ = map;\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().appendChild(this.element_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\r\n   */\r\n  setPixels(startPixel, endPixel) {\r\n    this.startPixel_ = startPixel;\r\n    this.endPixel_ = endPixel;\r\n    this.createOrUpdateGeometry();\r\n    this.render_();\r\n  }\r\n\r\n  /**\r\n   * Creates or updates the cached geometry.\r\n   */\r\n  createOrUpdateGeometry() {\r\n    const startPixel = this.startPixel_;\r\n    const endPixel = this.endPixel_;\r\n    const pixels = [\r\n      startPixel,\r\n      [startPixel[0], endPixel[1]],\r\n      endPixel,\r\n      [endPixel[0], startPixel[1]]\r\n    ];\r\n    const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\r\n    // close the polygon\r\n    coordinates[4] = coordinates[0].slice();\r\n    if (!this.geometry_) {\r\n      this.geometry_ = new Polygon([coordinates]);\r\n    } else {\r\n      this.geometry_.setCoordinates([coordinates]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n   */\r\n  getGeometry() {\r\n    return this.geometry_;\r\n  }\r\n}\r\n\r\n\r\nexport default RenderBox;\r\n","/**\r\n * @module ol/interaction/DragBox\r\n */\r\n// FIXME draw drag box\r\nimport Event from '../events/Event.js';\r\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\r\nimport {VOID} from '../functions.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport RenderBox from '../render/Box.js';\r\n\r\n\r\n/**\r\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\r\n * true should be returned.\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link ol/events/condition~always}.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\r\n * `boxEndCondition` function.\r\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\r\n * Default is `true` if the area of the box is bigger than the `minArea` option.\r\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\r\n * before `boxend` is fired.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DragBoxEventType = {\r\n  /**\r\n   * Triggered upon drag box start.\r\n   * @event DragBoxEvent#boxstart\r\n   * @api\r\n   */\r\n  BOXSTART: 'boxstart',\r\n\r\n  /**\r\n   * Triggered on drag when box is active.\r\n   * @event DragBoxEvent#boxdrag\r\n   * @api\r\n   */\r\n  BOXDRAG: 'boxdrag',\r\n\r\n  /**\r\n   * Triggered upon drag box end.\r\n   * @event DragBoxEvent#boxend\r\n   * @api\r\n   */\r\n  BOXEND: 'boxend'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\r\n * this type.\r\n */\r\nclass DragBoxEvent extends Event {\r\n\r\n  /**\r\n   * @param {string} type The event type.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\r\n   */\r\n  constructor(type, coordinate, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * The coordinate of the drag event.\r\n     * @const\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = coordinate;\r\n\r\n    /**\r\n     * @const\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the shift or other key is held down. This is used, for example,\r\n * for zooming to a specific area of the map\r\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\r\n * {@link module:ol/interaction/DragRotateAndZoom}).\r\n *\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * @fires DragBoxEvent\r\n * @api\r\n */\r\nclass DragBox extends PointerInteraction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    super();\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @type {import(\"../render/Box.js\").default}\r\n     * @private\r\n     */\r\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\r\n\r\n    /**\r\n     * Function to execute just before `onboxend` is fired\r\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\r\n     * @private\r\n     */\r\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : always;\r\n\r\n    /**\r\n     * @private\r\n     * @type {EndCondition}\r\n     */\r\n    this.boxEndCondition_ = options.boxEndCondition ?\r\n      options.boxEndCondition : this.defaultBoxEndCondition;\r\n  }\r\n\r\n  /**\r\n   * The default condition for determining whether the boxend event\r\n   * should fire.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\r\n   *     leading to the box end.\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\r\n   * @return {boolean} Whether or not the boxend condition should be fired.\r\n   */\r\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\r\n    const width = endPixel[0] - startPixel[0];\r\n    const height = endPixel[1] - startPixel[1];\r\n    return width * width + height * height >= this.minArea_;\r\n  }\r\n\r\n  /**\r\n   * Returns geometry of last drawn box.\r\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n   * @api\r\n   */\r\n  getGeometry() {\r\n    return this.box_.getGeometry();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\r\n\r\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\r\n      mapBrowserEvent.coordinate, mapBrowserEvent));\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    this.box_.setMap(null);\r\n\r\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\r\n      this.onBoxEnd_(mapBrowserEvent);\r\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\r\n        mapBrowserEvent.coordinate, mapBrowserEvent));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (mouseActionButton(mapBrowserEvent) &&\r\n        this.condition_(mapBrowserEvent)) {\r\n      this.startPixel_ = mapBrowserEvent.pixel;\r\n      this.box_.setMap(mapBrowserEvent.map);\r\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\r\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\r\n        mapBrowserEvent.coordinate, mapBrowserEvent));\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default DragBox;\r\n","/**\r\n * @module ol/interaction/DragZoom\r\n */\r\nimport {easeOut} from '../easing.js';\r\nimport {shiftKeyOnly} from '../events/condition.js';\r\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\r\nimport DragBox from './DragBox.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\r\n * box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {boolean} [out=false] Use interaction for zooming out.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when a key, shift by default, is held down.\r\n *\r\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\r\n * your custom one configured with `className`.\r\n * @api\r\n */\r\nclass DragZoom extends DragBox {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const condition = options.condition ? options.condition : shiftKeyOnly;\r\n\r\n    super({\r\n      condition: condition,\r\n      className: options.className || 'ol-dragzoom',\r\n      onBoxEnd: onBoxEnd\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.out_ = options.out !== undefined ? options.out : false;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @this {DragZoom}\r\n */\r\nfunction onBoxEnd() {\r\n  const map = this.getMap();\r\n  const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\r\n  const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\r\n  let extent = this.getGeometry().getExtent();\r\n\r\n  if (this.out_) {\r\n    const mapExtent = view.calculateExtent(size);\r\n    const boxPixelExtent = createOrUpdateFromCoordinates([\r\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\r\n      map.getPixelFromCoordinate(getTopRight(extent))]);\r\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\r\n\r\n    scaleFromCenter(mapExtent, 1 / factor);\r\n    extent = mapExtent;\r\n  }\r\n\r\n  const resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\r\n  const center = view.getConstrainedCenter(getCenter(extent), resolution);\r\n\r\n  view.animate({\r\n    resolution: resolution,\r\n    center: center,\r\n    duration: this.duration_,\r\n    easing: easeOut\r\n  });\r\n}\r\n\r\n\r\nexport default DragZoom;\r\n","/**\r\n * @module ol/events/KeyCode\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n * @const\r\n */\r\nexport default {\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40\r\n};\r\n","/**\r\n * @module ol/interaction/KeyboardPan\r\n */\r\nimport {rotate as rotateCoordinate} from '../coordinate.js';\r\nimport EventType from '../events/EventType.js';\r\nimport KeyCode from '../events/KeyCode.js';\r\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\r\nimport Interaction, {pan} from './Interaction.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~noModifierKeys} and\r\n * {@link module:ol/events/condition~targetNotEditable}.\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\r\n * press.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map using keyboard arrows.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\r\n * @api\r\n */\r\nclass KeyboardPan extends Interaction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    super({\r\n      handleEvent: handleEvent\r\n    });\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultCondition_ = function(mapBrowserEvent) {\r\n      return noModifierKeys(mapBrowserEvent) &&\r\n        targetNotEditable(mapBrowserEvent);\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition !== undefined ?\r\n      options.condition : this.defaultCondition_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\r\n      options.pixelDelta : 128;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\r\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\r\n * pressed).\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {KeyboardPan}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  let stopEvent = false;\r\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\r\n    const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\r\n    const keyCode = keyEvent.keyCode;\r\n    if (this.condition_(mapBrowserEvent) &&\r\n        (keyCode == KeyCode.DOWN ||\r\n        keyCode == KeyCode.LEFT ||\r\n        keyCode == KeyCode.RIGHT ||\r\n        keyCode == KeyCode.UP)) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\r\n      let deltaX = 0, deltaY = 0;\r\n      if (keyCode == KeyCode.DOWN) {\r\n        deltaY = -mapUnitsDelta;\r\n      } else if (keyCode == KeyCode.LEFT) {\r\n        deltaX = -mapUnitsDelta;\r\n      } else if (keyCode == KeyCode.RIGHT) {\r\n        deltaX = mapUnitsDelta;\r\n      } else {\r\n        deltaY = mapUnitsDelta;\r\n      }\r\n      const delta = [deltaX, deltaY];\r\n      rotateCoordinate(delta, view.getRotation());\r\n      pan(view, delta, this.duration_);\r\n      mapBrowserEvent.preventDefault();\r\n      stopEvent = true;\r\n    }\r\n  }\r\n  return !stopEvent;\r\n}\r\n\r\nexport default KeyboardPan;\r\n","/**\r\n * @module ol/interaction/KeyboardZoom\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport {targetNotEditable} from '../events/condition.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~targetNotEditable}.\r\n * @property {number} [delta=1] The zoom level delta on each key press.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map using keyboard + and -.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\r\n * @api\r\n */\r\nclass KeyboardZoom extends Interaction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    super({\r\n      handleEvent: handleEvent\r\n    });\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\r\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\r\n * key pressed was '+' or '-').\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {KeyboardZoom}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  let stopEvent = false;\r\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\r\n      mapBrowserEvent.type == EventType.KEYPRESS) {\r\n    const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\r\n    const charCode = keyEvent.charCode;\r\n    if (this.condition_(mapBrowserEvent) &&\r\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\r\n      const map = mapBrowserEvent.map;\r\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\r\n      const view = map.getView();\r\n      zoomByDelta(view, delta, undefined, this.duration_);\r\n      mapBrowserEvent.preventDefault();\r\n      stopEvent = true;\r\n    }\r\n  }\r\n  return !stopEvent;\r\n}\r\n\r\nexport default KeyboardZoom;\r\n","/**\r\n * @module ol/interaction/MouseWheelZoom\r\n */\r\nimport {always} from '../events/condition.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport {clamp} from '../math.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const Mode = {\r\n  TRACKPAD: 'trackpad',\r\n  WHEEL: 'wheel'\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~always}.\r\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\r\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\r\n * location as the anchor. When set to `false`, zooming in and out will zoom to\r\n * the center of the screen instead of zooming on the mouse's location.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by scrolling the mouse wheel.\r\n * @api\r\n */\r\nclass MouseWheelZoom extends Interaction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super(/** @type {import(\"./Interaction.js\").InteractionOptions} */ (options));\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.totalDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : always;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.lastAnchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.startTime_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?}\r\n     */\r\n    this.timeoutId_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Mode|undefined}\r\n     */\r\n    this.mode_ = undefined;\r\n\r\n    /**\r\n     * Trackpad events separated by this delay will be considered separate\r\n     * interactions.\r\n     * @type {number}\r\n     */\r\n    this.trackpadEventGap_ = 400;\r\n\r\n    /**\r\n     * @type {?}\r\n     */\r\n    this.trackpadTimeoutId_;\r\n\r\n    /**\r\n     * The number of delta values per zoom level\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.trackpadDeltaPerZoom_ = 300;\r\n\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  endInteraction_() {\r\n    this.trackpadTimeoutId_ = undefined;\r\n    const view = this.getMap().getView();\r\n    view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\r\n   * zooms the map.\r\n   * @override\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    const type = mapBrowserEvent.type;\r\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\r\n      return true;\r\n    }\r\n\r\n    mapBrowserEvent.preventDefault();\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\r\n\r\n    if (this.useAnchor_) {\r\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\r\n    }\r\n\r\n    // Delta normalisation inspired by\r\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\r\n    let delta;\r\n    if (mapBrowserEvent.type == EventType.WHEEL) {\r\n      delta = wheelEvent.deltaY;\r\n      if (FIREFOX &&\r\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\r\n        delta /= DEVICE_PIXEL_RATIO;\r\n      }\r\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\r\n        delta *= 40;\r\n      }\r\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\r\n      delta = -wheelEvent.wheelDeltaY;\r\n      if (SAFARI) {\r\n        delta /= 3;\r\n      }\r\n    }\r\n\r\n    if (delta === 0) {\r\n      return false;\r\n    } else {\r\n      this.lastDelta_ = delta;\r\n    }\r\n\r\n    const now = Date.now();\r\n\r\n    if (this.startTime_ === undefined) {\r\n      this.startTime_ = now;\r\n    }\r\n\r\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\r\n      this.mode_ = Math.abs(delta) < 4 ?\r\n        Mode.TRACKPAD :\r\n        Mode.WHEEL;\r\n    }\r\n\r\n    if (this.mode_ === Mode.TRACKPAD) {\r\n      const view = map.getView();\r\n      if (this.trackpadTimeoutId_) {\r\n        clearTimeout(this.trackpadTimeoutId_);\r\n      } else {\r\n        view.beginInteraction();\r\n      }\r\n      this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\r\n      view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\r\n      this.startTime_ = now;\r\n      return false;\r\n    }\r\n\r\n    this.totalDelta_ += delta;\r\n\r\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\r\n\r\n    clearTimeout(this.timeoutId_);\r\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  handleWheelZoom_(map) {\r\n    const view = map.getView();\r\n    if (view.getAnimating()) {\r\n      view.cancelAnimations();\r\n    }\r\n    const delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\r\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\r\n    this.mode_ = undefined;\r\n    this.totalDelta_ = 0;\r\n    this.lastAnchor_ = null;\r\n    this.startTime_ = undefined;\r\n    this.timeoutId_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable using the mouse's location as an anchor when zooming\r\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\r\n   * to zoom to the center of the map\r\n   * @api\r\n   */\r\n  setMouseAnchor(useAnchor) {\r\n    this.useAnchor_ = useAnchor;\r\n    if (!useAnchor) {\r\n      this.lastAnchor_ = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MouseWheelZoom;\r\n","/**\r\n * @module ol/interaction/PinchRotate\r\n */\r\nimport {FALSE} from '../functions.js';\r\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\r\nimport {disable} from '../rotationconstraint.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] The duration of the animation in\r\n * milliseconds.\r\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by twisting with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nclass PinchRotate extends PointerInteraction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.rotating_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.rotationDelta_ = 0.0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    let rotationDelta = 0.0;\r\n\r\n    const touch0 = this.targetPointers[0];\r\n    const touch1 = this.targetPointers[1];\r\n\r\n    // angle between touches\r\n    const angle = Math.atan2(\r\n      touch1.clientY - touch0.clientY,\r\n      touch1.clientX - touch0.clientX);\r\n\r\n    if (this.lastAngle_ !== undefined) {\r\n      const delta = angle - this.lastAngle_;\r\n      this.rotationDelta_ += delta;\r\n      if (!this.rotating_ &&\r\n          Math.abs(this.rotationDelta_) > this.threshold_) {\r\n        this.rotating_ = true;\r\n      }\r\n      rotationDelta = delta;\r\n    }\r\n    this.lastAngle_ = angle;\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n\r\n    // rotate anchor point.\r\n    // FIXME: should be the intersection point between the lines:\r\n    //     touch0,touch1 and previousTouch0,previousTouch1\r\n    const viewportPosition = map.getViewport().getBoundingClientRect();\r\n    const centroid = centroidFromPointers(this.targetPointers);\r\n    centroid[0] -= viewportPosition.left;\r\n    centroid[1] -= viewportPosition.top;\r\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\r\n\r\n    // rotate\r\n    if (this.rotating_) {\r\n      map.render();\r\n      view.adjustRotation(rotationDelta, this.anchor_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      view.endInteraction(this.duration_);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      const map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastAngle_ = undefined;\r\n      this.rotating_ = false;\r\n      this.rotationDelta_ = 0.0;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().beginInteraction();\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PinchRotate;\r\n","/**\r\n * @module ol/interaction/PinchZoom\r\n */\r\nimport {FALSE} from '../functions.js';\r\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by pinching with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nclass PinchZoom extends PointerInteraction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastDistance_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastScaleDelta_ = 1;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    let scaleDelta = 1.0;\r\n\r\n    const touch0 = this.targetPointers[0];\r\n    const touch1 = this.targetPointers[1];\r\n    const dx = touch0.clientX - touch1.clientX;\r\n    const dy = touch0.clientY - touch1.clientY;\r\n\r\n    // distance between touches\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (this.lastDistance_ !== undefined) {\r\n      scaleDelta = this.lastDistance_ / distance;\r\n    }\r\n    this.lastDistance_ = distance;\r\n\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n\r\n    if (scaleDelta != 1.0) {\r\n      this.lastScaleDelta_ = scaleDelta;\r\n    }\r\n\r\n    // scale anchor point.\r\n    const viewportPosition = map.getViewport().getBoundingClientRect();\r\n    const centroid = centroidFromPointers(this.targetPointers);\r\n    centroid[0] -= viewportPosition.left;\r\n    centroid[1] -= viewportPosition.top;\r\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\r\n\r\n    // scale, bypass the resolution constraint\r\n    map.render();\r\n    view.adjustResolution(scaleDelta, this.anchor_);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\r\n      view.endInteraction(this.duration_, direction);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      const map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastDistance_ = undefined;\r\n      this.lastScaleDelta_ = 1;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().beginInteraction();\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PinchZoom;\r\n","/**\r\n * @module ol/interaction/DragAndDrop\r\n */\r\n// FIXME should handle all geo-referenced data, not just vector data\r\n\r\nimport {TRUE} from '../functions.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction from './Interaction.js';\r\nimport {get as getProjection} from '../proj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\r\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\r\n * all existing features will be removed and new features will be added when\r\n * they are dropped on the target.  If you want to add features to a vector\r\n * source without removing the existing features (append only), instead of\r\n * providing the source option listen for the \"addfeatures\" event.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\r\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DragAndDropEventType = {\r\n  /**\r\n   * Triggered when features are added\r\n   * @event DragAndDropEvent#addfeatures\r\n   * @api\r\n   */\r\n  ADD_FEATURES: 'addfeatures'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\r\n * of this type.\r\n */\r\nclass DragAndDropEvent extends Event {\r\n\r\n  /**\r\n   * @param {DragAndDropEventType} type Type.\r\n   * @param {File} file File.\r\n   * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\r\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\r\n   */\r\n  constructor(type, file, opt_features, opt_projection) {\r\n\r\n    super(type);\r\n\r\n    /**\r\n     * The features parsed from dropped data.\r\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\r\n     * @api\r\n     */\r\n    this.features = opt_features;\r\n\r\n    /**\r\n     * The dropped file.\r\n     * @type {File}\r\n     * @api\r\n     */\r\n    this.file = file;\r\n\r\n    /**\r\n     * The feature projection.\r\n     * @type {import(\"../proj/Projection.js\").default|undefined}\r\n     * @api\r\n     */\r\n    this.projection = opt_projection;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Handles input of vector data by drag and drop.\r\n * @api\r\n *\r\n * @fires DragAndDropEvent\r\n */\r\nclass DragAndDrop extends Interaction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      handleEvent: TRUE\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\r\n     */\r\n    this.formatConstructors_ = options.formatConstructors ?\r\n      options.formatConstructors : [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = options.projection ?\r\n      getProjection(options.projection) : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.dropListenKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../source/Vector.js\").default}\r\n     */\r\n    this.source_ = options.source || null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.target = options.target ? options.target : null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {File} file File.\r\n   * @param {Event} event Load event.\r\n   * @private\r\n   */\r\n  handleResult_(file, event) {\r\n    const result = event.target.result;\r\n    const map = this.getMap();\r\n    let projection = this.projection_;\r\n    if (!projection) {\r\n      const view = map.getView();\r\n      projection = view.getProjection();\r\n    }\r\n\r\n    const formatConstructors = this.formatConstructors_;\r\n    let features = [];\r\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\r\n      const format = new formatConstructors[i]();\r\n      features = this.tryReadFeatures_(format, result, {\r\n        featureProjection: projection\r\n      });\r\n      if (features && features.length > 0) {\r\n        break;\r\n      }\r\n    }\r\n    if (this.source_) {\r\n      this.source_.clear();\r\n      this.source_.addFeatures(features);\r\n    }\r\n    this.dispatchEvent(\r\n      new DragAndDropEvent(\r\n        DragAndDropEventType.ADD_FEATURES, file,\r\n        features, projection));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  registerListeners_() {\r\n    const map = this.getMap();\r\n    if (map) {\r\n      const dropArea = this.target ? this.target : map.getViewport();\r\n      this.dropListenKeys_ = [\r\n        listen(dropArea, EventType.DROP, handleDrop, this),\r\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\r\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\r\n        listen(dropArea, EventType.DROP, handleStop, this)\r\n      ];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setActive(active) {\r\n    super.setActive(active);\r\n    if (active) {\r\n      this.registerListeners_();\r\n    } else {\r\n      this.unregisterListeners_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    this.unregisterListeners_();\r\n    super.setMap(map);\r\n    if (this.getActive()) {\r\n      this.registerListeners_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../format/Feature.js\").default} format Format.\r\n   * @param {string} text Text.\r\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\r\n   * @private\r\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\r\n   */\r\n  tryReadFeatures_(format, text, options) {\r\n    try {\r\n      return format.readFeatures(text, options);\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  unregisterListeners_() {\r\n    if (this.dropListenKeys_) {\r\n      this.dropListenKeys_.forEach(unlistenByKey);\r\n      this.dropListenKeys_ = null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {DragEvent} event Event.\r\n * @this {DragAndDrop}\r\n */\r\nfunction handleDrop(event) {\r\n  const files = event.dataTransfer.files;\r\n  for (let i = 0, ii = files.length; i < ii; ++i) {\r\n    const file = files.item(i);\r\n    const reader = new FileReader();\r\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\r\n    reader.readAsText(file);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {DragEvent} event Event.\r\n */\r\nfunction handleStop(event) {\r\n  event.stopPropagation();\r\n  event.preventDefault();\r\n  event.dataTransfer.dropEffect = 'copy';\r\n}\r\n\r\n\r\nexport default DragAndDrop;\r\n","/**\r\n * @module ol/interaction/DragRotateAndZoom\r\n */\r\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\r\nimport PointerInteraction from './Pointer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom and rotate the map by clicking and dragging\r\n * on the map.  By default, this interaction is limited to when the shift\r\n * key is held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * And this interaction is not included in the default interactions.\r\n * @api\r\n */\r\nclass DragRotateAndZoom extends PointerInteraction {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastMagnitude_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastScaleDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const size = map.getSize();\r\n    const offset = mapBrowserEvent.pixel;\r\n    const deltaX = offset[0] - size[0] / 2;\r\n    const deltaY = size[1] / 2 - offset[1];\r\n    const theta = Math.atan2(deltaY, deltaX);\r\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n    const view = map.getView();\r\n    if (this.lastAngle_ !== undefined) {\r\n      const angleDelta = this.lastAngle_ - theta;\r\n      view.adjustRotation(angleDelta);\r\n    }\r\n    this.lastAngle_ = theta;\r\n    if (this.lastMagnitude_ !== undefined) {\r\n      view.adjustResolution(this.lastMagnitude_ / magnitude);\r\n    }\r\n    if (this.lastMagnitude_ !== undefined) {\r\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\r\n    }\r\n    this.lastMagnitude_ = magnitude;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\r\n    view.endInteraction(this.duration_, direction);\r\n    this.lastScaleDelta_ = 0;\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.condition_(mapBrowserEvent)) {\r\n      mapBrowserEvent.map.getView().beginInteraction();\r\n      this.lastAngle_ = undefined;\r\n      this.lastMagnitude_ = undefined;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragRotateAndZoom;\r\n","/**\r\n * @module ol/Feature\r\n */\r\nimport {assert} from './asserts.js';\r\nimport {listen, unlisten, unlistenByKey} from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport BaseObject, {getChangeEventType} from './Object.js';\r\n\r\n/**\r\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\r\n */\r\n\r\n/**\r\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A vector object for geographic features with a geometry and other\r\n * attribute properties, similar to the features in vector file formats like\r\n * GeoJSON.\r\n *\r\n * Features can be styled individually with `setStyle`; otherwise they use the\r\n * style of their vector layer.\r\n *\r\n * Note that attribute properties are set as {@link module:ol/Object} properties on\r\n * the feature object, so they are observable, and have get/set accessors.\r\n *\r\n * Typically, a feature has a single geometry property. You can set the\r\n * geometry using the `setGeometry` method and get it with `getGeometry`.\r\n * It is possible to store more than one geometry on a feature using attribute\r\n * properties. By default, the geometry used for rendering is identified by\r\n * the property name `geometry`. If you want to use another geometry property\r\n * for rendering, use the `setGeometryName` method to change the attribute\r\n * property associated with the geometry for the feature.  For example:\r\n *\r\n * ```js\r\n *\r\n * import Feature from 'ol/Feature';\r\n * import Polygon from 'ol/geom/Polygon';\r\n * import Point from 'ol/geom/Point';\r\n *\r\n * var feature = new Feature({\r\n *   geometry: new Polygon(polyCoords),\r\n *   labelPoint: new Point(labelCoords),\r\n *   name: 'My Polygon'\r\n * });\r\n *\r\n * // get the polygon geometry\r\n * var poly = feature.getGeometry();\r\n *\r\n * // Render the feature as a point using the coordinates from labelPoint\r\n * feature.setGeometryName('labelPoint');\r\n *\r\n * // get the point geometry\r\n * var point = feature.getGeometry();\r\n * ```\r\n *\r\n * @api\r\n * @template {import(\"./geom/Geometry.js\").default} Geometry\r\n */\r\nclass Feature extends BaseObject {\r\n  /**\r\n   * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\r\n   *     You may pass a Geometry object directly, or an object literal containing\r\n   *     properties. If you pass an object literal, you may include a Geometry\r\n   *     associated with a `geometry` key.\r\n   */\r\n  constructor(opt_geometryOrProperties) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|string|undefined}\r\n     */\r\n    this.id_ = undefined;\r\n\r\n    /**\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.geometryName_ = 'geometry';\r\n\r\n    /**\r\n     * User provided style.\r\n     * @private\r\n     * @type {import(\"./style/Style.js\").StyleLike}\r\n     */\r\n    this.style_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\r\n     */\r\n    this.styleFunction_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.geometryChangeKey_ = null;\r\n\r\n    listen(\r\n      this, getChangeEventType(this.geometryName_),\r\n      this.handleGeometryChanged_, this);\r\n\r\n    if (opt_geometryOrProperties) {\r\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\r\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\r\n        this.setGeometry(geometry);\r\n      } else {\r\n        /** @type {Object<string, *>} */\r\n        const properties = opt_geometryOrProperties;\r\n        this.setProperties(properties);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clone this feature. If the original feature has a geometry it\r\n   * is also cloned. The feature id is not set in the clone.\r\n   * @return {Feature} The clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const clone = new Feature(this.getProperties());\r\n    clone.setGeometryName(this.getGeometryName());\r\n    const geometry = this.getGeometry();\r\n    if (geometry) {\r\n      clone.setGeometry(geometry.clone());\r\n    }\r\n    const style = this.getStyle();\r\n    if (style) {\r\n      clone.setStyle(style);\r\n    }\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Get the feature's default geometry.  A feature may have any number of named\r\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\r\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\r\n   * @return {Geometry|undefined} The default geometry for the feature.\r\n   * @api\r\n   * @observable\r\n   */\r\n  getGeometry() {\r\n    return (\r\n      /** @type {Geometry|undefined} */ (this.get(this.geometryName_))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the feature identifier.  This is a stable identifier for the feature and\r\n   * is either set when reading data from a remote source or set explicitly by\r\n   * calling {@link module:ol/Feature~Feature#setId}.\r\n   * @return {number|string|undefined} Id.\r\n   * @api\r\n   */\r\n  getId() {\r\n    return this.id_;\r\n  }\r\n\r\n  /**\r\n   * Get the name of the feature's default geometry.  By default, the default\r\n   * geometry is named `geometry`.\r\n   * @return {string} Get the property name associated with the default geometry\r\n   *     for this feature.\r\n   * @api\r\n   */\r\n  getGeometryName() {\r\n    return this.geometryName_;\r\n  }\r\n\r\n  /**\r\n   * Get the feature's style. Will return what was provided to the\r\n   * {@link module:ol/Feature~Feature#setStyle} method.\r\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\r\n   * @api\r\n   */\r\n  getStyle() {\r\n    return this.style_;\r\n  }\r\n\r\n  /**\r\n   * Get the feature's style function.\r\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\r\n   * representing the current style of this feature.\r\n   * @api\r\n   */\r\n  getStyleFunction() {\r\n    return this.styleFunction_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleGeometryChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleGeometryChanged_() {\r\n    if (this.geometryChangeKey_) {\r\n      unlistenByKey(this.geometryChangeKey_);\r\n      this.geometryChangeKey_ = null;\r\n    }\r\n    const geometry = this.getGeometry();\r\n    if (geometry) {\r\n      this.geometryChangeKey_ = listen(geometry,\r\n        EventType.CHANGE, this.handleGeometryChange_, this);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the default geometry for the feature.  This will update the property\r\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\r\n   * @param {Geometry|undefined} geometry The new geometry.\r\n   * @api\r\n   * @observable\r\n   */\r\n  setGeometry(geometry) {\r\n    this.set(this.geometryName_, geometry);\r\n  }\r\n\r\n  /**\r\n   * Set the style for the feature.  This can be a single style object, an array\r\n   * of styles, or a function that takes a resolution and returns an array of\r\n   * styles. If it is `null` the feature has no style (a `null` style).\r\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\r\n   * @api\r\n   * @fires module:ol/events/Event~Event#event:change\r\n   */\r\n  setStyle(style) {\r\n    this.style_ = style;\r\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the feature id.  The feature id is considered stable and may be used when\r\n   * requesting features or comparing identifiers returned from a remote source.\r\n   * The feature id can be used with the\r\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\r\n   * @param {number|string|undefined} id The feature id.\r\n   * @api\r\n   * @fires module:ol/events/Event~Event#event:change\r\n   */\r\n  setId(id) {\r\n    this.id_ = id;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the property name to be used when getting the feature's default geometry.\r\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\r\n   * this name will be returned.\r\n   * @param {string} name The property name of the default geometry.\r\n   * @api\r\n   */\r\n  setGeometryName(name) {\r\n    unlisten(\r\n      this, getChangeEventType(this.geometryName_),\r\n      this.handleGeometryChanged_, this);\r\n    this.geometryName_ = name;\r\n    listen(\r\n      this, getChangeEventType(this.geometryName_),\r\n      this.handleGeometryChanged_, this);\r\n    this.handleGeometryChanged_();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Convert the provided object into a feature style function.  Functions passed\r\n * through unchanged.  Arrays of Style or single style objects wrapped\r\n * in a new feature style function.\r\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\r\n *     A feature style function, a single style, or an array of styles.\r\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\r\n */\r\nexport function createStyleFunction(obj) {\r\n  if (typeof obj === 'function') {\r\n    return obj;\r\n  } else {\r\n    /**\r\n     * @type {Array<import(\"./style/Style.js\").default>}\r\n     */\r\n    let styles;\r\n    if (Array.isArray(obj)) {\r\n      styles = obj;\r\n    } else {\r\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\r\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\r\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\r\n      styles = [style];\r\n    }\r\n    return function() {\r\n      return styles;\r\n    };\r\n  }\r\n}\r\nexport default Feature;\r\n","/**\r\n * @module ol/geom/Circle\r\n */\r\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {deflateCoordinate} from './flat/deflate.js';\r\nimport {rotate, translate} from './flat/transform.js';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Circle geometry.\r\n *\r\n * @api\r\n */\r\nclass Circle extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\r\n   *     `opt_radius` are also accepted.\r\n   * @param {number=} opt_radius Radius.\r\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n   */\r\n  constructor(center, opt_radius, opt_layout) {\r\n    super();\r\n    if (opt_layout !== undefined && opt_radius === undefined) {\r\n      this.setFlatCoordinates(opt_layout, center);\r\n    } else {\r\n      const radius = opt_radius ? opt_radius : 0;\r\n      this.setCenterAndRadius(center, radius, opt_layout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!Circle} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const dx = x - flatCoordinates[0];\r\n    const dy = y - flatCoordinates[1];\r\n    const squaredDistance = dx * dx + dy * dy;\r\n    if (squaredDistance < minSquaredDistance) {\r\n      if (squaredDistance === 0) {\r\n        for (let i = 0; i < this.stride; ++i) {\r\n          closestPoint[i] = flatCoordinates[i];\r\n        }\r\n      } else {\r\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\r\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\r\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\r\n        for (let i = 2; i < this.stride; ++i) {\r\n          closestPoint[i] = flatCoordinates[i];\r\n        }\r\n      }\r\n      closestPoint.length = this.stride;\r\n      return squaredDistance;\r\n    } else {\r\n      return minSquaredDistance;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  containsXY(x, y) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const dx = x - flatCoordinates[0];\r\n    const dy = y - flatCoordinates[1];\r\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\r\n  }\r\n\r\n  /**\r\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\r\n   * @api\r\n   */\r\n  getCenter() {\r\n    return this.flatCoordinates.slice(0, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  computeExtent(extent) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\r\n    return createOrUpdate(\r\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\r\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\r\n      extent);\r\n  }\r\n\r\n  /**\r\n   * Return the radius of the circle.\r\n   * @return {number} Radius.\r\n   * @api\r\n   */\r\n  getRadius() {\r\n    return Math.sqrt(this.getRadiusSquared_());\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {number} Radius squared.\r\n   */\r\n  getRadiusSquared_() {\r\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\r\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\r\n    return dx * dx + dy * dy;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.CIRCLE;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    const circleExtent = this.getExtent();\r\n    if (intersects(extent, circleExtent)) {\r\n      const center = this.getCenter();\r\n\r\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\r\n        return true;\r\n      }\r\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\r\n        return true;\r\n      }\r\n\r\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\r\n    }\r\n    return false;\r\n\r\n  }\r\n\r\n  /**\r\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\r\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\r\n   * @api\r\n   */\r\n  setCenter(center) {\r\n    const stride = this.stride;\r\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\r\n    const flatCoordinates = center.slice();\r\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\r\n    for (let i = 1; i < stride; ++i) {\r\n      flatCoordinates[stride + i] = center[i];\r\n    }\r\n    this.setFlatCoordinates(this.layout, flatCoordinates);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\r\n   * number) of the circle.\r\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} radius Radius.\r\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n   * @api\r\n   */\r\n  setCenterAndRadius(center, radius, opt_layout) {\r\n    this.setLayout(opt_layout, center, 0);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    /** @type {Array<number>} */\r\n    const flatCoordinates = this.flatCoordinates;\r\n    let offset = deflateCoordinate(\r\n      flatCoordinates, 0, center, this.stride);\r\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\r\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\r\n      flatCoordinates[offset++] = flatCoordinates[i];\r\n    }\r\n    flatCoordinates.length = offset;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getCoordinates() {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {}\r\n\r\n  /**\r\n   * Set the radius of the circle. The radius is in the units of the projection.\r\n   * @param {number} radius Radius.\r\n   * @api\r\n   */\r\n  setRadius(radius) {\r\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  rotate(angle, anchor) {\r\n    const center = this.getCenter();\r\n    const stride = this.getStride();\r\n    this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  translate(deltaX, deltaY) {\r\n    const center = this.getCenter();\r\n    const stride = this.getStride();\r\n    this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\r\n    this.changed();\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Transform each coordinate of the circle from one coordinate reference system\r\n * to another. The geometry is modified in place.\r\n * If you do not want the geometry modified in place, first clone() it and\r\n * then use this function on the clone.\r\n *\r\n * Internally a circle is currently represented by two points: the center of\r\n * the circle `[cx, cy]`, and the point to the right of the circle\r\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\r\n * So the resulting geometry is also a circle, and that circle does not\r\n * correspond to the shape that would be obtained by transforming every point\r\n * of the original circle.\r\n *\r\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\r\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\r\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n * @return {Circle} This geometry.  Note that original geometry is\r\n *     modified in place.\r\n * @function\r\n * @api\r\n */\r\nCircle.prototype.transform;\r\nexport default Circle;\r\n","/**\r\n * @module ol/geom/flat/interpolate\r\n */\r\nimport {binarySearch} from '../../array.js';\r\nimport {lerp} from '../../math.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} fraction Fraction.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Destination.\r\n */\r\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\r\n  let pointX = NaN;\r\n  let pointY = NaN;\r\n  const n = (end - offset) / stride;\r\n  if (n === 1) {\r\n    pointX = flatCoordinates[offset];\r\n    pointY = flatCoordinates[offset + 1];\r\n  } else if (n == 2) {\r\n    pointX = (1 - fraction) * flatCoordinates[offset] +\r\n        fraction * flatCoordinates[offset + stride];\r\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\r\n        fraction * flatCoordinates[offset + stride + 1];\r\n  } else if (n !== 0) {\r\n    let x1 = flatCoordinates[offset];\r\n    let y1 = flatCoordinates[offset + 1];\r\n    let length = 0;\r\n    const cumulativeLengths = [0];\r\n    for (let i = offset + stride; i < end; i += stride) {\r\n      const x2 = flatCoordinates[i];\r\n      const y2 = flatCoordinates[i + 1];\r\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n      cumulativeLengths.push(length);\r\n      x1 = x2;\r\n      y1 = y2;\r\n    }\r\n    const target = fraction * length;\r\n    const index = binarySearch(cumulativeLengths, target);\r\n    if (index < 0) {\r\n      const t = (target - cumulativeLengths[-index - 2]) /\r\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\r\n      const o = offset + (-index - 2) * stride;\r\n      pointX = lerp(\r\n        flatCoordinates[o], flatCoordinates[o + stride], t);\r\n      pointY = lerp(\r\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\r\n    } else {\r\n      pointX = flatCoordinates[offset + index * stride];\r\n      pointY = flatCoordinates[offset + index * stride + 1];\r\n    }\r\n  }\r\n  if (opt_dest) {\r\n    opt_dest[0] = pointX;\r\n    opt_dest[1] = pointY;\r\n    return opt_dest;\r\n  } else {\r\n    return [pointX, pointY];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} m M.\r\n * @param {boolean} extrapolate Extrapolate.\r\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n */\r\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\r\n  if (end == offset) {\r\n    return null;\r\n  }\r\n  let coordinate;\r\n  if (m < flatCoordinates[offset + stride - 1]) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(offset, offset + stride);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else if (flatCoordinates[end - 1] < m) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(end - stride, end);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  // FIXME use O(1) search\r\n  if (m == flatCoordinates[offset + stride - 1]) {\r\n    return flatCoordinates.slice(offset, offset + stride);\r\n  }\r\n  let lo = offset / stride;\r\n  let hi = end / stride;\r\n  while (lo < hi) {\r\n    const mid = (lo + hi) >> 1;\r\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\r\n      hi = mid;\r\n    } else {\r\n      lo = mid + 1;\r\n    }\r\n  }\r\n  const m0 = flatCoordinates[lo * stride - 1];\r\n  if (m == m0) {\r\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\r\n  }\r\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\r\n  const t = (m - m0) / (m1 - m0);\r\n  coordinate = [];\r\n  for (let i = 0; i < stride - 1; ++i) {\r\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\r\n      flatCoordinates[lo * stride + i], t));\r\n  }\r\n  coordinate.push(m);\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} m M.\r\n * @param {boolean} extrapolate Extrapolate.\r\n * @param {boolean} interpolate Interpolate.\r\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n */\r\nexport function lineStringsCoordinateAtM(\r\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\r\n  if (interpolate) {\r\n    return lineStringCoordinateAtM(\r\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\r\n  }\r\n  let coordinate;\r\n  if (m < flatCoordinates[stride - 1]) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(0, stride);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    if (offset == end) {\r\n      continue;\r\n    }\r\n    if (m < flatCoordinates[offset + stride - 1]) {\r\n      return null;\r\n    } else if (m <= flatCoordinates[end - 1]) {\r\n      return lineStringCoordinateAtM(\r\n        flatCoordinates, offset, end, stride, m, false);\r\n    }\r\n    offset = end;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * @module ol/geom/flat/length\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Length.\r\n */\r\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\r\n  let x1 = flatCoordinates[offset];\r\n  let y1 = flatCoordinates[offset + 1];\r\n  let length = 0;\r\n  for (let i = offset + stride; i < end; i += stride) {\r\n    const x2 = flatCoordinates[i];\r\n    const y2 = flatCoordinates[i + 1];\r\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return length;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Perimeter.\r\n */\r\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\r\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\r\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\r\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\r\n  perimeter += Math.sqrt(dx * dx + dy * dy);\r\n  return perimeter;\r\n}\r\n","/**\r\n * @module ol/geom/LineString\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\r\nimport {deflateCoordinates} from './flat/deflate.js';\r\nimport {inflateCoordinates} from './flat/inflate.js';\r\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\r\nimport {intersectsLineString} from './flat/intersectsextent.js';\r\nimport {lineStringLength} from './flat/length.js';\r\nimport {forEach as forEachSegment} from './flat/segments.js';\r\nimport {douglasPeucker} from './flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Linestring geometry.\r\n *\r\n * @api\r\n */\r\nclass LineString extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   */\r\n  constructor(coordinates, opt_layout) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.flatMidpoint_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatMidpointRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Append the passed coordinate to the coordinates of the linestring.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @api\r\n   */\r\n  appendCoordinate(coordinate) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = coordinate.slice();\r\n    } else {\r\n      extend(this.flatCoordinates, coordinate);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!LineString} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    return new LineString(this.flatCoordinates.slice(), this.layout);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\r\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestPoint(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\r\n  }\r\n\r\n  /**\r\n   * Iterate over each segment, calling the provided callback.\r\n   * If the callback returns a truthy value the function returns that\r\n   * value immediately. Otherwise the function returns `false`.\r\n   *\r\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\r\n   *     called for each segment.\r\n   * @return {T|boolean} Value.\r\n   * @template T,S\r\n   * @api\r\n   */\r\n  forEachSegment(callback) {\r\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\r\n   * such coordinate exists.\r\n   *\r\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\r\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\r\n   * M will return the first coordinate and Ms greater than the last M will\r\n   * return the last coordinate.\r\n   *\r\n   * @param {number} m M.\r\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\r\n   * @api\r\n   */\r\n  getCoordinateAtM(m, opt_extrapolate) {\r\n    if (this.layout != GeometryLayout.XYM &&\r\n        this.layout != GeometryLayout.XYZM) {\r\n      return null;\r\n    }\r\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\r\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\r\n      this.flatCoordinates.length, this.stride, m, extrapolate);\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the linestring.\r\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  }\r\n\r\n  /**\r\n   * Return the coordinate at the provided fraction along the linestring.\r\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\r\n   * linestring and 1 is the end.\r\n   * @param {number} fraction Fraction.\r\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\r\n   *     be modified. If not provided, a new coordinate will be returned.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\r\n   * @api\r\n   */\r\n  getCoordinateAt(fraction, opt_dest) {\r\n    return interpolatePoint(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      fraction, opt_dest);\r\n  }\r\n\r\n  /**\r\n   * Return the length of the linestring on projected plane.\r\n   * @return {number} Length (on projected plane).\r\n   * @api\r\n   */\r\n  getLength() {\r\n    return lineStringLength(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat midpoint.\r\n   */\r\n  getFlatMidpoint() {\r\n    if (this.flatMidpointRevision_ != this.getRevision()) {\r\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\r\n      this.flatMidpointRevision_ = this.getRevision();\r\n    }\r\n    return this.flatMidpoint_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    simplifiedFlatCoordinates.length = douglasPeucker(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      squaredTolerance, simplifiedFlatCoordinates, 0);\r\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.LINE_STRING;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return intersectsLineString(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      extent);\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the linestring.\r\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default LineString;\r\n","/**\r\n * @module ol/geom/MultiLineString\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport LineString from './LineString.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\r\nimport {deflateCoordinatesArray} from './flat/deflate.js';\r\nimport {inflateCoordinatesArray} from './flat/inflate.js';\r\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\r\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\r\nimport {douglasPeuckerArray} from './flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-linestring geometry.\r\n *\r\n * @api\r\n */\r\nclass MultiLineString extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\r\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\r\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\r\n   */\r\n  constructor(coordinates, opt_layout, opt_ends) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.ends_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (Array.isArray(coordinates[0])) {\r\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\r\n    } else if (opt_layout !== undefined && opt_ends) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n      this.ends_ = opt_ends;\r\n    } else {\r\n      let layout = this.getLayout();\r\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\r\n      const flatCoordinates = [];\r\n      const ends = [];\r\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\r\n        const lineString = lineStrings[i];\r\n        if (i === 0) {\r\n          layout = lineString.getLayout();\r\n        }\r\n        extend(flatCoordinates, lineString.getFlatCoordinates());\r\n        ends.push(flatCoordinates.length);\r\n      }\r\n      this.setFlatCoordinates(layout, flatCoordinates);\r\n      this.ends_ = ends;\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Append the passed linestring to the multilinestring.\r\n   * @param {LineString} lineString LineString.\r\n   * @api\r\n   */\r\n  appendLineString(lineString) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\r\n    }\r\n    this.ends_.push(this.flatCoordinates.length);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!MultiLineString} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\r\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestArrayPoint(\r\n      this.flatCoordinates, 0, this.ends_, this.stride,\r\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\r\n   * such coordinate exists.\r\n   *\r\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\r\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\r\n   * M will return the first coordinate and Ms greater than the last M will\r\n   * return the last coordinate.\r\n   *\r\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\r\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\r\n   * will be linearly interpolated between the last coordinate of one LineString\r\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\r\n   * `false` then the function will return `null` for Ms falling between\r\n   * LineStrings.\r\n   *\r\n   * @param {number} m M.\r\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\r\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\r\n   * @api\r\n   */\r\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\r\n    if ((this.layout != GeometryLayout.XYM &&\r\n         this.layout != GeometryLayout.XYZM) ||\r\n        this.flatCoordinates.length === 0) {\r\n      return null;\r\n    }\r\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\r\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\r\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\r\n      this.ends_, this.stride, m, extrapolate, interpolate);\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the multilinestring.\r\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinatesArray(\r\n      this.flatCoordinates, 0, this.ends_, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Ends.\r\n   */\r\n  getEnds() {\r\n    return this.ends_;\r\n  }\r\n\r\n  /**\r\n   * Return the linestring at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {LineString} LineString.\r\n   * @api\r\n   */\r\n  getLineString(index) {\r\n    if (index < 0 || this.ends_.length <= index) {\r\n      return null;\r\n    }\r\n    return new LineString(this.flatCoordinates.slice(\r\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\r\n  }\r\n\r\n  /**\r\n   * Return the linestrings of this multilinestring.\r\n   * @return {Array<LineString>} LineStrings.\r\n   * @api\r\n   */\r\n  getLineStrings() {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const ends = this.ends_;\r\n    const layout = this.layout;\r\n    /** @type {Array<LineString>} */\r\n    const lineStrings = [];\r\n    let offset = 0;\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const lineString = new LineString(flatCoordinates.slice(offset, end), layout);\r\n      lineStrings.push(lineString);\r\n      offset = end;\r\n    }\r\n    return lineStrings;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat midpoints.\r\n   */\r\n  getFlatMidpoints() {\r\n    const midpoints = [];\r\n    const flatCoordinates = this.flatCoordinates;\r\n    let offset = 0;\r\n    const ends = this.ends_;\r\n    const stride = this.stride;\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const midpoint = interpolatePoint(\r\n        flatCoordinates, offset, end, stride, 0.5);\r\n      extend(midpoints, midpoint);\r\n      offset = end;\r\n    }\r\n    return midpoints;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    const simplifiedEnds = [];\r\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\r\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\r\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\r\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.MULTI_LINE_STRING;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return intersectsLineStringArray(\r\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the multilinestring.\r\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 2);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    const ends = deflateCoordinatesArray(\r\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\r\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default MultiLineString;\r\n","/**\r\n * @module ol/geom/MultiPoint\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport Point from './Point.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {deflateCoordinates} from './flat/deflate.js';\r\nimport {inflateCoordinates} from './flat/inflate.js';\r\nimport {squaredDistance as squaredDx} from '../math.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-point geometry.\r\n *\r\n * @api\r\n */\r\nclass MultiPoint extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n   */\r\n  constructor(coordinates, opt_layout) {\r\n    super();\r\n    if (opt_layout && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the passed point to this multipoint.\r\n   * @param {Point} point Point.\r\n   * @api\r\n   */\r\n  appendPoint(point) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = point.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, point.getFlatCoordinates());\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!MultiPoint} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    const multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\r\n    return multiPoint;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const stride = this.stride;\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      const squaredDistance = squaredDx(\r\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\r\n      if (squaredDistance < minSquaredDistance) {\r\n        minSquaredDistance = squaredDistance;\r\n        for (let j = 0; j < stride; ++j) {\r\n          closestPoint[j] = flatCoordinates[i + j];\r\n        }\r\n        closestPoint.length = stride;\r\n      }\r\n    }\r\n    return minSquaredDistance;\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the multipoint.\r\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  }\r\n\r\n  /**\r\n   * Return the point at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {Point} Point.\r\n   * @api\r\n   */\r\n  getPoint(index) {\r\n    const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\r\n    if (index < 0 || n <= index) {\r\n      return null;\r\n    }\r\n    return new Point(this.flatCoordinates.slice(\r\n      index * this.stride, (index + 1) * this.stride), this.layout);\r\n  }\r\n\r\n  /**\r\n   * Return the points of this multipoint.\r\n   * @return {Array<Point>} Points.\r\n   * @api\r\n   */\r\n  getPoints() {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const layout = this.layout;\r\n    const stride = this.stride;\r\n    /** @type {Array<Point>} */\r\n    const points = [];\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\r\n      points.push(point);\r\n    }\r\n    return points;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.MULTI_POINT;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const stride = this.stride;\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      const x = flatCoordinates[i];\r\n      const y = flatCoordinates[i + 1];\r\n      if (containsXY(extent, x, y)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the multipoint.\r\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default MultiPoint;\r\n","/**\r\n * @module ol/geom/flat/center\r\n */\r\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @return {Array<number>} Flat centers.\r\n */\r\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\r\n  const flatCenters = [];\r\n  let extent = createEmpty();\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\r\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return flatCenters;\r\n}\r\n","/**\r\n * @module ol/geom/MultiPolygon\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport MultiPoint from './MultiPoint.js';\r\nimport Polygon from './Polygon.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {linearRingss as linearRingssArea} from './flat/area.js';\r\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\r\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\r\nimport {linearRingssContainsXY} from './flat/contains.js';\r\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\r\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\r\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\r\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\r\nimport {linearRingssAreOriented, orientLinearRingsArray} from './flat/orient.js';\r\nimport {quantizeMultiArray} from './flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-polygon geometry.\r\n *\r\n * @api\r\n */\r\nclass MultiPolygon extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\r\n   */\r\n  constructor(coordinates, opt_layout, opt_endss) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @type {Array<Array<number>>}\r\n     * @private\r\n     */\r\n    this.endss_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatInteriorPointsRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.flatInteriorPoints_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.orientedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.orientedFlatCoordinates_ = null;\r\n\r\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\r\n      let layout = this.getLayout();\r\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\r\n      const flatCoordinates = [];\r\n      const endss = [];\r\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\r\n        const polygon = polygons[i];\r\n        if (i === 0) {\r\n          layout = polygon.getLayout();\r\n        }\r\n        const offset = flatCoordinates.length;\r\n        const ends = polygon.getEnds();\r\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\r\n          ends[j] += offset;\r\n        }\r\n        extend(flatCoordinates, polygon.getFlatCoordinates());\r\n        endss.push(ends);\r\n      }\r\n      opt_layout = layout;\r\n      coordinates = flatCoordinates;\r\n      opt_endss = endss;\r\n    }\r\n    if (opt_layout !== undefined && opt_endss) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n      this.endss_ = opt_endss;\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\r\n        opt_layout);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Append the passed polygon to this multipolygon.\r\n   * @param {Polygon} polygon Polygon.\r\n   * @api\r\n   */\r\n  appendPolygon(polygon) {\r\n    /** @type {Array<number>} */\r\n    let ends;\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\r\n      ends = polygon.getEnds().slice();\r\n      this.endss_.push();\r\n    } else {\r\n      const offset = this.flatCoordinates.length;\r\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\r\n      ends = polygon.getEnds().slice();\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        ends[i] += offset;\r\n      }\r\n    }\r\n    this.endss_.push(ends);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!MultiPolygon} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    const len = this.endss_.length;\r\n    const newEndss = new Array(len);\r\n    for (let i = 0; i < len; ++i) {\r\n      newEndss[i] = this.endss_[i].slice();\r\n    }\r\n\r\n    return new MultiPolygon(\r\n      this.flatCoordinates.slice(), this.layout, newEndss);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\r\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestMultiArrayPoint(\r\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\r\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  containsXY(x, y) {\r\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\r\n  }\r\n\r\n  /**\r\n   * Return the area of the multipolygon on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  getArea() {\r\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate array for this geometry.  This array has the structure\r\n   * of a GeoJSON coordinate array for multi-polygons.\r\n   *\r\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\r\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\r\n   *     If `false`, coordinates will be oriented according to the left-hand rule\r\n   *     (clockwise for exterior and counter-clockwise for interior rings).\r\n   *     By default, coordinate orientation will depend on how the geometry was\r\n   *     constructed.\r\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates(opt_right) {\r\n    let flatCoordinates;\r\n    if (opt_right !== undefined) {\r\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\r\n      orientLinearRingsArray(\r\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\r\n    } else {\r\n      flatCoordinates = this.flatCoordinates;\r\n    }\r\n\r\n    return inflateMultiCoordinatesArray(\r\n      flatCoordinates, 0, this.endss_, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @return {Array<Array<number>>} Endss.\r\n   */\r\n  getEndss() {\r\n    return this.endss_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat interior points.\r\n   */\r\n  getFlatInteriorPoints() {\r\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\r\n      const flatCenters = linearRingssCenter(\r\n        this.flatCoordinates, 0, this.endss_, this.stride);\r\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\r\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\r\n        flatCenters);\r\n      this.flatInteriorPointsRevision_ = this.getRevision();\r\n    }\r\n    return this.flatInteriorPoints_;\r\n  }\r\n\r\n  /**\r\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\r\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\r\n   * the length of the horizontal intersection that the point belongs to.\r\n   * @api\r\n   */\r\n  getInteriorPoints() {\r\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Oriented flat coordinates.\r\n   */\r\n  getOrientedFlatCoordinates() {\r\n    if (this.orientedRevision_ != this.getRevision()) {\r\n      const flatCoordinates = this.flatCoordinates;\r\n      if (linearRingssAreOriented(\r\n        flatCoordinates, 0, this.endss_, this.stride)) {\r\n        this.orientedFlatCoordinates_ = flatCoordinates;\r\n      } else {\r\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\r\n        this.orientedFlatCoordinates_.length =\r\n            orientLinearRingsArray(\r\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\r\n      }\r\n      this.orientedRevision_ = this.getRevision();\r\n    }\r\n    return this.orientedFlatCoordinates_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    const simplifiedEndss = [];\r\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\r\n      this.flatCoordinates, 0, this.endss_, this.stride,\r\n      Math.sqrt(squaredTolerance),\r\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\r\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\r\n  }\r\n\r\n  /**\r\n   * Return the polygon at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {Polygon} Polygon.\r\n   * @api\r\n   */\r\n  getPolygon(index) {\r\n    if (index < 0 || this.endss_.length <= index) {\r\n      return null;\r\n    }\r\n    let offset;\r\n    if (index === 0) {\r\n      offset = 0;\r\n    } else {\r\n      const prevEnds = this.endss_[index - 1];\r\n      offset = prevEnds[prevEnds.length - 1];\r\n    }\r\n    const ends = this.endss_[index].slice();\r\n    const end = ends[ends.length - 1];\r\n    if (offset !== 0) {\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        ends[i] -= offset;\r\n      }\r\n    }\r\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\r\n  }\r\n\r\n  /**\r\n   * Return the polygons of this multipolygon.\r\n   * @return {Array<Polygon>} Polygons.\r\n   * @api\r\n   */\r\n  getPolygons() {\r\n    const layout = this.layout;\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const endss = this.endss_;\r\n    const polygons = [];\r\n    let offset = 0;\r\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n      const ends = endss[i].slice();\r\n      const end = ends[ends.length - 1];\r\n      if (offset !== 0) {\r\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\r\n          ends[j] -= offset;\r\n        }\r\n      }\r\n      const polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\r\n      polygons.push(polygon);\r\n      offset = end;\r\n    }\r\n    return polygons;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.MULTI_POLYGON;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return intersectsLinearRingMultiArray(\r\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the multipolygon.\r\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 3);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    const endss = deflateMultiCoordinatesArray(\r\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\r\n    if (endss.length === 0) {\r\n      this.flatCoordinates.length = 0;\r\n    } else {\r\n      const lastEnds = endss[endss.length - 1];\r\n      this.flatCoordinates.length = lastEnds.length === 0 ?\r\n        0 : lastEnds[lastEnds.length - 1];\r\n    }\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default MultiPolygon;\r\n","/**\r\n * @module ol/ImageState\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n  IDLE: 0,\r\n  LOADING: 1,\r\n  LOADED: 2,\r\n  ERROR: 3\r\n};\r\n","/**\r\n * @module ol/style/Image\r\n */\r\nimport {abstract} from '../util.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} opacity\r\n * @property {boolean} rotateWithView\r\n * @property {number} rotation\r\n * @property {number} scale\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A base class used for creating subclasses and not instantiated in\r\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\r\n * {@link module:ol/style/RegularShape~RegularShape}.\r\n * @abstract\r\n * @api\r\n */\r\nclass ImageStyle {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.opacity_ = options.opacity;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.rotateWithView_ = options.rotateWithView;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.rotation_ = options.rotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.scale_ = options.scale;\r\n\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {ImageStyle} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    return new ImageStyle({\r\n      opacity: this.getOpacity(),\r\n      scale: this.getScale(),\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer opacity.\r\n   * @return {number} Opacity.\r\n   * @api\r\n   */\r\n  getOpacity() {\r\n    return this.opacity_;\r\n  }\r\n\r\n  /**\r\n   * Determine whether the symbolizer rotates with the map.\r\n   * @return {boolean} Rotate with map.\r\n   * @api\r\n   */\r\n  getRotateWithView() {\r\n    return this.rotateWithView_;\r\n  }\r\n\r\n  /**\r\n   * Get the symoblizer rotation.\r\n   * @return {number} Rotation.\r\n   * @api\r\n   */\r\n  getRotation() {\r\n    return this.rotation_;\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer scale.\r\n   * @return {number} Scale.\r\n   * @api\r\n   */\r\n  getScale() {\r\n    return this.scale_;\r\n  }\r\n\r\n  /**\r\n   * Get the anchor point in pixels. The anchor determines the center point for the\r\n   * symbolizer.\r\n   * @abstract\r\n   * @return {Array<number>} Anchor.\r\n   */\r\n  getAnchor() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the image element for the symbolizer.\r\n   * @abstract\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\r\n   */\r\n  getImage(pixelRatio) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\r\n   */\r\n  getHitDetectionImage(pixelRatio) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getImageSize() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\r\n   */\r\n  getHitDetectionImageSize() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the origin of the symbolizer.\r\n   * @abstract\r\n   * @return {Array<number>} Origin.\r\n   */\r\n  getOrigin() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the size of the symbolizer (in pixels).\r\n   * @abstract\r\n   * @return {import(\"../size.js\").Size} Size.\r\n   */\r\n  getSize() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Set the opacity.\r\n   *\r\n   * @param {number} opacity Opacity.\r\n   * @api\r\n   */\r\n  setOpacity(opacity) {\r\n    this.opacity_ = opacity;\r\n  }\r\n\r\n  /**\r\n   * Set whether to rotate the style with the view.\r\n   *\r\n   * @param {boolean} rotateWithView Rotate with map.\r\n   * @api\r\n   */\r\n  setRotateWithView(rotateWithView) {\r\n    this.rotateWithView_ = rotateWithView;\r\n  }\r\n\r\n  /**\r\n   * Set the rotation.\r\n   *\r\n   * @param {number} rotation Rotation.\r\n   * @api\r\n   */\r\n  setRotation(rotation) {\r\n    this.rotation_ = rotation;\r\n  }\r\n  /**\r\n   * Set the scale.\r\n   *\r\n   * @param {number} scale Scale.\r\n   * @api\r\n   */\r\n  setScale(scale) {\r\n    this.scale_ = scale;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\r\n   * @param {T} thisArg Value to use as `this` when executing `listener`.\r\n   * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\r\n   * @template T\r\n   */\r\n  listenImageChange(listener, thisArg) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   * @abstract\r\n   */\r\n  load() {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\r\n   * @param {T} thisArg Value to use as `this` when executing `listener`.\r\n   * @template T\r\n   */\r\n  unlistenImageChange(listener, thisArg) {\r\n    abstract();\r\n  }\r\n}\r\n\r\nexport default ImageStyle;\r\n","/**\r\n * @module ol/style/RegularShape\r\n */\r\n\r\nimport {asColorLike} from '../colorlike.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\r\nimport ImageStyle from './Image.js';\r\n\r\n\r\n/**\r\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\r\n * is the number of sides.\r\n * @property {number} [radius] Radius of a regular polygon.\r\n * @property {number} [radius1] Outer radius of a star.\r\n * @property {number} [radius2] Inner radius of a star.\r\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} RenderOptions\r\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\r\n * @property {number} strokeWidth\r\n * @property {number} size\r\n * @property {string} lineCap\r\n * @property {Array<number>} lineDash\r\n * @property {number} lineDashOffset\r\n * @property {string} lineJoin\r\n * @property {number} miterLimit\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set regular shape style for vector features. The resulting shape will be\r\n * a regular polygon when `radius` is provided, or a star when `radius1` and\r\n * `radius2` are provided.\r\n * @api\r\n */\r\nclass RegularShape extends ImageStyle {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    const rotateWithView = options.rotateWithView !== undefined ?\r\n      options.rotateWithView : false;\r\n\r\n    super({\r\n      opacity: 1,\r\n      rotateWithView: rotateWithView,\r\n      rotation: options.rotation !== undefined ? options.rotation : 0,\r\n      scale: 1\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.hitDetectionCanvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default}\r\n     */\r\n    this.fill_ = options.fill !== undefined ? options.fill : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.origin_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.points_ = options.points;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\r\n      options.radius : options.radius1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.radius2_ = options.radius2;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.imageSize_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.hitDetectionImageSize_ = null;\r\n\r\n    this.render_();\r\n\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {RegularShape} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const style = new RegularShape({\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      points: this.getPoints(),\r\n      radius: this.getRadius(),\r\n      radius2: this.getRadius2(),\r\n      angle: this.getAngle(),\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView()\r\n    });\r\n    style.setOpacity(this.getOpacity());\r\n    style.setScale(this.getScale());\r\n    return style;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getAnchor() {\r\n    return this.anchor_;\r\n  }\r\n\r\n  /**\r\n   * Get the angle used in generating the shape.\r\n   * @return {number} Shape's rotation in radians.\r\n   * @api\r\n   */\r\n  getAngle() {\r\n    return this.angle_;\r\n  }\r\n\r\n  /**\r\n   * Get the fill style for the shape.\r\n   * @return {import(\"./Fill.js\").default} Fill style.\r\n   * @api\r\n   */\r\n  getFill() {\r\n    return this.fill_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getHitDetectionImage(pixelRatio) {\r\n    return this.hitDetectionCanvas_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getImage(pixelRatio) {\r\n    return this.canvas_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getImageSize() {\r\n    return this.imageSize_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getHitDetectionImageSize() {\r\n    return this.hitDetectionImageSize_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getImageState() {\r\n    return ImageState.LOADED;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getOrigin() {\r\n    return this.origin_;\r\n  }\r\n\r\n  /**\r\n   * Get the number of points for generating the shape.\r\n   * @return {number} Number of points for stars and regular polygons.\r\n   * @api\r\n   */\r\n  getPoints() {\r\n    return this.points_;\r\n  }\r\n\r\n  /**\r\n   * Get the (primary) radius for the shape.\r\n   * @return {number} Radius.\r\n   * @api\r\n   */\r\n  getRadius() {\r\n    return this.radius_;\r\n  }\r\n\r\n  /**\r\n   * Get the secondary radius for the shape.\r\n   * @return {number|undefined} Radius2.\r\n   * @api\r\n   */\r\n  getRadius2() {\r\n    return this.radius2_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return this.size_;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke style for the shape.\r\n   * @return {import(\"./Stroke.js\").default} Stroke style.\r\n   * @api\r\n   */\r\n  getStroke() {\r\n    return this.stroke_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  listenImageChange(listener, thisArg) {\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  load() {}\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  unlistenImageChange(listener, thisArg) {}\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  render_() {\r\n    let lineCap = '';\r\n    let lineJoin = '';\r\n    let miterLimit = 0;\r\n    let lineDash = null;\r\n    let lineDashOffset = 0;\r\n    let strokeStyle;\r\n    let strokeWidth = 0;\r\n\r\n    if (this.stroke_) {\r\n      strokeStyle = this.stroke_.getColor();\r\n      if (strokeStyle === null) {\r\n        strokeStyle = defaultStrokeStyle;\r\n      }\r\n      strokeStyle = asColorLike(strokeStyle);\r\n      strokeWidth = this.stroke_.getWidth();\r\n      if (strokeWidth === undefined) {\r\n        strokeWidth = defaultLineWidth;\r\n      }\r\n      lineDash = this.stroke_.getLineDash();\r\n      lineDashOffset = this.stroke_.getLineDashOffset();\r\n      lineJoin = this.stroke_.getLineJoin();\r\n      if (lineJoin === undefined) {\r\n        lineJoin = defaultLineJoin;\r\n      }\r\n      lineCap = this.stroke_.getLineCap();\r\n      if (lineCap === undefined) {\r\n        lineCap = defaultLineCap;\r\n      }\r\n      miterLimit = this.stroke_.getMiterLimit();\r\n      if (miterLimit === undefined) {\r\n        miterLimit = defaultMiterLimit;\r\n      }\r\n    }\r\n\r\n    let size = 2 * (this.radius_ + strokeWidth) + 1;\r\n\r\n    /** @type {RenderOptions} */\r\n    const renderOptions = {\r\n      strokeStyle: strokeStyle,\r\n      strokeWidth: strokeWidth,\r\n      size: size,\r\n      lineCap: lineCap,\r\n      lineDash: lineDash,\r\n      lineDashOffset: lineDashOffset,\r\n      lineJoin: lineJoin,\r\n      miterLimit: miterLimit\r\n    };\r\n\r\n    const context = createCanvasContext2D(size, size);\r\n    this.canvas_ = context.canvas;\r\n\r\n    // canvas.width and height are rounded to the closest integer\r\n    size = this.canvas_.width;\r\n    const imageSize = size;\r\n\r\n    this.draw_(renderOptions, context, 0, 0);\r\n\r\n    this.createHitDetectionCanvas_(renderOptions);\r\n\r\n    this.anchor_ = [size / 2, size / 2];\r\n    this.size_ = [size, size];\r\n    this.imageSize_ = [imageSize, imageSize];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   * @param {CanvasRenderingContext2D} context The rendering context.\r\n   * @param {number} x The origin for the symbol (x).\r\n   * @param {number} y The origin for the symbol (y).\r\n   */\r\n  draw_(renderOptions, context, x, y) {\r\n    let i, angle0, radiusC;\r\n    // reset transform\r\n    context.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    // then move to (x, y)\r\n    context.translate(x, y);\r\n\r\n    context.beginPath();\r\n\r\n    let points = this.points_;\r\n    if (points === Infinity) {\r\n      context.arc(\r\n        renderOptions.size / 2, renderOptions.size / 2,\r\n        this.radius_, 0, 2 * Math.PI, true);\r\n    } else {\r\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\r\n        : this.radius_;\r\n      if (radius2 !== this.radius_) {\r\n        points = 2 * points;\r\n      }\r\n      for (i = 0; i <= points; i++) {\r\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\r\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\r\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\r\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\r\n      }\r\n    }\r\n\r\n\r\n    if (this.fill_) {\r\n      let color = this.fill_.getColor();\r\n      if (color === null) {\r\n        color = defaultFillStyle;\r\n      }\r\n      context.fillStyle = asColorLike(color);\r\n      context.fill();\r\n    }\r\n    if (this.stroke_) {\r\n      context.strokeStyle = renderOptions.strokeStyle;\r\n      context.lineWidth = renderOptions.strokeWidth;\r\n      if (context.setLineDash && renderOptions.lineDash) {\r\n        context.setLineDash(renderOptions.lineDash);\r\n        context.lineDashOffset = renderOptions.lineDashOffset;\r\n      }\r\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\r\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\r\n      context.miterLimit = renderOptions.miterLimit;\r\n      context.stroke();\r\n    }\r\n    context.closePath();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   */\r\n  createHitDetectionCanvas_(renderOptions) {\r\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\r\n    if (this.fill_) {\r\n      this.hitDetectionCanvas_ = this.canvas_;\r\n      return;\r\n    }\r\n\r\n    // if no fill style is set, create an extra hit-detection image with a\r\n    // default fill style\r\n    const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\r\n    this.hitDetectionCanvas_ = context.canvas;\r\n\r\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   * @param {CanvasRenderingContext2D} context The context.\r\n   * @param {number} x The origin for the symbol (x).\r\n   * @param {number} y The origin for the symbol (y).\r\n   */\r\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\r\n    // reset transform\r\n    context.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    // then move to (x, y)\r\n    context.translate(x, y);\r\n\r\n    context.beginPath();\r\n\r\n    let points = this.points_;\r\n    if (points === Infinity) {\r\n      context.arc(\r\n        renderOptions.size / 2, renderOptions.size / 2,\r\n        this.radius_, 0, 2 * Math.PI, true);\r\n    } else {\r\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\r\n        : this.radius_;\r\n      if (radius2 !== this.radius_) {\r\n        points = 2 * points;\r\n      }\r\n      let i, radiusC, angle0;\r\n      for (i = 0; i <= points; i++) {\r\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\r\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\r\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\r\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\r\n      }\r\n    }\r\n\r\n    context.fillStyle = defaultFillStyle;\r\n    context.fill();\r\n    if (this.stroke_) {\r\n      context.strokeStyle = renderOptions.strokeStyle;\r\n      context.lineWidth = renderOptions.strokeWidth;\r\n      if (renderOptions.lineDash) {\r\n        context.setLineDash(renderOptions.lineDash);\r\n        context.lineDashOffset = renderOptions.lineDashOffset;\r\n      }\r\n      context.stroke();\r\n    }\r\n    context.closePath();\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default RegularShape;\r\n","/**\r\n * @module ol/style/Circle\r\n */\r\n\r\nimport RegularShape from './RegularShape.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} radius Circle radius.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set circle style for vector features.\r\n * @api\r\n */\r\nclass CircleStyle extends RegularShape {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || /** @type {Options} */ ({});\r\n\r\n    super({\r\n      points: Infinity,\r\n      fill: options.fill,\r\n      radius: options.radius,\r\n      stroke: options.stroke\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * Clones the style.\r\n  * @return {CircleStyle} The cloned style.\r\n  * @override\r\n  * @api\r\n  */\r\n  clone() {\r\n    const style = new CircleStyle({\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      radius: this.getRadius()\r\n    });\r\n    style.setOpacity(this.getOpacity());\r\n    style.setScale(this.getScale());\r\n    return style;\r\n  }\r\n\r\n  /**\r\n  * Set the circle radius.\r\n  *\r\n  * @param {number} radius Circle radius.\r\n  * @api\r\n  */\r\n  setRadius(radius) {\r\n    this.radius_ = radius;\r\n  }\r\n}\r\n\r\n\r\nexport default CircleStyle;\r\n","/**\r\n * @module ol/style/Fill\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set fill style for vector features.\r\n * @api\r\n */\r\nclass Fill {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\r\n     */\r\n    this.color_ = options.color !== undefined ? options.color : null;\r\n  }\r\n\r\n  /**\r\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\r\n   * @return {Fill} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const color = this.getColor();\r\n    return new Fill({\r\n      color: Array.isArray(color) ? color.slice() : color || undefined\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the fill color.\r\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\r\n   * @api\r\n   */\r\n  getColor() {\r\n    return this.color_;\r\n  }\r\n\r\n  /**\r\n   * Set the color.\r\n   *\r\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\r\n   * @api\r\n   */\r\n  setColor(color) {\r\n    this.color_ = color;\r\n  }\r\n\r\n}\r\n\r\nexport default Fill;\r\n","/**\r\n * @module ol/style/Stroke\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\r\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\r\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\r\n * @property {number} [lineDashOffset=0] Line dash offset.\r\n * @property {number} [miterLimit=10] Miter limit.\r\n * @property {number} [width] Width.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set stroke style for vector features.\r\n * Note that the defaults given are the Canvas defaults, which will be used if\r\n * option is not defined. The `get` functions return whatever was entered in\r\n * the options; they will not return the default.\r\n * @api\r\n */\r\nclass Stroke {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\r\n     */\r\n    this.color_ = options.color !== undefined ? options.color : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.lineCap_ = options.lineCap;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lineDashOffset_ = options.lineDashOffset;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.lineJoin_ = options.lineJoin;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.miterLimit_ = options.miterLimit;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.width_ = options.width;\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {Stroke} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const color = this.getColor();\r\n    return new Stroke({\r\n      color: Array.isArray(color) ? color.slice() : color || undefined,\r\n      lineCap: this.getLineCap(),\r\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\r\n      lineDashOffset: this.getLineDashOffset(),\r\n      lineJoin: this.getLineJoin(),\r\n      miterLimit: this.getMiterLimit(),\r\n      width: this.getWidth()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the stroke color.\r\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\r\n   * @api\r\n   */\r\n  getColor() {\r\n    return this.color_;\r\n  }\r\n\r\n  /**\r\n   * Get the line cap type for the stroke.\r\n   * @return {string|undefined} Line cap.\r\n   * @api\r\n   */\r\n  getLineCap() {\r\n    return this.lineCap_;\r\n  }\r\n\r\n  /**\r\n   * Get the line dash style for the stroke.\r\n   * @return {Array<number>} Line dash.\r\n   * @api\r\n   */\r\n  getLineDash() {\r\n    return this.lineDash_;\r\n  }\r\n\r\n  /**\r\n   * Get the line dash offset for the stroke.\r\n   * @return {number|undefined} Line dash offset.\r\n   * @api\r\n   */\r\n  getLineDashOffset() {\r\n    return this.lineDashOffset_;\r\n  }\r\n\r\n  /**\r\n   * Get the line join type for the stroke.\r\n   * @return {string|undefined} Line join.\r\n   * @api\r\n   */\r\n  getLineJoin() {\r\n    return this.lineJoin_;\r\n  }\r\n\r\n  /**\r\n   * Get the miter limit for the stroke.\r\n   * @return {number|undefined} Miter limit.\r\n   * @api\r\n   */\r\n  getMiterLimit() {\r\n    return this.miterLimit_;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke width.\r\n   * @return {number|undefined} Width.\r\n   * @api\r\n   */\r\n  getWidth() {\r\n    return this.width_;\r\n  }\r\n\r\n  /**\r\n   * Set the color.\r\n   *\r\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\r\n   * @api\r\n   */\r\n  setColor(color) {\r\n    this.color_ = color;\r\n  }\r\n\r\n  /**\r\n   * Set the line cap.\r\n   *\r\n   * @param {string|undefined} lineCap Line cap.\r\n   * @api\r\n   */\r\n  setLineCap(lineCap) {\r\n    this.lineCap_ = lineCap;\r\n  }\r\n\r\n  /**\r\n   * Set the line dash.\r\n   *\r\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\r\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\r\n   * property will have no visual effect in these browsers.\r\n   *\r\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\r\n   *\r\n   * @param {Array<number>} lineDash Line dash.\r\n   * @api\r\n   */\r\n  setLineDash(lineDash) {\r\n    this.lineDash_ = lineDash;\r\n  }\r\n\r\n  /**\r\n   * Set the line dash offset.\r\n   *\r\n   * @param {number|undefined} lineDashOffset Line dash offset.\r\n   * @api\r\n   */\r\n  setLineDashOffset(lineDashOffset) {\r\n    this.lineDashOffset_ = lineDashOffset;\r\n  }\r\n\r\n  /**\r\n   * Set the line join.\r\n   *\r\n   * @param {string|undefined} lineJoin Line join.\r\n   * @api\r\n   */\r\n  setLineJoin(lineJoin) {\r\n    this.lineJoin_ = lineJoin;\r\n  }\r\n\r\n  /**\r\n   * Set the miter limit.\r\n   *\r\n   * @param {number|undefined} miterLimit Miter limit.\r\n   * @api\r\n   */\r\n  setMiterLimit(miterLimit) {\r\n    this.miterLimit_ = miterLimit;\r\n  }\r\n\r\n  /**\r\n   * Set the width.\r\n   *\r\n   * @param {number|undefined} width Width.\r\n   * @api\r\n   */\r\n  setWidth(width) {\r\n    this.width_ = width;\r\n  }\r\n\r\n}\r\n\r\nexport default Stroke;\r\n","/**\r\n * @module ol/style/Style\r\n */\r\n\r\n/**\r\n * Feature styles.\r\n *\r\n * If no style is defined, the following default style is used:\r\n * ```js\r\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\r\n *\r\n *  var fill = new Fill({\r\n *    color: 'rgba(255,255,255,0.4)'\r\n *  });\r\n *  var stroke = new Stroke({\r\n *    color: '#3399CC',\r\n *    width: 1.25\r\n *  });\r\n *  var styles = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        fill: fill,\r\n *        stroke: stroke,\r\n *        radius: 5\r\n *      }),\r\n *      fill: fill,\r\n *      stroke: stroke\r\n *    })\r\n *  ];\r\n * ```\r\n *\r\n * A separate editing style has the following defaults:\r\n * ```js\r\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\r\n *  import GeometryType from 'ol/geom/GeometryType';\r\n *\r\n *  var white = [255, 255, 255, 1];\r\n *  var blue = [0, 153, 255, 1];\r\n *  var width = 3;\r\n *  styles[GeometryType.POLYGON] = [\r\n *    new Style({\r\n *      fill: new Fill({\r\n *        color: [255, 255, 255, 0.5]\r\n *      })\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_POLYGON] =\r\n *      styles[GeometryType.POLYGON];\r\n *  styles[GeometryType.LINE_STRING] = [\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: white,\r\n *        width: width + 2\r\n *      })\r\n *    }),\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: blue,\r\n *        width: width\r\n *      })\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_LINE_STRING] =\r\n *      styles[GeometryType.LINE_STRING];\r\n *  styles[GeometryType.POINT] = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        radius: width * 2,\r\n *        fill: new Fill({\r\n *          color: blue\r\n *        }),\r\n *        stroke: new Stroke({\r\n *          color: white,\r\n *          width: width / 2\r\n *        })\r\n *      }),\r\n *      zIndex: Infinity\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_POINT] =\r\n *      styles[GeometryType.POINT];\r\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\r\n *      styles[GeometryType.POLYGON].concat(\r\n *          styles[GeometryType.LINE_STRING],\r\n *          styles[GeometryType.POINT]\r\n *      );\r\n * ```\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport CircleStyle from './Circle.js';\r\nimport Fill from './Fill.js';\r\nimport Stroke from './Stroke.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature} and a `{number}`\r\n * representing the view's resolution. The function should return a\r\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\r\n * vector layer can be styled.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\r\n */\r\n\r\n/**\r\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\r\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\r\n */\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature} as argument and returns an\r\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\r\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\r\n */\r\n\r\n\r\n/**\r\n * Custom renderer function. Takes two arguments:\r\n *\r\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\r\n * 2. The {@link module:ol/render~State} of the layer renderer.\r\n *\r\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\r\n * RenderFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\r\n * or function returning a geometry to render for this style.\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {import(\"./Image.js\").default} [image] Image style.\r\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\r\n * ignored, and the provided function will be called with each render frame for each geometry.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./Text.js\").default} [text] Text style.\r\n * @property {number} [zIndex] Z index.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Container for vector feature rendering styles. Any changes made to the style\r\n * or its children through `set*()` methods will not take effect until the\r\n * feature or layer that uses the style is re-rendered.\r\n * @api\r\n */\r\nclass Style {\r\n  /**\r\n   * @param {Options=} opt_options Style options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\r\n     */\r\n    this.geometry_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!GeometryFunction}\r\n     */\r\n    this.geometryFunction_ = defaultGeometryFunction;\r\n\r\n    if (options.geometry !== undefined) {\r\n      this.setGeometry(options.geometry);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default}\r\n     */\r\n    this.fill_ = options.fill !== undefined ? options.fill : null;\r\n\r\n    /**\r\n       * @private\r\n       * @type {import(\"./Image.js\").default}\r\n       */\r\n    this.image_ = options.image !== undefined ? options.image : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RenderFunction|null}\r\n     */\r\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Text.js\").default}\r\n     */\r\n    this.text_ = options.text !== undefined ? options.text : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.zIndex_ = options.zIndex;\r\n\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {Style} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    let geometry = this.getGeometry();\r\n    if (geometry && typeof geometry === 'object') {\r\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\r\n    }\r\n    return new Style({\r\n      geometry: geometry,\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      image: this.getImage() ? this.getImage().clone() : undefined,\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      text: this.getText() ? this.getText().clone() : undefined,\r\n      zIndex: this.getZIndex()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the custom renderer function that was configured with\r\n   * {@link #setRenderer} or the `renderer` constructor option.\r\n   * @return {RenderFunction|null} Custom renderer function.\r\n   * @api\r\n   */\r\n  getRenderer() {\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\r\n   * and `image` options of the style will be ignored.\r\n   * @param {RenderFunction|null} renderer Custom renderer function.\r\n   * @api\r\n   */\r\n  setRenderer(renderer) {\r\n    this.renderer_ = renderer;\r\n  }\r\n\r\n  /**\r\n   * Get the geometry to be rendered.\r\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\r\n   * Feature property or geometry or function that returns the geometry that will\r\n   * be rendered with this style.\r\n   * @api\r\n   */\r\n  getGeometry() {\r\n    return this.geometry_;\r\n  }\r\n\r\n  /**\r\n   * Get the function used to generate a geometry for rendering.\r\n   * @return {!GeometryFunction} Function that is called with a feature\r\n   * and returns the geometry to render instead of the feature's geometry.\r\n   * @api\r\n   */\r\n  getGeometryFunction() {\r\n    return this.geometryFunction_;\r\n  }\r\n\r\n  /**\r\n   * Get the fill style.\r\n   * @return {import(\"./Fill.js\").default} Fill style.\r\n   * @api\r\n   */\r\n  getFill() {\r\n    return this.fill_;\r\n  }\r\n\r\n  /**\r\n   * Set the fill style.\r\n   * @param {import(\"./Fill.js\").default} fill Fill style.\r\n   * @api\r\n   */\r\n  setFill(fill) {\r\n    this.fill_ = fill;\r\n  }\r\n\r\n  /**\r\n   * Get the image style.\r\n   * @return {import(\"./Image.js\").default} Image style.\r\n   * @api\r\n   */\r\n  getImage() {\r\n    return this.image_;\r\n  }\r\n\r\n  /**\r\n   * Set the image style.\r\n   * @param {import(\"./Image.js\").default} image Image style.\r\n   * @api\r\n   */\r\n  setImage(image) {\r\n    this.image_ = image;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke style.\r\n   * @return {import(\"./Stroke.js\").default} Stroke style.\r\n   * @api\r\n   */\r\n  getStroke() {\r\n    return this.stroke_;\r\n  }\r\n\r\n  /**\r\n   * Set the stroke style.\r\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setStroke(stroke) {\r\n    this.stroke_ = stroke;\r\n  }\r\n\r\n  /**\r\n   * Get the text style.\r\n   * @return {import(\"./Text.js\").default} Text style.\r\n   * @api\r\n   */\r\n  getText() {\r\n    return this.text_;\r\n  }\r\n\r\n  /**\r\n   * Set the text style.\r\n   * @param {import(\"./Text.js\").default} text Text style.\r\n   * @api\r\n   */\r\n  setText(text) {\r\n    this.text_ = text;\r\n  }\r\n\r\n  /**\r\n   * Get the z-index for the style.\r\n   * @return {number|undefined} ZIndex.\r\n   * @api\r\n   */\r\n  getZIndex() {\r\n    return this.zIndex_;\r\n  }\r\n\r\n  /**\r\n   * Set a geometry that is rendered instead of the feature's geometry.\r\n   *\r\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\r\n   *     Feature property or geometry or function returning a geometry to render\r\n   *     for this style.\r\n   * @api\r\n   */\r\n  setGeometry(geometry) {\r\n    if (typeof geometry === 'function') {\r\n      this.geometryFunction_ = geometry;\r\n    } else if (typeof geometry === 'string') {\r\n      this.geometryFunction_ = function(feature) {\r\n        return (\r\n          /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\r\n        );\r\n      };\r\n    } else if (!geometry) {\r\n      this.geometryFunction_ = defaultGeometryFunction;\r\n    } else if (geometry !== undefined) {\r\n      this.geometryFunction_ = function() {\r\n        return (\r\n          /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\r\n        );\r\n      };\r\n    }\r\n    this.geometry_ = geometry;\r\n  }\r\n\r\n  /**\r\n   * Set the z-index.\r\n   *\r\n   * @param {number|undefined} zIndex ZIndex.\r\n   * @api\r\n   */\r\n  setZIndex(zIndex) {\r\n    this.zIndex_ = zIndex;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Convert the provided object into a style function.  Functions passed through\r\n * unchanged.  Arrays of Style or single style objects wrapped in a\r\n * new style function.\r\n * @param {StyleFunction|Array<Style>|Style} obj\r\n *     A style function, a single style, or an array of styles.\r\n * @return {StyleFunction} A style function.\r\n */\r\nexport function toFunction(obj) {\r\n  let styleFunction;\r\n\r\n  if (typeof obj === 'function') {\r\n    styleFunction = obj;\r\n  } else {\r\n    /**\r\n     * @type {Array<Style>}\r\n     */\r\n    let styles;\r\n    if (Array.isArray(obj)) {\r\n      styles = obj;\r\n    } else {\r\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\r\n        41); // Expected an `Style` or an array of `Style`\r\n      const style = /** @type {Style} */ (obj);\r\n      styles = [style];\r\n    }\r\n    styleFunction = function() {\r\n      return styles;\r\n    };\r\n  }\r\n  return styleFunction;\r\n}\r\n\r\n\r\n/**\r\n * @type {Array<Style>}\r\n */\r\nlet defaultStyles = null;\r\n\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<Style>} Style.\r\n */\r\nexport function createDefaultStyle(feature, resolution) {\r\n  // We don't use an immediately-invoked function\r\n  // and a closure so we don't get an error at script evaluation time in\r\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\r\n  // canvas.getContext('2d') at construction time, which will cause an.error\r\n  // in such browsers.)\r\n  if (!defaultStyles) {\r\n    const fill = new Fill({\r\n      color: 'rgba(255,255,255,0.4)'\r\n    });\r\n    const stroke = new Stroke({\r\n      color: '#3399CC',\r\n      width: 1.25\r\n    });\r\n    defaultStyles = [\r\n      new Style({\r\n        image: new CircleStyle({\r\n          fill: fill,\r\n          stroke: stroke,\r\n          radius: 5\r\n        }),\r\n        fill: fill,\r\n        stroke: stroke\r\n      })\r\n    ];\r\n  }\r\n  return defaultStyles;\r\n}\r\n\r\n\r\n/**\r\n * Default styles for editing features.\r\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\r\n */\r\nexport function createEditingStyle() {\r\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\r\n  const styles = {};\r\n  const white = [255, 255, 255, 1];\r\n  const blue = [0, 153, 255, 1];\r\n  const width = 3;\r\n  styles[GeometryType.POLYGON] = [\r\n    new Style({\r\n      fill: new Fill({\r\n        color: [255, 255, 255, 0.5]\r\n      })\r\n    })\r\n  ];\r\n  styles[GeometryType.MULTI_POLYGON] =\r\n      styles[GeometryType.POLYGON];\r\n\r\n  styles[GeometryType.LINE_STRING] = [\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: white,\r\n        width: width + 2\r\n      })\r\n    }),\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: blue,\r\n        width: width\r\n      })\r\n    })\r\n  ];\r\n  styles[GeometryType.MULTI_LINE_STRING] =\r\n      styles[GeometryType.LINE_STRING];\r\n\r\n  styles[GeometryType.CIRCLE] =\r\n      styles[GeometryType.POLYGON].concat(\r\n        styles[GeometryType.LINE_STRING]\r\n      );\r\n\r\n\r\n  styles[GeometryType.POINT] = [\r\n    new Style({\r\n      image: new CircleStyle({\r\n        radius: width * 2,\r\n        fill: new Fill({\r\n          color: blue\r\n        }),\r\n        stroke: new Stroke({\r\n          color: white,\r\n          width: width / 2\r\n        })\r\n      }),\r\n      zIndex: Infinity\r\n    })\r\n  ];\r\n  styles[GeometryType.MULTI_POINT] =\r\n      styles[GeometryType.POINT];\r\n\r\n  styles[GeometryType.GEOMETRY_COLLECTION] =\r\n      styles[GeometryType.POLYGON].concat(\r\n        styles[GeometryType.LINE_STRING],\r\n        styles[GeometryType.POINT]\r\n      );\r\n\r\n  return styles;\r\n}\r\n\r\n\r\n/**\r\n * Function that is called with a feature and returns its default geometry.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\r\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\r\n */\r\nfunction defaultGeometryFunction(feature) {\r\n  return feature.getGeometry();\r\n}\r\n\r\nexport default Style;\r\n","/**\r\n * @module ol/layer/BaseVector\r\n */\r\nimport Layer from './Layer.js';\r\nimport {assign} from '../obj.js';\r\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\r\n * renderer when getting features from the vector source for the rendering or hit-detection.\r\n * Recommended value: the size of the largest symbol, line width or label.\r\n * @property {import(\"../source/Vector.js\").default} [source] Source.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\r\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\r\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\r\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\r\n * higher priority.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\r\n * be recreated during animations. This means that no vectors will be shown clipped, but the\r\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\r\n * batches will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\r\n * be recreated during interactions. See also `updateWhileAnimating`.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  RENDER_ORDER: 'renderOrder'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\r\n * @extends {Layer<VectorSourceType>}\r\n * @api\r\n */\r\nclass BaseVectorLayer extends Layer {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ?\r\n      opt_options : /** @type {Options} */ ({});\r\n\r\n    const baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.style;\r\n    delete baseOptions.renderBuffer;\r\n    delete baseOptions.updateWhileAnimating;\r\n    delete baseOptions.updateWhileInteracting;\r\n    super(baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\r\n      options.renderBuffer : 100;\r\n\r\n    /**\r\n     * User provided style.\r\n     * @type {import(\"../style/Style.js\").StyleLike}\r\n     * @private\r\n     */\r\n    this.style_ = null;\r\n\r\n    /**\r\n     * Style function for use within the library.\r\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\r\n     * @private\r\n     */\r\n    this.styleFunction_ = undefined;\r\n\r\n    this.setStyle(options.style);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\r\n      options.updateWhileAnimating : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\r\n      options.updateWhileInteracting : false;\r\n\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Declutter.\r\n   */\r\n  getDeclutter() {\r\n    return this.declutter_;\r\n  }\r\n\r\n  /**\r\n   * @return {number|undefined} Render buffer.\r\n   */\r\n  getRenderBuffer() {\r\n    return this.renderBuffer_;\r\n  }\r\n\r\n  /**\r\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\r\n   *     order.\r\n   */\r\n  getRenderOrder() {\r\n    return (\r\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the style for features.  This returns whatever was passed to the `style`\r\n   * option at construction or to the `setStyle` method.\r\n   * @return {import(\"../style/Style.js\").StyleLike}\r\n   *     Layer style.\r\n   * @api\r\n   */\r\n  getStyle() {\r\n    return this.style_;\r\n  }\r\n\r\n  /**\r\n   * Get the style function.\r\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\r\n   * @api\r\n   */\r\n  getStyleFunction() {\r\n    return this.styleFunction_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether the rendered layer should be updated while\r\n   *     animating.\r\n   */\r\n  getUpdateWhileAnimating() {\r\n    return this.updateWhileAnimating_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether the rendered layer should be updated while\r\n   *     interacting.\r\n   */\r\n  getUpdateWhileInteracting() {\r\n    return this.updateWhileInteracting_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\r\n   *     Render order.\r\n   */\r\n  setRenderOrder(renderOrder) {\r\n    this.set(Property.RENDER_ORDER, renderOrder);\r\n  }\r\n\r\n  /**\r\n   * Set the style for features.  This can be a single style object, an array\r\n   * of styles, or a function that takes a feature and resolution and returns\r\n   * an array of styles. If it is `undefined` the default style is used. If\r\n   * it is `null` the layer has no style (a `null` style), so only features\r\n   * that have their own styles will be rendered in the layer. See\r\n   * {@link module:ol/style} for information on the default style.\r\n   * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\r\n   * @api\r\n   */\r\n  setStyle(style) {\r\n    this.style_ = style !== undefined ? style : createDefaultStyle;\r\n    this.styleFunction_ = style === null ?\r\n      undefined : toStyleFunction(this.style_);\r\n    this.changed();\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default BaseVectorLayer;\r\n","/**\r\n * @module ol/render/canvas/Instruction\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nconst Instruction = {\r\n  BEGIN_GEOMETRY: 0,\r\n  BEGIN_PATH: 1,\r\n  CIRCLE: 2,\r\n  CLOSE_PATH: 3,\r\n  CUSTOM: 4,\r\n  DRAW_CHARS: 5,\r\n  DRAW_IMAGE: 6,\r\n  END_GEOMETRY: 7,\r\n  FILL: 8,\r\n  MOVE_TO_LINE_TO: 9,\r\n  SET_FILL_STYLE: 10,\r\n  SET_STROKE_STYLE: 11,\r\n  STROKE: 12\r\n};\r\n\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const fillInstruction = [Instruction.FILL];\r\n\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const strokeInstruction = [Instruction.STROKE];\r\n\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\r\n\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\r\n\r\n\r\nexport default Instruction;\r\n","/**\r\n * @module ol/render/canvas/Builder\r\n */\r\nimport {equals, reverseSubArray} from '../../array.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {buffer, clone, coordinateRelationship} from '../../extent.js';\r\nimport Relationship from '../../extent/Relationship.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport {defaultFillStyle, defaultStrokeStyle,\r\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\r\n  defaultLineDash, defaultLineCap} from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} SerializableInstructions\r\n * @property {Array<*>} instructions The rendering instructions.\r\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\r\n * @property {Array<number>} coordinates The array of all coordinates.\r\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\r\n */\r\n\r\n\r\nclass CanvasBuilder extends VectorContext {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.tolerance = tolerance;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent = maxExtent;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.maxLineWidth = 0;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction1_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction2_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.bufferedMaxExtent_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.instructions = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.coordinates = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../coordinate.js\").Coordinate}\r\n     */\r\n    this.tmpCoordinate_ = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.hitDetectionInstructions = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../canvas.js\").FillStrokeState}\r\n     */\r\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\r\n\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Array<number>} dashArray Dash array.\r\n   * @return {Array<number>} Dash array with pixel ratio applied\r\n   */\r\n  applyPixelRatio(dashArray) {\r\n    const pixelRatio = this.pixelRatio;\r\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\r\n      return dash * pixelRatio;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} closed Last input coordinate equals first.\r\n   * @param {boolean} skipFirst Skip first coordinate.\r\n   * @protected\r\n   * @return {number} My end.\r\n   */\r\n  appendFlatCoordinates(flatCoordinates, offset, end, stride, closed, skipFirst) {\r\n\r\n    let myEnd = this.coordinates.length;\r\n    const extent = this.getBufferedMaxExtent();\r\n    if (skipFirst) {\r\n      offset += stride;\r\n    }\r\n    let lastXCoord = flatCoordinates[offset];\r\n    let lastYCoord = flatCoordinates[offset + 1];\r\n    const nextCoord = this.tmpCoordinate_;\r\n    let skipped = true;\r\n\r\n    let i, lastRel, nextRel;\r\n    for (i = offset + stride; i < end; i += stride) {\r\n      nextCoord[0] = flatCoordinates[i];\r\n      nextCoord[1] = flatCoordinates[i + 1];\r\n      nextRel = coordinateRelationship(extent, nextCoord);\r\n      if (nextRel !== lastRel) {\r\n        if (skipped) {\r\n          this.coordinates[myEnd++] = lastXCoord;\r\n          this.coordinates[myEnd++] = lastYCoord;\r\n        }\r\n        this.coordinates[myEnd++] = nextCoord[0];\r\n        this.coordinates[myEnd++] = nextCoord[1];\r\n        skipped = false;\r\n      } else if (nextRel === Relationship.INTERSECTING) {\r\n        this.coordinates[myEnd++] = nextCoord[0];\r\n        this.coordinates[myEnd++] = nextCoord[1];\r\n        skipped = false;\r\n      } else {\r\n        skipped = true;\r\n      }\r\n      lastXCoord = nextCoord[0];\r\n      lastYCoord = nextCoord[1];\r\n      lastRel = nextRel;\r\n    }\r\n\r\n    // Last coordinate equals first or only one point to append:\r\n    if ((closed && skipped) || i === offset + stride) {\r\n      this.coordinates[myEnd++] = lastXCoord;\r\n      this.coordinates[myEnd++] = lastYCoord;\r\n    }\r\n    return myEnd;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @param {Array<number>} builderEnds Builder ends.\r\n   * @return {number} Offset.\r\n   */\r\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\r\n      builderEnds.push(builderEnd);\r\n      offset = end;\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc.\r\n   */\r\n  drawCustom(geometry, feature, renderer) {\r\n    this.beginGeometry(feature);\r\n    const type = geometry.getType();\r\n    const stride = geometry.getStride();\r\n    const builderBegin = this.coordinates.length;\r\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\r\n    let offset;\r\n    if (type == GeometryType.MULTI_POLYGON) {\r\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\r\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n      builderEndss = [];\r\n      const endss = geometry.getEndss();\r\n      offset = 0;\r\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n        const myEnds = [];\r\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\r\n        builderEndss.push(myEnds);\r\n      }\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\r\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\r\n      builderEnds = [];\r\n      flatCoordinates = (type == GeometryType.POLYGON) ?\r\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\r\n        geometry.getFlatCoordinates();\r\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\r\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\r\n        stride, builderEnds);\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\r\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      builderEnd = this.appendFlatCoordinates(\r\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\r\n    } else if (type == GeometryType.POINT) {\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n      builderEnd = this.coordinates.length;\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        builderBegin, builderEnd, geometry, renderer]);\r\n    }\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  beginGeometry(feature) {\r\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\r\n    this.instructions.push(this.beginGeometryInstruction1_);\r\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\r\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\r\n  }\r\n\r\n  /**\r\n   * @return {SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    return {\r\n      instructions: this.instructions,\r\n      hitDetectionInstructions: this.hitDetectionInstructions,\r\n      coordinates: this.coordinates\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reverse the hit detection instructions.\r\n   */\r\n  reverseHitDetectionInstructions() {\r\n    const hitDetectionInstructions = this.hitDetectionInstructions;\r\n    // step 1 - reverse array\r\n    hitDetectionInstructions.reverse();\r\n    // step 2 - reverse instructions within geometry blocks\r\n    let i;\r\n    const n = hitDetectionInstructions.length;\r\n    let instruction;\r\n    let type;\r\n    let begin = -1;\r\n    for (i = 0; i < n; ++i) {\r\n      instruction = hitDetectionInstructions[i];\r\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\r\n      if (type == CanvasInstruction.END_GEOMETRY) {\r\n        begin = i;\r\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\r\n        instruction[2] = i;\r\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\r\n        begin = -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {\r\n    const state = this.state;\r\n    if (fillStyle) {\r\n      const fillStyleColor = fillStyle.getColor();\r\n      state.fillStyle = asColorLike(fillStyleColor ?\r\n        fillStyleColor : defaultFillStyle);\r\n    } else {\r\n      state.fillStyle = undefined;\r\n    }\r\n    if (strokeStyle) {\r\n      const strokeStyleColor = strokeStyle.getColor();\r\n      state.strokeStyle = asColorLike(strokeStyleColor ?\r\n        strokeStyleColor : defaultStrokeStyle);\r\n      const strokeStyleLineCap = strokeStyle.getLineCap();\r\n      state.lineCap = strokeStyleLineCap !== undefined ?\r\n        strokeStyleLineCap : defaultLineCap;\r\n      const strokeStyleLineDash = strokeStyle.getLineDash();\r\n      state.lineDash = strokeStyleLineDash ?\r\n        strokeStyleLineDash.slice() : defaultLineDash;\r\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      state.lineDashOffset = strokeStyleLineDashOffset ?\r\n        strokeStyleLineDashOffset : defaultLineDashOffset;\r\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\r\n        strokeStyleLineJoin : defaultLineJoin;\r\n      const strokeStyleWidth = strokeStyle.getWidth();\r\n      state.lineWidth = strokeStyleWidth !== undefined ?\r\n        strokeStyleWidth : defaultLineWidth;\r\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\r\n        strokeStyleMiterLimit : defaultMiterLimit;\r\n\r\n      if (state.lineWidth > this.maxLineWidth) {\r\n        this.maxLineWidth = state.lineWidth;\r\n        // invalidate the buffered max extent cache\r\n        this.bufferedMaxExtent_ = null;\r\n      }\r\n    } else {\r\n      state.strokeStyle = undefined;\r\n      state.lineCap = undefined;\r\n      state.lineDash = null;\r\n      state.lineDashOffset = undefined;\r\n      state.lineJoin = undefined;\r\n      state.lineWidth = undefined;\r\n      state.miterLimit = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @return {Array<*>} Fill instruction.\r\n   */\r\n  createFill(state) {\r\n    const fillStyle = state.fillStyle;\r\n    /** @type {Array<*>} */\r\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\r\n    if (typeof fillStyle !== 'string') {\r\n      // Fill is a pattern or gradient - align it!\r\n      fillInstruction.push(true);\r\n    }\r\n    return fillInstruction;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   */\r\n  applyStroke(state) {\r\n    this.instructions.push(this.createStroke(state));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @return {Array<*>} Stroke instruction.\r\n   */\r\n  createStroke(state) {\r\n    return [\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\r\n      state.lineJoin, state.miterLimit,\r\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\r\n   */\r\n  updateFillStyle(state, createFill) {\r\n    const fillStyle = state.fillStyle;\r\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\r\n      if (fillStyle !== undefined) {\r\n        this.instructions.push(createFill.call(this, state));\r\n      }\r\n      state.currentFillStyle = fillStyle;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\r\n   */\r\n  updateStrokeStyle(state, applyStroke) {\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineCap = state.lineCap;\r\n    const lineDash = state.lineDash;\r\n    const lineDashOffset = state.lineDashOffset;\r\n    const lineJoin = state.lineJoin;\r\n    const lineWidth = state.lineWidth;\r\n    const miterLimit = state.miterLimit;\r\n    if (state.currentStrokeStyle != strokeStyle ||\r\n        state.currentLineCap != lineCap ||\r\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\r\n        state.currentLineDashOffset != lineDashOffset ||\r\n        state.currentLineJoin != lineJoin ||\r\n        state.currentLineWidth != lineWidth ||\r\n        state.currentMiterLimit != miterLimit) {\r\n      if (strokeStyle !== undefined) {\r\n        applyStroke.call(this, state);\r\n      }\r\n      state.currentStrokeStyle = strokeStyle;\r\n      state.currentLineCap = lineCap;\r\n      state.currentLineDash = lineDash;\r\n      state.currentLineDashOffset = lineDashOffset;\r\n      state.currentLineJoin = lineJoin;\r\n      state.currentLineWidth = lineWidth;\r\n      state.currentMiterLimit = miterLimit;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  endGeometry(feature) {\r\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\r\n    this.beginGeometryInstruction1_ = null;\r\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\r\n    this.beginGeometryInstruction2_ = null;\r\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\r\n    this.instructions.push(endGeometryInstruction);\r\n    this.hitDetectionInstructions.push(endGeometryInstruction);\r\n  }\r\n\r\n  /**\r\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\r\n   * provided to the constructor.  To account for symbolizers that may intersect\r\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\r\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\r\n   * @protected\r\n   */\r\n  getBufferedMaxExtent() {\r\n    if (!this.bufferedMaxExtent_) {\r\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\r\n      if (this.maxLineWidth > 0) {\r\n        const width = this.resolution * (this.maxLineWidth + 1) / 2;\r\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\r\n      }\r\n    }\r\n    return this.bufferedMaxExtent_;\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasBuilder;\r\n","/**\r\n * @module ol/render/canvas/ImageBuilder\r\n */\r\nimport CanvasInstruction from './Instruction.js';\r\nimport CanvasBuilder from './Builder.js';\r\n\r\nclass CanvasImageBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../canvas.js\").DeclutterGroup}\r\n     */\r\n    this.declutterGroup_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n     */\r\n    this.hitDetectionImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.anchorX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.anchorY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.height_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.opacity_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.originX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.originY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.rotateWithView_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.scale_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.width_ = undefined;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} My end.\r\n   */\r\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\r\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  drawPoint(pointGeometry, feature) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    this.beginGeometry(feature);\r\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\r\n    const stride = pointGeometry.getStride();\r\n    const myBegin = this.coordinates.length;\r\n    const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n      this.scale_ * this.pixelRatio, this.width_\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n      this.scale_, this.width_\r\n    ]);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  drawMultiPoint(multiPointGeometry, feature) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    this.beginGeometry(feature);\r\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\r\n    const stride = multiPointGeometry.getStride();\r\n    const myBegin = this.coordinates.length;\r\n    const myEnd = this.drawCoordinates_(\r\n      flatCoordinates, 0, flatCoordinates.length, stride);\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n      this.scale_ * this.pixelRatio, this.width_\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n      this.scale_, this.width_\r\n    ]);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  finish() {\r\n    this.reverseHitDetectionInstructions();\r\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\r\n    this.anchorX_ = undefined;\r\n    this.anchorY_ = undefined;\r\n    this.hitDetectionImage_ = null;\r\n    this.image_ = null;\r\n    this.height_ = undefined;\r\n    this.scale_ = undefined;\r\n    this.opacity_ = undefined;\r\n    this.originX_ = undefined;\r\n    this.originY_ = undefined;\r\n    this.rotateWithView_ = undefined;\r\n    this.rotation_ = undefined;\r\n    this.width_ = undefined;\r\n    return super.finish();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setImageStyle(imageStyle, declutterGroup) {\r\n    const anchor = imageStyle.getAnchor();\r\n    const size = imageStyle.getSize();\r\n    const hitDetectionImage = imageStyle.getHitDetectionImage(1);\r\n    const image = imageStyle.getImage(1);\r\n    const origin = imageStyle.getOrigin();\r\n    this.anchorX_ = anchor[0];\r\n    this.anchorY_ = anchor[1];\r\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\r\n    this.hitDetectionImage_ = hitDetectionImage;\r\n    this.image_ = image;\r\n    this.height_ = size[1];\r\n    this.opacity_ = imageStyle.getOpacity();\r\n    this.originX_ = origin[0];\r\n    this.originY_ = origin[1];\r\n    this.rotateWithView_ = imageStyle.getRotateWithView();\r\n    this.rotation_ = imageStyle.getRotation();\r\n    this.scale_ = imageStyle.getScale();\r\n    this.width_ = size[0];\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasImageBuilder;\r\n","/**\r\n * @module ol/render/canvas/LineStringBuilder\r\n */\r\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\r\nimport CanvasBuilder from './Builder.js';\r\n\r\nclass CanvasLineStringBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} end.\r\n   */\r\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\r\n    const myBegin = this.coordinates.length;\r\n    const myEnd = this.appendFlatCoordinates(\r\n      flatCoordinates, offset, end, stride, false, false);\r\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\r\n    this.instructions.push(moveToLineToInstruction);\r\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n    return end;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  drawLineString(lineStringGeometry, feature) {\r\n    const state = this.state;\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineWidth = state.lineWidth;\r\n    if (strokeStyle === undefined || lineWidth === undefined) {\r\n      return;\r\n    }\r\n    this.updateStrokeStyle(state, this.applyStroke);\r\n    this.beginGeometry(feature);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n      state.miterLimit, state.lineDash, state.lineDashOffset\r\n    ], beginPathInstruction);\r\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\r\n    const stride = lineStringGeometry.getStride();\r\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    this.hitDetectionInstructions.push(strokeInstruction);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  drawMultiLineString(multiLineStringGeometry, feature) {\r\n    const state = this.state;\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineWidth = state.lineWidth;\r\n    if (strokeStyle === undefined || lineWidth === undefined) {\r\n      return;\r\n    }\r\n    this.updateStrokeStyle(state, this.applyStroke);\r\n    this.beginGeometry(feature);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n      state.miterLimit, state.lineDash, state.lineDashOffset\r\n    ], beginPathInstruction);\r\n    const ends = multiLineStringGeometry.getEnds();\r\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\r\n    const stride = multiLineStringGeometry.getStride();\r\n    let offset = 0;\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\r\n    }\r\n    this.hitDetectionInstructions.push(strokeInstruction);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  finish() {\r\n    const state = this.state;\r\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\r\n      this.instructions.push(strokeInstruction);\r\n    }\r\n    this.reverseHitDetectionInstructions();\r\n    this.state = null;\r\n    return super.finish();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc.\r\n   */\r\n  applyStroke(state) {\r\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\r\n      this.instructions.push(strokeInstruction);\r\n      state.lastStroke = this.coordinates.length;\r\n    }\r\n    state.lastStroke = 0;\r\n    super.applyStroke(state);\r\n    this.instructions.push(beginPathInstruction);\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasLineStringBuilder;\r\n","/**\r\n * @module ol/render/canvas/PolygonBuilder\r\n */\r\nimport {snap} from '../../geom/flat/simplify.js';\r\nimport {defaultFillStyle} from '../canvas.js';\r\nimport CanvasInstruction, {\r\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\r\n} from './Instruction.js';\r\nimport CanvasBuilder from './Builder.js';\r\n\r\n\r\nclass CanvasPolygonBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\r\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\r\n    const state = this.state;\r\n    const fill = state.fillStyle !== undefined;\r\n    const stroke = state.strokeStyle != undefined;\r\n    const numEnds = ends.length;\r\n    this.instructions.push(beginPathInstruction);\r\n    this.hitDetectionInstructions.push(beginPathInstruction);\r\n    for (let i = 0; i < numEnds; ++i) {\r\n      const end = ends[i];\r\n      const myBegin = this.coordinates.length;\r\n      const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\r\n      const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\r\n      this.instructions.push(moveToLineToInstruction);\r\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n      if (stroke) {\r\n        // Performance optimization: only call closePath() when we have a stroke.\r\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\r\n        this.instructions.push(closePathInstruction);\r\n        this.hitDetectionInstructions.push(closePathInstruction);\r\n      }\r\n      offset = end;\r\n    }\r\n    if (fill) {\r\n      this.instructions.push(fillInstruction);\r\n      this.hitDetectionInstructions.push(fillInstruction);\r\n    }\r\n    if (stroke) {\r\n      this.instructions.push(strokeInstruction);\r\n      this.hitDetectionInstructions.push(strokeInstruction);\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  drawCircle(circleGeometry, feature) {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    const strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_();\r\n    this.beginGeometry(feature);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        defaultFillStyle\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n        state.miterLimit, state.lineDash, state.lineDashOffset\r\n      ]);\r\n    }\r\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\r\n    const stride = circleGeometry.getStride();\r\n    const myBegin = this.coordinates.length;\r\n    this.appendFlatCoordinates(\r\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\r\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\r\n    this.instructions.push(beginPathInstruction, circleInstruction);\r\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\r\n    this.hitDetectionInstructions.push(fillInstruction);\r\n    if (state.fillStyle !== undefined) {\r\n      this.instructions.push(fillInstruction);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.instructions.push(strokeInstruction);\r\n      this.hitDetectionInstructions.push(strokeInstruction);\r\n    }\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  drawPolygon(polygonGeometry, feature) {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    const strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_();\r\n    this.beginGeometry(feature);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        defaultFillStyle\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n        state.miterLimit, state.lineDash, state.lineDashOffset\r\n      ]);\r\n    }\r\n    const ends = polygonGeometry.getEnds();\r\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\r\n    const stride = polygonGeometry.getStride();\r\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  drawMultiPolygon(multiPolygonGeometry, feature) {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    const strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_();\r\n    this.beginGeometry(feature);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        defaultFillStyle\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n        state.miterLimit, state.lineDash, state.lineDashOffset\r\n      ]);\r\n    }\r\n    const endss = multiPolygonGeometry.getEndss();\r\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\r\n    const stride = multiPolygonGeometry.getStride();\r\n    let offset = 0;\r\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\r\n    }\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  finish() {\r\n    this.reverseHitDetectionInstructions();\r\n    this.state = null;\r\n    // We want to preserve topology when drawing polygons.  Polygons are\r\n    // simplified using quantization and point elimination. However, we might\r\n    // have received a mix of quantized and non-quantized geometries, so ensure\r\n    // that all are quantized by quantizing all coordinates in the batch.\r\n    const tolerance = this.tolerance;\r\n    if (tolerance !== 0) {\r\n      const coordinates = this.coordinates;\r\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coordinates[i] = snap(coordinates[i], tolerance);\r\n      }\r\n    }\r\n    return super.finish();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  setFillStrokeStyles_() {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    if (fillStyle !== undefined) {\r\n      this.updateFillStyle(state, this.createFill);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.updateStrokeStyle(state, this.applyStroke);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasPolygonBuilder;\r\n","/**\r\n * @module ol/geom/flat/straightchunk\r\n */\r\n\r\n\r\n/**\r\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {Array<number>} Start and end of the first suitable chunk of the\r\n * given `flatCoordinates`.\r\n */\r\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\r\n  let chunkStart = offset;\r\n  let chunkEnd = offset;\r\n  let chunkM = 0;\r\n  let m = 0;\r\n  let start = offset;\r\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\r\n  for (i = offset; i < end; i += stride) {\r\n    const x2 = flatCoordinates[i];\r\n    const y2 = flatCoordinates[i + 1];\r\n    if (x1 !== undefined) {\r\n      x23 = x2 - x1;\r\n      y23 = y2 - y1;\r\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\r\n      if (x12 !== undefined) {\r\n        m += m12;\r\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\r\n        if (acos > maxAngle) {\r\n          if (m > chunkM) {\r\n            chunkM = m;\r\n            chunkStart = start;\r\n            chunkEnd = i;\r\n          }\r\n          m = 0;\r\n          start = i - stride;\r\n        }\r\n      }\r\n      m12 = m23;\r\n      x12 = x23;\r\n      y12 = y23;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  m += m23;\r\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\r\n}\r\n","/**\r\n * @module ol/style/TextPlacement\r\n */\r\n\r\n/**\r\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\r\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\r\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\r\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  POINT: 'point',\r\n  LINE: 'line'\r\n};\r\n","/**\r\n * @module ol/render/canvas/TextBuilder\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport {labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport CanvasBuilder from './Builder.js';\r\nimport TextPlacement from '../../style/TextPlacement.js';\r\n/**\r\n * @const\r\n * @enum {number}\r\n */\r\nexport const TEXT_ALIGN = {};\r\nTEXT_ALIGN['left'] = 0;\r\nTEXT_ALIGN['end'] = 0;\r\nTEXT_ALIGN['center'] = 0.5;\r\nTEXT_ALIGN['right'] = 1;\r\nTEXT_ALIGN['start'] = 1;\r\nTEXT_ALIGN['top'] = 0;\r\nTEXT_ALIGN['middle'] = 0.5;\r\nTEXT_ALIGN['hanging'] = 0.2;\r\nTEXT_ALIGN['alphabetic'] = 0.8;\r\nTEXT_ALIGN['ideographic'] = 0.8;\r\nTEXT_ALIGN['bottom'] = 1;\r\n\r\n\r\nclass CanvasTextBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../canvas.js\").DeclutterGroup}\r\n     */\r\n    this.declutterGroup_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<HTMLCanvasElement>}\r\n     */\r\n    this.labels_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.textRotateWithView_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.textFillState_ = null;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n     */\r\n    this.fillStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.textStrokeState_ = null;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n     */\r\n    this.strokeStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../canvas.js\").TextState}\r\n     */\r\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n     */\r\n    this.textStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.textKey_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.fillKey_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.strokeKey_ = '';\r\n\r\n    labelCache.prune();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  finish() {\r\n    const instructions = super.finish();\r\n    instructions.textStates = this.textStates;\r\n    instructions.fillStates = this.fillStates;\r\n    instructions.strokeStates = this.strokeStates;\r\n    return instructions;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  drawText(geometry, feature) {\r\n    const fillState = this.textFillState_;\r\n    const strokeState = this.textStrokeState_;\r\n    const textState = this.textState_;\r\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\r\n      return;\r\n    }\r\n\r\n    let begin = this.coordinates.length;\r\n\r\n    const geometryType = geometry.getType();\r\n    let flatCoordinates = null;\r\n    let end = 2;\r\n    let stride = 2;\r\n    let i, ii;\r\n\r\n    if (textState.placement === TextPlacement.LINE) {\r\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\r\n        return;\r\n      }\r\n      let ends;\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      stride = geometry.getStride();\r\n      if (geometryType == GeometryType.LINE_STRING) {\r\n        ends = [flatCoordinates.length];\r\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\r\n        ends = geometry.getEnds();\r\n      } else if (geometryType == GeometryType.POLYGON) {\r\n        ends = geometry.getEnds().slice(0, 1);\r\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\r\n        const endss = geometry.getEndss();\r\n        ends = [];\r\n        for (i = 0, ii = endss.length; i < ii; ++i) {\r\n          ends.push(endss[i][0]);\r\n        }\r\n      }\r\n      this.beginGeometry(feature);\r\n      const textAlign = textState.textAlign;\r\n      let flatOffset = 0;\r\n      let flatEnd;\r\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\r\n        if (textAlign == undefined) {\r\n          const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\r\n          flatOffset = range[0];\r\n          flatEnd = range[1];\r\n        } else {\r\n          flatEnd = ends[o];\r\n        }\r\n        for (i = flatOffset; i < flatEnd; i += stride) {\r\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\r\n        }\r\n        end = this.coordinates.length;\r\n        flatOffset = ends[o];\r\n        this.drawChars_(begin, end, this.declutterGroup_);\r\n        begin = end;\r\n      }\r\n      this.endGeometry(feature);\r\n\r\n    } else {\r\n\r\n      let geometryWidths = null;\r\n      if (!textState.overflow) {\r\n        geometryWidths = [];\r\n      }\r\n      switch (geometryType) {\r\n        case GeometryType.POINT:\r\n        case GeometryType.MULTI_POINT:\r\n          flatCoordinates = geometry.getFlatCoordinates();\r\n          end = flatCoordinates.length;\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\r\n          break;\r\n        case GeometryType.CIRCLE:\r\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\r\n          break;\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\r\n          end = flatCoordinates.length;\r\n          break;\r\n        case GeometryType.POLYGON:\r\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\r\n          if (!textState.overflow) {\r\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\r\n          }\r\n          stride = 3;\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\r\n          flatCoordinates = [];\r\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\r\n            if (!textState.overflow) {\r\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\r\n            }\r\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\r\n          }\r\n          end = flatCoordinates.length;\r\n          if (end == 0) {\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\r\n\r\n      this.saveTextStates_();\r\n\r\n      if (textState.backgroundFill || textState.backgroundStroke) {\r\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\r\n        if (textState.backgroundFill) {\r\n          this.updateFillStyle(this.state, this.createFill);\r\n          this.hitDetectionInstructions.push(this.createFill(this.state));\r\n        }\r\n        if (textState.backgroundStroke) {\r\n          this.updateStrokeStyle(this.state, this.applyStroke);\r\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\r\n        }\r\n      }\r\n\r\n      this.beginGeometry(feature);\r\n\r\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\r\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\r\n      // render time.\r\n      const pixelRatio = this.pixelRatio;\r\n      this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\r\n        null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\r\n        this.textRotateWithView_, this.textRotation_, 1, NaN,\r\n        textState.padding == defaultPadding ?\r\n          defaultPadding : textState.padding.map(function(p) {\r\n            return p * pixelRatio;\r\n          }),\r\n        !!textState.backgroundFill, !!textState.backgroundStroke,\r\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\r\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\r\n      ]);\r\n      this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\r\n        null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\r\n        this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\r\n        textState.padding,\r\n        !!textState.backgroundFill, !!textState.backgroundStroke,\r\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\r\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\r\n      ]);\r\n\r\n      this.endGeometry(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  saveTextStates_() {\r\n    const strokeState = this.textStrokeState_;\r\n    const textState = this.textState_;\r\n    const fillState = this.textFillState_;\r\n\r\n    const strokeKey = this.strokeKey_;\r\n    if (strokeState) {\r\n      if (!(strokeKey in this.strokeStates)) {\r\n        this.strokeStates[strokeKey] = {\r\n          strokeStyle: strokeState.strokeStyle,\r\n          lineCap: strokeState.lineCap,\r\n          lineDashOffset: strokeState.lineDashOffset,\r\n          lineWidth: strokeState.lineWidth,\r\n          lineJoin: strokeState.lineJoin,\r\n          miterLimit: strokeState.miterLimit,\r\n          lineDash: strokeState.lineDash\r\n        };\r\n      }\r\n    }\r\n    const textKey = this.textKey_;\r\n    if (!(textKey in this.textStates)) {\r\n      this.textStates[textKey] = {\r\n        font: textState.font,\r\n        textAlign: textState.textAlign || defaultTextAlign,\r\n        textBaseline: textState.textBaseline || defaultTextBaseline,\r\n        scale: textState.scale\r\n      };\r\n    }\r\n    const fillKey = this.fillKey_;\r\n    if (fillState) {\r\n      if (!(fillKey in this.fillStates)) {\r\n        this.fillStates[fillKey] = {\r\n          fillStyle: fillState.fillStyle\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} begin Begin.\r\n   * @param {number} end End.\r\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n   */\r\n  drawChars_(begin, end, declutterGroup) {\r\n    const strokeState = this.textStrokeState_;\r\n    const textState = this.textState_;\r\n\r\n    const strokeKey = this.strokeKey_;\r\n    const textKey = this.textKey_;\r\n    const fillKey = this.fillKey_;\r\n    this.saveTextStates_();\r\n\r\n\r\n    const pixelRatio = this.pixelRatio;\r\n    const baseline = TEXT_ALIGN[textState.textBaseline];\r\n\r\n    const offsetY = this.textOffsetY_ * pixelRatio;\r\n    const text = this.text_;\r\n    const textScale = textState.scale;\r\n    const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\r\n\r\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\r\n      begin, end, baseline, declutterGroup,\r\n      textState.overflow, fillKey, textState.maxAngle,\r\n      pixelRatio,\r\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\r\n    ]);\r\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\r\n      begin, end, baseline, declutterGroup,\r\n      textState.overflow, fillKey, textState.maxAngle,\r\n      1,\r\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setTextStyle(textStyle, declutterGroup) {\r\n    let textState, fillState, strokeState;\r\n    if (!textStyle) {\r\n      this.text_ = '';\r\n    } else {\r\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\r\n\r\n      const textFillStyle = textStyle.getFill();\r\n      if (!textFillStyle) {\r\n        fillState = this.textFillState_ = null;\r\n      } else {\r\n        fillState = this.textFillState_;\r\n        if (!fillState) {\r\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\r\n        }\r\n        fillState.fillStyle = asColorLike(\r\n          textFillStyle.getColor() || defaultFillStyle);\r\n      }\r\n\r\n      const textStrokeStyle = textStyle.getStroke();\r\n      if (!textStrokeStyle) {\r\n        strokeState = this.textStrokeState_ = null;\r\n      } else {\r\n        strokeState = this.textStrokeState_;\r\n        if (!strokeState) {\r\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\r\n        }\r\n        const lineDash = textStrokeStyle.getLineDash();\r\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\r\n        const lineWidth = textStrokeStyle.getWidth();\r\n        const miterLimit = textStrokeStyle.getMiterLimit();\r\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\r\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\r\n        strokeState.lineDashOffset =\r\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\r\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\r\n        strokeState.lineWidth =\r\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\r\n        strokeState.miterLimit =\r\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\r\n        strokeState.strokeStyle = asColorLike(\r\n          textStrokeStyle.getColor() || defaultStrokeStyle);\r\n      }\r\n\r\n      textState = this.textState_;\r\n      const font = textStyle.getFont() || defaultFont;\r\n      checkFont(font);\r\n      const textScale = textStyle.getScale();\r\n      textState.overflow = textStyle.getOverflow();\r\n      textState.font = font;\r\n      textState.maxAngle = textStyle.getMaxAngle();\r\n      textState.placement = textStyle.getPlacement();\r\n      textState.textAlign = textStyle.getTextAlign();\r\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\r\n      textState.backgroundFill = textStyle.getBackgroundFill();\r\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\r\n      textState.padding = textStyle.getPadding() || defaultPadding;\r\n      textState.scale = textScale === undefined ? 1 : textScale;\r\n\r\n      const textOffsetX = textStyle.getOffsetX();\r\n      const textOffsetY = textStyle.getOffsetY();\r\n      const textRotateWithView = textStyle.getRotateWithView();\r\n      const textRotation = textStyle.getRotation();\r\n      this.text_ = textStyle.getText() || '';\r\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\r\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\r\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\r\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\r\n\r\n      this.strokeKey_ = strokeState ?\r\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\r\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\r\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\r\n        '';\r\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\r\n      this.fillKey_ = fillState ?\r\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\r\n        '';\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasTextBuilder;\r\n","/**\r\n * @module ol/render/canvas/BuilderGroup\r\n */\r\n\r\nimport {createEmpty} from '../../extent.js';\r\nimport Builder from './Builder.js';\r\nimport ImageBuilder from './ImageBuilder.js';\r\nimport LineStringBuilder from './LineStringBuilder.js';\r\nimport PolygonBuilder from './PolygonBuilder.js';\r\nimport TextBuilder from './TextBuilder.js';\r\n\r\n\r\n/**\r\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\r\n */\r\nconst BATCH_CONSTRUCTORS = {\r\n  'Circle': PolygonBuilder,\r\n  'Default': Builder,\r\n  'Image': ImageBuilder,\r\n  'LineString': LineStringBuilder,\r\n  'Polygon': PolygonBuilder,\r\n  'Text': TextBuilder\r\n};\r\n\r\n\r\nclass BuilderGroup {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} declutter Decluttering enabled.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio, declutter) {\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.declutter_ = declutter;\r\n\r\n    /**\r\n     * @type {import(\"../canvas.js\").DeclutterGroup}\r\n     * @private\r\n     */\r\n    this.declutterGroup_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tolerance_ = tolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\r\n     */\r\n    this.buildersByZIndex_ = {};\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} group Group with previous builder.\r\n   * @return {Array<*>} The resulting instruction group.\r\n   */\r\n  addDeclutter(group) {\r\n    let declutter = null;\r\n    if (this.declutter_) {\r\n      if (group) {\r\n        declutter = this.declutterGroup_;\r\n        /** @type {number} */ (declutter[4])++;\r\n      } else {\r\n        declutter = this.declutterGroup_ = createEmpty();\r\n        declutter.push(1);\r\n      }\r\n    }\r\n    return declutter;\r\n  }\r\n\r\n  /**\r\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\r\n   */\r\n  finish() {\r\n    const builderInstructions = {};\r\n    for (const zKey in this.buildersByZIndex_) {\r\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\r\n      const builders = this.buildersByZIndex_[zKey];\r\n      for (const builderKey in builders) {\r\n        const builderInstruction = builders[builderKey].finish();\r\n        builderInstructions[zKey][builderKey] = builderInstruction;\r\n      }\r\n    }\r\n    return builderInstructions;\r\n  }\r\n\r\n  /**\r\n   * @param {number|undefined} zIndex Z index.\r\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\r\n   * @return {import(\"../VectorContext.js\").default} Replay.\r\n   */\r\n  getBuilder(zIndex, builderType) {\r\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\r\n    let replays = this.buildersByZIndex_[zIndexKey];\r\n    if (replays === undefined) {\r\n      replays = {};\r\n      this.buildersByZIndex_[zIndexKey] = replays;\r\n    }\r\n    let replay = replays[builderType];\r\n    if (replay === undefined) {\r\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\r\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\r\n        this.resolution_, this.pixelRatio_);\r\n      replays[builderType] = replay;\r\n    }\r\n    return replay;\r\n  }\r\n}\r\n\r\nexport default BuilderGroup;\r\n","/**\r\n * @module ol/render/canvas/BuilderType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  CIRCLE: 'Circle',\r\n  DEFAULT: 'Default',\r\n  IMAGE: 'Image',\r\n  LINE_STRING: 'LineString',\r\n  POLYGON: 'Polygon',\r\n  TEXT: 'Text'\r\n};\r\n","/**\r\n * @module ol/geom/flat/textpath\r\n */\r\nimport {lerp} from '../../math.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Path to put text on.\r\n * @param {number} offset Start offset of the `flatCoordinates`.\r\n * @param {number} end End offset of the `flatCoordinates`.\r\n * @param {number} stride Stride.\r\n * @param {string} text Text to place on the path.\r\n * @param {number} startM m along the path where the text starts.\r\n * @param {number} maxAngle Max angle between adjacent chars in radians.\r\n * @param {number} scale The product of the text scale and the device pixel ratio.\r\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\r\n * @param {string} font The font.\r\n * @param {Object<string, number>} cache A cache of measured widths.\r\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\r\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\r\n */\r\nexport function drawTextOnPath(\r\n  flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\r\n  const result = [];\r\n\r\n  // Keep text upright\r\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\r\n\r\n  const numChars = text.length;\r\n\r\n  let x1 = flatCoordinates[offset];\r\n  let y1 = flatCoordinates[offset + 1];\r\n  offset += stride;\r\n  let x2 = flatCoordinates[offset];\r\n  let y2 = flatCoordinates[offset + 1];\r\n  let segmentM = 0;\r\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n  let angleChanged = false;\r\n\r\n  let index, previousAngle;\r\n  for (let i = 0; i < numChars; ++i) {\r\n    index = reverse ? numChars - i - 1 : i;\r\n    const char = text[index];\r\n    const charLength = scale * measureAndCacheTextWidth(font, char, cache);\r\n    const charM = startM + charLength / 2;\r\n    while (offset < end - stride && segmentM + segmentLength < charM) {\r\n      x1 = x2;\r\n      y1 = y2;\r\n      offset += stride;\r\n      x2 = flatCoordinates[offset];\r\n      y2 = flatCoordinates[offset + 1];\r\n      segmentM += segmentLength;\r\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n    }\r\n    const segmentPos = charM - segmentM;\r\n    let angle = Math.atan2(y2 - y1, x2 - x1);\r\n    if (reverse) {\r\n      angle += angle > 0 ? -Math.PI : Math.PI;\r\n    }\r\n    if (previousAngle !== undefined) {\r\n      let delta = angle - previousAngle;\r\n      angleChanged = angleChanged || delta !== 0;\r\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\r\n      if (Math.abs(delta) > maxAngle) {\r\n        return null;\r\n      }\r\n    }\r\n    previousAngle = angle;\r\n    const interpolate = segmentPos / segmentLength;\r\n    const x = lerp(x1, x2, interpolate);\r\n    const y = lerp(y1, y2, interpolate);\r\n    result[index] = [x, y, charLength / 2, angle, char];\r\n    startM += charLength;\r\n  }\r\n  return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\r\n}\r\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\r\n * @module ol/render/canvas/Executor\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {equals} from '../../array.js';\r\nimport {createEmpty, createOrUpdate,\r\n  createOrUpdateEmpty, extend, intersects} from '../../extent.js';\r\nimport {lineStringLength} from '../../geom/flat/length.js';\r\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {drawImage, defaultPadding, defaultTextBaseline} from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport {TEXT_ALIGN} from './TextBuilder.js';\r\nimport {\r\n  create as createTransform,\r\n  compose as composeTransform,\r\n  apply as applyTransform,\r\n  setFromArray as transformSetFromArray\r\n} from '../../transform.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths} from '../canvas.js';\r\nimport Disposable from '../../Disposable.js';\r\nimport RBush from 'rbush';\r\n\r\n\r\n/**\r\n * @typedef {Object} SerializableInstructions\r\n * @property {Array<*>} instructions The rendering instructions.\r\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\r\n * @property {Array<number>} coordinates The array of all coordinates.\r\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\r\n */\r\n\r\n/**\r\n * @type {import(\"../../extent.js\").Extent}\r\n */\r\nconst tmpExtent = createEmpty();\r\n\r\n/**\r\n * @type {!import(\"../../transform.js\").Transform}\r\n */\r\nconst tmpTransform = createTransform();\r\n\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p1 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p2 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p3 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p4 = [];\r\n\r\n\r\nclass Executor extends Disposable {\r\n  /**\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The replay can have overlapping geometries.\r\n   * @param {SerializableInstructions} instructions The serializable instructions\r\n   */\r\n  constructor(resolution, pixelRatio, overlaps, instructions) {\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps = overlaps;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.alignFill_;\r\n\r\n    /**\r\n     * @type {Array<*>}\r\n     */\r\n    this.declutterItems = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.instructions = instructions.instructions;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.coordinates = instructions.coordinates;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\r\n     */\r\n    this.coordinateCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"../../transform.js\").Transform}\r\n     */\r\n    this.renderedTransform_ = createTransform();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = 0;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n     */\r\n    this.fillStates = instructions.fillStates || {};\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n     */\r\n    this.strokeStates = instructions.strokeStates || {};\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n     */\r\n    this.textStates = instructions.textStates || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Object<string, number>>}\r\n     */\r\n    this.widths_ = {};\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    labelCache.release(this);\r\n    super.disposeInternal();\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} text Text.\r\n   * @param {string} textKey Text style key.\r\n   * @param {string} fillKey Fill style key.\r\n   * @param {string} strokeKey Stroke style key.\r\n   * @return {HTMLCanvasElement} Image.\r\n   */\r\n  getTextImage(text, textKey, fillKey, strokeKey) {\r\n    let label;\r\n    const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\r\n\r\n    if (!labelCache.containsKey(key)) {\r\n      const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\r\n      const fillState = fillKey ? this.fillStates[fillKey] : null;\r\n      const textState = this.textStates[textKey];\r\n      const pixelRatio = this.pixelRatio;\r\n      const scale = textState.scale * pixelRatio;\r\n      const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\r\n      const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n      const lines = text.split('\\n');\r\n      const numLines = lines.length;\r\n      const widths = [];\r\n      const width = measureTextWidths(textState.font, lines, widths);\r\n      const lineHeight = measureTextHeight(textState.font);\r\n      const height = lineHeight * numLines;\r\n      const renderWidth = width + strokeWidth;\r\n      const context = createCanvasContext2D(\r\n        // make canvas 2 pixels wider to account for italic text width measurement errors\r\n        Math.ceil((renderWidth + 2) * scale),\r\n        Math.ceil((height + strokeWidth) * scale));\r\n      label = context.canvas;\r\n      labelCache.set(key, label);\r\n      if (scale != 1) {\r\n        context.scale(scale, scale);\r\n      }\r\n      context.font = textState.font;\r\n      if (strokeKey) {\r\n        context.strokeStyle = strokeState.strokeStyle;\r\n        context.lineWidth = strokeWidth;\r\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n        context.miterLimit = strokeState.miterLimit;\r\n        if (context.setLineDash && strokeState.lineDash.length) {\r\n          context.setLineDash(strokeState.lineDash);\r\n          context.lineDashOffset = strokeState.lineDashOffset;\r\n        }\r\n      }\r\n      if (fillKey) {\r\n        context.fillStyle = fillState.fillStyle;\r\n      }\r\n      context.textBaseline = 'middle';\r\n      context.textAlign = 'center';\r\n      const leftRight = (0.5 - align);\r\n      const x = align * renderWidth + leftRight * strokeWidth;\r\n      let i;\r\n      if (strokeKey) {\r\n        for (i = 0; i < numLines; ++i) {\r\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\r\n        }\r\n      }\r\n      if (fillKey) {\r\n        for (i = 0; i < numLines; ++i) {\r\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\r\n        }\r\n      }\r\n    }\r\n    return labelCache.get(key, this);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   */\r\n  replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\r\n    context.beginPath();\r\n    context.moveTo.apply(context, p1);\r\n    context.lineTo.apply(context, p2);\r\n    context.lineTo.apply(context, p3);\r\n    context.lineTo.apply(context, p4);\r\n    context.lineTo.apply(context, p1);\r\n    if (fillInstruction) {\r\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\r\n      this.fill_(context);\r\n    }\r\n    if (strokeInstruction) {\r\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\r\n   * @param {number} anchorX Anchor X.\r\n   * @param {number} anchorY Anchor Y.\r\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n   * @param {number} height Height.\r\n   * @param {number} opacity Opacity.\r\n   * @param {number} originX Origin X.\r\n   * @param {number} originY Origin Y.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} scale Scale.\r\n   * @param {boolean} snapToPixel Snap to pixel.\r\n   * @param {number} width Width.\r\n   * @param {Array<number>} padding Padding.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   */\r\n  replayImage_(\r\n    context,\r\n    x,\r\n    y,\r\n    image,\r\n    anchorX,\r\n    anchorY,\r\n    declutterGroup,\r\n    height,\r\n    opacity,\r\n    originX,\r\n    originY,\r\n    rotation,\r\n    scale,\r\n    snapToPixel,\r\n    width,\r\n    padding,\r\n    fillInstruction,\r\n    strokeInstruction\r\n  ) {\r\n    const fillStroke = fillInstruction || strokeInstruction;\r\n    anchorX *= scale;\r\n    anchorY *= scale;\r\n    x -= anchorX;\r\n    y -= anchorY;\r\n\r\n    const w = (width + originX > image.width) ? image.width - originX : width;\r\n    const h = (height + originY > image.height) ? image.height - originY : height;\r\n    const boxW = padding[3] + w * scale + padding[1];\r\n    const boxH = padding[0] + h * scale + padding[2];\r\n    const boxX = x - padding[3];\r\n    const boxY = y - padding[0];\r\n\r\n    if (fillStroke || rotation !== 0) {\r\n      p1[0] = p4[0] = boxX;\r\n      p1[1] = p2[1] = boxY;\r\n      p2[0] = p3[0] = boxX + boxW;\r\n      p3[1] = p4[1] = boxY + boxH;\r\n    }\r\n\r\n    let transform = null;\r\n    if (rotation !== 0) {\r\n      const centerX = x + anchorX;\r\n      const centerY = y + anchorY;\r\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\r\n\r\n      applyTransform(tmpTransform, p1);\r\n      applyTransform(tmpTransform, p2);\r\n      applyTransform(tmpTransform, p3);\r\n      applyTransform(tmpTransform, p4);\r\n      createOrUpdate(\r\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\r\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\r\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\r\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\r\n        tmpExtent\r\n      );\r\n    } else {\r\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\r\n    }\r\n    const canvas = context.canvas;\r\n    const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\r\n    const intersects =\r\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\r\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\r\n\r\n    if (snapToPixel) {\r\n      x = Math.round(x);\r\n      y = Math.round(y);\r\n    }\r\n\r\n    if (declutterGroup) {\r\n      if (!intersects && declutterGroup[4] == 1) {\r\n        return;\r\n      }\r\n      extend(declutterGroup, tmpExtent);\r\n      const declutterArgs = intersects ?\r\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\r\n        null;\r\n      if (declutterArgs) {\r\n        if (fillStroke) {\r\n          declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\r\n        }\r\n        declutterGroup.push(declutterArgs);\r\n      }\r\n    } else if (intersects) {\r\n      if (fillStroke) {\r\n        this.replayTextBackground_(context, p1, p2, p3, p4,\r\n          /** @type {Array<*>} */ (fillInstruction),\r\n          /** @type {Array<*>} */ (strokeInstruction));\r\n      }\r\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   */\r\n  fill_(context) {\r\n    if (this.alignFill_) {\r\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\r\n      const repeatSize = 512 * this.pixelRatio;\r\n      context.save();\r\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\r\n      context.rotate(this.viewRotation_);\r\n    }\r\n    context.fill();\r\n    if (this.alignFill_) {\r\n      context.restore();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {Array<*>} instruction Instruction.\r\n   */\r\n  setStrokeStyle_(context, instruction) {\r\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n    context.lineWidth = /** @type {number} */ (instruction[2]);\r\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\r\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\r\n    context.miterLimit = /** @type {number} */ (instruction[5]);\r\n    if (context.setLineDash) {\r\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\r\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} opacity Layer opacity.\r\n   * @param {?} declutterTree Declutter tree.\r\n   * @return {?} Declutter tree.\r\n   */\r\n  renderDeclutter(declutterGroup, feature, opacity, declutterTree) {\r\n    if (declutterGroup && declutterGroup.length > 5) {\r\n      const groupCount = declutterGroup[4];\r\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\r\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\r\n        const box = {\r\n          minX: /** @type {number} */ (declutterGroup[0]),\r\n          minY: /** @type {number} */ (declutterGroup[1]),\r\n          maxX: /** @type {number} */ (declutterGroup[2]),\r\n          maxY: /** @type {number} */ (declutterGroup[3]),\r\n          value: feature\r\n        };\r\n        if (!declutterTree) {\r\n          declutterTree = new RBush(9);\r\n        }\r\n        if (!declutterTree.collides(box)) {\r\n          declutterTree.insert(box);\r\n          for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\r\n            const declutterData = /** @type {Array} */ (declutterGroup[j]);\r\n            const context = declutterData[0];\r\n            const currentAlpha = context.globalAlpha;\r\n            if (currentAlpha !== opacity) {\r\n              context.globalAlpha = opacity;\r\n            }\r\n            if (declutterData.length > 11) {\r\n              this.replayTextBackground_(declutterData[0],\r\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\r\n                declutterData[11], declutterData[12]);\r\n            }\r\n            drawImage.apply(undefined, declutterData);\r\n            if (currentAlpha !== opacity) {\r\n              context.globalAlpha = currentAlpha;\r\n            }\r\n          }\r\n        }\r\n        declutterGroup.length = 5;\r\n        createOrUpdateEmpty(declutterGroup);\r\n      }\r\n    }\r\n    return declutterTree;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} text The text to draw.\r\n   * @param {string} textKey The key of the text state.\r\n   * @param {string} strokeKey The key for the stroke state.\r\n   * @param {string} fillKey The key for the fill state.\r\n   * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\r\n   */\r\n  drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey) {\r\n    const textState = this.textStates[textKey];\r\n\r\n    const label = this.getTextImage(text, textKey, fillKey, strokeKey);\r\n\r\n    const strokeState = this.strokeStates[strokeKey];\r\n    const pixelRatio = this.pixelRatio;\r\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\r\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\r\n    const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n    // Remove the 2 pixels we added in getTextImage() for the anchor\r\n    const width = label.width / pixelRatio - 2 * textState.scale;\r\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\r\n    const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\r\n\r\n    return {\r\n      label: label,\r\n      anchorX: anchorX,\r\n      anchorY: anchorY\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *     to skip.\r\n   * @param {Array<*>} instructions Instructions array.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\r\n   *     extent.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  execute_(\r\n    context,\r\n    transform,\r\n    skippedFeaturesHash,\r\n    instructions,\r\n    snapToPixel,\r\n    featureCallback,\r\n    opt_hitExtent\r\n  ) {\r\n    this.declutterItems.length = 0;\r\n    /** @type {Array<number>} */\r\n    let pixelCoordinates;\r\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\r\n      pixelCoordinates = this.pixelCoordinates_;\r\n    } else {\r\n      if (!this.pixelCoordinates_) {\r\n        this.pixelCoordinates_ = [];\r\n      }\r\n      pixelCoordinates = transform2D(\r\n        this.coordinates, 0, this.coordinates.length, 2,\r\n        transform, this.pixelCoordinates_);\r\n      transformSetFromArray(this.renderedTransform_, transform);\r\n    }\r\n    const skipFeatures = !isEmpty(skippedFeaturesHash);\r\n    let i = 0; // instruction index\r\n    const ii = instructions.length; // end of instructions\r\n    let d = 0; // data index\r\n    let dd; // end of per-instruction data\r\n    let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\r\n    let strokeKey, fillKey;\r\n    let pendingFill = 0;\r\n    let pendingStroke = 0;\r\n    let lastFillInstruction = null;\r\n    let lastStrokeInstruction = null;\r\n    const coordinateCache = this.coordinateCache_;\r\n    const viewRotation = this.viewRotation_;\r\n\r\n    const state = /** @type {import(\"../../render.js\").State} */ ({\r\n      context: context,\r\n      pixelRatio: this.pixelRatio,\r\n      resolution: this.resolution,\r\n      rotation: viewRotation\r\n    });\r\n\r\n    // When the batch size gets too big, performance decreases. 200 is a good\r\n    // balance between batch size and number of fill/stroke instructions.\r\n    const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\r\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\r\n    let x, y;\r\n    while (i < ii) {\r\n      const instruction = instructions[i];\r\n      const type = /** @type {CanvasInstruction} */ (instruction[0]);\r\n      switch (type) {\r\n        case CanvasInstruction.BEGIN_GEOMETRY:\r\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\r\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\r\n            i = /** @type {number} */ (instruction[2]);\r\n          } else if (opt_hitExtent !== undefined && !intersects(\r\n            opt_hitExtent, feature.getGeometry().getExtent())) {\r\n            i = /** @type {number} */ (instruction[2]) + 1;\r\n          } else {\r\n            ++i;\r\n          }\r\n          break;\r\n        case CanvasInstruction.BEGIN_PATH:\r\n          if (pendingFill > batchSize) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n          }\r\n          if (pendingStroke > batchSize) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          if (!pendingFill && !pendingStroke) {\r\n            context.beginPath();\r\n            prevX = prevY = NaN;\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CIRCLE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          const x1 = pixelCoordinates[d];\r\n          const y1 = pixelCoordinates[d + 1];\r\n          const x2 = pixelCoordinates[d + 2];\r\n          const y2 = pixelCoordinates[d + 3];\r\n          const dx = x2 - x1;\r\n          const dy = y2 - y1;\r\n          const r = Math.sqrt(dx * dx + dy * dy);\r\n          context.moveTo(x1 + r, y1);\r\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CLOSE_PATH:\r\n          context.closePath();\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CUSTOM:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = instruction[2];\r\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\r\n          const renderer = instruction[4];\r\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\r\n          state.geometry = geometry;\r\n          state.feature = feature;\r\n          if (!(i in coordinateCache)) {\r\n            coordinateCache[i] = [];\r\n          }\r\n          const coords = coordinateCache[i];\r\n          if (fn) {\r\n            fn(pixelCoordinates, d, dd, 2, coords);\r\n          } else {\r\n            coords[0] = pixelCoordinates[d];\r\n            coords[1] = pixelCoordinates[d + 1];\r\n            coords.length = 2;\r\n          }\r\n          renderer(coords, state);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_IMAGE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\r\n\r\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\r\n          anchorX = /** @type {number} */ (instruction[4]);\r\n          anchorY = /** @type {number} */ (instruction[5]);\r\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\r\n          let height = /** @type {number} */ (instruction[7]);\r\n          const opacity = /** @type {number} */ (instruction[8]);\r\n          const originX = /** @type {number} */ (instruction[9]);\r\n          const originY = /** @type {number} */ (instruction[10]);\r\n          const rotateWithView = /** @type {boolean} */ (instruction[11]);\r\n          let rotation = /** @type {number} */ (instruction[12]);\r\n          const scale = /** @type {number} */ (instruction[13]);\r\n          let width = /** @type {number} */ (instruction[14]);\r\n\r\n\r\n          if (!image && instruction.length >= 19) {\r\n            // create label images\r\n            text = /** @type {string} */ (instruction[18]);\r\n            textKey = /** @type {string} */ (instruction[19]);\r\n            strokeKey = /** @type {string} */ (instruction[20]);\r\n            fillKey = /** @type {string} */ (instruction[21]);\r\n            const labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\r\n            image = instruction[3] = labelWithAnchor.label;\r\n            const textOffsetX = /** @type {number} */ (instruction[22]);\r\n            anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\r\n            const textOffsetY = /** @type {number} */ (instruction[23]);\r\n            anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\r\n            height = instruction[7] = image.height;\r\n            width = instruction[14] = image.width;\r\n          }\r\n\r\n          let geometryWidths;\r\n          if (instruction.length > 24) {\r\n            geometryWidths = /** @type {number} */ (instruction[24]);\r\n          }\r\n\r\n          let padding, backgroundFill, backgroundStroke;\r\n          if (instruction.length > 16) {\r\n            padding = /** @type {Array<number>} */ (instruction[15]);\r\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\r\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\r\n          } else {\r\n            padding = defaultPadding;\r\n            backgroundFill = backgroundStroke = false;\r\n          }\r\n\r\n          if (rotateWithView) {\r\n            rotation += viewRotation;\r\n          }\r\n          let widthIndex = 0;\r\n          for (; d < dd; d += 2) {\r\n            if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\r\n              continue;\r\n            }\r\n            this.replayImage_(context,\r\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\r\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\r\n              snapToPixel, width, padding,\r\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\r\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\r\n          }\r\n          this.declutterItems.push(this, declutterGroup, feature);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_CHARS:\r\n          const begin = /** @type {number} */ (instruction[1]);\r\n          const end = /** @type {number} */ (instruction[2]);\r\n          const baseline = /** @type {number} */ (instruction[3]);\r\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\r\n          const overflow = /** @type {number} */ (instruction[5]);\r\n          fillKey = /** @type {string} */ (instruction[6]);\r\n          const maxAngle = /** @type {number} */ (instruction[7]);\r\n          const measurePixelRatio = /** @type {number} */ (instruction[8]);\r\n          const offsetY = /** @type {number} */ (instruction[9]);\r\n          strokeKey = /** @type {string} */ (instruction[10]);\r\n          const strokeWidth = /** @type {number} */ (instruction[11]);\r\n          text = /** @type {string} */ (instruction[12]);\r\n          textKey = /** @type {string} */ (instruction[13]);\r\n          const pixelRatioScale = /** @type {number} */ (instruction[14]);\r\n\r\n          const textState = this.textStates[textKey];\r\n          const font = textState.font;\r\n          const textScale = textState.scale * measurePixelRatio;\r\n\r\n          let cachedWidths;\r\n          if (font in this.widths_) {\r\n            cachedWidths = this.widths_[font];\r\n          } else {\r\n            cachedWidths = this.widths_[font] = {};\r\n          }\r\n\r\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\r\n          const textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\r\n          if (overflow || textLength <= pathLength) {\r\n            const textAlign = this.textStates[textKey].textAlign;\r\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\r\n            const parts = drawTextOnPath(\r\n              pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\r\n            if (parts) {\r\n              let c, cc, chars, label, part;\r\n              if (strokeKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = this.getTextImage(chars, textKey, '', strokeKey);\r\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\r\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\r\n                  this.replayImage_(context,\r\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\r\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\r\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\r\n                    defaultPadding, null, null);\r\n                }\r\n              }\r\n              if (fillKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = this.getTextImage(chars, textKey, fillKey, '');\r\n                  anchorX = /** @type {number} */ (part[2]);\r\n                  anchorY = baseline * label.height - offsetY;\r\n                  this.replayImage_(context,\r\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\r\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\r\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\r\n                    defaultPadding, null, null);\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.declutterItems.push(this, declutterGroup, feature);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.END_GEOMETRY:\r\n          if (featureCallback !== undefined) {\r\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\r\n            const result = featureCallback(feature);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.FILL:\r\n          if (batchSize) {\r\n            pendingFill++;\r\n          } else {\r\n            this.fill_(context);\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.MOVE_TO_LINE_TO:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          x = pixelCoordinates[d];\r\n          y = pixelCoordinates[d + 1];\r\n          roundX = (x + 0.5) | 0;\r\n          roundY = (y + 0.5) | 0;\r\n          if (roundX !== prevX || roundY !== prevY) {\r\n            context.moveTo(x, y);\r\n            prevX = roundX;\r\n            prevY = roundY;\r\n          }\r\n          for (d += 2; d < dd; d += 2) {\r\n            x = pixelCoordinates[d];\r\n            y = pixelCoordinates[d + 1];\r\n            roundX = (x + 0.5) | 0;\r\n            roundY = (y + 0.5) | 0;\r\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\r\n              context.lineTo(x, y);\r\n              prevX = roundX;\r\n              prevY = roundY;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_FILL_STYLE:\r\n          lastFillInstruction = instruction;\r\n          this.alignFill_ = instruction[2];\r\n\r\n          if (pendingFill) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n            if (pendingStroke) {\r\n              context.stroke();\r\n              pendingStroke = 0;\r\n            }\r\n          }\r\n\r\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_STROKE_STYLE:\r\n          lastStrokeInstruction = instruction;\r\n          if (pendingStroke) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.STROKE:\r\n          if (batchSize) {\r\n            pendingStroke++;\r\n          } else {\r\n            context.stroke();\r\n          }\r\n          ++i;\r\n          break;\r\n        default:\r\n          ++i; // consume the instruction anyway, to avoid an infinite loop\r\n          break;\r\n      }\r\n    }\r\n    if (pendingFill) {\r\n      this.fill_(context);\r\n    }\r\n    if (pendingStroke) {\r\n      context.stroke();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *     to skip.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   */\r\n  execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\r\n    this.viewRotation_ = viewRotation;\r\n    this.execute_(context, transform,\r\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *     to skip.\r\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\r\n   *     Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\r\n   *     extent.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  executeHitDetection(\r\n    context,\r\n    transform,\r\n    viewRotation,\r\n    skippedFeaturesHash,\r\n    opt_featureCallback,\r\n    opt_hitExtent\r\n  ) {\r\n    this.viewRotation_ = viewRotation;\r\n    return this.execute_(context, transform, skippedFeaturesHash,\r\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\r\n  }\r\n}\r\n\r\n\r\nexport default Executor;\r\n","/**\r\n * @module ol/render/canvas/ExecutorGroup\r\n */\r\n\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport BuilderType from './BuilderType.js';\r\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\r\nimport Executor from './Executor.js';\r\nimport Disposable from '../../Disposable.js';\r\n\r\n/**\r\n * @const\r\n * @type {Array<BuilderType>}\r\n */\r\nconst ORDER = [\r\n  BuilderType.POLYGON,\r\n  BuilderType.CIRCLE,\r\n  BuilderType.LINE_STRING,\r\n  BuilderType.IMAGE,\r\n  BuilderType.TEXT,\r\n  BuilderType.DEFAULT\r\n];\r\n\r\n\r\nclass ExecutorGroup extends Disposable {\r\n  /**\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\r\n   * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\r\n   * should be set here, unless the target context does not exceet that extent (which\r\n   * can be the case when rendering to tiles).\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\r\n   * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\r\n   * The serializable instructions.\r\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\r\n   */\r\n  constructor(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = overlaps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderBuffer_ = opt_renderBuffer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\r\n     */\r\n    this.executorsByZIndex_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.hitDetectionContext_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.hitDetectionTransform_ = createTransform();\r\n\r\n    this.createExecutors_(allInstructions);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\r\n  clip(context, transform) {\r\n    const flatClipCoords = this.getClipCoords(transform);\r\n    context.beginPath();\r\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\r\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\r\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\r\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\r\n    context.clip();\r\n  }\r\n\r\n  /**\r\n   * Create executors and populate them using the provided instructions.\r\n   * @private\r\n   * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\r\n   */\r\n  createExecutors_(allInstructions) {\r\n    for (const zIndex in allInstructions) {\r\n      let executors = this.executorsByZIndex_[zIndex];\r\n      if (executors === undefined) {\r\n        this.executorsByZIndex_[zIndex] = executors = {};\r\n      }\r\n      const instructionByZindex = allInstructions[zIndex];\r\n      for (const builderType in instructionByZindex) {\r\n        const instructions = instructionByZindex[builderType];\r\n        executors[builderType] = new Executor(\r\n          this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    for (const z in this.executorsByZIndex_) {\r\n      const executors = this.executorsByZIndex_[z];\r\n      for (const key in executors) {\r\n        executors[key].disposeInternal();\r\n      }\r\n    }\r\n    if (this.hitDetectionContext_) {\r\n      const canvas = this.hitDetectionContext_.canvas;\r\n      canvas.width = canvas.height = 0;\r\n    }\r\n\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * @param {Array<BuilderType>} executors Executors.\r\n   * @return {boolean} Has executors of the provided types.\r\n   */\r\n  hasExecutors(executors) {\r\n    for (const zIndex in this.executorsByZIndex_) {\r\n      const candidates = this.executorsByZIndex_[zIndex];\r\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\r\n        if (executors[i] in candidates) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\r\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    resolution,\r\n    rotation,\r\n    hitTolerance,\r\n    skippedFeaturesHash,\r\n    callback,\r\n    declutteredFeatures\r\n  ) {\r\n\r\n    hitTolerance = Math.round(hitTolerance);\r\n    const contextSize = hitTolerance * 2 + 1;\r\n    const transform = composeTransform(this.hitDetectionTransform_,\r\n      hitTolerance + 0.5, hitTolerance + 0.5,\r\n      1 / resolution, -1 / resolution,\r\n      -rotation,\r\n      -coordinate[0], -coordinate[1]);\r\n\r\n    if (!this.hitDetectionContext_) {\r\n      this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\r\n    }\r\n    const context = this.hitDetectionContext_;\r\n\r\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\r\n      context.canvas.width = contextSize;\r\n      context.canvas.height = contextSize;\r\n    } else {\r\n      context.clearRect(0, 0, contextSize, contextSize);\r\n    }\r\n\r\n    /**\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    let hitExtent;\r\n    if (this.renderBuffer_ !== undefined) {\r\n      hitExtent = createEmpty();\r\n      extendCoordinate(hitExtent, coordinate);\r\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\r\n    }\r\n\r\n    const mask = getCircleArray(hitTolerance);\r\n\r\n    let builderType;\r\n\r\n    /**\r\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n     * @return {?} Callback result.\r\n     */\r\n    function featureCallback(feature) {\r\n      const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\r\n      for (let i = 0; i < contextSize; i++) {\r\n        for (let j = 0; j < contextSize; j++) {\r\n          if (mask[i][j]) {\r\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\r\n              let result;\r\n              if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\r\n                  declutteredFeatures.indexOf(feature) !== -1) {\r\n                result = callback(feature);\r\n              }\r\n              if (result) {\r\n                return result;\r\n              } else {\r\n                context.clearRect(0, 0, contextSize, contextSize);\r\n                return undefined;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @type {Array<number>} */\r\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    let i, j, executors, executor, result;\r\n    for (i = zs.length - 1; i >= 0; --i) {\r\n      const zIndexKey = zs[i].toString();\r\n      executors = this.executorsByZIndex_[zIndexKey];\r\n      for (j = ORDER.length - 1; j >= 0; --j) {\r\n        builderType = ORDER[j];\r\n        executor = executors[builderType];\r\n        if (executor !== undefined) {\r\n          result = executor.executeHitDetection(context, transform, rotation,\r\n            skippedFeaturesHash, featureCallback, hitExtent);\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @return {Array<number>} Clip coordinates.\r\n   */\r\n  getClipCoords(transform) {\r\n    const maxExtent = this.maxExtent_;\r\n    if (!maxExtent) {\r\n      return null;\r\n    }\r\n    const minX = maxExtent[0];\r\n    const minY = maxExtent[1];\r\n    const maxX = maxExtent[2];\r\n    const maxY = maxExtent[3];\r\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\r\n    transform2D(\r\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\r\n    return flatClipCoords;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return isEmpty(this.executorsByZIndex_);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\r\n   * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\r\n   *     Default is {@link module:ol/render/replay~ORDER}\r\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\r\n   */\r\n  execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes,\r\n    opt_declutterReplays) {\r\n\r\n    /** @type {Array<number>} */\r\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    // setup clipping so that the parts of over-simplified geometries are not\r\n    // visible outside the current extent when panning\r\n    if (this.maxExtent_) {\r\n      context.save();\r\n      this.clip(context, transform);\r\n    }\r\n\r\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\r\n    let i, ii, j, jj, replays, replay;\r\n    for (i = 0, ii = zs.length; i < ii; ++i) {\r\n      const zIndexKey = zs[i].toString();\r\n      replays = this.executorsByZIndex_[zIndexKey];\r\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\r\n        const builderType = builderTypes[j];\r\n        replay = replays[builderType];\r\n        if (replay !== undefined) {\r\n          if (opt_declutterReplays &&\r\n              (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\r\n            const declutter = opt_declutterReplays[zIndexKey];\r\n            if (!declutter) {\r\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\r\n            } else {\r\n              declutter.push(replay, transform.slice(0));\r\n            }\r\n          } else {\r\n            replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.maxExtent_) {\r\n      context.restore();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This cache is used for storing calculated pixel circles for increasing performance.\r\n * It is a static property to allow each Replaygroup to access it.\r\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\r\n */\r\nconst circleArrayCache = {\r\n  0: [[true]]\r\n};\r\n\r\n\r\n/**\r\n * This method fills a row in the array from the given coordinate to the\r\n * middle with `true`.\r\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\r\n * @param {number} x X coordinate.\r\n * @param {number} y Y coordinate.\r\n */\r\nfunction fillCircleArrayRowToMiddle(array, x, y) {\r\n  let i;\r\n  const radius = Math.floor(array.length / 2);\r\n  if (x >= radius) {\r\n    for (i = radius; i < x; i++) {\r\n      array[i][y] = true;\r\n    }\r\n  } else if (x < radius) {\r\n    for (i = x + 1; i < radius; i++) {\r\n      array[i][y] = true;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This methods creates a circle inside a fitting array. Points inside the\r\n * circle are marked by true, points on the outside are undefined.\r\n * It uses the midpoint circle algorithm.\r\n * A cache is used to increase performance.\r\n * @param {number} radius Radius.\r\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\r\n */\r\nexport function getCircleArray(radius) {\r\n  if (circleArrayCache[radius] !== undefined) {\r\n    return circleArrayCache[radius];\r\n  }\r\n\r\n  const arraySize = radius * 2 + 1;\r\n  const arr = new Array(arraySize);\r\n  for (let i = 0; i < arraySize; i++) {\r\n    arr[i] = new Array(arraySize);\r\n  }\r\n\r\n  let x = radius;\r\n  let y = 0;\r\n  let error = 0;\r\n\r\n  while (x >= y) {\r\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\r\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\r\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\r\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\r\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\r\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\r\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\r\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\r\n\r\n    y++;\r\n    error += 1 + 2 * y;\r\n    if (2 * (error - x) + 1 > 0) {\r\n      x -= 1;\r\n      error += 1 - 2 * x;\r\n    }\r\n  }\r\n\r\n  circleArrayCache[radius] = arr;\r\n  return arr;\r\n}\r\n\r\n\r\n/**\r\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {number} rotation Rotation.\r\n * @param {number} opacity Opacity.\r\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\r\n */\r\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\r\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\r\n  const skippedFeatureUids = {};\r\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\r\n    const executorData = declutterReplays[zs[z].toString()];\r\n    let currentExecutor;\r\n    for (let i = 0, ii = executorData.length; i < ii;) {\r\n      const executor = executorData[i++];\r\n      if (executor !== currentExecutor) {\r\n        currentExecutor = executor;\r\n        declutterItems.push({\r\n          items: executor.declutterItems,\r\n          opacity: opacity\r\n        });\r\n      }\r\n      const transform = executorData[i++];\r\n      executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default ExecutorGroup;\r\n","/**\r\n * @module ol/renderer/Layer\r\n */\r\nimport {abstract} from '../util.js';\r\nimport ImageState from '../ImageState.js';\r\nimport Observable from '../Observable.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport SourceState from '../source/State.js';\r\n\r\nclass LayerRenderer extends Observable {\r\n\r\n  /**\r\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n   */\r\n  constructor(layer) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../layer/Layer.js\").default}\r\n     */\r\n    this.layer_ = layer;\r\n\r\n  }\r\n\r\n  /**\r\n   * Determine whether render should be called.\r\n   * @abstract\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @return {boolean} Layer is ready to be rendered.\r\n   */\r\n  prepareFrame(frameState) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Render the layer.\r\n   * @abstract\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {HTMLElement} target Target that may be used to render content to.\r\n   * @return {HTMLElement} The rendered element.\r\n   */\r\n  renderFrame(frameState, target) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\r\n   * @param {number} zoom Zoom level.\r\n   * @param {import(\"../Tile.js\").default} tile Tile.\r\n   */\r\n  loadedTileCallback(tiles, zoom, tile) {\r\n    if (!tiles[zoom]) {\r\n      tiles[zoom] = {};\r\n    }\r\n    tiles[zoom][tile.tileCoord.toString()] = tile;\r\n  }\r\n\r\n  /**\r\n   * Create a function that adds loaded tiles to the tile lookup.\r\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\r\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\r\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\r\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\r\n   * @protected\r\n   */\r\n  createLoadedTileFinder(source, projection, tiles) {\r\n    return (\r\n      /**\r\n       * @param {number} zoom Zoom level.\r\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n       * @return {boolean} The tile range is fully loaded.\r\n       * @this {LayerRenderer}\r\n       */\r\n      function(zoom, tileRange) {\r\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\r\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\r\n      }\r\n    ).bind(this);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\r\n   * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\r\n   * @return {T|void} Callback result.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {}\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\r\n   *    location, null will be returned.  If there is data, but pixel values cannot be\r\n   *    returned, and empty array will be returned.\r\n   */\r\n  getDataAtPixel(pixel, frameState, hitTolerance) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../layer/Layer.js\").default} Layer.\r\n   */\r\n  getLayer() {\r\n    return this.layer_;\r\n  }\r\n\r\n  /**\r\n   * Perform action necessary to get the layer rendered after new fonts have loaded\r\n   * @abstract\r\n   */\r\n  handleFontsChanged() {}\r\n\r\n  /**\r\n   * Handle changes in image state.\r\n   * @param {import(\"../events/Event.js\").default} event Image change event.\r\n   * @private\r\n   */\r\n  handleImageChange_(event) {\r\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\r\n    if (image.getState() === ImageState.LOADED) {\r\n      this.renderIfReadyAndVisible();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @return {boolean} Is there a feature at the given coordinate?\r\n   */\r\n  hasFeatureAtCoordinate(coordinate, frameState) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Load the image if not already loaded, and register the image change\r\n   * listener if needed.\r\n   * @param {import(\"../ImageBase.js\").default} image Image.\r\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\r\n   * @protected\r\n   */\r\n  loadImage(image) {\r\n    let imageState = image.getState();\r\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\r\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\r\n    }\r\n    if (imageState == ImageState.IDLE) {\r\n      image.load();\r\n      imageState = image.getState();\r\n    }\r\n    return imageState == ImageState.LOADED;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  renderIfReadyAndVisible() {\r\n    const layer = this.getLayer();\r\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\r\n      layer.changed();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default LayerRenderer;\r\n","/**\r\n * @module ol/renderer/canvas/Layer\r\n */\r\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport RenderEvent from '../../render/Event.js';\r\nimport RenderEventType from '../../render/EventType.js';\r\nimport {rotateAtOffset} from '../../render/canvas.js';\r\nimport LayerRenderer from '../Layer.js';\r\nimport {create as createTransform, apply as applyTransform, compose as composeTransform, toString as transformToString} from '../../transform.js';\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass CanvasLayerRenderer extends LayerRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\r\n   */\r\n  constructor(layer) {\r\n\r\n    super(layer);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.container = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.renderedResolution;\r\n\r\n    /**\r\n     * A temporary transform.  The values in this transform should only be used in a\r\n     * function that sets the values.\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.tempTransform_ = createTransform();\r\n\r\n    /**\r\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\r\n     * be set when rendering a frame and may be used by other functions after rendering.\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.pixelTransform_ = createTransform();\r\n\r\n    /**\r\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\r\n     * be set when rendering a frame and may be used by other functions after rendering.\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.inversePixelTransform_ = createTransform();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context = null;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.containerReused = false;\r\n\r\n  }\r\n\r\n  /**\r\n   * Get a rendering container from an existing target, if compatible.\r\n   * @param {HTMLElement} target Potential render target.\r\n   * @param {import(\"../../transform\").Transform} transform Transform.\r\n   * @param {number} opacity Opacity.\r\n   */\r\n  useContainer(target, transform, opacity) {\r\n    const layerClassName = this.getLayer().getClassName();\r\n    let container, context;\r\n    if (target && target.style.opacity === '' && target.className === layerClassName) {\r\n      const canvas = target.firstElementChild;\r\n      if (canvas instanceof HTMLCanvasElement) {\r\n        context = canvas.getContext('2d');\r\n      }\r\n    }\r\n    if (context && context.canvas.style.transform === transformToString(transform)) {\r\n      // Container of the previous layer renderer can be used.\r\n      this.container = target;\r\n      this.context = context;\r\n      this.containerReused = true;\r\n    } else if (this.containerReused) {\r\n      // Previously reused container cannot be used any more.\r\n      this.container = null;\r\n      this.context = null;\r\n      this.containerReused = false;\r\n    }\r\n    if (!this.container) {\r\n      container = document.createElement('div');\r\n      container.className = layerClassName;\r\n      let style = container.style;\r\n      style.position = 'absolute';\r\n      style.width = '100%';\r\n      style.height = '100%';\r\n      context = createCanvasContext2D();\r\n      const canvas = context.canvas;\r\n      container.appendChild(canvas);\r\n      style = canvas.style;\r\n      style.position = 'absolute';\r\n      style.transformOrigin = 'top left';\r\n      this.container = container;\r\n      this.context = context;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\r\n   * @protected\r\n   */\r\n  clip(context, frameState, extent) {\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\r\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\r\n    const rotation = frameState.viewState.rotation;\r\n    const topLeft = getTopLeft(extent);\r\n    const topRight = getTopRight(extent);\r\n    const bottomRight = getBottomRight(extent);\r\n    const bottomLeft = getBottomLeft(extent);\r\n\r\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\r\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\r\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\r\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\r\n\r\n    context.save();\r\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\r\n    context.beginPath();\r\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\r\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\r\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\r\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\r\n    context.clip();\r\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\r\n   * @protected\r\n   */\r\n  clipUnrotated(context, frameState, extent) {\r\n    const topLeft = getTopLeft(extent);\r\n    const topRight = getTopRight(extent);\r\n    const bottomRight = getBottomRight(extent);\r\n    const bottomLeft = getBottomLeft(extent);\r\n\r\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\r\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\r\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\r\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\r\n\r\n    const inverted = this.inversePixelTransform_;\r\n    applyTransform(inverted, topLeft);\r\n    applyTransform(inverted, topRight);\r\n    applyTransform(inverted, bottomRight);\r\n    applyTransform(inverted, bottomLeft);\r\n\r\n    context.save();\r\n    context.beginPath();\r\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\r\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\r\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\r\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\r\n    context.clip();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  dispatchRenderEvent_(type, context, frameState) {\r\n    const layer = this.getLayer();\r\n    if (layer.hasListener(type)) {\r\n      const event = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\r\n      layer.dispatchEvent(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  preRender(context, frameState) {\r\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  postRender(context, frameState) {\r\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\r\n  }\r\n\r\n  /**\r\n   * Creates a transform for rendering to an element that will be rotated after rendering.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {number} width Width of the rendered element (in pixels).\r\n   * @param {number} height Height of the rendered element (in pixels).\r\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\r\n   * @protected\r\n   * @return {!import(\"../../transform.js\").Transform} Transform.\r\n   */\r\n  getRenderTransform(frameState, width, height, offsetX) {\r\n    const viewState = frameState.viewState;\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const dx1 = width / 2;\r\n    const dy1 = height / 2;\r\n    const sx = pixelRatio / viewState.resolution;\r\n    const sy = -sx;\r\n    const dx2 = -viewState.center[0] + offsetX;\r\n    const dy2 = -viewState.center[1];\r\n    return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\r\n   *    location, null will be returned.  If there is data, but pixel values cannot be\r\n   *    returned, and empty array will be returned.\r\n   */\r\n  getDataAtPixel(pixel, frameState, hitTolerance) {\r\n    const renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\r\n    const context = this.context;\r\n\r\n    let data;\r\n    try {\r\n      data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\r\n    } catch (err) {\r\n      if (err.name === 'SecurityError') {\r\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\r\n        return new Uint8Array();\r\n      }\r\n      return data;\r\n    }\r\n\r\n    if (data[3] === 0) {\r\n      return null;\r\n    }\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport default CanvasLayerRenderer;\r\n","/**\r\n * @module ol/renderer/vector\r\n */\r\nimport {getUid} from '../util.js';\r\nimport ImageState from '../ImageState.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport BuilderType from '../render/canvas/BuilderType.js';\r\n\r\n\r\n/**\r\n * Tolerance for geometry simplification in device pixels.\r\n * @type {number}\r\n */\r\nconst SIMPLIFY_TOLERANCE = 0.5;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<import(\"../geom/GeometryType.js\").default,\r\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\r\n *                         import(\"../style/Style.js\").default, Object): void>}\r\n */\r\nconst GEOMETRY_RENDERERS = {\r\n  'Point': renderPointGeometry,\r\n  'LineString': renderLineStringGeometry,\r\n  'Polygon': renderPolygonGeometry,\r\n  'MultiPoint': renderMultiPointGeometry,\r\n  'MultiLineString': renderMultiLineStringGeometry,\r\n  'MultiPolygon': renderMultiPolygonGeometry,\r\n  'GeometryCollection': renderGeometryCollectionGeometry,\r\n  'Circle': renderCircleGeometry\r\n};\r\n\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\r\n * @return {number} Order.\r\n */\r\nexport function defaultOrder(feature1, feature2) {\r\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\r\n}\r\n\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Squared pixel tolerance.\r\n */\r\nexport function getSquaredTolerance(resolution, pixelRatio) {\r\n  const tolerance = getTolerance(resolution, pixelRatio);\r\n  return tolerance * tolerance;\r\n}\r\n\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Pixel tolerance.\r\n */\r\nexport function getTolerance(resolution, pixelRatio) {\r\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\r\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    circleReplay.drawCircle(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\r\n * @param {T} thisArg Value to use as `this` when executing `listener`.\r\n * @return {boolean} `true` if style is loading.\r\n * @template T\r\n */\r\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\r\n  let loading = false;\r\n  const imageStyle = style.getImage();\r\n  if (imageStyle) {\r\n    let imageState = imageStyle.getImageState();\r\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\r\n      imageStyle.unlistenImageChange(listener, thisArg);\r\n    } else {\r\n      if (imageState == ImageState.IDLE) {\r\n        imageStyle.load();\r\n      }\r\n      imageState = imageStyle.getImageState();\r\n      imageStyle.listenImageChange(listener, thisArg);\r\n      loading = true;\r\n    }\r\n  }\r\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\r\n\r\n  return loading;\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n */\r\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\r\n  const geometry = style.getGeometryFunction()(feature);\r\n  if (!geometry) {\r\n    return;\r\n  }\r\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\r\n  const renderer = style.getRenderer();\r\n  if (renderer) {\r\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\r\n  } else {\r\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\r\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderGeometry(replayGroup, geometry, style, feature) {\r\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\r\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      renderGeometry(replayGroup, geometries[i], style, feature);\r\n    }\r\n    return;\r\n  }\r\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\r\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\r\n  const geometries = geometry.getGeometriesArray();\r\n  let i, ii;\r\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n    const geometryRenderer =\r\n        GEOMETRY_RENDERERS[geometries[i].getType()];\r\n    geometryRenderer(replayGroup, geometries[i], style, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawLineString(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawMultiLineString(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle || fillStyle) {\r\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawMultiPolygon(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\r\n  const imageStyle = style.getImage();\r\n  if (imageStyle) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\r\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\r\n    imageReplay.drawPoint(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\r\n  const imageStyle = style.getImage();\r\n  if (imageStyle) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\r\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\r\n    imageReplay.drawMultiPoint(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawPolygon(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n","/**\r\n * @module ol/renderer/canvas/VectorLayer\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\r\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\r\nimport ExecutorGroup, {replayDeclutter} from '../../render/canvas/ExecutorGroup.js';\r\nimport CanvasLayerRenderer from './Layer.js';\r\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\r\nimport {toString as transformToString, makeScale, makeInverse} from '../../transform.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for vector layers.\r\n * @api\r\n */\r\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\r\n   */\r\n  constructor(vectorLayer) {\r\n\r\n    super(vectorLayer);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.dirty_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedResolution_ = NaN;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.renderedExtent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\r\n     */\r\n    this.renderedRenderOrder_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\r\n     */\r\n    this.replayGroup_ = null;\r\n\r\n    /**\r\n     * A new replay group had to be created by `prepareFrame()`\r\n     * @type {boolean}\r\n     */\r\n    this.replayGroupChanged = true;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  useContainer(target, transform, opacity) {\r\n    if (opacity < 1) {\r\n      target = null;\r\n    }\r\n    super.useContainer(target, transform, opacity);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  renderFrame(frameState, target) {\r\n\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n\r\n    // set forward and inverse pixel transforms\r\n    makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\r\n    makeInverse(this.inversePixelTransform_, this.pixelTransform_);\r\n\r\n    this.useContainer(target, this.pixelTransform_, layerState.opacity);\r\n    const context = this.context;\r\n    const canvas = context.canvas;\r\n\r\n    const replayGroup = this.replayGroup_;\r\n    if (!replayGroup || replayGroup.isEmpty()) {\r\n      if (!this.containerReused && canvas.width > 0) {\r\n        canvas.width = 0;\r\n      }\r\n      return this.container;\r\n    }\r\n\r\n    // resize and clear\r\n    const width = Math.round(frameState.size[0] * pixelRatio);\r\n    const height = Math.round(frameState.size[1] * pixelRatio);\r\n    if (canvas.width != width || canvas.height != height) {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const canvasTransform = transformToString(this.pixelTransform_);\r\n      if (canvas.style.transform !== canvasTransform) {\r\n        canvas.style.transform = canvasTransform;\r\n      }\r\n    } else if (!this.containerReused) {\r\n      context.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    this.preRender(context, frameState);\r\n\r\n    const extent = frameState.extent;\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n    const rotation = viewState.rotation;\r\n    const projectionExtent = projection.getExtent();\r\n    const vectorSource = this.getLayer().getSource();\r\n\r\n    // clipped rendering if layer extent is set\r\n    const clipExtent = layerState.extent;\r\n    const clipped = clipExtent !== undefined;\r\n    if (clipped) {\r\n      this.clip(context, frameState, clipExtent);\r\n    }\r\n\r\n\r\n    const viewHints = frameState.viewHints;\r\n    const snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\r\n\r\n    const transform = this.getRenderTransform(frameState, width, height, 0);\r\n    const skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\r\n    const declutterReplays = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer()).getDeclutter() ? {} : null;\r\n    replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\r\n\r\n    if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\r\n      let startX = extent[0];\r\n      const worldWidth = getWidth(projectionExtent);\r\n      let world = 0;\r\n      let offsetX;\r\n      while (startX < projectionExtent[0]) {\r\n        --world;\r\n        offsetX = worldWidth * world;\r\n        const transform = this.getRenderTransform(frameState, width, height, offsetX);\r\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\r\n        startX += worldWidth;\r\n      }\r\n      world = 0;\r\n      startX = extent[2];\r\n      while (startX > projectionExtent[2]) {\r\n        ++world;\r\n        offsetX = worldWidth * world;\r\n        const transform = this.getRenderTransform(frameState, width, height, offsetX);\r\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\r\n        startX -= worldWidth;\r\n      }\r\n    }\r\n    if (declutterReplays) {\r\n      const viewHints = frameState.viewHints;\r\n      const hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\r\n      replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\r\n    }\r\n\r\n    if (clipped) {\r\n      context.restore();\r\n    }\r\n\r\n    this.postRender(context, frameState);\r\n\r\n    const opacity = layerState.opacity;\r\n    const container = this.container;\r\n    if (opacity !== parseFloat(container.style.opacity)) {\r\n      container.style.opacity = opacity === 1 ? '' : opacity;\r\n    }\r\n\r\n    return this.container;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\r\n    if (!this.replayGroup_) {\r\n      return undefined;\r\n    } else {\r\n      const resolution = frameState.viewState.resolution;\r\n      const rotation = frameState.viewState.rotation;\r\n      const layer = /** @type {import(\"../../layer/Vector\").default} */ (this.getLayer());\r\n      /** @type {!Object<string, boolean>} */\r\n      const features = {};\r\n      const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\r\n        /**\r\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n         * @return {?} Callback result.\r\n         */\r\n        function(feature) {\r\n          const key = getUid(feature);\r\n          if (!(key in features)) {\r\n            features[key] = true;\r\n            return callback(feature, layer);\r\n          }\r\n        }, layer.getDeclutter() ? declutteredFeatures : null);\r\n      return result;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleFontsChanged() {\r\n    const layer = this.getLayer();\r\n    if (layer.getVisible() && this.replayGroup_) {\r\n      layer.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle changes in image style state.\r\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\r\n   * @private\r\n   */\r\n  handleStyleImageChange_(event) {\r\n    this.renderIfReadyAndVisible();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState) {\r\n    const vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    const vectorSource = vectorLayer.getSource();\r\n\r\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\r\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\r\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\r\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\r\n\r\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\r\n        (!updateWhileInteracting && interacting)) {\r\n      return true;\r\n    }\r\n\r\n    const frameStateExtent = frameState.extent;\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n    const resolution = viewState.resolution;\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const vectorLayerRevision = vectorLayer.getRevision();\r\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\r\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\r\n\r\n    if (vectorLayerRenderOrder === undefined) {\r\n      vectorLayerRenderOrder = defaultRenderOrder;\r\n    }\r\n\r\n    const extent = buffer(frameStateExtent,\r\n      vectorLayerRenderBuffer * resolution);\r\n    const projectionExtent = viewState.projection.getExtent();\r\n\r\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\r\n        !containsExtent(projectionExtent, frameState.extent)) {\r\n      // For the replay group, we need an extent that intersects the real world\r\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\r\n      // to +540°, we add at least 1 world width on each side of the projection\r\n      // extent. If the viewport is wider than the world, we need to add half of\r\n      // the viewport width to make sure we cover the whole viewport.\r\n      const worldWidth = getWidth(projectionExtent);\r\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\r\n      extent[0] = projectionExtent[0] - gutter;\r\n      extent[2] = projectionExtent[2] + gutter;\r\n    }\r\n\r\n    if (!this.dirty_ &&\r\n        this.renderedResolution_ == resolution &&\r\n        this.renderedRevision_ == vectorLayerRevision &&\r\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\r\n        containsExtent(this.renderedExtent_, extent)) {\r\n      this.replayGroupChanged = false;\r\n      return true;\r\n    }\r\n\r\n    if (this.replayGroup_) {\r\n      this.replayGroup_.dispose();\r\n    }\r\n    this.replayGroup_ = null;\r\n\r\n    this.dirty_ = false;\r\n\r\n    const replayGroup = new CanvasBuilderGroup(\r\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\r\n      pixelRatio, vectorLayer.getDeclutter());\r\n\r\n    vectorSource.loadFeatures(extent, resolution, projection);\r\n\r\n    /**\r\n     * @param {import(\"../../Feature.js\").default} feature Feature.\r\n     * @this {CanvasVectorLayerRenderer}\r\n     */\r\n    const render = function(feature) {\r\n      let styles;\r\n      const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\r\n      if (styleFunction) {\r\n        styles = styleFunction(feature, resolution);\r\n      }\r\n      if (styles) {\r\n        const dirty = this.renderFeature(\r\n          feature, resolution, pixelRatio, styles, replayGroup);\r\n        this.dirty_ = this.dirty_ || dirty;\r\n      }\r\n    }.bind(this);\r\n    if (vectorLayerRenderOrder) {\r\n      /** @type {Array<import(\"../../Feature.js\").default>} */\r\n      const features = [];\r\n      vectorSource.forEachFeatureInExtent(extent,\r\n        /**\r\n         * @param {import(\"../../Feature.js\").default} feature Feature.\r\n         */\r\n        function(feature) {\r\n          features.push(feature);\r\n        });\r\n      features.sort(vectorLayerRenderOrder);\r\n      for (let i = 0, ii = features.length; i < ii; ++i) {\r\n        render(features[i]);\r\n      }\r\n    } else {\r\n      vectorSource.forEachFeatureInExtent(extent, render);\r\n    }\r\n\r\n    const replayGroupInstructions = replayGroup.finish();\r\n    const executorGroup = new ExecutorGroup(extent, resolution,\r\n      pixelRatio, vectorSource.getOverlaps(),\r\n      replayGroupInstructions, vectorLayer.getRenderBuffer());\r\n\r\n    this.renderedResolution_ = resolution;\r\n    this.renderedRevision_ = vectorLayerRevision;\r\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\r\n    this.renderedExtent_ = extent;\r\n    this.replayGroup_ = executorGroup;\r\n\r\n    this.replayGroupChanged = true;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\r\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n   * @return {boolean} `true` if an image is loading.\r\n   */\r\n  renderFeature(feature, resolution, pixelRatio, styles, builderGroup) {\r\n    if (!styles) {\r\n      return false;\r\n    }\r\n    let loading = false;\r\n    if (Array.isArray(styles)) {\r\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\r\n        loading = renderFeature(\r\n          builderGroup, feature, styles[i],\r\n          getSquaredRenderTolerance(resolution, pixelRatio),\r\n          this.handleStyleImageChange_, this) || loading;\r\n      }\r\n    } else {\r\n      loading = renderFeature(\r\n        builderGroup, feature, styles,\r\n        getSquaredRenderTolerance(resolution, pixelRatio),\r\n        this.handleStyleImageChange_, this);\r\n    }\r\n    return loading;\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasVectorLayerRenderer;\r\n","/**\r\n * @module ol/layer/Vector\r\n */\r\nimport BaseVectorLayer from './BaseVector.js';\r\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\r\n\r\n\r\n/**\r\n * @typedef {import(\"./BaseVector.js\").Options} Options\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\r\n * @api\r\n */\r\nclass VectorLayer extends BaseVectorLayer {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super(opt_options);\r\n  }\r\n\r\n  /**\r\n   * Create a renderer for this layer.\r\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n   * @protected\r\n   */\r\n  createRenderer() {\r\n    return new CanvasVectorLayerRenderer(this);\r\n  }\r\n}\r\n\r\n\r\nexport default VectorLayer;\r\n","/**\r\n * @module ol/format/FormatType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  ARRAY_BUFFER: 'arraybuffer',\r\n  JSON: 'json',\r\n  TEXT: 'text',\r\n  XML: 'xml'\r\n};\r\n","/**\r\n * @module ol/featureloader\r\n */\r\nimport {VOID} from './functions.js';\r\nimport FormatType from './format/FormatType.js';\r\n\r\n/**\r\n * {@link module:ol/source/Vector} sources use a function of this type to\r\n * load features.\r\n *\r\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\r\n * a `{number}` representing the resolution (map units per pixel) and an\r\n * {@link module:ol/proj/Projection} for the projection  as\r\n * arguments. `this` within the function is bound to the\r\n * {@link module:ol/source/Vector} it's called from.\r\n *\r\n * The function is responsible for loading the features and adding them to the\r\n * source.\r\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\r\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * {@link module:ol/source/Vector} sources use a function of this type to\r\n * get the url to load features from.\r\n *\r\n * This function takes an {@link module:ol/extent~Extent} representing the area\r\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\r\n * and an {@link module:ol/proj/Projection} for the projection  as\r\n * arguments and returns a `{string}` representing the URL.\r\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {string|FeatureUrlFunction} url Feature URL service.\r\n * @param {import(\"./format/Feature.js\").default} format Feature format.\r\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\r\n *     Function called with the loaded features and optionally with the data\r\n *     projection. Called with the vector tile or source as `this`.\r\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\r\n *     Function called when loading failed. Called with the vector tile or\r\n *     source as `this`.\r\n * @return {FeatureLoader} The feature loader.\r\n */\r\nexport function loadFeaturesXhr(url, format, success, failure) {\r\n  return (\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\r\n     */\r\n    function(extent, resolution, projection) {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('GET',\r\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\r\n        true);\r\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\r\n        xhr.responseType = 'arraybuffer';\r\n      }\r\n      /**\r\n       * @param {Event} event Event.\r\n       * @private\r\n       */\r\n      xhr.onload = function(event) {\r\n        // status will be 0 for file:// urls\r\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\r\n          const type = format.getType();\r\n          /** @type {Document|Node|Object|string|undefined} */\r\n          let source;\r\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\r\n            source = xhr.responseText;\r\n          } else if (type == FormatType.XML) {\r\n            source = xhr.responseXML;\r\n            if (!source) {\r\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\r\n            }\r\n          } else if (type == FormatType.ARRAY_BUFFER) {\r\n            source = /** @type {ArrayBuffer} */ (xhr.response);\r\n          }\r\n          if (source) {\r\n            success.call(this, format.readFeatures(source, {\r\n              extent: extent,\r\n              featureProjection: projection\r\n            }),\r\n            format.readProjection(source));\r\n          } else {\r\n            failure.call(this);\r\n          }\r\n        } else {\r\n          failure.call(this);\r\n        }\r\n      }.bind(this);\r\n      /**\r\n       * @private\r\n       */\r\n      xhr.onerror = function() {\r\n        failure.call(this);\r\n      }.bind(this);\r\n      xhr.send();\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Create an XHR feature loader for a `url` and `format`. The feature loader\r\n * loads features (with XHR), parses the features, and adds them to the\r\n * vector source.\r\n * @param {string|FeatureUrlFunction} url Feature URL service.\r\n * @param {import(\"./format/Feature.js\").default} format Feature format.\r\n * @return {FeatureLoader} The feature loader.\r\n * @api\r\n */\r\nexport function xhr(url, format) {\r\n  return loadFeaturesXhr(url, format,\r\n    /**\r\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\r\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\r\n     * projection.\r\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\r\n     */\r\n    function(features, dataProjection) {\r\n      const sourceOrTile = /** @type {?} */ (this);\r\n      if (typeof sourceOrTile.addFeatures === 'function') {\r\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\r\n      }\r\n    }, /* FIXME handle error */ VOID);\r\n}\r\n","/**\r\n * @module ol/loadingstrategy\r\n */\r\n\r\n\r\n/**\r\n * Strategy function for loading all features with a single request.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n * @api\r\n */\r\nexport function all(extent, resolution) {\r\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\r\n}\r\n\r\n\r\n/**\r\n * Strategy function for loading features based on the view's extent and\r\n * resolution.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n * @api\r\n */\r\nexport function bbox(extent, resolution) {\r\n  return [extent];\r\n}\r\n\r\n\r\n/**\r\n * Creates a strategy function for loading features based on a tile grid.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\r\n * @api\r\n */\r\nexport function tile(tileGrid) {\r\n  return (\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n     */\r\n    function(extent, resolution) {\r\n      const z = tileGrid.getZForResolution(resolution);\r\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n      /** @type {Array<import(\"./extent.js\").Extent>} */\r\n      const extents = [];\r\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\r\n      const tileCoord = [z, 0, 0];\r\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\r\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\r\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\r\n        }\r\n      }\r\n      return extents;\r\n    }\r\n  );\r\n}\r\n","/**\r\n * @module ol/source/Source\r\n */\r\nimport {abstract} from '../util.js';\r\nimport BaseObject from '../Object.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport SourceState from './State.js';\r\n\r\n\r\n/**\r\n * A function that returns a string or an array of strings representing source\r\n * attributions.\r\n *\r\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\r\n */\r\n\r\n\r\n/**\r\n * A type that can be used to provide attribution information for data sources.\r\n *\r\n * It represents either\r\n * * a simple string (e.g. `'© Acme Inc.'`)\r\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\r\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\r\n *\r\n * @typedef {string|Array<string>|Attribution} AttributionLike\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {AttributionLike} [attributions]\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {SourceState} [state='ready']\r\n * @property {boolean} [wrapX=false]\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\r\n *\r\n * A generic `change` event is triggered when the state of the source changes.\r\n * @abstract\r\n * @api\r\n */\r\nclass Source extends BaseObject {\r\n  /**\r\n   * @param {Options} options Source options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = getProjection(options.projection);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Attribution}\r\n     */\r\n    this.attributions_ = adaptAttributions(options.attributions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\r\n      options.attributionsCollapsible : true;\r\n\r\n    /**\r\n     * This source is currently loading data. Sources that defer loading to the\r\n     * map's tile queue never set this to `true`.\r\n     * @type {boolean}\r\n     */\r\n    this.loading = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {SourceState}\r\n     */\r\n    this.state_ = options.state !== undefined ?\r\n      options.state : SourceState.READY;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\r\n\r\n  }\r\n\r\n  /**\r\n   * Get the attribution function for the source.\r\n   * @return {?Attribution} Attribution function.\r\n   */\r\n  getAttributions() {\r\n    return this.attributions_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Attributions are collapsible.\r\n   */\r\n  getAttributionsCollapsible() {\r\n    return this.attributionsCollapsible_;\r\n  }\r\n\r\n  /**\r\n   * Get the projection of the source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return this.projection_;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Array<number>|undefined} Resolutions.\r\n   */\r\n  getResolutions() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\r\n   * @return {SourceState} State.\r\n   * @api\r\n   */\r\n  getState() {\r\n    return this.state_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean|undefined} Wrap X.\r\n   */\r\n  getWrapX() {\r\n    return this.wrapX_;\r\n  }\r\n\r\n  /**\r\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\r\n   * @api\r\n   */\r\n  refresh() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the attributions of the source.\r\n   * @param {AttributionLike|undefined} attributions Attributions.\r\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\r\n   *     or `undefined`.\r\n   * @api\r\n   */\r\n  setAttributions(attributions) {\r\n    this.attributions_ = adaptAttributions(attributions);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the state of the source.\r\n   * @param {SourceState} state State.\r\n   * @protected\r\n   */\r\n  setState(state) {\r\n    this.state_ = state;\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Turns the attributions option into an attributions function.\r\n * @param {AttributionLike|undefined} attributionLike The attribution option.\r\n * @return {?Attribution} An attribution function (or null).\r\n */\r\nfunction adaptAttributions(attributionLike) {\r\n  if (!attributionLike) {\r\n    return null;\r\n  }\r\n  if (Array.isArray(attributionLike)) {\r\n    return function(frameState) {\r\n      return attributionLike;\r\n    };\r\n  }\r\n\r\n  if (typeof attributionLike === 'function') {\r\n    return attributionLike;\r\n  }\r\n\r\n  return function(frameState) {\r\n    return [attributionLike];\r\n  };\r\n}\r\n\r\n\r\nexport default Source;\r\n","/**\r\n * @module ol/source/VectorEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when a feature is added to the source.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\r\n   * @api\r\n   */\r\n  ADDFEATURE: 'addfeature',\r\n\r\n  /**\r\n   * Triggered when a feature is updated.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\r\n   * @api\r\n   */\r\n  CHANGEFEATURE: 'changefeature',\r\n\r\n  /**\r\n   * Triggered when the clear method is called on the source.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\r\n   * @api\r\n   */\r\n  CLEAR: 'clear',\r\n\r\n  /**\r\n   * Triggered when a feature is removed from the source.\r\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\r\n   * @api\r\n   */\r\n  REMOVEFEATURE: 'removefeature'\r\n};\r\n","/**\r\n * @module ol/structs/RBush\r\n */\r\nimport {getUid} from '../util.js';\r\nimport RBush_ from 'rbush';\r\nimport {createOrUpdate, equals} from '../extent.js';\r\nimport {isEmpty} from '../obj.js';\r\n\r\n/**\r\n * @typedef {Object} Entry\r\n * @property {number} minX\r\n * @property {number} minY\r\n * @property {number} maxX\r\n * @property {number} maxY\r\n * @property {Object} [value]\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Wrapper around the RBush by Vladimir Agafonkin.\r\n * See https://github.com/mourner/rbush.\r\n *\r\n * @template T\r\n */\r\nclass RBush {\r\n  /**\r\n   * @param {number=} opt_maxEntries Max entries.\r\n   */\r\n  constructor(opt_maxEntries) {\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.rbush_ = new RBush_(opt_maxEntries);\r\n\r\n    /**\r\n     * A mapping between the objects added to this rbush wrapper\r\n     * and the objects that are actually added to the internal rbush.\r\n     * @private\r\n     * @type {Object<string, Entry>}\r\n     */\r\n    this.items_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * Insert a value into the RBush.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {T} value Value.\r\n   */\r\n  insert(extent, value) {\r\n    /** @type {Entry} */\r\n    const item = {\r\n      minX: extent[0],\r\n      minY: extent[1],\r\n      maxX: extent[2],\r\n      maxY: extent[3],\r\n      value: value\r\n    };\r\n\r\n    this.rbush_.insert(item);\r\n    this.items_[getUid(value)] = item;\r\n  }\r\n\r\n\r\n  /**\r\n   * Bulk-insert values into the RBush.\r\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\r\n   * @param {Array<T>} values Values.\r\n   */\r\n  load(extents, values) {\r\n    const items = new Array(values.length);\r\n    for (let i = 0, l = values.length; i < l; i++) {\r\n      const extent = extents[i];\r\n      const value = values[i];\r\n\r\n      /** @type {Entry} */\r\n      const item = {\r\n        minX: extent[0],\r\n        minY: extent[1],\r\n        maxX: extent[2],\r\n        maxY: extent[3],\r\n        value: value\r\n      };\r\n      items[i] = item;\r\n      this.items_[getUid(value)] = item;\r\n    }\r\n    this.rbush_.load(items);\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove a value from the RBush.\r\n   * @param {T} value Value.\r\n   * @return {boolean} Removed.\r\n   */\r\n  remove(value) {\r\n    const uid = getUid(value);\r\n\r\n    // get the object in which the value was wrapped when adding to the\r\n    // internal rbush. then use that object to do the removal.\r\n    const item = this.items_[uid];\r\n    delete this.items_[uid];\r\n    return this.rbush_.remove(item) !== null;\r\n  }\r\n\r\n\r\n  /**\r\n   * Update the extent of a value in the RBush.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {T} value Value.\r\n   */\r\n  update(extent, value) {\r\n    const item = this.items_[getUid(value)];\r\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\r\n    if (!equals(bbox, extent)) {\r\n      this.remove(value);\r\n      this.insert(extent, value);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Return all values in the RBush.\r\n   * @return {Array<T>} All.\r\n   */\r\n  getAll() {\r\n    const items = this.rbush_.all();\r\n    return items.map(function(item) {\r\n      return item.value;\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Return all values in the given extent.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {Array<T>} All in extent.\r\n   */\r\n  getInExtent(extent) {\r\n    /** @type {Entry} */\r\n    const bbox = {\r\n      minX: extent[0],\r\n      minY: extent[1],\r\n      maxX: extent[2],\r\n      maxY: extent[3]\r\n    };\r\n    const items = this.rbush_.search(bbox);\r\n    return items.map(function(item) {\r\n      return item.value;\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Calls a callback function with each value in the tree.\r\n   * If the callback returns a truthy value, this value is returned without\r\n   * checking the rest of the tree.\r\n   * @param {function(T): *} callback Callback.\r\n   * @return {*} Callback return value.\r\n   */\r\n  forEach(callback) {\r\n    return this.forEach_(this.getAll(), callback);\r\n  }\r\n\r\n\r\n  /**\r\n   * Calls a callback function with each value in the provided extent.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {function(T): *} callback Callback.\r\n   * @return {*} Callback return value.\r\n   */\r\n  forEachInExtent(extent, callback) {\r\n    return this.forEach_(this.getInExtent(extent), callback);\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {Array<T>} values Values.\r\n   * @param {function(T): *} callback Callback.\r\n   * @private\r\n   * @return {*} Callback return value.\r\n   */\r\n  forEach_(values, callback) {\r\n    let result;\r\n    for (let i = 0, l = values.length; i < l; i++) {\r\n      result = callback(values[i]);\r\n      if (result) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return isEmpty(this.items_);\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove all values from the RBush.\r\n   */\r\n  clear() {\r\n    this.rbush_.clear();\r\n    this.items_ = {};\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   */\r\n  getExtent(opt_extent) {\r\n    const data = this.rbush_.toJSON();\r\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {RBush} rbush R-Tree.\r\n   */\r\n  concat(rbush) {\r\n    this.rbush_.load(rbush.rbush_.all());\r\n    for (const i in rbush.items_) {\r\n      this.items_[i] = rbush.items_[i];\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default RBush;\r\n","/**\r\n * @module ol/source/Vector\r\n */\r\n\r\nimport {getUid} from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport {extend} from '../array.js';\r\nimport {assert} from '../asserts.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {containsExtent, equals} from '../extent.js';\r\nimport {xhr} from '../featureloader.js';\r\nimport {TRUE, VOID} from '../functions.js';\r\nimport {all as allStrategy} from '../loadingstrategy.js';\r\nimport {isEmpty, getValues} from '../obj.js';\r\nimport Source from './Source.js';\r\nimport SourceState from './State.js';\r\nimport VectorEventType from './VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\n\r\n/**\r\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\r\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\r\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\r\n *\r\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\r\n * type.\r\n * @template {import(\"../geom/Geometry.js\").default} Geometry\r\n */\r\nexport class VectorSourceEvent extends Event {\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\r\n   */\r\n  constructor(type, opt_feature) {\r\n\r\n    super(type);\r\n\r\n    /**\r\n     * The feature being added or removed.\r\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\r\n     * @api\r\n     */\r\n    this.feature = opt_feature;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\r\n * Features. If provided as {@link module:ol/Collection}, the features in the source\r\n * and the collection will stay in sync.\r\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\r\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\r\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\r\n * The loader function used to load features, from a remote source for example.\r\n * If this is not set and `url` is set, the source will create and use an XHR\r\n * feature loader.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * import {Vector} from 'ol/source';\r\n * import {GeoJSON} from 'ol/format';\r\n * import {bbox} from 'ol/loadingstrategy';\r\n *\r\n * var vectorSource = new Vector({\r\n *   format: new GeoJSON(),\r\n *   loader: function(extent, resolution, projection) {\r\n *      var proj = projection.getCode();\r\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\r\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\r\n *          'outputFormat=application/json&srsname=' + proj + '&' +\r\n *          'bbox=' + extent.join(',') + ',' + proj;\r\n *      var xhr = new XMLHttpRequest();\r\n *      xhr.open('GET', url);\r\n *      var onError = function() {\r\n *        vectorSource.removeLoadedExtent(extent);\r\n *      }\r\n *      xhr.onerror = onError;\r\n *      xhr.onload = function() {\r\n *        if (xhr.status == 200) {\r\n *          vectorSource.addFeatures(\r\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\r\n *        } else {\r\n *          onError();\r\n *        }\r\n *      }\r\n *      xhr.send();\r\n *    },\r\n *    strategy: bbox\r\n *  });\r\n * ```\r\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\r\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\r\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\r\n * stroke operations.\r\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\r\n * By default an {@link module:ol/loadingstrategy~all}\r\n * strategy is used, a one-off strategy which loads all features at once.\r\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\r\n * Setting this option instructs the source to load features using an XHR loader\r\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\r\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\r\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\r\n * other loading strategies.\r\n * Requires `format` to be set as well.\r\n * When default XHR feature loader is provided, the features will\r\n * be transformed from the data projection to the view projection\r\n * during parsing. If your remote data source does not advertise its projection\r\n * properly, this transformation will be incorrect. For some formats, the\r\n * default projection (usually EPSG:4326) can be overridden by setting the\r\n * dataProjection constructor option on the format.\r\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\r\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\r\n * @property {boolean} [useSpatialIndex=true]\r\n * By default, an RTree is used as spatial index. When features are removed and\r\n * added frequently, and the total number of features is low, setting this to\r\n * `false` may improve performance.\r\n *\r\n * Note that\r\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\r\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\r\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\r\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\r\n * through all features.\r\n *\r\n * When set to `false`, the features will be maintained in an\r\n * {@link module:ol/Collection}, which can be retrieved through\r\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\r\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\r\n * -180° and 180° meridians to work properly, this should be set to `false`. The\r\n * resulting geometry coordinates will then exceed the world bounds.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Provides a source of features for vector layers. Vector features provided\r\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\r\n * vector data that is optimized for rendering.\r\n *\r\n * @fires VectorSourceEvent<Geometry>\r\n * @api\r\n * @template {import(\"../geom/Geometry.js\").default} Geometry\r\n */\r\nclass VectorSource extends Source {\r\n  /**\r\n   * @param {Options=} opt_options Vector source options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      projection: undefined,\r\n      state: SourceState.READY,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../featureloader.js\").FeatureLoader}\r\n     */\r\n    this.loader_ = VOID;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../format/Feature.js\").default|undefined}\r\n     */\r\n    this.format_ = options.format;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\r\n     */\r\n    this.url_ = options.url;\r\n\r\n    if (options.loader !== undefined) {\r\n      this.loader_ = options.loader;\r\n    } else if (this.url_ !== undefined) {\r\n      assert(this.format_, 7); // `format` must be set when `url` is set\r\n      // create a XHR feature loader for \"url\" and \"format\"\r\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {LoadingStrategy}\r\n     */\r\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\r\n\r\n    const useSpatialIndex =\r\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\r\n     */\r\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\r\n     */\r\n    this.loadedExtentsRtree_ = new RBush();\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\r\n     */\r\n    this.nullGeometryFeatures_ = {};\r\n\r\n    /**\r\n     * A lookup of features by id (the return from feature.getId()).\r\n     * @private\r\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\r\n     */\r\n    this.idIndex_ = {};\r\n\r\n    /**\r\n     * A lookup of features without id (keyed by getUid(feature)).\r\n     * @private\r\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\r\n     */\r\n    this.undefIdIndex_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\r\n    this.featureChangeKeys_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\r\n     */\r\n    this.featuresCollection_ = null;\r\n\r\n    let collection, features;\r\n    if (Array.isArray(options.features)) {\r\n      features = options.features;\r\n    } else if (options.features) {\r\n      collection = options.features;\r\n      features = collection.getArray();\r\n    }\r\n    if (!useSpatialIndex && collection === undefined) {\r\n      collection = new Collection(features);\r\n    }\r\n    if (features !== undefined) {\r\n      this.addFeaturesInternal(features);\r\n    }\r\n    if (collection !== undefined) {\r\n      this.bindFeaturesCollection_(collection);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Add a single feature to the source.  If you want to add a batch of features\r\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\r\n   * instead. A feature will not be added to the source if feature with\r\n   * the same id is already there. The reason for this behavior is to avoid\r\n   * feature duplication when using bbox or tile loading strategies.\r\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\r\n   * meaning that if a feature with a duplicate id is added in the collection, it will\r\n   * be removed from it right away.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\r\n   * @api\r\n   */\r\n  addFeature(feature) {\r\n    this.addFeatureInternal(feature);\r\n    this.changed();\r\n  }\r\n\r\n\r\n  /**\r\n   * Add a feature without firing a `change` event.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n   * @protected\r\n   */\r\n  addFeatureInternal(feature) {\r\n    const featureKey = getUid(feature);\r\n\r\n    if (!this.addToIndex_(featureKey, feature)) {\r\n      if (this.featuresCollection_) {\r\n        this.featuresCollection_.remove(feature);\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.setupChangeEvents_(featureKey, feature);\r\n\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      const extent = geometry.getExtent();\r\n      if (this.featuresRtree_) {\r\n        this.featuresRtree_.insert(extent, feature);\r\n      }\r\n    } else {\r\n      this.nullGeometryFeatures_[featureKey] = feature;\r\n    }\r\n\r\n    this.dispatchEvent(\r\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} featureKey Unique identifier for the feature.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\r\n   * @private\r\n   */\r\n  setupChangeEvents_(featureKey, feature) {\r\n    this.featureChangeKeys_[featureKey] = [\r\n      listen(feature, EventType.CHANGE,\r\n        this.handleFeatureChange_, this),\r\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\r\n        this.handleFeatureChange_, this)\r\n    ];\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} featureKey Unique identifier for the feature.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\r\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\r\n   *     candidate for insertion into the Rtree.\r\n   * @private\r\n   */\r\n  addToIndex_(featureKey, feature) {\r\n    let valid = true;\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      if (!(id.toString() in this.idIndex_)) {\r\n        this.idIndex_[id.toString()] = feature;\r\n      } else {\r\n        valid = false;\r\n      }\r\n    } else {\r\n      assert(!(featureKey in this.undefIdIndex_),\r\n        30); // The passed `feature` was already added to the source\r\n      this.undefIdIndex_[featureKey] = feature;\r\n    }\r\n    return valid;\r\n  }\r\n\r\n\r\n  /**\r\n   * Add a batch of features to the source.\r\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\r\n   * @api\r\n   */\r\n  addFeatures(features) {\r\n    this.addFeaturesInternal(features);\r\n    this.changed();\r\n  }\r\n\r\n\r\n  /**\r\n   * Add features without firing a `change` event.\r\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\r\n   * @protected\r\n   */\r\n  addFeaturesInternal(features) {\r\n    const extents = [];\r\n    const newFeatures = [];\r\n    const geometryFeatures = [];\r\n\r\n    for (let i = 0, length = features.length; i < length; i++) {\r\n      const feature = features[i];\r\n      const featureKey = getUid(feature);\r\n      if (this.addToIndex_(featureKey, feature)) {\r\n        newFeatures.push(feature);\r\n      }\r\n    }\r\n\r\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\r\n      const feature = newFeatures[i];\r\n      const featureKey = getUid(feature);\r\n      this.setupChangeEvents_(featureKey, feature);\r\n\r\n      const geometry = feature.getGeometry();\r\n      if (geometry) {\r\n        const extent = geometry.getExtent();\r\n        extents.push(extent);\r\n        geometryFeatures.push(feature);\r\n      } else {\r\n        this.nullGeometryFeatures_[featureKey] = feature;\r\n      }\r\n    }\r\n    if (this.featuresRtree_) {\r\n      this.featuresRtree_.load(extents, geometryFeatures);\r\n    }\r\n\r\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\r\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\r\n   * @private\r\n   */\r\n  bindFeaturesCollection_(collection) {\r\n    let modifyingCollection = false;\r\n    listen(this, VectorEventType.ADDFEATURE,\r\n      /**\r\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\r\n       */\r\n      function(evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          collection.push(evt.feature);\r\n          modifyingCollection = false;\r\n        }\r\n      });\r\n    listen(this, VectorEventType.REMOVEFEATURE,\r\n      /**\r\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\r\n       */\r\n      function(evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          collection.remove(evt.feature);\r\n          modifyingCollection = false;\r\n        }\r\n      });\r\n    listen(collection, CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\r\n       */\r\n      function(evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\r\n          modifyingCollection = false;\r\n        }\r\n      }, this);\r\n    listen(collection, CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\r\n       */\r\n      function(evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\r\n          modifyingCollection = false;\r\n        }\r\n      }, this);\r\n    this.featuresCollection_ = collection;\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove all features from the source.\r\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\r\n   * @api\r\n   */\r\n  clear(opt_fast) {\r\n    if (opt_fast) {\r\n      for (const featureId in this.featureChangeKeys_) {\r\n        const keys = this.featureChangeKeys_[featureId];\r\n        keys.forEach(unlistenByKey);\r\n      }\r\n      if (!this.featuresCollection_) {\r\n        this.featureChangeKeys_ = {};\r\n        this.idIndex_ = {};\r\n        this.undefIdIndex_ = {};\r\n      }\r\n    } else {\r\n      if (this.featuresRtree_) {\r\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\r\n        for (const id in this.nullGeometryFeatures_) {\r\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\r\n        }\r\n      }\r\n    }\r\n    if (this.featuresCollection_) {\r\n      this.featuresCollection_.clear();\r\n    }\r\n\r\n    if (this.featuresRtree_) {\r\n      this.featuresRtree_.clear();\r\n    }\r\n    this.nullGeometryFeatures_ = {};\r\n\r\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\r\n    this.dispatchEvent(clearEvent);\r\n    this.changed();\r\n  }\r\n\r\n\r\n  /**\r\n   * Iterate through all features on the source, calling the provided callback\r\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\r\n   * stop and the function will return the same value.\r\n   * Note: this function only iterate through the feature that have a defined geometry.\r\n   *\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\r\n   *     on the source.  Return a truthy value to stop iteration.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   * @api\r\n   */\r\n  forEachFeature(callback) {\r\n    if (this.featuresRtree_) {\r\n      return this.featuresRtree_.forEach(callback);\r\n    } else if (this.featuresCollection_) {\r\n      this.featuresCollection_.forEach(callback);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Iterate through all features whose geometries contain the provided\r\n   * coordinate, calling the callback with each feature.  If the callback returns\r\n   * a \"truthy\" value, iteration will stop and the function will return the same\r\n   * value.\r\n   *\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\r\n   *     whose goemetry contains the provided coordinate.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\r\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\r\n    return this.forEachFeatureInExtent(extent, function(feature) {\r\n      const geometry = feature.getGeometry();\r\n      if (geometry.intersectsCoordinate(coordinate)) {\r\n        return callback(feature);\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Iterate through all features whose bounding box intersects the provided\r\n   * extent (note that the feature's geometry may not intersect the extent),\r\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\r\n   * value, iteration will stop and the function will return the same value.\r\n   *\r\n   * If you are interested in features whose geometry intersects an extent, call\r\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\r\n   *\r\n   * When `useSpatialIndex` is set to false, this method will loop through all\r\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\r\n   *     whose bounding box intersects the provided extent.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   * @api\r\n   */\r\n  forEachFeatureInExtent(extent, callback) {\r\n    if (this.featuresRtree_) {\r\n      return this.featuresRtree_.forEachInExtent(extent, callback);\r\n    } else if (this.featuresCollection_) {\r\n      this.featuresCollection_.forEach(callback);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Iterate through all features whose geometry intersects the provided extent,\r\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\r\n   * value, iteration will stop and the function will return the same value.\r\n   *\r\n   * If you only want to test for bounding box intersection, call the\r\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\r\n   *     whose geometry intersects the provided extent.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   * @api\r\n   */\r\n  forEachFeatureIntersectingExtent(extent, callback) {\r\n    return this.forEachFeatureInExtent(extent,\r\n      /**\r\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n       * @return {T|undefined} The return value from the last call to the callback.\r\n       */\r\n      function(feature) {\r\n        const geometry = feature.getGeometry();\r\n        if (geometry.intersectsExtent(extent)) {\r\n          const result = callback(feature);\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the features collection associated with this source. Will be `null`\r\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\r\n   * with an {@link module:ol/Collection} as `features`.\r\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\r\n   * @api\r\n   */\r\n  getFeaturesCollection() {\r\n    return this.featuresCollection_;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get all features on the source in random order.\r\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\r\n   * @api\r\n   */\r\n  getFeatures() {\r\n    let features;\r\n    if (this.featuresCollection_) {\r\n      features = this.featuresCollection_.getArray();\r\n    } else if (this.featuresRtree_) {\r\n      features = this.featuresRtree_.getAll();\r\n      if (!isEmpty(this.nullGeometryFeatures_)) {\r\n        extend(features, getValues(this.nullGeometryFeatures_));\r\n      }\r\n    }\r\n    return (\r\n      /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features)\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Get all features whose geometry intersects the provided coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\r\n   * @api\r\n   */\r\n  getFeaturesAtCoordinate(coordinate) {\r\n    const features = [];\r\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\r\n      features.push(feature);\r\n    });\r\n    return features;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get all features in the provided extent.  Note that this returns an array of\r\n   * all features intersecting the given extent in random order (so it may include\r\n   * features whose geometries do not intersect the extent).\r\n   *\r\n   * This method is not available when the source is configured with\r\n   * `useSpatialIndex` set to `false`.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\r\n   * @api\r\n   */\r\n  getFeaturesInExtent(extent) {\r\n    return this.featuresRtree_.getInExtent(extent);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the closest feature to the provided coordinate.\r\n   *\r\n   * This method is not available when the source is configured with\r\n   * `useSpatialIndex` set to `false`.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\r\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\r\n   *     and it should return a boolean value. By default, no filtering is made.\r\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\r\n   * @api\r\n   */\r\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\r\n    // Find the closest feature using branch and bound.  We start searching an\r\n    // infinite extent, and find the distance from the first feature found.  This\r\n    // becomes the closest feature.  We then compute a smaller extent which any\r\n    // closer feature must intersect.  We continue searching with this smaller\r\n    // extent, trying to find a closer feature.  Every time we find a closer\r\n    // feature, we update the extent being searched so that any even closer\r\n    // feature must intersect it.  We continue until we run out of features.\r\n    const x = coordinate[0];\r\n    const y = coordinate[1];\r\n    let closestFeature = null;\r\n    const closestPoint = [NaN, NaN];\r\n    let minSquaredDistance = Infinity;\r\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\r\n    const filter = opt_filter ? opt_filter : TRUE;\r\n    this.featuresRtree_.forEachInExtent(extent,\r\n      /**\r\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n       */\r\n      function(feature) {\r\n        if (filter(feature)) {\r\n          const geometry = feature.getGeometry();\r\n          const previousMinSquaredDistance = minSquaredDistance;\r\n          minSquaredDistance = geometry.closestPointXY(\r\n            x, y, closestPoint, minSquaredDistance);\r\n          if (minSquaredDistance < previousMinSquaredDistance) {\r\n            closestFeature = feature;\r\n            // This is sneaky.  Reduce the extent that it is currently being\r\n            // searched while the R-Tree traversal using this same extent object\r\n            // is still in progress.  This is safe because the new extent is\r\n            // strictly contained by the old extent.\r\n            const minDistance = Math.sqrt(minSquaredDistance);\r\n            extent[0] = x - minDistance;\r\n            extent[1] = y - minDistance;\r\n            extent[2] = x + minDistance;\r\n            extent[3] = y + minDistance;\r\n          }\r\n        }\r\n      });\r\n    return closestFeature;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the extent of the features currently in the source.\r\n   *\r\n   * This method is not available when the source is configured with\r\n   * `useSpatialIndex` set to `false`.\r\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\r\n   *     will be created. Instead, that extent's coordinates will be overwritten.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getExtent(opt_extent) {\r\n    return this.featuresRtree_.getExtent(opt_extent);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get a feature by its identifier (the value returned by feature.getId()).\r\n   * Note that the index treats string and numeric identifiers as the same.  So\r\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\r\n   *\r\n   * @param {string|number} id Feature identifier.\r\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\r\n   * @api\r\n   */\r\n  getFeatureById(id) {\r\n    const feature = this.idIndex_[id.toString()];\r\n    return feature !== undefined ? feature : null;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the format associated with this source.\r\n   *\r\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\r\n   * @api\r\n   */\r\n  getFormat() {\r\n    return this.format_;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {boolean} The source can have overlapping geometries.\r\n   */\r\n  getOverlaps() {\r\n    return this.overlaps_;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the url associated with this source.\r\n   *\r\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\r\n   * @api\r\n   */\r\n  getUrl() {\r\n    return this.url_;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {Event} event Event.\r\n   * @private\r\n   */\r\n  handleFeatureChange_(event) {\r\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\r\n    const featureKey = getUid(feature);\r\n    const geometry = feature.getGeometry();\r\n    if (!geometry) {\r\n      if (!(featureKey in this.nullGeometryFeatures_)) {\r\n        if (this.featuresRtree_) {\r\n          this.featuresRtree_.remove(feature);\r\n        }\r\n        this.nullGeometryFeatures_[featureKey] = feature;\r\n      }\r\n    } else {\r\n      const extent = geometry.getExtent();\r\n      if (featureKey in this.nullGeometryFeatures_) {\r\n        delete this.nullGeometryFeatures_[featureKey];\r\n        if (this.featuresRtree_) {\r\n          this.featuresRtree_.insert(extent, feature);\r\n        }\r\n      } else {\r\n        if (this.featuresRtree_) {\r\n          this.featuresRtree_.update(extent, feature);\r\n        }\r\n      }\r\n    }\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      const sid = id.toString();\r\n      if (featureKey in this.undefIdIndex_) {\r\n        delete this.undefIdIndex_[featureKey];\r\n        this.idIndex_[sid] = feature;\r\n      } else {\r\n        if (this.idIndex_[sid] !== feature) {\r\n          this.removeFromIdIndex_(feature);\r\n          this.idIndex_[sid] = feature;\r\n        }\r\n      }\r\n    } else {\r\n      if (!(featureKey in this.undefIdIndex_)) {\r\n        this.removeFromIdIndex_(feature);\r\n        this.undefIdIndex_[featureKey] = feature;\r\n      }\r\n    }\r\n    this.changed();\r\n    this.dispatchEvent(new VectorSourceEvent(\r\n      VectorEventType.CHANGEFEATURE, feature));\r\n  }\r\n\r\n  /**\r\n   * Returns true if the feature is contained within the source.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n   * @return {boolean} Has feature.\r\n   * @api\r\n   */\r\n  hasFeature(feature) {\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      return id in this.idIndex_;\r\n    } else {\r\n      return getUid(feature) in this.undefIdIndex_;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   */\r\n  loadFeatures(extent, resolution, projection) {\r\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\r\n    const extentsToLoad = this.strategy_(extent, resolution);\r\n    this.loading = false;\r\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\r\n      const extentToLoad = extentsToLoad[i];\r\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\r\n        /**\r\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\r\n         * @return {boolean} Contains.\r\n         */\r\n        function(object) {\r\n          return containsExtent(object.extent, extentToLoad);\r\n        });\r\n      if (!alreadyLoaded) {\r\n        this.loader_.call(this, extentToLoad, resolution, projection);\r\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\r\n        this.loading = this.loader_ !== VOID;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  refresh() {\r\n    this.clear(true);\r\n    this.loadedExtentsRtree_.clear();\r\n    super.refresh();\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove an extent from the list of loaded extents.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @api\r\n   */\r\n  removeLoadedExtent(extent) {\r\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\r\n    let obj;\r\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\r\n      if (equals(object.extent, extent)) {\r\n        obj = object;\r\n        return true;\r\n      }\r\n    });\r\n    if (obj) {\r\n      loadedExtentsRtree.remove(obj);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove a single feature from the source.  If you want to remove all features\r\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\r\n   * instead.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\r\n   * @api\r\n   */\r\n  removeFeature(feature) {\r\n    const featureKey = getUid(feature);\r\n    if (featureKey in this.nullGeometryFeatures_) {\r\n      delete this.nullGeometryFeatures_[featureKey];\r\n    } else {\r\n      if (this.featuresRtree_) {\r\n        this.featuresRtree_.remove(feature);\r\n      }\r\n    }\r\n    this.removeFeatureInternal(feature);\r\n    this.changed();\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove feature without firing a `change` event.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n   * @protected\r\n   */\r\n  removeFeatureInternal(feature) {\r\n    const featureKey = getUid(feature);\r\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\r\n    delete this.featureChangeKeys_[featureKey];\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      delete this.idIndex_[id.toString()];\r\n    } else {\r\n      delete this.undefIdIndex_[featureKey];\r\n    }\r\n    this.dispatchEvent(new VectorSourceEvent(\r\n      VectorEventType.REMOVEFEATURE, feature));\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove a feature from the id index.  Called internally when the feature id\r\n   * may have changed.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\r\n   * @return {boolean} Removed the feature from the index.\r\n   * @private\r\n   */\r\n  removeFromIdIndex_(feature) {\r\n    let removed = false;\r\n    for (const id in this.idIndex_) {\r\n      if (this.idIndex_[id] === feature) {\r\n        delete this.idIndex_[id];\r\n        removed = true;\r\n        break;\r\n      }\r\n    }\r\n    return removed;\r\n  }\r\n\r\n\r\n  /**\r\n   * Set the new loader of the source. The next render cycle will use the\r\n   * new loader.\r\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\r\n   * @api\r\n   */\r\n  setLoader(loader) {\r\n    this.loader_ = loader;\r\n  }\r\n\r\n  /**\r\n   * Points the source to a new url. The next render cycle will use the new url.\r\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\r\n   * @api\r\n   */\r\n  setUrl(url) {\r\n    assert(this.format_, 7); // `format` must be set when `url` is set\r\n    this.setLoader(xhr(url, this.format_));\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default VectorSource;\r\n","/**\r\n * @module ol/interaction/Draw\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\r\nimport {listen} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\r\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\r\nimport {TRUE, FALSE} from '../functions.js';\r\nimport Circle from '../geom/Circle.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport InteractionProperty from './Property.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {GeometryType} type Geometry type of\r\n * the geometries being drawn with this instance.\r\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\r\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\r\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\r\n * was chosen for the draw interaction to behave correctly on mouse as well as\r\n * on touch devices.\r\n * @property {import(\"../Collection.js\").default<Feature>} [features]\r\n * Destination collection for the drawn features.\r\n * @property {VectorSource} [source] Destination source for\r\n * the drawn features.\r\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\r\n * before the current vertex can be dragged to its exact position.\r\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\r\n * drawing finish.\r\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\r\n * doubleclick events from firing during drawing.\r\n * @property {number} [maxPoints] The number of points that can be drawn before\r\n * a polygon ring or line string is finished. By default there is no\r\n * restriction.\r\n * @property {number} [minPoints] The number of points that must be drawn\r\n * before a polygon ring or line string can be finished. Default is `3` for\r\n * polygon rings and `2` for line strings.\r\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether the drawing can be finished.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style for sketch features.\r\n * @property {GeometryFunction} [geometryFunction]\r\n * Function that is called when a geometry's coordinates are updated.\r\n * @property {string} [geometryName] Geometry name to use for features created\r\n * by the draw interaction.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\r\n * adds a vertex or deactivates freehand drawing.\r\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\r\n * polygons, and circles.  This makes the interaction always operate in freehand\r\n * mode and takes precedence over any `freehandCondition` option.\r\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\r\n * Condition that activates freehand drawing for lines and polygons. This\r\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether that event should be handled. The\r\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\r\n * Shift key activates freehand drawing.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n */\r\n\r\n\r\n/**\r\n * Coordinate type when drawing points.\r\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\r\n */\r\n\r\n\r\n/**\r\n * Coordinate type when drawing lines.\r\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\r\n */\r\n\r\n\r\n/**\r\n * Coordinate type when drawing polygons.\r\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\r\n */\r\n\r\n\r\n/**\r\n * Types used for drawing coordinates.\r\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\r\n */\r\n\r\n\r\n/**\r\n * Function that takes an array of coordinates and an optional existing geometry as\r\n * arguments, and returns a geometry. The optional existing geometry is the\r\n * geometry that is returned when the function is called without a second\r\n * argument.\r\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\r\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\r\n */\r\n\r\n\r\n/**\r\n * Draw mode.  This collapses multi-part geometry types with their single-part\r\n * cousins.\r\n * @enum {string}\r\n */\r\nconst Mode = {\r\n  POINT: 'Point',\r\n  LINE_STRING: 'LineString',\r\n  POLYGON: 'Polygon',\r\n  CIRCLE: 'Circle'\r\n};\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DrawEventType = {\r\n  /**\r\n   * Triggered upon feature draw start\r\n   * @event DrawEvent#drawstart\r\n   * @api\r\n   */\r\n  DRAWSTART: 'drawstart',\r\n  /**\r\n   * Triggered upon feature draw end\r\n   * @event DrawEvent#drawend\r\n   * @api\r\n   */\r\n  DRAWEND: 'drawend'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\r\n * instances of this type.\r\n */\r\nclass DrawEvent extends Event {\r\n  /**\r\n   * @param {DrawEventType} type Type.\r\n   * @param {Feature} feature The feature drawn.\r\n   */\r\n  constructor(type, feature) {\r\n\r\n    super(type);\r\n\r\n    /**\r\n     * The feature being drawn.\r\n     * @type {Feature}\r\n     * @api\r\n     */\r\n    this.feature = feature;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for drawing feature geometries.\r\n *\r\n * @fires DrawEvent\r\n * @api\r\n */\r\nclass Draw extends PointerInteraction {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.shouldHandle_ = false;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.downPx_ = null;\r\n\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    this.downTimeout_;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.lastDragTime_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.freehand_ = false;\r\n\r\n    /**\r\n     * Target source for drawn features.\r\n     * @type {VectorSource}\r\n     * @private\r\n     */\r\n    this.source_ = options.source ? options.source : null;\r\n\r\n    /**\r\n     * Target collection for drawn features.\r\n     * @type {import(\"../Collection.js\").default<Feature>}\r\n     * @private\r\n     */\r\n    this.features_ = options.features ? options.features : null;\r\n\r\n    /**\r\n     * Pixel distance for snapping.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\r\n\r\n    /**\r\n     * Geometry type.\r\n     * @type {GeometryType}\r\n     * @private\r\n     */\r\n    this.type_ = /** @type {GeometryType} */ (options.type);\r\n\r\n    /**\r\n     * Drawing mode (derived from geometry type.\r\n     * @type {Mode}\r\n     * @private\r\n     */\r\n    this.mode_ = getMode(this.type_);\r\n\r\n    /**\r\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\r\n     * Default is `false`.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.stopClick_ = !!options.stopClick;\r\n\r\n    /**\r\n     * The number of points that must be drawn before a polygon ring or line\r\n     * string can be finished.  The default is 3 for polygon rings and 2 for\r\n     * line strings.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minPoints_ = options.minPoints ?\r\n      options.minPoints :\r\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\r\n\r\n    /**\r\n     * The number of points that can be drawn before a polygon ring or line string\r\n     * is finished. The default is no restriction.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\r\n\r\n    /**\r\n     * A function to decide if a potential finish coordinate is permissible\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\r\n\r\n    let geometryFunction = options.geometryFunction;\r\n    if (!geometryFunction) {\r\n      if (this.type_ === GeometryType.CIRCLE) {\r\n        /**\r\n         * @param {!LineCoordType} coordinates The coordinates.\r\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\r\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\r\n         */\r\n        geometryFunction = function(coordinates, opt_geometry) {\r\n          const circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\r\n            new Circle([NaN, NaN]);\r\n          const squaredLength = squaredCoordinateDistance(\r\n            coordinates[0], coordinates[1]);\r\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\r\n          return circle;\r\n        };\r\n      } else {\r\n        let Constructor;\r\n        const mode = this.mode_;\r\n        if (mode === Mode.POINT) {\r\n          Constructor = Point;\r\n        } else if (mode === Mode.LINE_STRING) {\r\n          Constructor = LineString;\r\n        } else if (mode === Mode.POLYGON) {\r\n          Constructor = Polygon;\r\n        }\r\n        /**\r\n         * @param {!LineCoordType} coordinates The coordinates.\r\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\r\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\r\n         */\r\n        geometryFunction = function(coordinates, opt_geometry) {\r\n          let geometry = opt_geometry;\r\n          if (geometry) {\r\n            if (mode === Mode.POLYGON) {\r\n              if (coordinates[0].length) {\r\n                // Add a closing coordinate to match the first\r\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\r\n              } else {\r\n                geometry.setCoordinates([]);\r\n              }\r\n            } else {\r\n              geometry.setCoordinates(coordinates);\r\n            }\r\n          } else {\r\n            geometry = new Constructor(coordinates);\r\n          }\r\n          return geometry;\r\n        };\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @type {GeometryFunction}\r\n     * @private\r\n     */\r\n    this.geometryFunction_ = geometryFunction;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\r\n\r\n    /**\r\n     * Finish coordinate for the feature (first point for polygons, last point for\r\n     * linestrings).\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.finishCoordinate_ = null;\r\n\r\n    /**\r\n     * Sketch feature.\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.sketchFeature_ = null;\r\n\r\n    /**\r\n     * Sketch point.\r\n     * @type {Feature<Point>}\r\n     * @private\r\n     */\r\n    this.sketchPoint_ = null;\r\n\r\n    /**\r\n     * Sketch coordinates. Used when drawing a line or polygon.\r\n     * @type {SketchCoordType}\r\n     * @private\r\n     */\r\n    this.sketchCoords_ = null;\r\n\r\n    /**\r\n     * Sketch line. Used when drawing polygon.\r\n     * @type {Feature<LineString>}\r\n     * @private\r\n     */\r\n    this.sketchLine_ = null;\r\n\r\n    /**\r\n     * Sketch line coordinates. Used when drawing a polygon or circle.\r\n     * @type {LineCoordType}\r\n     * @private\r\n     */\r\n    this.sketchLineCoords_ = null;\r\n\r\n    /**\r\n     * Squared tolerance for handling up events.  If the squared distance\r\n     * between a down and up event is greater than this tolerance, up events\r\n     * will not be handled.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.squaredClickTolerance_ = options.clickTolerance ?\r\n      options.clickTolerance * options.clickTolerance : 36;\r\n\r\n    /**\r\n     * Draw overlay where our sketch features are drawn.\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.overlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: options.wrapX ? options.wrapX : false\r\n      }),\r\n      style: options.style ? options.style :\r\n        getDefaultStyleFunction(),\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * Name of the geometry attribute for newly created features.\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.freehandCondition_;\r\n    if (options.freehand) {\r\n      this.freehandCondition_ = always;\r\n    } else {\r\n      this.freehandCondition_ = options.freehandCondition ?\r\n        options.freehandCondition : shiftKeyOnly;\r\n    }\r\n\r\n    listen(this,\r\n      getChangeEventType(InteractionProperty.ACTIVE),\r\n      this.updateState_, this);\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    this.updateState_();\r\n  }\r\n\r\n  /**\r\n   * Get the overlay layer that this interaction renders sketch features to.\r\n   * @return {VectorLayer} Overlay layer.\r\n   * @api\r\n   */\r\n  getOverlay() {\r\n    return this.overlay_;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\r\n   * @override\r\n   * @api\r\n   */\r\n  handleEvent(event) {\r\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\r\n      // Avoid context menu for long taps when drawing on mobile\r\n      event.preventDefault();\r\n    }\r\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\r\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\r\n    let pass = true;\r\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\r\n      const now = Date.now();\r\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\r\n        this.downPx_ = event.pixel;\r\n        this.shouldHandle_ = !this.freehand_;\r\n        move = true;\r\n      } else {\r\n        this.lastDragTime_ = undefined;\r\n      }\r\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\r\n        clearTimeout(this.downTimeout_);\r\n        this.downTimeout_ = undefined;\r\n      }\r\n    }\r\n    if (this.freehand_ &&\r\n        event.type === MapBrowserEventType.POINTERDRAG &&\r\n        this.sketchFeature_ !== null) {\r\n      this.addToDrawing_(event);\r\n      pass = false;\r\n    } else if (this.freehand_ &&\r\n        event.type === MapBrowserEventType.POINTERDOWN) {\r\n      pass = false;\r\n    } else if (move) {\r\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\r\n      if (pass && this.freehand_) {\r\n        pass = this.handlePointerMove_(event);\r\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\r\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\r\n        this.handlePointerMove_(event);\r\n      }\r\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\r\n      pass = false;\r\n    }\r\n\r\n    return super.handleEvent(event) && pass;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(event) {\r\n    this.shouldHandle_ = !this.freehand_;\r\n\r\n    if (this.freehand_) {\r\n      this.downPx_ = event.pixel;\r\n      if (!this.finishCoordinate_) {\r\n        this.startDrawing_(event);\r\n      }\r\n      return true;\r\n    } else if (this.condition_(event)) {\r\n      this.lastDragTime_ = Date.now();\r\n      this.downTimeout_ = setTimeout(function() {\r\n        this.handlePointerMove_(new MapBrowserPointerEvent(\r\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\r\n      }.bind(this), this.dragVertexDelay_);\r\n      this.downPx_ = event.pixel;\r\n      return true;\r\n    } else {\r\n      this.lastDragTime_ = undefined;\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(event) {\r\n    let pass = true;\r\n\r\n    if (this.downTimeout_) {\r\n      clearTimeout(this.downTimeout_);\r\n      this.downTimeout_ = undefined;\r\n    }\r\n\r\n    this.handlePointerMove_(event);\r\n\r\n    const circleMode = this.mode_ === Mode.CIRCLE;\r\n\r\n    if (this.shouldHandle_) {\r\n      if (!this.finishCoordinate_) {\r\n        this.startDrawing_(event);\r\n        if (this.mode_ === Mode.POINT) {\r\n          this.finishDrawing();\r\n        }\r\n      } else if (this.freehand_ || circleMode) {\r\n        this.finishDrawing();\r\n      } else if (this.atFinish_(event)) {\r\n        if (this.finishCondition_(event)) {\r\n          this.finishDrawing();\r\n        }\r\n      } else {\r\n        this.addToDrawing_(event);\r\n      }\r\n      pass = false;\r\n    } else if (this.freehand_) {\r\n      this.finishCoordinate_ = null;\r\n      this.abortDrawing_();\r\n    }\r\n    if (!pass && this.stopClick_) {\r\n      event.stopPropagation();\r\n    }\r\n    return pass;\r\n  }\r\n\r\n  /**\r\n   * Handle move events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\r\n   * @return {boolean} Pass the event to other interactions.\r\n   * @private\r\n   */\r\n  handlePointerMove_(event) {\r\n    if (this.downPx_ &&\r\n        ((!this.freehand_ && this.shouldHandle_) ||\r\n        (this.freehand_ && !this.shouldHandle_))) {\r\n      const downPx = this.downPx_;\r\n      const clickPx = event.pixel;\r\n      const dx = downPx[0] - clickPx[0];\r\n      const dy = downPx[1] - clickPx[1];\r\n      const squaredDistance = dx * dx + dy * dy;\r\n      this.shouldHandle_ = this.freehand_ ?\r\n        squaredDistance > this.squaredClickTolerance_ :\r\n        squaredDistance <= this.squaredClickTolerance_;\r\n      if (!this.shouldHandle_) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (this.finishCoordinate_) {\r\n      this.modifyDrawing_(event);\r\n    } else {\r\n      this.createOrUpdateSketchPoint_(event);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Determine if an event is within the snapping tolerance of the start coord.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @return {boolean} The event is within the snapping tolerance of the start.\r\n   * @private\r\n   */\r\n  atFinish_(event) {\r\n    let at = false;\r\n    if (this.sketchFeature_) {\r\n      let potentiallyDone = false;\r\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\r\n      if (this.mode_ === Mode.LINE_STRING) {\r\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\r\n      } else if (this.mode_ === Mode.POLYGON) {\r\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\r\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\r\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\r\n      }\r\n      if (potentiallyDone) {\r\n        const map = event.map;\r\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\r\n          const finishCoordinate = potentiallyFinishCoordinates[i];\r\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\r\n          const pixel = event.pixel;\r\n          const dx = pixel[0] - finishPixel[0];\r\n          const dy = pixel[1] - finishPixel[1];\r\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\r\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\r\n          if (at) {\r\n            this.finishCoordinate_ = finishCoordinate;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return at;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @private\r\n   */\r\n  createOrUpdateSketchPoint_(event) {\r\n    const coordinates = event.coordinate.slice();\r\n    if (!this.sketchPoint_) {\r\n      this.sketchPoint_ = new Feature(new Point(coordinates));\r\n      this.updateSketchFeatures_();\r\n    } else {\r\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\r\n      sketchPointGeom.setCoordinates(coordinates);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the drawing.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @private\r\n   */\r\n  startDrawing_(event) {\r\n    const start = event.coordinate;\r\n    this.finishCoordinate_ = start;\r\n    if (this.mode_ === Mode.POINT) {\r\n      this.sketchCoords_ = start.slice();\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\r\n      this.sketchLineCoords_ = this.sketchCoords_[0];\r\n    } else {\r\n      this.sketchCoords_ = [start.slice(), start.slice()];\r\n    }\r\n    if (this.sketchLineCoords_) {\r\n      this.sketchLine_ = new Feature(\r\n        new LineString(this.sketchLineCoords_));\r\n    }\r\n    const geometry = this.geometryFunction_(this.sketchCoords_);\r\n    this.sketchFeature_ = new Feature();\r\n    if (this.geometryName_) {\r\n      this.sketchFeature_.setGeometryName(this.geometryName_);\r\n    }\r\n    this.sketchFeature_.setGeometry(geometry);\r\n    this.updateSketchFeatures_();\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\r\n  }\r\n\r\n  /**\r\n   * Modify the drawing.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @private\r\n   */\r\n  modifyDrawing_(event) {\r\n    let coordinate = event.coordinate;\r\n    const geometry = this.sketchFeature_.getGeometry();\r\n    let coordinates, last;\r\n    if (this.mode_ === Mode.POINT) {\r\n      last = this.sketchCoords_;\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n      last = coordinates[coordinates.length - 1];\r\n      if (this.atFinish_(event)) {\r\n        // snap to finish\r\n        coordinate = this.finishCoordinate_.slice();\r\n      }\r\n    } else {\r\n      coordinates = this.sketchCoords_;\r\n      last = coordinates[coordinates.length - 1];\r\n    }\r\n    last[0] = coordinate[0];\r\n    last[1] = coordinate[1];\r\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\r\n    if (this.sketchPoint_) {\r\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\r\n      sketchPointGeom.setCoordinates(coordinate);\r\n    }\r\n    /** @type {LineString} */\r\n    let sketchLineGeom;\r\n    if (geometry.getType() == GeometryType.POLYGON &&\r\n        this.mode_ !== Mode.POLYGON) {\r\n      if (!this.sketchLine_) {\r\n        this.sketchLine_ = new Feature();\r\n      }\r\n      const ring = geometry.getLinearRing(0);\r\n      sketchLineGeom = this.sketchLine_.getGeometry();\r\n      if (!sketchLineGeom) {\r\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\r\n        this.sketchLine_.setGeometry(sketchLineGeom);\r\n      } else {\r\n        sketchLineGeom.setFlatCoordinates(\r\n          ring.getLayout(), ring.getFlatCoordinates());\r\n        sketchLineGeom.changed();\r\n      }\r\n    } else if (this.sketchLineCoords_) {\r\n      sketchLineGeom = this.sketchLine_.getGeometry();\r\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\r\n    }\r\n    this.updateSketchFeatures_();\r\n  }\r\n\r\n  /**\r\n   * Add a new coordinate to the drawing.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @private\r\n   */\r\n  addToDrawing_(event) {\r\n    const coordinate = event.coordinate;\r\n    const geometry = this.sketchFeature_.getGeometry();\r\n    let done;\r\n    let coordinates;\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      this.finishCoordinate_ = coordinate.slice();\r\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\r\n      if (coordinates.length >= this.maxPoints_) {\r\n        if (this.freehand_) {\r\n          coordinates.pop();\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n      coordinates.push(coordinate.slice());\r\n      this.geometryFunction_(coordinates, geometry);\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n      if (coordinates.length >= this.maxPoints_) {\r\n        if (this.freehand_) {\r\n          coordinates.pop();\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n      coordinates.push(coordinate.slice());\r\n      if (done) {\r\n        this.finishCoordinate_ = coordinates[0];\r\n      }\r\n      this.geometryFunction_(this.sketchCoords_, geometry);\r\n    }\r\n    this.updateSketchFeatures_();\r\n    if (done) {\r\n      this.finishDrawing();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove last point of the feature currently being drawn.\r\n   * @api\r\n   */\r\n  removeLastPoint() {\r\n    if (!this.sketchFeature_) {\r\n      return;\r\n    }\r\n    const geometry = this.sketchFeature_.getGeometry();\r\n    let coordinates;\r\n    /** @type {LineString} */\r\n    let sketchLineGeom;\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\r\n      coordinates.splice(-2, 1);\r\n      this.geometryFunction_(coordinates, geometry);\r\n      if (coordinates.length >= 2) {\r\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\r\n      }\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n      coordinates.splice(-2, 1);\r\n      sketchLineGeom = this.sketchLine_.getGeometry();\r\n      sketchLineGeom.setCoordinates(coordinates);\r\n      this.geometryFunction_(this.sketchCoords_, geometry);\r\n    }\r\n\r\n    if (coordinates.length === 0) {\r\n      this.finishCoordinate_ = null;\r\n    }\r\n\r\n    this.updateSketchFeatures_();\r\n  }\r\n\r\n  /**\r\n   * Stop drawing and add the sketch feature to the target layer.\r\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\r\n   * dispatched before inserting the feature.\r\n   * @api\r\n   */\r\n  finishDrawing() {\r\n    const sketchFeature = this.abortDrawing_();\r\n    if (!sketchFeature) {\r\n      return;\r\n    }\r\n    let coordinates = this.sketchCoords_;\r\n    const geometry = sketchFeature.getGeometry();\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      // remove the redundant last point\r\n      coordinates.pop();\r\n      this.geometryFunction_(coordinates, geometry);\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      // remove the redundant last point in ring\r\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\r\n      this.geometryFunction_(coordinates, geometry);\r\n      coordinates = geometry.getCoordinates();\r\n    }\r\n\r\n    // cast multi-part geometries\r\n    if (this.type_ === GeometryType.MULTI_POINT) {\r\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\r\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\r\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\r\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\r\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\r\n    }\r\n\r\n    // First dispatch event to allow full set up of feature\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\r\n\r\n    // Then insert feature\r\n    if (this.features_) {\r\n      this.features_.push(sketchFeature);\r\n    }\r\n    if (this.source_) {\r\n      this.source_.addFeature(sketchFeature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop drawing without adding the sketch feature to the target layer.\r\n   * @return {Feature} The sketch feature (or null if none).\r\n   * @private\r\n   */\r\n  abortDrawing_() {\r\n    this.finishCoordinate_ = null;\r\n    const sketchFeature = this.sketchFeature_;\r\n    if (sketchFeature) {\r\n      this.sketchFeature_ = null;\r\n      this.sketchPoint_ = null;\r\n      this.sketchLine_ = null;\r\n      this.overlay_.getSource().clear(true);\r\n    }\r\n    return sketchFeature;\r\n  }\r\n\r\n  /**\r\n   * Extend an existing geometry by adding additional points. This only works\r\n   * on features with `LineString` geometries, where the interaction will\r\n   * extend lines by adding points to the end of the coordinates array.\r\n   * @param {!Feature<LineString>} feature Feature to be extended.\r\n   * @api\r\n   */\r\n  extend(feature) {\r\n    const geometry = feature.getGeometry();\r\n    const lineString = geometry;\r\n    this.sketchFeature_ = feature;\r\n    this.sketchCoords_ = lineString.getCoordinates();\r\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\r\n    this.finishCoordinate_ = last.slice();\r\n    this.sketchCoords_.push(last.slice());\r\n    this.updateSketchFeatures_();\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\r\n  }\r\n\r\n  /**\r\n   * Redraw the sketch features.\r\n   * @private\r\n   */\r\n  updateSketchFeatures_() {\r\n    const sketchFeatures = [];\r\n    if (this.sketchFeature_) {\r\n      sketchFeatures.push(this.sketchFeature_);\r\n    }\r\n    if (this.sketchLine_) {\r\n      sketchFeatures.push(this.sketchLine_);\r\n    }\r\n    if (this.sketchPoint_) {\r\n      sketchFeatures.push(this.sketchPoint_);\r\n    }\r\n    const overlaySource = this.overlay_.getSource();\r\n    overlaySource.clear(true);\r\n    overlaySource.addFeatures(sketchFeatures);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateState_() {\r\n    const map = this.getMap();\r\n    const active = this.getActive();\r\n    if (!map || !active) {\r\n      this.abortDrawing_();\r\n    }\r\n    this.overlay_.setMap(active ? map : null);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const styles = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return styles[feature.getGeometry().getType()];\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\r\n * polygon with a user specified number of sides and start angle instead of an\r\n * `import(\"../geom/Circle.js\").Circle` geometry.\r\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\r\n *     32.\r\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\r\n *     Default is the angle defined by the heading from the center of the\r\n *     regular polygon to the current pointer position.\r\n * @return {GeometryFunction} Function that draws a\r\n *     polygon.\r\n * @api\r\n */\r\nexport function createRegularPolygon(opt_sides, opt_angle) {\r\n  return function(coordinates, opt_geometry) {\r\n    const center = /** @type {LineCoordType} */ (coordinates)[0];\r\n    const end = /** @type {LineCoordType} */ (coordinates)[1];\r\n    const radius = Math.sqrt(\r\n      squaredCoordinateDistance(center, end));\r\n    const geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\r\n      fromCircle(new Circle(center), opt_sides);\r\n    let angle = opt_angle;\r\n    if (!opt_angle) {\r\n      const x = end[0] - center[0];\r\n      const y = end[1] - center[1];\r\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\r\n    }\r\n    makeRegular(geometry, center, radius, angle);\r\n    return geometry;\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\r\n * with the coordinate system axes).  Use this with the draw interaction and\r\n * `type: 'Circle'` to return a box instead of a circle geometry.\r\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\r\n * @api\r\n */\r\nexport function createBox() {\r\n  return (\r\n    function(coordinates, opt_geometry) {\r\n      const extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\r\n      const boxCoordinates = [[\r\n        getBottomLeft(extent),\r\n        getBottomRight(extent),\r\n        getTopRight(extent),\r\n        getTopLeft(extent),\r\n        getBottomLeft(extent)\r\n      ]];\r\n      let geometry = opt_geometry;\r\n      if (geometry) {\r\n        geometry.setCoordinates(boxCoordinates);\r\n      } else {\r\n        geometry = new Polygon(boxCoordinates);\r\n      }\r\n      return geometry;\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\r\n * their single-part cousins.\r\n * @param {GeometryType} type Geometry type.\r\n * @return {Mode} Drawing mode.\r\n */\r\nfunction getMode(type) {\r\n  let mode;\r\n  if (type === GeometryType.POINT ||\r\n      type === GeometryType.MULTI_POINT) {\r\n    mode = Mode.POINT;\r\n  } else if (type === GeometryType.LINE_STRING ||\r\n      type === GeometryType.MULTI_LINE_STRING) {\r\n    mode = Mode.LINE_STRING;\r\n  } else if (type === GeometryType.POLYGON ||\r\n      type === GeometryType.MULTI_POLYGON) {\r\n    mode = Mode.POLYGON;\r\n  } else if (type === GeometryType.CIRCLE) {\r\n    mode = Mode.CIRCLE;\r\n  }\r\n  return (\r\n    /** @type {!Mode} */ (mode)\r\n  );\r\n}\r\n\r\n\r\nexport default Draw;\r\n","/**\r\n * @module ol/interaction/Extent\r\n */\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\r\nimport Event from '../events/Event.js';\r\nimport {boundingExtent, getArea} from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Point from '../geom/Point.js';\r\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\r\n * initial extent.\r\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\r\n * Style for the drawn extent box. Defaults to\r\n * {@link module:ol/style/Style~createEditing()['Polygon']}\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\r\n * Style for the cursor used to draw the extent. Defaults to\r\n * {@link module:ol/style/Style~createEditing()['Point']}\r\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\r\n * in the X direction? Only affects visuals, not functionality.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst ExtentEventType = {\r\n  /**\r\n   * Triggered after the extent is changed\r\n   * @event ExtentEvent#extentchanged\r\n   * @api\r\n   */\r\n  EXTENTCHANGED: 'extentchanged'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\r\n * instances of this type.\r\n */\r\nclass ExtentEvent extends Event {\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent the new extent\r\n   */\r\n  constructor(extent) {\r\n    super(ExtentEventType.EXTENTCHANGED);\r\n\r\n    /**\r\n     * The current extent.\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @api\r\n     */\r\n    this.extent = extent;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map.\r\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * @fires ExtentEvent\r\n * @api\r\n */\r\nclass Extent extends PointerInteraction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /**\r\n     * Extent of the drawn box\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @private\r\n     */\r\n    this.extent_ = null;\r\n\r\n    /**\r\n     * Handler for pointer move events\r\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\r\n     * @private\r\n     */\r\n    this.pointerHandler_ = null;\r\n\r\n    /**\r\n     * Pixel threshold to snap to extent\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n      options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * Is the pointer snapped to an extent vertex\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.snappedToVertex_ = false;\r\n\r\n    /**\r\n     * Feature for displaying the visible extent\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.extentFeature_ = null;\r\n\r\n    /**\r\n     * Feature for displaying the visible pointer\r\n     * @type {Feature<Point>}\r\n     * @private\r\n     */\r\n    this.vertexFeature_ = null;\r\n\r\n    if (!opt_options) {\r\n      opt_options = {};\r\n    }\r\n\r\n    /**\r\n     * Layer for the extentFeature\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.extentOverlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!opt_options.wrapX\r\n      }),\r\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * Layer for the vertexFeature\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.vertexOverlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!opt_options.wrapX\r\n      }),\r\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    if (opt_options.extent) {\r\n      this.setExtent(opt_options.extent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\r\n   * @param {import(\"../PluggableMap.js\").default} map map\r\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\r\n   * @private\r\n   */\r\n  snapToVertex_(pixel, map) {\r\n    const pixelCoordinate = map.getCoordinateFromPixel(pixel);\r\n    const sortByDistance = function(a, b) {\r\n      return squaredDistanceToSegment(pixelCoordinate, a) -\r\n          squaredDistanceToSegment(pixelCoordinate, b);\r\n    };\r\n    const extent = this.getExtent();\r\n    if (extent) {\r\n      //convert extents to line segments and find the segment closest to pixelCoordinate\r\n      const segments = getSegments(extent);\r\n      segments.sort(sortByDistance);\r\n      const closestSegment = segments[0];\r\n\r\n      let vertex = (closestOnSegment(pixelCoordinate,\r\n        closestSegment));\r\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\r\n\r\n      //if the distance is within tolerance, snap to the segment\r\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n        //test if we should further snap to a vertex\r\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n        if (this.snappedToVertex_) {\r\n          vertex = squaredDist1 > squaredDist2 ?\r\n            closestSegment[1] : closestSegment[0];\r\n        }\r\n        return vertex;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\r\n   * @private\r\n   */\r\n  handlePointerMove_(mapBrowserEvent) {\r\n    const pixel = mapBrowserEvent.pixel;\r\n    const map = mapBrowserEvent.map;\r\n\r\n    let vertex = this.snapToVertex_(pixel, map);\r\n    if (!vertex) {\r\n      vertex = map.getCoordinateFromPixel(pixel);\r\n    }\r\n    this.createOrUpdatePointerFeature_(vertex);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent extent\r\n   * @returns {Feature} extent as featrue\r\n   * @private\r\n   */\r\n  createOrUpdateExtentFeature_(extent) {\r\n    let extentFeature = this.extentFeature_;\r\n\r\n    if (!extentFeature) {\r\n      if (!extent) {\r\n        extentFeature = new Feature({});\r\n      } else {\r\n        extentFeature = new Feature(polygonFromExtent(extent));\r\n      }\r\n      this.extentFeature_ = extentFeature;\r\n      this.extentOverlay_.getSource().addFeature(extentFeature);\r\n    } else {\r\n      if (!extent) {\r\n        extentFeature.setGeometry(undefined);\r\n      } else {\r\n        extentFeature.setGeometry(polygonFromExtent(extent));\r\n      }\r\n    }\r\n    return extentFeature;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\r\n   * @returns {Feature} vertex as feature\r\n   * @private\r\n   */\r\n  createOrUpdatePointerFeature_(vertex) {\r\n    let vertexFeature = this.vertexFeature_;\r\n    if (!vertexFeature) {\r\n      vertexFeature = new Feature(new Point(vertex));\r\n      this.vertexFeature_ = vertexFeature;\r\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\r\n    } else {\r\n      const geometry = vertexFeature.getGeometry();\r\n      geometry.setCoordinates(vertex);\r\n    }\r\n    return vertexFeature;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\r\n      return true;\r\n    }\r\n    //display pointer (if not dragging)\r\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\r\n      this.handlePointerMove_(mapBrowserEvent);\r\n    }\r\n    //call pointer to determine up/down/drag\r\n    super.handleEvent(mapBrowserEvent);\r\n    //return false to stop propagation\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    const pixel = mapBrowserEvent.pixel;\r\n    const map = mapBrowserEvent.map;\r\n\r\n    const extent = this.getExtent();\r\n    let vertex = this.snapToVertex_(pixel, map);\r\n\r\n    //find the extent corner opposite the passed corner\r\n    const getOpposingPoint = function(point) {\r\n      let x_ = null;\r\n      let y_ = null;\r\n      if (point[0] == extent[0]) {\r\n        x_ = extent[2];\r\n      } else if (point[0] == extent[2]) {\r\n        x_ = extent[0];\r\n      }\r\n      if (point[1] == extent[1]) {\r\n        y_ = extent[3];\r\n      } else if (point[1] == extent[3]) {\r\n        y_ = extent[1];\r\n      }\r\n      if (x_ !== null && y_ !== null) {\r\n        return [x_, y_];\r\n      }\r\n      return null;\r\n    };\r\n    if (vertex && extent) {\r\n      const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\r\n      const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\r\n\r\n      //snap to point\r\n      if (x !== null && y !== null) {\r\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\r\n      //snap to edge\r\n      } else if (x !== null) {\r\n        this.pointerHandler_ = getEdgeHandler(\r\n          getOpposingPoint([x, extent[1]]),\r\n          getOpposingPoint([x, extent[3]])\r\n        );\r\n      } else if (y !== null) {\r\n        this.pointerHandler_ = getEdgeHandler(\r\n          getOpposingPoint([extent[0], y]),\r\n          getOpposingPoint([extent[2], y])\r\n        );\r\n      }\r\n    //no snap - new bbox\r\n    } else {\r\n      vertex = map.getCoordinateFromPixel(pixel);\r\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\r\n      this.pointerHandler_ = getPointHandler(vertex);\r\n    }\r\n    return true; //event handled; start downup sequence\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (this.pointerHandler_) {\r\n      const pixelCoordinate = mapBrowserEvent.coordinate;\r\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\r\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    this.pointerHandler_ = null;\r\n    //If bbox is zero area, set to null;\r\n    const extent = this.getExtent();\r\n    if (!extent || getArea(extent) === 0) {\r\n      this.setExtent(null);\r\n    }\r\n    return false; //Stop handling downup sequence\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    this.extentOverlay_.setMap(map);\r\n    this.vertexOverlay_.setMap(map);\r\n    super.setMap(map);\r\n  }\r\n\r\n  /**\r\n   * Returns the current drawn extent in the view projection\r\n   *\r\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return this.extent_;\r\n  }\r\n\r\n  /**\r\n   * Manually sets the drawn extent, using the view projection.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent\r\n   * @api\r\n   */\r\n  setExtent(extent) {\r\n    //Null extent means no bbox\r\n    this.extent_ = extent ? extent : null;\r\n    this.createOrUpdateExtentFeature_(extent);\r\n    this.dispatchEvent(new ExtentEvent(this.extent_));\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the default style for the drawn bbox\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\r\n */\r\nfunction getDefaultExtentStyleFunction() {\r\n  const style = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return style[GeometryType.POLYGON];\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the default style for the pointer\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\r\n */\r\nfunction getDefaultPointerStyleFunction() {\r\n  const style = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return style[GeometryType.POINT];\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\r\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\r\n */\r\nfunction getPointHandler(fixedPoint) {\r\n  return function(point) {\r\n    return boundingExtent([fixedPoint, point]);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\r\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\r\n */\r\nfunction getEdgeHandler(fixedP1, fixedP2) {\r\n  if (fixedP1[0] == fixedP2[0]) {\r\n    return function(point) {\r\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\r\n    };\r\n  } else if (fixedP1[1] == fixedP2[1]) {\r\n    return function(point) {\r\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent extent\r\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\r\n */\r\nfunction getSegments(extent) {\r\n  return [\r\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\r\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\r\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\r\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\r\n  ];\r\n}\r\n\r\n\r\nexport default Extent;\r\n","/**\r\n * @module ol/interaction/Modify\r\n */\r\nimport {getUid} from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport {equals} from '../array.js';\r\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\r\nimport {listen, unlisten} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\r\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Point from '../geom/Point.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * The segment index assigned to a circle's center when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nconst CIRCLE_CENTER_INDEX = 0;\r\n\r\n/**\r\n * The segment index assigned to a circle's circumference when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst ModifyEventType = {\r\n  /**\r\n   * Triggered upon feature modification start\r\n   * @event ModifyEvent#modifystart\r\n   * @api\r\n   */\r\n  MODIFYSTART: 'modifystart',\r\n  /**\r\n   * Triggered upon feature modification end\r\n   * @event ModifyEvent#modifyend\r\n   * @api\r\n   */\r\n  MODIFYEND: 'modifyend'\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {Array<number>} [depth]\r\n * @property {Feature} feature\r\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\r\n * @property {number} [index]\r\n * @property {Array<import(\"../extent.js\").Extent>} segment\r\n * @property {Array<SegmentData>} [featureSegments]\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event will be considered to add or move a\r\n * vertex to the sketch. Default is\r\n * {@link module:ol/events/condition~primaryAction}.\r\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. By default,\r\n * {@link module:ol/events/condition~singleClick} with\r\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\r\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\r\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether a new vertex should be added to the sketch\r\n * features. Default is {@link module:ol/events/condition~always}.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style used for the features being modified. By default the default edit\r\n * style is used (see {@link module:ol/style}).\r\n * @property {VectorSource} [source] The vector source with\r\n * features to modify.  If a vector source is not provided, a feature collection\r\n * must be provided with the features option.\r\n * @property {Collection<Feature>} [features]\r\n * The features the interaction works on.  If a feature collection is not\r\n * provided, a vector source must be provided with the source option.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\r\n * instances of this type.\r\n */\r\nexport class ModifyEvent extends Event {\r\n  /**\r\n   * @param {ModifyEventType} type Type.\r\n   * @param {Collection<Feature>} features\r\n   * The features modified.\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\r\n   * Associated {@link module:ol/MapBrowserPointerEvent}.\r\n   */\r\n  constructor(type, features, mapBrowserPointerEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * The features being modified.\r\n     * @type {Collection<Feature>}\r\n     * @api\r\n     */\r\n    this.features = features;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent}.\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserPointerEvent;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for modifying feature geometries.  To modify features that have\r\n * been added to an existing source, construct the modify interaction with the\r\n * `source` option.  If you want to modify features in a collection (for example,\r\n * the collection used by a select interaction), construct the interaction with\r\n * the `features` option.  The interaction must be constructed with either a\r\n * `source` or `features` option.\r\n *\r\n * By default, the interaction will allow deletion of vertices when the `alt`\r\n * key is pressed.  To configure the interaction with a different condition\r\n * for deletion, use the `deleteCondition` option.\r\n * @fires ModifyEvent\r\n * @api\r\n */\r\nclass Modify extends PointerInteraction {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : primaryAction;\r\n\r\n    /**\r\n     * @private\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\r\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\r\n    };\r\n\r\n    /**\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     * @private\r\n     */\r\n    this.deleteCondition_ = options.deleteCondition ?\r\n      options.deleteCondition : this.defaultDeleteCondition_;\r\n\r\n    /**\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     * @private\r\n     */\r\n    this.insertVertexCondition_ = options.insertVertexCondition ?\r\n      options.insertVertexCondition : always;\r\n\r\n    /**\r\n     * Editing vertex.\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.vertexFeature_ = null;\r\n\r\n    /**\r\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\r\n     * @type {Object<string, boolean>}\r\n     * @private\r\n     */\r\n    this.vertexSegments_ = null;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.lastPixel_ = [0, 0];\r\n\r\n    /**\r\n     * Tracks if the next `singleclick` event should be ignored to prevent\r\n     * accidental deletion right after vertex creation.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.ignoreNextSingleClick_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.modified_ = false;\r\n\r\n    /**\r\n     * Segment RTree for each layer\r\n     * @type {RBush<SegmentData>}\r\n     * @private\r\n     */\r\n    this.rBush_ = new RBush();\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n      options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.snappedToVertex_ = false;\r\n\r\n    /**\r\n     * Indicate whether the interaction is currently changing a feature's\r\n     * coordinates.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.changingFeature_ = false;\r\n\r\n    /**\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    this.dragSegments_ = [];\r\n\r\n    /**\r\n     * Draw overlay where sketch features are drawn.\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.overlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!options.wrapX\r\n      }),\r\n      style: options.style ? options.style :\r\n        getDefaultStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * @const\r\n     * @private\r\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\r\n     */\r\n    this.SEGMENT_WRITERS_ = {\r\n      'Point': this.writePointGeometry_,\r\n      'LineString': this.writeLineStringGeometry_,\r\n      'LinearRing': this.writeLineStringGeometry_,\r\n      'Polygon': this.writePolygonGeometry_,\r\n      'MultiPoint': this.writeMultiPointGeometry_,\r\n      'MultiLineString': this.writeMultiLineStringGeometry_,\r\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\r\n      'Circle': this.writeCircleGeometry_,\r\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\r\n    };\r\n\r\n\r\n    /**\r\n     * @type {VectorSource}\r\n     * @private\r\n     */\r\n    this.source_ = null;\r\n\r\n    let features;\r\n    if (options.source) {\r\n      this.source_ = options.source;\r\n      features = new Collection(this.source_.getFeatures());\r\n      listen(this.source_, VectorEventType.ADDFEATURE,\r\n        this.handleSourceAdd_, this);\r\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\r\n        this.handleSourceRemove_, this);\r\n    } else {\r\n      features = options.features;\r\n    }\r\n    if (!features) {\r\n      throw new Error('The modify interaction requires features or a source');\r\n    }\r\n\r\n    /**\r\n     * @type {Collection<Feature>}\r\n     * @private\r\n     */\r\n    this.features_ = features;\r\n\r\n    this.features_.forEach(this.addFeature_.bind(this));\r\n    listen(this.features_, CollectionEventType.ADD,\r\n      this.handleFeatureAdd_, this);\r\n    listen(this.features_, CollectionEventType.REMOVE,\r\n      this.handleFeatureRemove_, this);\r\n\r\n    /**\r\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\r\n     * @private\r\n     */\r\n    this.lastPointerEvent_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  addFeature_(feature) {\r\n    const geometry = feature.getGeometry();\r\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\r\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\r\n    }\r\n    const map = this.getMap();\r\n    if (map && map.isRendered() && this.getActive()) {\r\n      this.handlePointerAtPixel_(this.lastPixel_, map);\r\n    }\r\n    listen(feature, EventType.CHANGE,\r\n      this.handleFeatureChange_, this);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\r\n   * @private\r\n   */\r\n  willModifyFeatures_(evt) {\r\n    if (!this.modified_) {\r\n      this.modified_ = true;\r\n      this.dispatchEvent(new ModifyEvent(\r\n        ModifyEventType.MODIFYSTART, this.features_, evt));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeature_(feature) {\r\n    this.removeFeatureSegmentData_(feature);\r\n    // Remove the vertex feature if the collection of canditate features\r\n    // is empty.\r\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\r\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n    unlisten(feature, EventType.CHANGE,\r\n      this.handleFeatureChange_, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeatureSegmentData_(feature) {\r\n    const rBush = this.rBush_;\r\n    const /** @type {Array<SegmentData>} */ nodesToRemove = [];\r\n    rBush.forEach(\r\n      /**\r\n       * @param {SegmentData} node RTree node.\r\n       */\r\n      function(node) {\r\n        if (feature === node.feature) {\r\n          nodesToRemove.push(node);\r\n        }\r\n      });\r\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\r\n      const nodeToRemove = nodesToRemove[i];\r\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\r\n        if (this.dragSegments_[j][0] === nodeToRemove) {\r\n          this.dragSegments_.splice(j, 1);\r\n        }\r\n      }\r\n      rBush.remove(nodeToRemove);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setActive(active) {\r\n    if (this.vertexFeature_ && !active) {\r\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n    super.setActive(active);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    this.overlay_.setMap(map);\r\n    super.setMap(map);\r\n  }\r\n\r\n  /**\r\n   * Get the overlay layer that this interaction renders sketch features to.\r\n   * @return {VectorLayer} Overlay layer.\r\n   * @api\r\n   */\r\n  getOverlay() {\r\n    return this.overlay_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\r\n   * @private\r\n   */\r\n  handleSourceAdd_(event) {\r\n    if (event.feature) {\r\n      this.features_.push(event.feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\r\n   * @private\r\n   */\r\n  handleSourceRemove_(event) {\r\n    if (event.feature) {\r\n      this.features_.remove(event.feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureAdd_(evt) {\r\n    this.addFeature_(/** @type {Feature} */ (evt.element));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../events/Event.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureChange_(evt) {\r\n    if (!this.changingFeature_) {\r\n      const feature = /** @type {Feature} */ (evt.target);\r\n      this.removeFeature_(feature);\r\n      this.addFeature_(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureRemove_(evt) {\r\n    const feature = /** @type {Feature} */ (evt.element);\r\n    this.removeFeature_(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {Point} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePointGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    const segmentData = /** @type {SegmentData} */ ({\r\n      feature: feature,\r\n      geometry: geometry,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    this.rBush_.insert(geometry.getExtent(), segmentData);\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPointGeometry_(feature, geometry) {\r\n    const points = geometry.getCoordinates();\r\n    for (let i = 0, ii = points.length; i < ii; ++i) {\r\n      const coordinates = points[i];\r\n      const segmentData = /** @type {SegmentData} */ ({\r\n        feature: feature,\r\n        geometry: geometry,\r\n        depth: [i],\r\n        index: i,\r\n        segment: [coordinates, coordinates]\r\n      });\r\n      this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeLineStringGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      const segment = coordinates.slice(i, i + 2);\r\n      const segmentData = /** @type {SegmentData} */ ({\r\n        feature: feature,\r\n        geometry: geometry,\r\n        index: i,\r\n        segment: segment\r\n      });\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiLineStringGeometry_(feature, geometry) {\r\n    const lines = geometry.getCoordinates();\r\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\r\n      const coordinates = lines[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = /** @type {SegmentData} */ ({\r\n          feature: feature,\r\n          geometry: geometry,\r\n          depth: [j],\r\n          index: i,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePolygonGeometry_(feature, geometry) {\r\n    const rings = geometry.getCoordinates();\r\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n      const coordinates = rings[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = /** @type {SegmentData} */ ({\r\n          feature: feature,\r\n          geometry: geometry,\r\n          depth: [j],\r\n          index: i,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPolygonGeometry_(feature, geometry) {\r\n    const polygons = geometry.getCoordinates();\r\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\r\n      const rings = polygons[k];\r\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n        const coordinates = rings[j];\r\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n          const segment = coordinates.slice(i, i + 2);\r\n          const segmentData = /** @type {SegmentData} */ ({\r\n            feature: feature,\r\n            geometry: geometry,\r\n            depth: [j, k],\r\n            index: i,\r\n            segment: segment\r\n          });\r\n          this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We convert a circle into two segments.  The segment at index\r\n   * {@link CIRCLE_CENTER_INDEX} is the\r\n   * circle's center (a point).  The segment at index\r\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\r\n   * the circumference, and is not a line segment.\r\n   *\r\n   * @param {Feature} feature Feature.\r\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeCircleGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCenter();\r\n    const centerSegmentData = /** @type {SegmentData} */ ({\r\n      feature: feature,\r\n      geometry: geometry,\r\n      index: CIRCLE_CENTER_INDEX,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    const circumferenceSegmentData = /** @type {SegmentData} */ ({\r\n      feature: feature,\r\n      geometry: geometry,\r\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\r\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\r\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\r\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeGeometryCollectionGeometry_(feature, geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0; i < geometries.length; ++i) {\r\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\r\n   * @return {Feature} Vertex feature.\r\n   * @private\r\n   */\r\n  createOrUpdateVertexFeature_(coordinates) {\r\n    let vertexFeature = this.vertexFeature_;\r\n    if (!vertexFeature) {\r\n      vertexFeature = new Feature(new Point(coordinates));\r\n      this.vertexFeature_ = vertexFeature;\r\n      this.overlay_.getSource().addFeature(vertexFeature);\r\n    } else {\r\n      const geometry = vertexFeature.getGeometry();\r\n      geometry.setCoordinates(coordinates);\r\n    }\r\n    return vertexFeature;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\r\n   * @override\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\r\n      return true;\r\n    }\r\n    this.lastPointerEvent_ = mapBrowserEvent;\r\n\r\n    let handled;\r\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\r\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\r\n        !this.handlingDownUpSequence) {\r\n      this.handlePointerMove_(mapBrowserEvent);\r\n    }\r\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\r\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\r\n        handled = this.removePoint();\r\n      } else {\r\n        handled = true;\r\n      }\r\n    }\r\n\r\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\r\n      this.ignoreNextSingleClick_ = false;\r\n    }\r\n\r\n    return super.handleEvent(mapBrowserEvent) && !handled;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDragEvent(evt) {\r\n    this.ignoreNextSingleClick_ = false;\r\n    this.willModifyFeatures_(evt);\r\n\r\n    const vertex = evt.coordinate;\r\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\r\n      const dragSegment = this.dragSegments_[i];\r\n      const segmentData = dragSegment[0];\r\n      const depth = segmentData.depth;\r\n      const geometry = segmentData.geometry;\r\n      let coordinates;\r\n      const segment = segmentData.segment;\r\n      const index = dragSegment[1];\r\n\r\n      while (vertex.length < geometry.getStride()) {\r\n        vertex.push(segment[index][vertex.length]);\r\n      }\r\n\r\n      switch (geometry.getType()) {\r\n        case GeometryType.POINT:\r\n          coordinates = vertex;\r\n          segment[0] = segment[1] = vertex;\r\n          break;\r\n        case GeometryType.MULTI_POINT:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[segmentData.index] = vertex;\r\n          segment[0] = segment[1] = vertex;\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[depth[0]][segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.POLYGON:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[depth[0]][segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.CIRCLE:\r\n          segment[0] = segment[1] = vertex;\r\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\r\n            this.changingFeature_ = true;\r\n            geometry.setCenter(vertex);\r\n            this.changingFeature_ = false;\r\n          } else { // We're dragging the circle's circumference:\r\n            this.changingFeature_ = true;\r\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\r\n            this.changingFeature_ = false;\r\n          }\r\n          break;\r\n        default:\r\n          // pass\r\n      }\r\n\r\n      if (coordinates) {\r\n        this.setGeometryCoordinates_(geometry, coordinates);\r\n      }\r\n    }\r\n    this.createOrUpdateVertexFeature_(vertex);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(evt) {\r\n    if (!this.condition_(evt)) {\r\n      return false;\r\n    }\r\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\r\n    const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\r\n    this.dragSegments_.length = 0;\r\n    this.modified_ = false;\r\n    const vertexFeature = this.vertexFeature_;\r\n    if (vertexFeature) {\r\n      const insertVertices = [];\r\n      const geometry = vertexFeature.getGeometry();\r\n      const vertex = geometry.getCoordinates();\r\n      const vertexExtent = boundingExtent([vertex]);\r\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\r\n      const componentSegments = {};\r\n      segmentDataMatches.sort(compareIndexes);\r\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\r\n        const segmentDataMatch = segmentDataMatches[i];\r\n        const segment = segmentDataMatch.segment;\r\n        let uid = getUid(segmentDataMatch.feature);\r\n        const depth = segmentDataMatch.depth;\r\n        if (depth) {\r\n          uid += '-' + depth.join('-'); // separate feature components\r\n        }\r\n        if (!componentSegments[uid]) {\r\n          componentSegments[uid] = new Array(2);\r\n        }\r\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\r\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n\r\n          const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\r\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\r\n            this.dragSegments_.push([segmentDataMatch, 0]);\r\n            componentSegments[uid][0] = segmentDataMatch;\r\n          }\r\n        } else if (coordinatesEqual(segment[0], vertex) &&\r\n            !componentSegments[uid][0]) {\r\n          this.dragSegments_.push([segmentDataMatch, 0]);\r\n          componentSegments[uid][0] = segmentDataMatch;\r\n        } else if (coordinatesEqual(segment[1], vertex) &&\r\n            !componentSegments[uid][1]) {\r\n\r\n          // prevent dragging closed linestrings by the connecting node\r\n          if ((segmentDataMatch.geometry.getType() ===\r\n              GeometryType.LINE_STRING ||\r\n              segmentDataMatch.geometry.getType() ===\r\n              GeometryType.MULTI_LINE_STRING) &&\r\n              componentSegments[uid][0] &&\r\n              componentSegments[uid][0].index === 0) {\r\n            continue;\r\n          }\r\n\r\n          this.dragSegments_.push([segmentDataMatch, 1]);\r\n          componentSegments[uid][1] = segmentDataMatch;\r\n        } else if (getUid(segment) in this.vertexSegments_ &&\r\n            (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\r\n            this.insertVertexCondition_(evt)) {\r\n          insertVertices.push([segmentDataMatch, vertex]);\r\n        }\r\n      }\r\n      if (insertVertices.length) {\r\n        this.willModifyFeatures_(evt);\r\n      }\r\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\r\n        this.insertVertex_.apply(this, insertVertices[j]);\r\n      }\r\n    }\r\n    return !!this.vertexFeature_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(evt) {\r\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\r\n      const segmentData = this.dragSegments_[i][0];\r\n      const geometry = segmentData.geometry;\r\n      if (geometry.getType() === GeometryType.CIRCLE) {\r\n        // Update a circle object in the R* bush:\r\n        const coordinates = geometry.getCenter();\r\n        const centerSegmentData = segmentData.featureSegments[0];\r\n        const circumferenceSegmentData = segmentData.featureSegments[1];\r\n        centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\r\n        circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\r\n        this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\r\n        this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\r\n      } else {\r\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\r\n      }\r\n    }\r\n    if (this.modified_) {\r\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\r\n      this.modified_ = false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  handlePointerMove_(evt) {\r\n    this.lastPixel_ = evt.pixel;\r\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @private\r\n   */\r\n  handlePointerAtPixel_(pixel, map) {\r\n    const pixelCoordinate = map.getCoordinateFromPixel(pixel);\r\n    const sortByDistance = function(a, b) {\r\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\r\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\r\n    };\r\n\r\n    const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\r\n      map.getView().getResolution() * this.pixelTolerance_);\r\n\r\n    const rBush = this.rBush_;\r\n    const nodes = rBush.getInExtent(box);\r\n    if (nodes.length > 0) {\r\n      nodes.sort(sortByDistance);\r\n      const node = nodes[0];\r\n      const closestSegment = node.segment;\r\n      let vertex = closestOnSegmentData(pixelCoordinate, node);\r\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\r\n      let dist = coordinateDistance(pixel, vertexPixel);\r\n      if (dist <= this.pixelTolerance_) {\r\n        /** @type {Object<string, boolean>} */\r\n        const vertexSegments = {};\r\n\r\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\r\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n\r\n          this.snappedToVertex_ = true;\r\n          this.createOrUpdateVertexFeature_(vertex);\r\n        } else {\r\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n          if (this.snappedToVertex_) {\r\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n          }\r\n          this.createOrUpdateVertexFeature_(vertex);\r\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\r\n            const segment = nodes[i].segment;\r\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\r\n                coordinatesEqual(closestSegment[1], segment[1]) ||\r\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\r\n                coordinatesEqual(closestSegment[1], segment[0])))) {\r\n              vertexSegments[getUid(segment)] = true;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        vertexSegments[getUid(closestSegment)] = true;\r\n        this.vertexSegments_ = vertexSegments;\r\n        return;\r\n      }\r\n    }\r\n    if (this.vertexFeature_) {\r\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {SegmentData} segmentData Segment data.\r\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\r\n   * @private\r\n   */\r\n  insertVertex_(segmentData, vertex) {\r\n    const segment = segmentData.segment;\r\n    const feature = segmentData.feature;\r\n    const geometry = segmentData.geometry;\r\n    const depth = segmentData.depth;\r\n    const index = /** @type {number} */ (segmentData.index);\r\n    let coordinates;\r\n\r\n    while (vertex.length < geometry.getStride()) {\r\n      vertex.push(0);\r\n    }\r\n\r\n    switch (geometry.getType()) {\r\n      case GeometryType.MULTI_LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.MULTI_POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates.splice(index + 1, 0, vertex);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    this.setGeometryCoordinates_(geometry, coordinates);\r\n    const rTree = this.rBush_;\r\n    rTree.remove(segmentData);\r\n    this.updateSegmentIndices_(geometry, index, depth, 1);\r\n    const newSegmentData = /** @type {SegmentData} */ ({\r\n      segment: [segment[0], vertex],\r\n      feature: feature,\r\n      geometry: geometry,\r\n      depth: depth,\r\n      index: index\r\n    });\r\n    rTree.insert(boundingExtent(newSegmentData.segment),\r\n      newSegmentData);\r\n    this.dragSegments_.push([newSegmentData, 1]);\r\n\r\n    const newSegmentData2 = /** @type {SegmentData} */ ({\r\n      segment: [vertex, segment[1]],\r\n      feature: feature,\r\n      geometry: geometry,\r\n      depth: depth,\r\n      index: index + 1\r\n    });\r\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\r\n    this.dragSegments_.push([newSegmentData2, 0]);\r\n    this.ignoreNextSingleClick_ = true;\r\n  }\r\n\r\n  /**\r\n   * Removes the vertex currently being pointed.\r\n   * @return {boolean} True when a vertex was removed.\r\n   * @api\r\n   */\r\n  removePoint() {\r\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\r\n      const evt = this.lastPointerEvent_;\r\n      this.willModifyFeatures_(evt);\r\n      const removed = this.removeVertex_();\r\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\r\n      this.modified_ = false;\r\n      return removed;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Removes a vertex from all matching features.\r\n   * @return {boolean} True when a vertex was removed.\r\n   * @private\r\n   */\r\n  removeVertex_() {\r\n    const dragSegments = this.dragSegments_;\r\n    const segmentsByFeature = {};\r\n    let deleted = false;\r\n    let component, coordinates, dragSegment, geometry, i, index, left;\r\n    let newIndex, right, segmentData, uid;\r\n    for (i = dragSegments.length - 1; i >= 0; --i) {\r\n      dragSegment = dragSegments[i];\r\n      segmentData = dragSegment[0];\r\n      uid = getUid(segmentData.feature);\r\n      if (segmentData.depth) {\r\n        // separate feature components\r\n        uid += '-' + segmentData.depth.join('-');\r\n      }\r\n      if (!(uid in segmentsByFeature)) {\r\n        segmentsByFeature[uid] = {};\r\n      }\r\n      if (dragSegment[1] === 0) {\r\n        segmentsByFeature[uid].right = segmentData;\r\n        segmentsByFeature[uid].index = segmentData.index;\r\n      } else if (dragSegment[1] == 1) {\r\n        segmentsByFeature[uid].left = segmentData;\r\n        segmentsByFeature[uid].index = segmentData.index + 1;\r\n      }\r\n\r\n    }\r\n    for (uid in segmentsByFeature) {\r\n      right = segmentsByFeature[uid].right;\r\n      left = segmentsByFeature[uid].left;\r\n      index = segmentsByFeature[uid].index;\r\n      newIndex = index - 1;\r\n      if (left !== undefined) {\r\n        segmentData = left;\r\n      } else {\r\n        segmentData = right;\r\n      }\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      }\r\n      geometry = segmentData.geometry;\r\n      coordinates = geometry.getCoordinates();\r\n      component = coordinates;\r\n      deleted = false;\r\n      switch (geometry.getType()) {\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          if (coordinates[segmentData.depth[0]].length > 2) {\r\n            coordinates[segmentData.depth[0]].splice(index, 1);\r\n            deleted = true;\r\n          }\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          if (coordinates.length > 2) {\r\n            coordinates.splice(index, 1);\r\n            deleted = true;\r\n          }\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          component = component[segmentData.depth[1]];\r\n          /* falls through */\r\n        case GeometryType.POLYGON:\r\n          component = component[segmentData.depth[0]];\r\n          if (component.length > 4) {\r\n            if (index == component.length - 1) {\r\n              index = 0;\r\n            }\r\n            component.splice(index, 1);\r\n            deleted = true;\r\n            if (index === 0) {\r\n              // close the ring again\r\n              component.pop();\r\n              component.push(component[0]);\r\n              newIndex = component.length - 1;\r\n            }\r\n          }\r\n          break;\r\n        default:\r\n          // pass\r\n      }\r\n\r\n      if (deleted) {\r\n        this.setGeometryCoordinates_(geometry, coordinates);\r\n        const segments = [];\r\n        if (left !== undefined) {\r\n          this.rBush_.remove(left);\r\n          segments.push(left.segment[0]);\r\n        }\r\n        if (right !== undefined) {\r\n          this.rBush_.remove(right);\r\n          segments.push(right.segment[1]);\r\n        }\r\n        if (left !== undefined && right !== undefined) {\r\n          const newSegmentData = /** @type {SegmentData} */ ({\r\n            depth: segmentData.depth,\r\n            feature: segmentData.feature,\r\n            geometry: segmentData.geometry,\r\n            index: newIndex,\r\n            segment: segments\r\n          });\r\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\r\n            newSegmentData);\r\n        }\r\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\r\n        if (this.vertexFeature_) {\r\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n          this.vertexFeature_ = null;\r\n        }\r\n        dragSegments.length = 0;\r\n      }\r\n\r\n    }\r\n    return deleted;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {Array} coordinates Coordinates.\r\n   * @private\r\n   */\r\n  setGeometryCoordinates_(geometry, coordinates) {\r\n    this.changingFeature_ = true;\r\n    geometry.setCoordinates(coordinates);\r\n    this.changingFeature_ = false;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {number} index Index.\r\n   * @param {Array<number>|undefined} depth Depth.\r\n   * @param {number} delta Delta (1 or -1).\r\n   * @private\r\n   */\r\n  updateSegmentIndices_(geometry, index, depth, delta) {\r\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\r\n      if (segmentDataMatch.geometry === geometry &&\r\n          (depth === undefined || segmentDataMatch.depth === undefined ||\r\n          equals(segmentDataMatch.depth, depth)) &&\r\n          segmentDataMatch.index > index) {\r\n        segmentDataMatch.index += delta;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {SegmentData} a The first segment data.\r\n * @param {SegmentData} b The second segment data.\r\n * @return {number} The difference in indexes.\r\n */\r\nfunction compareIndexes(a, b) {\r\n  return a.index - b.index;\r\n}\r\n\r\n\r\n/**\r\n * Returns the distance from a point to a line segment.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\r\n *        which to calculate the distance.\r\n * @param {SegmentData} segmentData The object describing the line\r\n *        segment we are calculating the distance to.\r\n * @return {number} The square of the distance between a point and a line segment.\r\n */\r\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\r\n  const geometry = segmentData.geometry;\r\n\r\n  if (geometry.getType() === GeometryType.CIRCLE) {\r\n    const circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\r\n\r\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n      const distanceToCenterSquared =\r\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\r\n      const distanceToCircumference =\r\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\r\n      return distanceToCircumference * distanceToCircumference;\r\n    }\r\n  }\r\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\r\n}\r\n\r\n/**\r\n * Returns the point closest to a given line segment.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\r\n *        should be found.\r\n * @param {SegmentData} segmentData The object describing the line\r\n *        segment which should contain the closest point.\r\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\r\n */\r\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\r\n  const geometry = segmentData.geometry;\r\n\r\n  if (geometry.getType() === GeometryType.CIRCLE &&\r\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n    return geometry.getClosestPoint(pointCoordinates);\r\n  }\r\n  return closestOnSegment(pointCoordinates, segmentData.segment);\r\n}\r\n\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const style = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return style[GeometryType.POINT];\r\n  };\r\n}\r\n\r\n\r\nexport default Modify;\r\n","/**\r\n * @module ol/interaction/Select\r\n */\r\nimport {getUid} from '../util.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport {extend, includes} from '../array.js';\r\nimport {listen} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\r\nimport {TRUE} from '../functions.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Interaction from './Interaction.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport {clear} from '../obj.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst SelectEventType = {\r\n  /**\r\n   * Triggered when feature(s) has been (de)selected.\r\n   * @event SelectEvent#select\r\n   * @api\r\n   */\r\n  SELECT: 'select'\r\n};\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature} or\r\n * {@link module:ol/render/Feature} and an\r\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is the event\r\n * for the selected features as a whole. By default, this is\r\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\r\n * feature and removes any that were in the selection. Clicking outside any\r\n * feature removes all from the selection.\r\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\r\n * from the selection.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\r\n * A list of layers from which features should be selected. Alternatively, a\r\n * filter function can be provided. The function will be called for each layer\r\n * in the map and should return `true` for layers that you want to be\r\n * selectable. If the option is absent, all visible layers will be considered\r\n * selectable.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style for the selected features. By default the default edit style is used\r\n * (see {@link module:ol/style}).\r\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is in addition\r\n * to the `condition` event. By default,\r\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\r\n * well as the `condition` event, adds that feature to the current selection if\r\n * it is not currently selected, and removes it if it is. See `add` and `remove`\r\n * if you want to use different events instead of a toggle.\r\n * @property {boolean} [multi=false] A boolean that determines if the default\r\n * behaviour should select only single features or all (overlapping) features at\r\n * the clicked map position. The default of `false` means single select.\r\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\r\n * Collection where the interaction will place selected features. Optional. If\r\n * not set the interaction will create a collection. In any case the collection\r\n * used by the interaction is returned by\r\n * {@link module:ol/interaction/Select~Select#getFeatures}.\r\n * @property {FilterFunction} [filter] A function\r\n * that takes an {@link module:ol/Feature} and an\r\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\r\n * overlay.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\r\n * the radius around the given position will be checked for features.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\r\n * this type.\r\n */\r\nclass SelectEvent extends Event {\r\n  /**\r\n   * @param {SelectEventType} type The event type.\r\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\r\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\r\n   *     {@link module:ol/MapBrowserEvent}.\r\n   */\r\n  constructor(type, selected, deselected, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * Selected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.selected = selected;\r\n\r\n    /**\r\n     * Deselected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.deselected = deselected;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent}.\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for selecting vector features. By default, selected features are\r\n * styled differently, so this interaction can be used for visual highlighting,\r\n * as well as selecting features for other actions, such as modification or\r\n * output. There are three ways of controlling which features are selected:\r\n * using the browser event as defined by the `condition` and optionally the\r\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\r\n * further feature filter using the `filter` option.\r\n *\r\n * Selected features are added to an internal unmanaged layer.\r\n *\r\n * @fires SelectEvent\r\n * @api\r\n */\r\nclass Select extends Interaction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    super({\r\n      handleEvent: handleEvent\r\n    });\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : singleClick;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.multi_ = options.multi ? options.multi : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {FilterFunction}\r\n     */\r\n    this.filter_ = options.filter ? options.filter : TRUE;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n\r\n    const featureOverlay = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        features: options.features,\r\n        wrapX: options.wrapX\r\n      }),\r\n      style: options.style ? options.style :\r\n        getDefaultStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {VectorLayer}\r\n     */\r\n    this.featureOverlay_ = featureOverlay;\r\n\r\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\r\n    let layerFilter;\r\n    if (options.layers) {\r\n      if (typeof options.layers === 'function') {\r\n        layerFilter = options.layers;\r\n      } else {\r\n        const layers = options.layers;\r\n        layerFilter = function(layer) {\r\n          return includes(layers, layer);\r\n        };\r\n      }\r\n    } else {\r\n      layerFilter = TRUE;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\r\n     */\r\n    this.layerFilter_ = layerFilter;\r\n\r\n    /**\r\n     * An association between selected feature (key)\r\n     * and layer (value)\r\n     * @private\r\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\r\n     */\r\n    this.featureLayerAssociation_ = {};\r\n\r\n    const features = this.getFeatures();\r\n    listen(features, CollectionEventType.ADD,\r\n      this.addFeature_, this);\r\n    listen(features, CollectionEventType.REMOVE,\r\n      this.removeFeature_, this);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n   * @private\r\n   */\r\n  addFeatureLayerAssociation_(feature, layer) {\r\n    this.featureLayerAssociation_[getUid(feature)] = layer;\r\n  }\r\n\r\n  /**\r\n   * Get the selected features.\r\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\r\n   * @api\r\n   */\r\n  getFeatures() {\r\n    return this.featureOverlay_.getSource().getFeaturesCollection();\r\n  }\r\n\r\n  /**\r\n   * Returns the Hit-detection tolerance.\r\n   * @returns {number} Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  getHitTolerance() {\r\n    return this.hitTolerance_;\r\n  }\r\n\r\n  /**\r\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\r\n   * the (last) selected feature. Note that this will not work with any\r\n   * programmatic method like pushing features to\r\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\r\n   * @return {VectorLayer} Layer.\r\n   * @api\r\n   */\r\n  getLayer(feature) {\r\n    return (\r\n      /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)])\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the overlay layer that this interaction renders selected features to.\r\n   * @return {VectorLayer} Overlay layer.\r\n   * @api\r\n   */\r\n  getOverlay() {\r\n    return this.featureOverlay_;\r\n  }\r\n\r\n  /**\r\n   * Hit-detection tolerance. Pixels inside the radius around the given position\r\n   * will be checked for features.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  setHitTolerance(hitTolerance) {\r\n    this.hitTolerance_ = hitTolerance;\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map, if any,  and attach it to a new\r\n   * map, if any. Pass `null` to just remove the interaction from the current map.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @override\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    const currentMap = this.getMap();\r\n    const selectedFeatures = this.getFeatures();\r\n    if (currentMap) {\r\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\r\n    }\r\n    super.setMap(map);\r\n    this.featureOverlay_.setMap(map);\r\n    if (map) {\r\n      selectedFeatures.forEach(map.skipFeature.bind(map));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  addFeature_(evt) {\r\n    const map = this.getMap();\r\n    if (map) {\r\n      map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  removeFeature_(evt) {\r\n    const map = this.getMap();\r\n    if (map) {\r\n      map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeatureLayerAssociation_(feature) {\r\n    delete this.featureLayerAssociation_[getUid(feature)];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\r\n * selected state of features.\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {Select}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  if (!this.condition_(mapBrowserEvent)) {\r\n    return true;\r\n  }\r\n  const add = this.addCondition_(mapBrowserEvent);\r\n  const remove = this.removeCondition_(mapBrowserEvent);\r\n  const toggle = this.toggleCondition_(mapBrowserEvent);\r\n  const set = !add && !remove && !toggle;\r\n  const map = mapBrowserEvent.map;\r\n  const features = this.getFeatures();\r\n  const deselected = [];\r\n  const selected = [];\r\n  if (set) {\r\n    // Replace the currently selected feature(s) with the feature(s) at the\r\n    // pixel, or clear the selected feature(s) if there is no feature at\r\n    // the pixel.\r\n    clear(this.featureLayerAssociation_);\r\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\r\n      (\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        function(feature, layer) {\r\n          if (this.filter_(feature, layer)) {\r\n            selected.push(feature);\r\n            this.addFeatureLayerAssociation_(feature, layer);\r\n            return !this.multi_;\r\n          }\r\n        }).bind(this), {\r\n        layerFilter: this.layerFilter_,\r\n        hitTolerance: this.hitTolerance_\r\n      });\r\n    for (let i = features.getLength() - 1; i >= 0; --i) {\r\n      const feature = features.item(i);\r\n      const index = selected.indexOf(feature);\r\n      if (index > -1) {\r\n        // feature is already selected\r\n        selected.splice(index, 1);\r\n      } else {\r\n        features.remove(feature);\r\n        deselected.push(feature);\r\n      }\r\n    }\r\n    if (selected.length !== 0) {\r\n      features.extend(selected);\r\n    }\r\n  } else {\r\n    // Modify the currently selected feature(s).\r\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\r\n      (\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        function(feature, layer) {\r\n          if (this.filter_(feature, layer)) {\r\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\r\n              selected.push(feature);\r\n              this.addFeatureLayerAssociation_(feature, layer);\r\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\r\n              deselected.push(feature);\r\n              this.removeFeatureLayerAssociation_(feature);\r\n            }\r\n            return !this.multi_;\r\n          }\r\n        }).bind(this), {\r\n        layerFilter: this.layerFilter_,\r\n        hitTolerance: this.hitTolerance_\r\n      });\r\n    for (let j = deselected.length - 1; j >= 0; --j) {\r\n      features.remove(deselected[j]);\r\n    }\r\n    features.extend(selected);\r\n  }\r\n  if (selected.length > 0 || deselected.length > 0) {\r\n    this.dispatchEvent(\r\n      new SelectEvent(SelectEventType.SELECT,\r\n        selected, deselected, mapBrowserEvent));\r\n  }\r\n  return pointerMove(mapBrowserEvent);\r\n}\r\n\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const styles = createEditingStyle();\r\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\r\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\r\n\r\n  return function(feature, resolution) {\r\n    if (!feature.getGeometry()) {\r\n      return null;\r\n    }\r\n    return styles[feature.getGeometry().getType()];\r\n  };\r\n}\r\n\r\n\r\nexport default Select;\r\n","/**\r\n * @module ol/interaction/Snap\r\n */\r\nimport {getUid} from '../util.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {boundingExtent, createEmpty} from '../extent.js';\r\nimport {TRUE, FALSE} from '../functions.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport {fromCircle} from '../geom/Polygon.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport {getValues} from '../obj.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Result\r\n * @property {boolean} snapped\r\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\r\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {import(\"../Feature.js\").default} feature\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\r\n * @property {boolean} [edge=true] Snap to edges.\r\n * @property {boolean} [vertex=true] Snap to vertices.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\r\n * vertex for snapping.\r\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\r\n */\r\n\r\n\r\n/**\r\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n * @return {import(\"../Feature.js\").default} Feature.\r\n */\r\nfunction getFeatureFromEvent(evt) {\r\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\r\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\r\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\r\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @classdesc\r\n * Handles snapping of vector features while modifying or drawing them.  The\r\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\r\n * Any interaction object that allows the user to interact\r\n * with the features using the mouse can benefit from the snapping, as long\r\n * as it is added before.\r\n *\r\n * The snap interaction modifies map browser event `coordinate` and `pixel`\r\n * properties to force the snap to occur to any interaction that them.\r\n *\r\n * Example:\r\n *\r\n *     import Snap from 'ol/interaction/Snap';\r\n *\r\n *     var snap = new Snap({\r\n *       source: source\r\n *     });\r\n *\r\n * @api\r\n */\r\nclass Snap extends PointerInteraction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n\r\n    if (!pointerOptions.handleDownEvent) {\r\n      pointerOptions.handleDownEvent = TRUE;\r\n    }\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @type {import(\"../source/Vector.js\").default}\r\n     * @private\r\n     */\r\n    this.source_ = options.source ? options.source : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.edge_ = options.edge !== undefined ? options.edge : true;\r\n\r\n    /**\r\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\r\n     * @private\r\n     */\r\n    this.features_ = options.features ? options.features : null;\r\n\r\n    /**\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.featuresListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.featureChangeListenerKeys_ = {};\r\n\r\n    /**\r\n     * Extents are preserved so indexed segment can be quickly removed\r\n     * when its feature geometry changes\r\n     * @type {Object<string, import(\"../extent.js\").Extent>}\r\n     * @private\r\n     */\r\n    this.indexedFeaturesExtents_ = {};\r\n\r\n    /**\r\n     * If a feature geometry changes while a pointer drag|move event occurs, the\r\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\r\n     * event fired.\r\n     * @type {!Object<string, import(\"../Feature.js\").default>}\r\n     * @private\r\n     */\r\n    this.pendingFeatures_ = {};\r\n\r\n    /**\r\n     * Used for distance sorting in sortByDistance_\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.pixelCoordinate_ = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n      options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * @type {function(SegmentData, SegmentData): number}\r\n     * @private\r\n     */\r\n    this.sortByDistance_ = sortByDistance.bind(this);\r\n\r\n\r\n    /**\r\n    * Segment RTree for each layer\r\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\r\n    * @private\r\n    */\r\n    this.rBush_ = new RBush();\r\n\r\n\r\n    /**\r\n    * @const\r\n    * @private\r\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\r\n    */\r\n    this.SEGMENT_WRITERS_ = {\r\n      'Point': this.writePointGeometry_,\r\n      'LineString': this.writeLineStringGeometry_,\r\n      'LinearRing': this.writeLineStringGeometry_,\r\n      'Polygon': this.writePolygonGeometry_,\r\n      'MultiPoint': this.writeMultiPointGeometry_,\r\n      'MultiLineString': this.writeMultiLineStringGeometry_,\r\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\r\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\r\n      'Circle': this.writeCircleGeometry_\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add a feature to the collection of features that we may snap to.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\r\n   *     Defaults to `true`.\r\n   * @api\r\n   */\r\n  addFeature(feature, opt_listen) {\r\n    const register = opt_listen !== undefined ? opt_listen : true;\r\n    const feature_uid = getUid(feature);\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\r\n      if (segmentWriter) {\r\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\r\n        segmentWriter.call(this, feature, geometry);\r\n      }\r\n    }\r\n\r\n    if (register) {\r\n      this.featureChangeListenerKeys_[feature_uid] = listen(\r\n        feature,\r\n        EventType.CHANGE,\r\n        this.handleFeatureChange_, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @private\r\n   */\r\n  forEachFeatureAdd_(feature) {\r\n    this.addFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @private\r\n   */\r\n  forEachFeatureRemove_(feature) {\r\n    this.removeFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\r\n   * @private\r\n   */\r\n  getFeatures_() {\r\n    let features;\r\n    if (this.features_) {\r\n      features = this.features_;\r\n    } else if (this.source_) {\r\n      features = this.source_.getFeatures();\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleEvent(evt) {\r\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\r\n    if (result.snapped) {\r\n      evt.coordinate = result.vertex.slice(0, 2);\r\n      evt.pixel = result.vertexPixel;\r\n    }\r\n    return super.handleEvent(evt);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureAdd_(evt) {\r\n    const feature = getFeatureFromEvent(evt);\r\n    this.addFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureRemove_(evt) {\r\n    const feature = getFeatureFromEvent(evt);\r\n    this.removeFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../events/Event.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureChange_(evt) {\r\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\r\n    if (this.handlingDownUpSequence) {\r\n      const uid = getUid(feature);\r\n      if (!(uid in this.pendingFeatures_)) {\r\n        this.pendingFeatures_[uid] = feature;\r\n      }\r\n    } else {\r\n      this.updateFeature_(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(evt) {\r\n    const featuresToUpdate = getValues(this.pendingFeatures_);\r\n    if (featuresToUpdate.length) {\r\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\r\n      this.pendingFeatures_ = {};\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Remove a feature from the collection of features that we may snap to.\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\r\n   *     or not. Defaults to `true`.\r\n   * @api\r\n   */\r\n  removeFeature(feature, opt_unlisten) {\r\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\r\n    const feature_uid = getUid(feature);\r\n    const extent = this.indexedFeaturesExtents_[feature_uid];\r\n    if (extent) {\r\n      const rBush = this.rBush_;\r\n      const nodesToRemove = [];\r\n      rBush.forEachInExtent(extent, function(node) {\r\n        if (feature === node.feature) {\r\n          nodesToRemove.push(node);\r\n        }\r\n      });\r\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\r\n        rBush.remove(nodesToRemove[i]);\r\n      }\r\n    }\r\n\r\n    if (unregister) {\r\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\r\n      delete this.featureChangeListenerKeys_[feature_uid];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    const currentMap = this.getMap();\r\n    const keys = this.featuresListenerKeys_;\r\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\r\n\r\n    if (currentMap) {\r\n      keys.forEach(unlistenByKey);\r\n      keys.length = 0;\r\n      features.forEach(this.forEachFeatureRemove_.bind(this));\r\n    }\r\n    super.setMap(map);\r\n\r\n    if (map) {\r\n      if (this.features_) {\r\n        keys.push(\r\n          listen(this.features_, CollectionEventType.ADD,\r\n            this.handleFeatureAdd_, this),\r\n          listen(this.features_, CollectionEventType.REMOVE,\r\n            this.handleFeatureRemove_, this)\r\n        );\r\n      } else if (this.source_) {\r\n        keys.push(\r\n          listen(this.source_, VectorEventType.ADDFEATURE,\r\n            this.handleFeatureAdd_, this),\r\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\r\n            this.handleFeatureRemove_, this)\r\n        );\r\n      }\r\n      features.forEach(this.forEachFeatureAdd_.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\r\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @return {Result} Snap result\r\n   */\r\n  snapTo(pixel, pixelCoordinate, map) {\r\n\r\n    const lowerLeft = map.getCoordinateFromPixel(\r\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\r\n    const upperRight = map.getCoordinateFromPixel(\r\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\r\n    const box = boundingExtent([lowerLeft, upperRight]);\r\n\r\n    let segments = this.rBush_.getInExtent(box);\r\n\r\n    // If snapping on vertices only, don't consider circles\r\n    if (this.vertex_ && !this.edge_) {\r\n      segments = segments.filter(function(segment) {\r\n        return segment.feature.getGeometry().getType() !==\r\n            GeometryType.CIRCLE;\r\n      });\r\n    }\r\n\r\n    let snappedToVertex = false;\r\n    let snapped = false;\r\n    let vertex = null;\r\n    let vertexPixel = null;\r\n    let dist, pixel1, pixel2, squaredDist1, squaredDist2;\r\n    if (segments.length > 0) {\r\n      this.pixelCoordinate_ = pixelCoordinate;\r\n      segments.sort(this.sortByDistance_);\r\n      const closestSegment = segments[0].segment;\r\n      const isCircle = segments[0].feature.getGeometry().getType() ===\r\n          GeometryType.CIRCLE;\r\n      if (this.vertex_ && !this.edge_) {\r\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\r\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\r\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n        snappedToVertex = dist <= this.pixelTolerance_;\r\n        if (snappedToVertex) {\r\n          snapped = true;\r\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n          vertexPixel = map.getPixelFromCoordinate(vertex);\r\n        }\r\n      } else if (this.edge_) {\r\n        if (isCircle) {\r\n          vertex = closestOnCircle(pixelCoordinate,\r\n            /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\r\n        } else {\r\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\r\n        }\r\n        vertexPixel = map.getPixelFromCoordinate(vertex);\r\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n          snapped = true;\r\n          if (this.vertex_ && !isCircle) {\r\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n            snappedToVertex = dist <= this.pixelTolerance_;\r\n            if (snappedToVertex) {\r\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n              vertexPixel = map.getPixelFromCoordinate(vertex);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (snapped) {\r\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\r\n      }\r\n    }\r\n    return {\r\n      snapped: snapped,\r\n      vertex: vertex,\r\n      vertexPixel: vertexPixel\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @private\r\n   */\r\n  updateFeature_(feature) {\r\n    this.removeFeature(feature, false);\r\n    this.addFeature(feature, false);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeCircleGeometry_(feature, geometry) {\r\n    const polygon = fromCircle(geometry);\r\n    const coordinates = polygon.getCoordinates()[0];\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      const segment = coordinates.slice(i, i + 2);\r\n      const segmentData = {\r\n        feature: feature,\r\n        segment: segment\r\n      };\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeGeometryCollectionGeometry_(feature, geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0; i < geometries.length; ++i) {\r\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\r\n      if (segmentWriter) {\r\n        segmentWriter.call(this, feature, geometries[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeLineStringGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      const segment = coordinates.slice(i, i + 2);\r\n      const segmentData = {\r\n        feature: feature,\r\n        segment: segment\r\n      };\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiLineStringGeometry_(feature, geometry) {\r\n    const lines = geometry.getCoordinates();\r\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\r\n      const coordinates = lines[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = {\r\n          feature: feature,\r\n          segment: segment\r\n        };\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPointGeometry_(feature, geometry) {\r\n    const points = geometry.getCoordinates();\r\n    for (let i = 0, ii = points.length; i < ii; ++i) {\r\n      const coordinates = points[i];\r\n      const segmentData = {\r\n        feature: feature,\r\n        segment: [coordinates, coordinates]\r\n      };\r\n      this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPolygonGeometry_(feature, geometry) {\r\n    const polygons = geometry.getCoordinates();\r\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\r\n      const rings = polygons[k];\r\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n        const coordinates = rings[j];\r\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n          const segment = coordinates.slice(i, i + 2);\r\n          const segmentData = {\r\n            feature: feature,\r\n            segment: segment\r\n          };\r\n          this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePointGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    const segmentData = {\r\n      feature: feature,\r\n      segment: [coordinates, coordinates]\r\n    };\r\n    this.rBush_.insert(geometry.getExtent(), segmentData);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePolygonGeometry_(feature, geometry) {\r\n    const rings = geometry.getCoordinates();\r\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n      const coordinates = rings[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = {\r\n          feature: feature,\r\n          segment: segment\r\n        };\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Sort segments by distance, helper function\r\n * @param {SegmentData} a The first segment data.\r\n * @param {SegmentData} b The second segment data.\r\n * @return {number} The difference in distance.\r\n * @this {Snap}\r\n */\r\nfunction sortByDistance(a, b) {\r\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\r\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\r\n  return deltaA - deltaB;\r\n}\r\n\r\nexport default Snap;\r\n","/**\r\n * @module ol/interaction/Translate\r\n */\r\nimport Collection from '../Collection.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {listen} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {includes} from '../array.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport InteractionProperty from './Property.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst TranslateEventType = {\r\n  /**\r\n   * Triggered upon feature translation start.\r\n   * @event TranslateEvent#translatestart\r\n   * @api\r\n   */\r\n  TRANSLATESTART: 'translatestart',\r\n  /**\r\n   * Triggered upon feature translation.\r\n   * @event TranslateEvent#translating\r\n   * @api\r\n   */\r\n  TRANSLATING: 'translating',\r\n  /**\r\n   * Triggered upon feature translation end.\r\n   * @event TranslateEvent#translateend\r\n   * @api\r\n   */\r\n  TRANSLATEEND: 'translateend'\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\r\n * not specified, all features on the map will be able to be translated.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\r\n * translated. Alternatively, a filter function can be provided. The\r\n * function will be called for each layer in the map and should return\r\n * `true` for layers that you want to be translatable. If the option is\r\n * absent, all visible layers will be considered translatable.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\r\n * will be checked for features.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\r\n * are instances of this type.\r\n */\r\nexport class TranslateEvent extends Event {\r\n  /**\r\n   * @param {TranslateEventType} type Type.\r\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\r\n   */\r\n  constructor(type, features, coordinate) {\r\n\r\n    super(type);\r\n\r\n    /**\r\n     * The features being translated.\r\n     * @type {Collection<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.features = features;\r\n\r\n    /**\r\n     * The coordinate of the drag event.\r\n     * @const\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = coordinate;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for translating (moving) features.\r\n *\r\n * @fires TranslateEvent\r\n * @api\r\n */\r\nclass Translate extends PointerInteraction {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /**\r\n     * The last position we translated to.\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.lastCoordinate_ = null;\r\n\r\n\r\n    /**\r\n     * @type {Collection<import(\"../Feature.js\").default>}\r\n     * @private\r\n     */\r\n    this.features_ = options.features !== undefined ? options.features : null;\r\n\r\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\r\n    let layerFilter;\r\n    if (options.layers) {\r\n      if (typeof options.layers === 'function') {\r\n        layerFilter = options.layers;\r\n      } else {\r\n        const layers = options.layers;\r\n        layerFilter = function(layer) {\r\n          return includes(layers, layer);\r\n        };\r\n      }\r\n    } else {\r\n      layerFilter = TRUE;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\r\n     */\r\n    this.layerFilter_ = layerFilter;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n\r\n    /**\r\n     * @type {import(\"../Feature.js\").default}\r\n     * @private\r\n     */\r\n    this.lastFeature_ = null;\r\n\r\n    listen(this,\r\n      getChangeEventType(InteractionProperty.ACTIVE),\r\n      this.handleActiveChanged_, this);\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDownEvent(event) {\r\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\r\n    if (!this.lastCoordinate_ && this.lastFeature_) {\r\n      this.lastCoordinate_ = event.coordinate;\r\n      this.handleMoveEvent(event);\r\n\r\n      const features = this.features_ || new Collection([this.lastFeature_]);\r\n\r\n      this.dispatchEvent(\r\n        new TranslateEvent(\r\n          TranslateEventType.TRANSLATESTART, features,\r\n          event.coordinate));\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleUpEvent(event) {\r\n    if (this.lastCoordinate_) {\r\n      this.lastCoordinate_ = null;\r\n      this.handleMoveEvent(event);\r\n\r\n      const features = this.features_ || new Collection([this.lastFeature_]);\r\n\r\n      this.dispatchEvent(\r\n        new TranslateEvent(\r\n          TranslateEventType.TRANSLATEEND, features,\r\n          event.coordinate));\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleDragEvent(event) {\r\n    if (this.lastCoordinate_) {\r\n      const newCoordinate = event.coordinate;\r\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\r\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\r\n\r\n      const features = this.features_ || new Collection([this.lastFeature_]);\r\n\r\n      features.forEach(function(feature) {\r\n        const geom = feature.getGeometry();\r\n        geom.translate(deltaX, deltaY);\r\n        feature.setGeometry(geom);\r\n      });\r\n\r\n      this.lastCoordinate_ = newCoordinate;\r\n      this.dispatchEvent(\r\n        new TranslateEvent(\r\n          TranslateEventType.TRANSLATING, features,\r\n          newCoordinate));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleMoveEvent(event) {\r\n    const elem = event.map.getViewport();\r\n\r\n    // Change the cursor to grab/grabbing if hovering any of the features managed\r\n    // by the interaction\r\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\r\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\r\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\r\n    } else {\r\n      elem.classList.remove('ol-grab', 'ol-grabbing');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Tests to see if the given coordinates intersects any of our selected\r\n   * features.\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\r\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\r\n   * coordinates.\r\n   * @private\r\n   */\r\n  featuresAtPixel_(pixel, map) {\r\n    return map.forEachFeatureAtPixel(pixel,\r\n      function(feature) {\r\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\r\n          return feature;\r\n        }\r\n      }.bind(this), {\r\n        layerFilter: this.layerFilter_,\r\n        hitTolerance: this.hitTolerance_\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Returns the Hit-detection tolerance.\r\n   * @returns {number} Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  getHitTolerance() {\r\n    return this.hitTolerance_;\r\n  }\r\n\r\n  /**\r\n   * Hit-detection tolerance. Pixels inside the radius around the given position\r\n   * will be checked for features.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  setHitTolerance(hitTolerance) {\r\n    this.hitTolerance_ = hitTolerance;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    const oldMap = this.getMap();\r\n    super.setMap(map);\r\n    this.updateState_(oldMap);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleActiveChanged_() {\r\n    this.updateState_(null);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\r\n   * @private\r\n   */\r\n  updateState_(oldMap) {\r\n    let map = this.getMap();\r\n    const active = this.getActive();\r\n    if (!map || !active) {\r\n      map = map || oldMap;\r\n      if (map) {\r\n        const elem = map.getViewport();\r\n        elem.classList.remove('ol-grab', 'ol-grabbing');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Translate;\r\n","/**\r\n * @module ol/interaction\r\n */\r\nimport Collection from './Collection.js';\r\nimport Kinetic from './Kinetic.js';\r\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\r\nimport DragPan from './interaction/DragPan.js';\r\nimport DragRotate from './interaction/DragRotate.js';\r\nimport DragZoom from './interaction/DragZoom.js';\r\nimport KeyboardPan from './interaction/KeyboardPan.js';\r\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\r\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\r\nimport PinchRotate from './interaction/PinchRotate.js';\r\nimport PinchZoom from './interaction/PinchZoom.js';\r\nimport {focus} from './events/condition.js';\r\n\r\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\r\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\r\nexport {default as DragBox} from './interaction/DragBox.js';\r\nexport {default as DragPan} from './interaction/DragPan.js';\r\nexport {default as DragRotate} from './interaction/DragRotate.js';\r\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\r\nexport {default as DragZoom} from './interaction/DragZoom.js';\r\nexport {default as Draw} from './interaction/Draw.js';\r\nexport {default as Extent} from './interaction/Extent.js';\r\nexport {default as Interaction} from './interaction/Interaction.js';\r\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\r\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\r\nexport {default as Modify} from './interaction/Modify.js';\r\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\r\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\r\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\r\nexport {default as Pointer} from './interaction/Pointer.js';\r\nexport {default as Select} from './interaction/Select.js';\r\nexport {default as Snap} from './interaction/Snap.js';\r\nexport {default as Translate} from './interaction/Translate.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\r\n * desired.\r\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\r\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\r\n * useful when page scroll is desired for maps that do not have the browser's\r\n * focus.\r\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\r\n * desired.\r\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\r\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\r\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\r\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\r\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\r\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\r\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\r\n * @property {number} [zoomDuration] Duration of the zoom animation in\r\n * milliseconds.\r\n */\r\n\r\n\r\n/**\r\n * Set of interactions included in maps by default. Specific interactions can be\r\n * excluded by setting the appropriate option to false in the constructor\r\n * options, but the order of the interactions is fixed.  If you want to specify\r\n * a different order for interactions, you will need to create your own\r\n * {@link module:ol/interaction/Interaction} instances and insert\r\n * them into a {@link module:ol/Collection} in the order you want\r\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\r\n * be of interest if the event propagation needs to be stopped at a point.\r\n * The default set of interactions, in sequence, is:\r\n * * {@link module:ol/interaction/DragRotate~DragRotate}\r\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\r\n * * {@link module:ol/interaction/DragPan~DragPan}\r\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\r\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\r\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\r\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\r\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\r\n * * {@link module:ol/interaction/DragZoom~DragZoom}\r\n *\r\n * @param {DefaultsOptions=} opt_options Defaults options.\r\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\r\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\r\n * constructor's `interactions` option.\r\n * @api\r\n */\r\nexport function defaults(opt_options) {\r\n\r\n  const options = opt_options ? opt_options : {};\r\n\r\n  const interactions = new Collection();\r\n\r\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\r\n\r\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\r\n    options.altShiftDragRotate : true;\r\n  if (altShiftDragRotate) {\r\n    interactions.push(new DragRotate());\r\n  }\r\n\r\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\r\n    options.doubleClickZoom : true;\r\n  if (doubleClickZoom) {\r\n    interactions.push(new DoubleClickZoom({\r\n      delta: options.zoomDelta,\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\r\n  if (dragPan) {\r\n    interactions.push(new DragPan({\r\n      condition: options.onFocusOnly ? focus : undefined,\r\n      kinetic: kinetic\r\n    }));\r\n  }\r\n\r\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\r\n    true;\r\n  if (pinchRotate) {\r\n    interactions.push(new PinchRotate());\r\n  }\r\n\r\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\r\n  if (pinchZoom) {\r\n    interactions.push(new PinchZoom({\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\r\n  if (keyboard) {\r\n    interactions.push(new KeyboardPan());\r\n    interactions.push(new KeyboardZoom({\r\n      delta: options.zoomDelta,\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\r\n    options.mouseWheelZoom : true;\r\n  if (mouseWheelZoom) {\r\n    interactions.push(new MouseWheelZoom({\r\n      condition: options.onFocusOnly ? focus : undefined,\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\r\n    options.shiftDragZoom : true;\r\n  if (shiftDragZoom) {\r\n    interactions.push(new DragZoom({\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  return interactions;\r\n\r\n}\r\n","/**\r\n * @module ol/Map\r\n */\r\nimport PluggableMap from './PluggableMap.js';\r\nimport {defaults as defaultControls} from './control.js';\r\nimport {defaults as defaultInteractions} from './interaction.js';\r\nimport {assign} from './obj.js';\r\nimport CompositeMapRenderer from './renderer/Composite.js';\r\n\r\n/**\r\n * @classdesc\r\n * The map is the core component of OpenLayers. For a map to render, a view,\r\n * one or more layers, and a target container are needed:\r\n *\r\n *     import Map from 'ol/Map';\r\n *     import View from 'ol/View';\r\n *     import TileLayer from 'ol/layer/Tile';\r\n *     import OSM from 'ol/source/OSM';\r\n *\r\n *     var map = new Map({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM()\r\n *         })\r\n *       ],\r\n *       target: 'map'\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\r\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\r\n * options or added with `addLayer` can be groups, which can contain further\r\n * groups, and so on.\r\n *\r\n * @api\r\n */\r\nclass Map extends PluggableMap {\r\n\r\n  /**\r\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\r\n   */\r\n  constructor(options) {\r\n    options = assign({}, options);\r\n    if (!options.controls) {\r\n      options.controls = defaultControls();\r\n    }\r\n    if (!options.interactions) {\r\n      options.interactions = defaultInteractions();\r\n    }\r\n\r\n    super(options);\r\n  }\r\n\r\n  createRenderer() {\r\n    return new CompositeMapRenderer(this);\r\n  }\r\n}\r\n\r\n\r\nexport default Map;\r\n","/**\r\n * @module ol/webgl/Buffer\r\n */\r\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\r\n\r\n/**\r\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\r\n * or `DYNAMIC_DRAW`.\r\n * @enum {number}\r\n */\r\nexport const BufferUsage = {\r\n  STATIC_DRAW: STATIC_DRAW,\r\n  STREAM_DRAW: STREAM_DRAW,\r\n  DYNAMIC_DRAW: DYNAMIC_DRAW\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Object used to store an array of data as well as usage information for that data.\r\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData) for more info.\r\n * @api\r\n */\r\nclass WebGLArrayBuffer {\r\n\r\n  /**\r\n   * @param {Array<number>=} opt_arr Array.\r\n   * @param {number=} opt_usage Usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`. Default is `DYNAMIC_DRAW`.\r\n   */\r\n  constructor(opt_arr, opt_usage) {\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.arr_ = opt_arr !== undefined ? opt_arr : [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\r\n\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Array.\r\n   */\r\n  getArray() {\r\n    return this.arr_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Usage.\r\n   */\r\n  getUsage() {\r\n    return this.usage_;\r\n  }\r\n}\r\n\r\nexport default WebGLArrayBuffer;\r\n","/**\r\n * @module ol/webgl/ContextEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  LOST: 'webglcontextlost',\r\n  RESTORED: 'webglcontextrestored'\r\n};\r\n","/**\r\n * @module ol/vec/mat4\r\n */\r\n\r\n\r\n/**\r\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\r\n */\r\nexport function create() {\r\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\r\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\r\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\r\n */\r\nexport function fromTransform(mat4, transform) {\r\n  mat4[0] = transform[0];\r\n  mat4[1] = transform[1];\r\n  mat4[4] = transform[2];\r\n  mat4[5] = transform[3];\r\n  mat4[12] = transform[4];\r\n  mat4[13] = transform[5];\r\n  return mat4;\r\n}\r\n","/**\r\n * @module ol/webgl/PostProcessingPass\r\n */\r\n\r\nconst DEFAULT_VERTEX_SHADER = `\r\n  precision mediump float;\r\n  \r\n  attribute vec2 a_position;\r\n  varying vec2 v_texCoord;\r\n  varying vec2 v_screenCoord;\r\n  \r\n  uniform vec2 u_screenSize;\r\n   \r\n  void main() {\r\n    v_texCoord = a_position * 0.5 + 0.5;\r\n    v_screenCoord = v_texCoord * u_screenSize;\r\n    gl_Position = vec4(a_position, 0.0, 1.0);\r\n  }\r\n`;\r\n\r\nconst DEFAULT_FRAGMENT_SHADER = `\r\n  precision mediump float;\r\n   \r\n  uniform sampler2D u_image;\r\n   \r\n  varying vec2 v_texCoord;\r\n  varying vec2 v_screenCoord;\r\n   \r\n  void main() {\r\n    gl_FragColor = texture2D(u_image, v_texCoord);\r\n  }\r\n`;\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n\r\n/**\r\n * @typedef {Object} UniformInternalDescription\r\n * @property {import(\"./Helper\").UniformValue} value Value\r\n * @property {number} location Location\r\n * @property {WebGLTexture} [texture] Texture\r\n * @private\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * This class is used to define Post Processing passes with custom shaders and uniforms.\r\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\r\n *\r\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\r\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\r\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\r\n *\r\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\r\n * premultiplied.\r\n *\r\n * Default shaders are shown hereafter:\r\n *\r\n * * Vertex shader:\r\n *\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   attribute vec2 a_position;\r\n *   varying vec2 v_texCoord;\r\n *   varying vec2 v_screenCoord;\r\n *\r\n *   uniform vec2 u_screenSize;\r\n *\r\n *   void main() {\r\n *     v_texCoord = a_position * 0.5 + 0.5;\r\n *     v_screenCoord = v_texCoord * u_screenSize;\r\n *     gl_Position = vec4(a_position, 0.0, 1.0);\r\n *   }\r\n *   ```\r\n *\r\n * * Fragment shader:\r\n *\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   uniform sampler2D u_image;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *   varying vec2 v_screenCoord;\r\n *\r\n *   void main() {\r\n *     gl_FragColor = texture2D(u_image, v_texCoord);\r\n *   }\r\n *   ```\r\n *\r\n * @api\r\n */\r\nclass WebGLPostProcessingPass {\r\n\r\n  /**\r\n   * @param {Options=} options Options.\r\n   */\r\n  constructor(options) {\r\n    this.gl_ = options.webGlContext;\r\n    const gl = this.gl_;\r\n\r\n    this.scaleRatio_ = options.scaleRatio || 1;\r\n\r\n    this.renderTargetTexture_ = gl.createTexture();\r\n    this.renderTargetTextureSize_ = null;\r\n\r\n    this.frameBuffer_ = gl.createFramebuffer();\r\n\r\n    // compile the program for the frame buffer\r\n    // TODO: make compilation errors show up\r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\r\n    gl.compileShader(vertexShader);\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\r\n    gl.compileShader(fragmentShader);\r\n    this.renderTargetProgram_ = gl.createProgram();\r\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\r\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\r\n    gl.linkProgram(this.renderTargetProgram_);\r\n\r\n    // bind the vertices buffer for the frame buffer\r\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\r\n    const verticesArray = [\r\n      -1, -1,\r\n      1, -1,\r\n      -1, 1,\r\n      1, -1,\r\n      1, 1,\r\n      -1, 1\r\n    ];\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\r\n\r\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\r\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\r\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\r\n\r\n    /**\r\n     * Holds info about custom uniforms used in the post processing pass\r\n     * @type {Array<UniformInternalDescription>}\r\n     * @private\r\n     */\r\n    this.uniforms_ = [];\r\n    options.uniforms && Object.keys(options.uniforms).forEach(function(name) {\r\n      this.uniforms_.push({\r\n        value: options.uniforms[name],\r\n        location: gl.getUniformLocation(this.renderTargetProgram_, name)\r\n      });\r\n    }.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Get the WebGL rendering context\r\n   * @return {WebGLRenderingContext} The rendering context.\r\n   * @api\r\n   */\r\n  getGL() {\r\n    return this.gl_;\r\n  }\r\n\r\n  /**\r\n   * Initialize the render target texture of the post process, make sure it is at the\r\n   * right size and bind it as a render target for the next draw calls.\r\n   * The last step to be initialized will be the one where the primitives are rendered.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n   * @api\r\n   */\r\n  init(frameState) {\r\n    const gl = this.getGL();\r\n    const canvas = gl.canvas;\r\n    const size = frameState.size;\r\n\r\n    // rendering goes to my buffer\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\r\n    gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\r\n\r\n    // if size has changed: adjust canvas & render target texture\r\n    if (!this.renderTargetTextureSize_ ||\r\n      this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\r\n      this.renderTargetTextureSize_ = size;\r\n\r\n      // create a new texture\r\n      const level = 0;\r\n      const internalFormat = gl.RGBA;\r\n      const border = 0;\r\n      const format = gl.RGBA;\r\n      const type = gl.UNSIGNED_BYTE;\r\n      const data = null;\r\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\r\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n        canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border,\r\n        format, type, data);\r\n\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n      // bind the texture to the framebuffer\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render to the next postprocessing pass (or to the canvas if final pass).\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\r\n   * @api\r\n   */\r\n  apply(frameState, nextPass) {\r\n    const gl = this.getGL();\r\n    const canvas = gl.canvas;\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\r\n\r\n    // render the frame buffer to the canvas\r\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\r\n\r\n    gl.useProgram(this.renderTargetProgram_);\r\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\r\n    gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\r\n    gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\r\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\r\n\r\n    this.applyUniforms(frameState);\r\n\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n  }\r\n\r\n  /**\r\n   * @returns {WebGLFramebuffer} Frame buffer\r\n   * @api\r\n   */\r\n  getFrameBuffer() {\r\n    return this.frameBuffer_;\r\n  }\r\n\r\n  /**\r\n   * Sets the custom uniforms based on what was given in the constructor.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  applyUniforms(frameState) {\r\n    const gl = this.getGL();\r\n\r\n    let value;\r\n    let textureSlot = 1;\r\n    this.uniforms_.forEach(function(uniform) {\r\n      value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\r\n\r\n      // apply value based on type\r\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\r\n        // create a texture & put data\r\n        if (!uniform.texture) {\r\n          uniform.texture = gl.createTexture();\r\n        }\r\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\r\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        if (value instanceof ImageData) {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0,\r\n            gl.UNSIGNED_BYTE, new Uint8Array(value.data));\r\n        } else {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\r\n        }\r\n\r\n        // fill texture slots\r\n        gl.uniform1i(uniform.location, textureSlot++);\r\n\r\n      } else if (Array.isArray(value)) {\r\n        switch (value.length) {\r\n          case 2:\r\n            gl.uniform2f(uniform.location, value[0], value[1]);\r\n            return;\r\n          case 3:\r\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\r\n            return;\r\n          case 4:\r\n            gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\r\n            return;\r\n          default: return;\r\n        }\r\n      } else if (typeof value === 'number') {\r\n        gl.uniform1f(uniform.location, value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default WebGLPostProcessingPass;\r\n","/**\r\n * @module ol/webgl/Helper\r\n */\r\nimport {getUid} from '../util.js';\r\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\r\nimport Disposable from '../Disposable.js';\r\nimport {includes} from '../array.js';\r\nimport {listen, unlistenAll} from '../events.js';\r\nimport {clear} from '../obj.js';\r\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\r\nimport ContextEventType from '../webgl/ContextEventType.js';\r\nimport {\r\n  create as createTransform,\r\n  reset as resetTransform,\r\n  rotate as rotateTransform,\r\n  scale as scaleTransform,\r\n  translate as translateTransform\r\n} from '../transform.js';\r\nimport {create, fromTransform} from '../vec/mat4.js';\r\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\r\nimport {getContext} from '../webgl.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} BufferCacheEntry\r\n * @property {import(\"./Buffer.js\").default} buffer\r\n * @property {WebGLBuffer} webGlBuffer\r\n */\r\n\r\n/**\r\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\r\n * @enum {number}\r\n */\r\nexport const ShaderType = {\r\n  FRAGMENT_SHADER: 0x8B30,\r\n  VERTEX_SHADER: 0x8B31\r\n};\r\n\r\n/**\r\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\r\n * and `OFFSET_ROTATION_MATRIX`.\r\n * @enum {string}\r\n */\r\nexport const DefaultUniform = {\r\n  PROJECTION_MATRIX: 'u_projectionMatrix',\r\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\r\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix'\r\n};\r\n\r\n/**\r\n * Attribute names used in the default shaders: `POSITION`, `TEX_COORD`, `OPACITY`,\r\n * `ROTATE_WITH_VIEW`, `OFFSETS` and `COLOR`\r\n * @enum {string}\r\n */\r\nexport const DefaultAttrib = {\r\n  POSITION: 'a_position',\r\n  TEX_COORD: 'a_texCoord',\r\n  OPACITY: 'a_opacity',\r\n  ROTATE_WITH_VIEW: 'a_rotateWithView',\r\n  OFFSETS: 'a_offsets',\r\n  COLOR: 'a_color'\r\n};\r\n\r\n/**\r\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\r\n */\r\n\r\n/**\r\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\r\n * one of the previous types.\r\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\r\n */\r\n\r\n/**\r\n * @typedef {Object} PostProcessesOptions\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\r\n * names in the provided or default shaders.\r\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\r\n */\r\n\r\n/**\r\n * @typedef {Object} UniformInternalDescription\r\n * @property {string} name Name\r\n * @property {UniformValue=} value Value\r\n * @property {WebGLTexture} [texture] Texture\r\n * @private\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\r\n * directly the WebGL API should not be required anymore.\r\n *\r\n * Several operations are handled by the `WebGLHelper` class:\r\n *\r\n * ### Define custom shaders and uniforms\r\n *\r\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\r\n *\r\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\r\n *   Outputs are:\r\n *\r\n *   * `gl_Position`: position of the vertex in screen space\r\n *\r\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\r\n *\r\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\r\n *\r\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\r\n *   can be changed at every frame and can be of type float, arrays of float or images.\r\n *\r\n *   Shaders must be compiled and assembled into a program like so:\r\n *   ```js\r\n *   // here we simply create two shaders and assemble them in a program which is then used\r\n *   // for subsequent rendering calls\r\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\r\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\r\n *   this.program = this.context.getProgram(fragmentShader, vertexShader);\r\n *   this.context.useProgram(this.program);\r\n *   ```\r\n *\r\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\r\n *   You can also change their value along the way like so:\r\n *   ```js\r\n *   this.context.setUniformFloatValue('u_value', valueAsNumber);\r\n *   ```\r\n *\r\n * ### Defining post processing passes\r\n *\r\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\r\n *   while applying special effects in screen space.\r\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\r\n *\r\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\r\n *   A post process step accepts the following options:\r\n *\r\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\r\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\r\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\r\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\r\n *\r\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\r\n *\r\n * ### Binding WebGL buffers and flushing data into them\r\n *\r\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\r\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\r\n *   This is done using {@link bindBuffer}.\r\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\r\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\r\n *\r\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\r\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\r\n *\r\n *   Examples below:\r\n *   ```js\r\n *   // at initialization phase\r\n *   this.verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n *   this.indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n *\r\n *   // when array values have changed\r\n *   this.context.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\r\n *   this.context.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\r\n *\r\n *   // at rendering phase\r\n *   this.context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\r\n *   this.context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\r\n *   ```\r\n *\r\n * ### Specifying attributes\r\n *\r\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\r\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray} and either\r\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\r\n *\r\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\r\n *   ```js\r\n *   // here we indicate that the data array has the following structure:\r\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\r\n *   let bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\r\n *   this.context.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\r\n *   this.context.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\r\n *   this.context.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\r\n *   ```\r\n *\r\n * ### Rendering primitives\r\n *\r\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\r\n *   ```js\r\n *   // frame preparation step\r\n *   this.context.prepareDraw(frameState);\r\n *\r\n *   // call this for every data array that has to be rendered on screen\r\n *   this.context.drawElements(0, this.indicesBuffer.getArray().length);\r\n *\r\n *   // finalize the rendering by applying post processes\r\n *   this.context.finalizeDraw(frameState);\r\n *   ```\r\n *\r\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\r\n *\r\n *\r\n * @api\r\n */\r\nclass WebGLHelper extends Disposable {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = document.createElement('canvas');\r\n    this.canvas_.style.position = 'absolute';\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLRenderingContext}\r\n     */\r\n    this.gl_ = getContext(this.canvas_);\r\n    const gl = this.getGL();\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, BufferCacheEntry>}\r\n     */\r\n    this.bufferCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<WebGLShader>}\r\n     */\r\n    this.shaderCache_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<WebGLProgram>}\r\n     */\r\n    this.programCache_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLProgram}\r\n     */\r\n    this.currentProgram_ = null;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\r\n\r\n    // use the OES_element_index_uint extension if available\r\n    if (this.hasOESElementIndexUint) {\r\n      gl.getExtension('OES_element_index_uint');\r\n    }\r\n\r\n    listen(this.canvas_, ContextEventType.LOST,\r\n      this.handleWebGLContextLost, this);\r\n    listen(this.canvas_, ContextEventType.RESTORED,\r\n      this.handleWebGLContextRestored, this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../transform.js\").Transform}\r\n     */\r\n    this.offsetRotateMatrix_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../transform.js\").Transform}\r\n     */\r\n    this.offsetScaleMatrix_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.tmpMat4_ = create();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object.<string, WebGLUniformLocation>}\r\n     */\r\n    this.uniformLocations_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object.<string, number>}\r\n     */\r\n    this.attribLocations_ = {};\r\n\r\n    /**\r\n     * Holds info about custom uniforms used in the post processing pass.\r\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\r\n     * @type {Array<UniformInternalDescription>}\r\n     * @private\r\n     */\r\n    this.uniforms_ = [];\r\n    if (options.uniforms) {\r\n      for (const name in options.uniforms) {\r\n        this.uniforms_.push({\r\n          name: name,\r\n          value: options.uniforms[name]\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\r\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\r\n     * the frame buffer logic).\r\n     * @type {Array<WebGLPostProcessingPass>}\r\n     * @private\r\n     */\r\n    this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function(options) {\r\n      return new WebGLPostProcessingPass({\r\n        webGlContext: gl,\r\n        scaleRatio: options.scaleRatio,\r\n        vertexShader: options.vertexShader,\r\n        fragmentShader: options.fragmentShader,\r\n        uniforms: options.uniforms\r\n      });\r\n    }) : [new WebGLPostProcessingPass({webGlContext: gl})];\r\n\r\n    /**\r\n     * @type {string|null}\r\n     * @private\r\n     */\r\n    this.shaderCompileErrors_ = null;\r\n  }\r\n\r\n  /**\r\n   * Just bind the buffer if it's in the cache. Otherwise create\r\n   * the WebGL buffer, bind it, populate it, and add an entry to\r\n   * the cache.\r\n   * @param {number} target Target, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\r\n   * @param {import(\"./Buffer\").default} buffer Buffer.\r\n   * @api\r\n   */\r\n  bindBuffer(target, buffer) {\r\n    const gl = this.getGL();\r\n    const bufferKey = getUid(buffer);\r\n    let bufferCache = this.bufferCache_[bufferKey];\r\n    if (!bufferCache) {\r\n      const webGlBuffer = gl.createBuffer();\r\n      bufferCache = this.bufferCache_[bufferKey] = {\r\n        buffer: buffer,\r\n        webGlBuffer: webGlBuffer\r\n      };\r\n    }\r\n    gl.bindBuffer(target, bufferCache.webGlBuffer);\r\n  }\r\n\r\n  /**\r\n   * Update the data contained in the buffer array; this is required for the\r\n   * new data to be rendered\r\n   * @param {number} target Target, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\r\n   * @param {import(\"./Buffer\").default} buffer Buffer.\r\n   * @api\r\n   */\r\n  flushBufferData(target, buffer) {\r\n    const gl = this.getGL();\r\n    const arr = buffer.getArray();\r\n    this.bindBuffer(target, buffer);\r\n    let /** @type {ArrayBufferView} */ arrayBuffer;\r\n    if (target == ARRAY_BUFFER) {\r\n      arrayBuffer = new Float32Array(arr);\r\n    } else if (target == ELEMENT_ARRAY_BUFFER) {\r\n      arrayBuffer = this.hasOESElementIndexUint ?\r\n        new Uint32Array(arr) : new Uint16Array(arr);\r\n    }\r\n    gl.bufferData(target, arrayBuffer, buffer.getUsage());\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\r\n   */\r\n  deleteBuffer(buf) {\r\n    const gl = this.getGL();\r\n    const bufferKey = getUid(buf);\r\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\r\n    if (!gl.isContextLost()) {\r\n      gl.deleteBuffer(bufferCacheEntry.buffer);\r\n    }\r\n    delete this.bufferCache_[bufferKey];\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    unlistenAll(this.canvas_);\r\n    const gl = this.getGL();\r\n    if (!gl.isContextLost()) {\r\n      for (const key in this.bufferCache_) {\r\n        gl.deleteBuffer(this.bufferCache_[key].buffer);\r\n      }\r\n      for (const key in this.programCache_) {\r\n        gl.deleteProgram(this.programCache_[key]);\r\n      }\r\n      for (const key in this.shaderCache_) {\r\n        gl.deleteShader(this.shaderCache_[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the buffer & set the viewport to draw.\r\n   * Post process passes will be initialized here, the first one being bound as a render target for\r\n   * subsequent draw calls.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n   * @api\r\n   */\r\n  prepareDraw(frameState) {\r\n    const gl = this.getGL();\r\n    const canvas = this.getCanvas();\r\n    const size = frameState.size;\r\n    const pixelRatio = frameState.pixelRatio;\r\n\r\n    canvas.width = size[0] * pixelRatio;\r\n    canvas.height = size[1] * pixelRatio;\r\n    canvas.style.width = size[0] + 'px';\r\n    canvas.style.height = size[1] + 'px';\r\n\r\n    gl.useProgram(this.currentProgram_);\r\n\r\n    // loop backwards in post processes list\r\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\r\n      this.postProcessPasses_[i].init(frameState);\r\n    }\r\n\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    this.applyFrameState(frameState);\r\n    this.applyUniforms(frameState);\r\n  }\r\n\r\n  /**\r\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\r\n   * @param {number} start Start index.\r\n   * @param {number} end End index.\r\n   * @api\r\n   */\r\n  drawElements(start, end) {\r\n    const gl = this.getGL();\r\n    const elementType = this.hasOESElementIndexUint ?\r\n      gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\r\n    const elementSize = this.hasOESElementIndexUint ? 4 : 2;\r\n\r\n    const numItems = end - start;\r\n    const offsetInBytes = start * elementSize;\r\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\r\n  }\r\n\r\n  /**\r\n   * Apply the successive post process passes which will eventually render to the actual canvas.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n   * @api\r\n   */\r\n  finalizeDraw(frameState) {\r\n    // apply post processes using the next one as target\r\n    for (let i = 0; i < this.postProcessPasses_.length; i++) {\r\n      this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement} Canvas.\r\n   * @api\r\n   */\r\n  getCanvas() {\r\n    return this.canvas_;\r\n  }\r\n\r\n  /**\r\n   * Get the WebGL rendering context\r\n   * @return {WebGLRenderingContext} The rendering context.\r\n   * @api\r\n   */\r\n  getGL() {\r\n    return this.gl_;\r\n  }\r\n\r\n  /**\r\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  applyFrameState(frameState) {\r\n    const size = frameState.size;\r\n    const rotation = frameState.viewState.rotation;\r\n\r\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\r\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\r\n\r\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\r\n    if (rotation !== 0) {\r\n      rotateTransform(offsetRotateMatrix, -rotation);\r\n    }\r\n\r\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\r\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\r\n  }\r\n\r\n  /**\r\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  applyUniforms(frameState) {\r\n    const gl = this.getGL();\r\n\r\n    let value;\r\n    let textureSlot = 0;\r\n    this.uniforms_.forEach(function(uniform) {\r\n      value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\r\n\r\n      // apply value based on type\r\n      if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\r\n        // create a texture & put data\r\n        if (!uniform.texture) {\r\n          uniform.texture = gl.createTexture();\r\n        }\r\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\r\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\r\n\r\n        // fill texture slots by increasing index\r\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\r\n\r\n      } else if (Array.isArray(value) && value.length === 6) {\r\n        this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\r\n      } else if (Array.isArray(value) && value.length <= 4) {\r\n        switch (value.length) {\r\n          case 2:\r\n            gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\r\n            return;\r\n          case 3:\r\n            gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\r\n            return;\r\n          case 4:\r\n            gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\r\n            return;\r\n          default:\r\n            return;\r\n        }\r\n      } else if (typeof value === 'number') {\r\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Use a program.  If the program is already in use, this will return `false`.\r\n   * @param {WebGLProgram} program Program.\r\n   * @return {boolean} Changed.\r\n   * @api\r\n   */\r\n  useProgram(program) {\r\n    if (program == this.currentProgram_) {\r\n      return false;\r\n    } else {\r\n      const gl = this.getGL();\r\n      gl.useProgram(program);\r\n      this.currentProgram_ = program;\r\n      this.uniformLocations_ = {};\r\n      this.attribLocations_ = {};\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Will attempt to compile a vertex or fragment shader based on source\r\n   * On error, the shader will be returned but\r\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\r\n   * Use `gl.getShaderInfoLog(shader)` to have details\r\n   * @param {string} source Shader source\r\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\r\n   * @return {WebGLShader} Shader object\r\n   */\r\n  compileShader(source, type) {\r\n    const gl = this.getGL();\r\n    const shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    this.shaderCache_.push(shader);\r\n    return shader;\r\n  }\r\n\r\n  /**\r\n   * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\r\n   * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\r\n   * @param {string} fragmentShaderSource Fragment shader source.\r\n   * @param {string} vertexShaderSource Vertex shader source.\r\n   * @return {WebGLProgram} Program\r\n   * @api\r\n   */\r\n  getProgram(fragmentShaderSource, vertexShaderSource) {\r\n    const gl = this.getGL();\r\n\r\n    const fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\r\n    const vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\r\n    this.shaderCompileErrors_ = null;\r\n\r\n    if (gl.getShaderInfoLog(fragmentShader)) {\r\n      this.shaderCompileErrors_ =\r\n        `Fragment shader compilation failed:\\n${gl.getShaderInfoLog(fragmentShader)}`;\r\n    }\r\n    if (gl.getShaderInfoLog(vertexShader)) {\r\n      this.shaderCompileErrors_ = (this.shaderCompileErrors_ || '') +\r\n        `Vertex shader compilation failed:\\n${gl.getShaderInfoLog(vertexShader)}`;\r\n    }\r\n\r\n    const program = gl.createProgram();\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.attachShader(program, vertexShader);\r\n    gl.linkProgram(program);\r\n    this.programCache_.push(program);\r\n    return program;\r\n  }\r\n\r\n  /**\r\n   * Will return the last shader compilation errors. If no error happened, will return null;\r\n   * @return {string|null} Errors description, or null if last compilation was successful\r\n   * @api\r\n   */\r\n  getShaderCompileErrors() {\r\n    return this.shaderCompileErrors_;\r\n  }\r\n\r\n  /**\r\n   * Will get the location from the shader or the cache\r\n   * @param {string} name Uniform name\r\n   * @return {WebGLUniformLocation} uniformLocation\r\n   * @api\r\n   */\r\n  getUniformLocation(name) {\r\n    if (this.uniformLocations_[name] === undefined) {\r\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\r\n    }\r\n    return this.uniformLocations_[name];\r\n  }\r\n\r\n  /**\r\n   * Will get the location from the shader or the cache\r\n   * @param {string} name Attribute name\r\n   * @return {number} attribLocation\r\n   * @api\r\n   */\r\n  getAttributeLocation(name) {\r\n    if (this.attribLocations_[name] === undefined) {\r\n      this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\r\n    }\r\n    return this.attribLocations_[name];\r\n  }\r\n\r\n  /**\r\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\r\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../transform\").Transform} transform Transform to update.\r\n   * @return {import(\"../transform\").Transform} The updated transform object.\r\n   * @api\r\n   */\r\n  makeProjectionTransform(frameState, transform) {\r\n    const size = frameState.size;\r\n    const rotation = frameState.viewState.rotation;\r\n    const resolution = frameState.viewState.resolution;\r\n    const center = frameState.viewState.center;\r\n\r\n    resetTransform(transform);\r\n    scaleTransform(transform, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\r\n    rotateTransform(transform, -rotation);\r\n    translateTransform(transform, -center[0], -center[1]);\r\n\r\n    return transform;\r\n  }\r\n\r\n  /**\r\n   * Give a value for a standard float uniform\r\n   * @param {string} uniform Uniform name\r\n   * @param {number} value Value\r\n   * @api\r\n   */\r\n  setUniformFloatValue(uniform, value) {\r\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\r\n  }\r\n\r\n  /**\r\n   * Give a value for a standard matrix4 uniform\r\n   * @param {string} uniform Uniform name\r\n   * @param {Array<number>} value Matrix value\r\n   * @api\r\n   */\r\n  setUniformMatrixValue(uniform, value) {\r\n    this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\r\n  }\r\n\r\n  /**\r\n   * Will set the currently bound buffer to an attribute of the shader program\r\n   * @param {string} attribName Attribute name\r\n   * @param {number} size Number of components per attributes\r\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\r\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\r\n   * @param {number} offset Offset in bytes\r\n   * @api\r\n   */\r\n  enableAttributeArray(attribName, size, type, stride, offset) {\r\n    const location = this.getAttributeLocation(attribName);\r\n    // the attribute has not been found in the shaders; do not enable it\r\n    if (location < 0) {\r\n      return;\r\n    }\r\n    this.getGL().enableVertexAttribArray(location);\r\n    this.getGL().vertexAttribPointer(location, size, type,\r\n      false, stride, offset);\r\n  }\r\n\r\n  /**\r\n   * WebGL context was lost\r\n   * @private\r\n   */\r\n  handleWebGLContextLost() {\r\n    clear(this.bufferCache_);\r\n    clear(this.shaderCache_);\r\n    clear(this.programCache_);\r\n    this.currentProgram_ = null;\r\n  }\r\n\r\n  /**\r\n   * WebGL context was restored\r\n   * @private\r\n   */\r\n  handleWebGLContextRestored() {\r\n  }\r\n\r\n  // TODO: shutdown program\r\n\r\n  /**\r\n   * TODO: these are not used and should be reworked\r\n   * @param {number=} opt_wrapS wrapS.\r\n   * @param {number=} opt_wrapT wrapT.\r\n   * @return {WebGLTexture} The texture.\r\n   */\r\n  createTextureInternal(opt_wrapS, opt_wrapT) {\r\n    const gl = this.getGL();\r\n    const texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n    if (opt_wrapS !== undefined) {\r\n      gl.texParameteri(\r\n        TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\r\n    }\r\n    if (opt_wrapT !== undefined) {\r\n      gl.texParameteri(\r\n        TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\r\n    }\r\n\r\n    return texture;\r\n  }\r\n\r\n  /**\r\n   * TODO: these are not used and should be reworked\r\n   * @param {number} width Width.\r\n   * @param {number} height Height.\r\n   * @param {number=} opt_wrapS wrapS.\r\n   * @param {number=} opt_wrapT wrapT.\r\n   * @return {WebGLTexture} The texture.\r\n   */\r\n  createEmptyTexture(width, height, opt_wrapS, opt_wrapT) {\r\n    const gl = this.getGL();\r\n    const texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    return texture;\r\n  }\r\n\r\n\r\n  /**\r\n   * TODO: these are not used and should be reworked\r\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n   * @param {number=} opt_wrapS wrapS.\r\n   * @param {number=} opt_wrapT wrapT.\r\n   * @return {WebGLTexture} The texture.\r\n   */\r\n  createTexture(image, opt_wrapS, opt_wrapT) {\r\n    const gl = this.getGL();\r\n    const texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    return texture;\r\n  }\r\n}\r\n\r\nexport default WebGLHelper;\r\n","/**\r\n * @module ol/renderer/webgl/Layer\r\n */\r\nimport LayerRenderer from '../Layer.js';\r\nimport WebGLHelper from '../../webgl/Helper.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} PostProcessesOptions\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\r\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Base WebGL renderer class.\r\n * Holds all logic related to data manipulation & some common rendering logic\r\n */\r\nclass WebGLLayerRenderer extends LayerRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\r\n   * @param {Options=} [opt_options] Options.\r\n   */\r\n  constructor(layer, opt_options) {\r\n    super(layer);\r\n\r\n    const options = opt_options || {};\r\n\r\n    this.helper_ = new WebGLHelper({\r\n      postProcesses: options.postProcesses,\r\n      uniforms: options.uniforms\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Will return the last shader compilation errors. If no error happened, will return null;\r\n   * @return {string|null} Errors, or null if last compilation was successful\r\n   * @api\r\n   */\r\n  getShaderCompileErrors() {\r\n    return this.helper_.getShaderCompileErrors();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Pushes vertices and indices to the given buffers using the geometry coordinates and the following properties\r\n * from the feature:\r\n * - `color`\r\n * - `opacity`\r\n * - `size` (for points)\r\n * - `u0`, `v0`, `u1`, `v1` (for points)\r\n * - `rotateWithView` (for points)\r\n * - `width` (for lines)\r\n * Custom attributes can be designated using the `opt_attributes` argument, otherwise other properties on the\r\n * feature will be ignored.\r\n * @param {import(\"../../webgl/Buffer\").default} vertexBuffer WebGL buffer in which new vertices will be pushed.\r\n * @param {import(\"../../webgl/Buffer\").default} indexBuffer WebGL buffer in which new indices will be pushed.\r\n * @param {import(\"../../format/GeoJSON\").GeoJSONFeature} geojsonFeature Feature in geojson format, coordinates\r\n * expressed in EPSG:4326.\r\n * @param {Array<string>} [opt_attributes] Custom attributes. An array of properties which will be read from the\r\n * feature and pushed in the buffer in the given order. Note: attributes can only be numerical! Any other type or\r\n * NaN will result in `0` being pushed in the buffer.\r\n */\r\nexport function pushFeatureToBuffer(vertexBuffer, indexBuffer, geojsonFeature, opt_attributes) {\r\n  if (!geojsonFeature.geometry) {\r\n    return;\r\n  }\r\n  switch (geojsonFeature.geometry.type) {\r\n    case 'Point':\r\n      pushPointFeatureToBuffer_(vertexBuffer, indexBuffer, geojsonFeature, opt_attributes);\r\n      return;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nconst tmpArray_ = [];\r\n\r\n/**\r\n * Pushes a quad (two triangles) based on a point geometry\r\n * @param {import(\"../../webgl/Buffer\").default} vertexBuffer WebGL buffer\r\n * @param {import(\"../../webgl/Buffer\").default} indexBuffer WebGL buffer\r\n * @param {import(\"../../format/GeoJSON\").GeoJSONFeature} geojsonFeature Feature\r\n * @param {Array<string>} [opt_attributes] Custom attributes\r\n * @private\r\n */\r\nfunction pushPointFeatureToBuffer_(vertexBuffer, indexBuffer, geojsonFeature, opt_attributes) {\r\n  const stride = 12 + (opt_attributes !== undefined ? opt_attributes.length : 0);\r\n\r\n  const x = geojsonFeature.geometry.coordinates[0];\r\n  const y = geojsonFeature.geometry.coordinates[1];\r\n  const u0 = geojsonFeature.properties.u0;\r\n  const v0 = geojsonFeature.properties.v0;\r\n  const u1 = geojsonFeature.properties.u1;\r\n  const v1 = geojsonFeature.properties.v1;\r\n  const size = geojsonFeature.properties.size;\r\n  const opacity = geojsonFeature.properties.opacity;\r\n  const rotateWithView = geojsonFeature.properties.rotateWithView;\r\n  const color = geojsonFeature.properties.color;\r\n  const red = color[0];\r\n  const green = color[1];\r\n  const blue = color[2];\r\n  const alpha = color[3];\r\n  const baseIndex = vertexBuffer.getArray().length / stride;\r\n\r\n  // read custom numerical attributes on the feature\r\n  const customAttributeValues = tmpArray_;\r\n  customAttributeValues.length = opt_attributes ? opt_attributes.length : 0;\r\n  for (let i = 0; i < customAttributeValues.length; i++) {\r\n    customAttributeValues[i] = parseFloat(geojsonFeature.properties[opt_attributes[i]]) || 0;\r\n  }\r\n\r\n  // push vertices for each of the four quad corners (first standard then custom attributes)\r\n  vertexBuffer.getArray().push(x, y, -size / 2, -size / 2, u0, v0, opacity, rotateWithView, red, green, blue, alpha);\r\n  Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\r\n\r\n  vertexBuffer.getArray().push(x, y, +size / 2, -size / 2, u1, v0, opacity, rotateWithView, red, green, blue, alpha);\r\n  Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\r\n\r\n  vertexBuffer.getArray().push(x, y, +size / 2, +size / 2, u1, v1, opacity, rotateWithView, red, green, blue, alpha);\r\n  Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\r\n\r\n  vertexBuffer.getArray().push(x, y, -size / 2, +size / 2, u0, v1, opacity, rotateWithView, red, green, blue, alpha);\r\n  Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\r\n\r\n  indexBuffer.getArray().push(\r\n    baseIndex, baseIndex + 1, baseIndex + 3,\r\n    baseIndex + 1, baseIndex + 2, baseIndex + 3\r\n  );\r\n}\r\n\r\n/**\r\n * Returns a texture of 1x1 pixel, white\r\n * @private\r\n * @return {ImageData} Image data.\r\n */\r\nexport function getBlankTexture() {\r\n  const canvas = document.createElement('canvas');\r\n  const image = canvas.getContext('2d').createImageData(1, 1);\r\n  image.data[0] = image.data[1] = image.data[2] = image.data[3] = 255;\r\n  return image;\r\n}\r\n\r\nexport default WebGLLayerRenderer;\r\n","/**\r\n * @module ol/format/Feature\r\n */\r\nimport {assign} from '../obj.js';\r\nimport {abstract} from '../util.js';\r\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} ReadOptions\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\r\n * If not provided, the projection will be derived from the data (where possible) or\r\n * the `dataProjection` of the format is assigned (where set). If the projection\r\n * can not be derived from the data and if no `dataProjection` is set for a format,\r\n * the features will not be reprojected.\r\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\r\n * required for {@link module:ol/format/MVT}.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\r\n * created by the format reader. If not provided, features will be returned in the\r\n * `dataProjection`.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} WriteOptions\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\r\n * If not provided, the `dataProjection` of the format is assigned (where set).\r\n * If no `dataProjection` is set for a format, the features will be returned\r\n * in the `featureProjection`.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\r\n * that will be serialized by the format writer. If not provided, geometries are assumed\r\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\r\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\r\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\r\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\r\n * as they are provided at construction.  If `true`, the right-hand rule will\r\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\r\n * exterior and counter-clockwise for interior rings).  Note that not all\r\n * formats support this.  The GeoJSON format does use this property when writing\r\n * geometries.\r\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\r\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\r\n * coordinates with a large number of decimal places, not generally wanted on output.\r\n * Set a number here to round coordinates. Can also be used to ensure that\r\n * coordinates read in can be written back out with the same number of decimals.\r\n * Default is no rounding.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for feature formats.\r\n * {FeatureFormat} subclasses provide the ability to decode and encode\r\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\r\n * file formats.  See the documentation for each format for more details.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nclass FeatureFormat {\r\n  constructor() {\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.dataProjection = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.defaultFeatureProjection = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * Adds the data projection to the read options.\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {ReadOptions=} opt_options Options.\r\n   * @return {ReadOptions|undefined} Options.\r\n   * @protected\r\n   */\r\n  getReadOptions(source, opt_options) {\r\n    let options;\r\n    if (opt_options) {\r\n      options = {\r\n        dataProjection: opt_options.dataProjection ?\r\n          opt_options.dataProjection : this.readProjection(source),\r\n        featureProjection: opt_options.featureProjection\r\n      };\r\n    }\r\n    return this.adaptOptions(options);\r\n  }\r\n\r\n  /**\r\n   * Sets the `dataProjection` on the options, if no `dataProjection`\r\n   * is set.\r\n   * @param {WriteOptions|ReadOptions|undefined} options\r\n   *     Options.\r\n   * @protected\r\n   * @return {WriteOptions|ReadOptions|undefined}\r\n   *     Updated options.\r\n   */\r\n  adaptOptions(options) {\r\n    return assign({\r\n      dataProjection: this.dataProjection,\r\n      featureProjection: this.defaultFeatureProjection\r\n    }, options);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"./FormatType.js\").default} Format.\r\n   */\r\n  getType() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read a single feature from a source.\r\n   *\r\n   * @abstract\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\r\n   */\r\n  readFeature(source, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read all features from a source.\r\n   *\r\n   * @abstract\r\n   * @param {Document|Node|ArrayBuffer|Object|string} source Source.\r\n   * @param {ReadOptions=} opt_options Read options.\r\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\r\n   */\r\n  readFeatures(source, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read a single geometry from a source.\r\n   *\r\n   * @abstract\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  readGeometry(source, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read the projection from a source.\r\n   *\r\n   * @abstract\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  readProjection(source) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode a feature in this format.\r\n   *\r\n   * @abstract\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {WriteOptions=} opt_options Write options.\r\n   * @return {string} Result.\r\n   */\r\n  writeFeature(feature, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode an array of features in this format.\r\n   *\r\n   * @abstract\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {WriteOptions=} opt_options Write options.\r\n   * @return {string} Result.\r\n   */\r\n  writeFeatures(features, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Write a single geometry in this format.\r\n   *\r\n   * @abstract\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {WriteOptions=} opt_options Write options.\r\n   * @return {string} Result.\r\n   */\r\n  writeGeometry(geometry, opt_options) {\r\n    return abstract();\r\n  }\r\n}\r\n\r\nexport default FeatureFormat;\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {boolean} write Set to true for writing, false for reading.\r\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\r\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\r\n */\r\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\r\n  const featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\r\n  const dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\r\n\r\n  let transformed;\r\n  if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\r\n    transformed = (write ? geometry.clone() : geometry).transform(\r\n      write ? featureProjection : dataProjection,\r\n      write ? dataProjection : featureProjection);\r\n  } else {\r\n    transformed = geometry;\r\n  }\r\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\r\n    const power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\r\n    // if decimals option on write, round each coordinate appropriately\r\n    /**\r\n     * @param {Array<number>} coordinates Coordinates.\r\n     * @return {Array<number>} Transformed coordinates.\r\n     */\r\n    const transform = function(coordinates) {\r\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\r\n      }\r\n      return coordinates;\r\n    };\r\n    if (transformed === geometry) {\r\n      transformed = geometry.clone();\r\n    }\r\n    transformed.applyTransform(transform);\r\n  }\r\n  return transformed;\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @param {ReadOptions=} opt_options Read options.\r\n * @return {import(\"../extent.js\").Extent} Transformed extent.\r\n */\r\nexport function transformExtentWithOptions(extent, opt_options) {\r\n  const featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\r\n  const dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\r\n\r\n  if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\r\n    return transformExtent(extent, dataProjection, featureProjection);\r\n  } else {\r\n    return extent;\r\n  }\r\n}\r\n","/**\r\n * @module ol/format/JSONFeature\r\n */\r\nimport {abstract} from '../util.js';\r\nimport FeatureFormat from './Feature.js';\r\nimport FormatType from './FormatType.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for JSON feature formats.\r\n *\r\n * @abstract\r\n */\r\nclass JSONFeature extends FeatureFormat {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getType() {\r\n    return FormatType.JSON;\r\n  }\r\n\r\n  /**\r\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\r\n   * read a feature collection.\r\n   *\r\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   * @api\r\n   */\r\n  readFeature(source, opt_options) {\r\n    return this.readFeatureFromObject(\r\n      getObject(source), this.getReadOptions(source, opt_options));\r\n  }\r\n\r\n  /**\r\n   * Read all features.  Works with both a single feature and a feature\r\n   * collection.\r\n   *\r\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @api\r\n   */\r\n  readFeatures(source, opt_options) {\r\n    return this.readFeaturesFromObject(\r\n      getObject(source), this.getReadOptions(source, opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   */\r\n  readFeatureFromObject(object, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  readFeaturesFromObject(object, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read a geometry.\r\n   *\r\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   * @api\r\n   */\r\n  readGeometry(source, opt_options) {\r\n    return this.readGeometryFromObject(\r\n      getObject(source), this.getReadOptions(source, opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  readGeometryFromObject(object, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read the projection.\r\n   *\r\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   * @api\r\n   */\r\n  readProjection(source) {\r\n    return this.readProjectionFromObject(getObject(source));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @protected\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  readProjectionFromObject(object) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode a feature as string.\r\n   *\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded feature.\r\n   * @api\r\n   */\r\n  writeFeature(feature, opt_options) {\r\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {Object} Object.\r\n   */\r\n  writeFeatureObject(feature, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode an array of features as string.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded features.\r\n   * @api\r\n   */\r\n  writeFeatures(features, opt_options) {\r\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {Object} Object.\r\n   */\r\n  writeFeaturesObject(features, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode a geometry as string.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded geometry.\r\n   * @api\r\n   */\r\n  writeGeometry(geometry, opt_options) {\r\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {Object} Object.\r\n   */\r\n  writeGeometryObject(geometry, opt_options) {\r\n    return abstract();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Document|Node|Object|string} source Source.\r\n * @return {Object} Object.\r\n */\r\nfunction getObject(source) {\r\n  if (typeof source === 'string') {\r\n    const object = JSON.parse(source);\r\n    return object ? /** @type {Object} */ (object) : null;\r\n  } else if (source !== null) {\r\n    return source;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport default JSONFeature;\r\n","/**\r\n * @module ol/geom/GeometryCollection\r\n */\r\nimport {listen, unlisten} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport {clear} from '../obj.js';\r\n\r\n/**\r\n * @classdesc\r\n * An array of {@link module:ol/geom/Geometry} objects.\r\n *\r\n * @api\r\n */\r\nclass GeometryCollection extends Geometry {\r\n\r\n  /**\r\n   * @param {Array<Geometry>=} opt_geometries Geometries.\r\n   */\r\n  constructor(opt_geometries) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Geometry>}\r\n     */\r\n    this.geometries_ = opt_geometries ? opt_geometries : null;\r\n\r\n    this.listenGeometriesChange_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  unlistenGeometriesChange_() {\r\n    if (!this.geometries_) {\r\n      return;\r\n    }\r\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\r\n      unlisten(\r\n        this.geometries_[i], EventType.CHANGE,\r\n        this.changed, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  listenGeometriesChange_() {\r\n    if (!this.geometries_) {\r\n      return;\r\n    }\r\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\r\n      listen(\r\n        this.geometries_[i], EventType.CHANGE,\r\n        this.changed, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!GeometryCollection} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    const geometryCollection = new GeometryCollection(null);\r\n    geometryCollection.setGeometries(this.geometries_);\r\n    return geometryCollection;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      minSquaredDistance = geometries[i].closestPointXY(\r\n        x, y, closestPoint, minSquaredDistance);\r\n    }\r\n    return minSquaredDistance;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  containsXY(x, y) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      if (geometries[i].containsXY(x, y)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  computeExtent(extent) {\r\n    createOrUpdateEmpty(extent);\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      extend(extent, geometries[i].getExtent());\r\n    }\r\n    return extent;\r\n  }\r\n\r\n  /**\r\n   * Return the geometries that make up this geometry collection.\r\n   * @return {Array<Geometry>} Geometries.\r\n   * @api\r\n   */\r\n  getGeometries() {\r\n    return cloneGeometries(this.geometries_);\r\n  }\r\n\r\n  /**\r\n   * @return {Array<Geometry>} Geometries.\r\n   */\r\n  getGeometriesArray() {\r\n    return this.geometries_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometry(squaredTolerance) {\r\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\r\n      clear(this.simplifiedGeometryCache);\r\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n      this.simplifiedGeometryRevision = this.getRevision();\r\n    }\r\n    if (squaredTolerance < 0 ||\r\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\r\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\r\n      return this;\r\n    }\r\n    const key = squaredTolerance.toString();\r\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\r\n      return this.simplifiedGeometryCache[key];\r\n    } else {\r\n      const simplifiedGeometries = [];\r\n      const geometries = this.geometries_;\r\n      let simplified = false;\r\n      for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n        const geometry = geometries[i];\r\n        const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\r\n        simplifiedGeometries.push(simplifiedGeometry);\r\n        if (simplifiedGeometry !== geometry) {\r\n          simplified = true;\r\n        }\r\n      }\r\n      if (simplified) {\r\n        const simplifiedGeometryCollection = new GeometryCollection(null);\r\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\r\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\r\n        return simplifiedGeometryCollection;\r\n      } else {\r\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\r\n        return this;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.GEOMETRY_COLLECTION;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      if (geometries[i].intersectsExtent(extent)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return this.geometries_.length === 0;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  rotate(angle, anchor) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].rotate(angle, anchor);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  scale(sx, opt_sy, opt_anchor) {\r\n    let anchor = opt_anchor;\r\n    if (!anchor) {\r\n      anchor = getCenter(this.getExtent());\r\n    }\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].scale(sx, opt_sy, anchor);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the geometries that make up this geometry collection.\r\n   * @param {Array<Geometry>} geometries Geometries.\r\n   * @api\r\n   */\r\n  setGeometries(geometries) {\r\n    this.setGeometriesArray(cloneGeometries(geometries));\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Geometry>} geometries Geometries.\r\n   */\r\n  setGeometriesArray(geometries) {\r\n    this.unlistenGeometriesChange_();\r\n    this.geometries_ = geometries;\r\n    this.listenGeometriesChange_();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  applyTransform(transformFn) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].applyTransform(transformFn);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  translate(deltaX, deltaY) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].translate(deltaX, deltaY);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.unlistenGeometriesChange_();\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<Geometry>} geometries Geometries.\r\n * @return {Array<Geometry>} Cloned geometries.\r\n */\r\nfunction cloneGeometries(geometries) {\r\n  const clonedGeometries = [];\r\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n    clonedGeometries.push(geometries[i].clone());\r\n  }\r\n  return clonedGeometries;\r\n}\r\n\r\n\r\nexport default GeometryCollection;\r\n","/**\r\n * @module ol/format/GeoJSON\r\n */\r\n\r\nimport {assert} from '../asserts.js';\r\nimport Feature from '../Feature.js';\r\nimport {transformGeometryWithOptions} from './Feature.js';\r\nimport JSONFeature from './JSONFeature.js';\r\nimport GeometryCollection from '../geom/GeometryCollection.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {assign, isEmpty} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\n\r\n/**\r\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\r\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\r\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\r\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\r\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\r\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\r\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\r\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\r\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\r\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\r\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\r\n * written by the format.  Options passed to read or write methods will take precedence.\r\n * @property {string} [geometryName] Geometry name to use when creating features.\r\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\r\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\r\n * will look for that field to set the geometry name. If both this field is set to `true`\r\n * and a `geometryName` is provided, the `geometryName` will take precedence.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GeoJSON format.\r\n *\r\n  * @api\r\n */\r\nclass GeoJSON extends JSONFeature {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super();\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection(\r\n      options.dataProjection ?\r\n        options.dataProjection : 'EPSG:4326');\r\n\r\n    if (options.featureProjection) {\r\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\r\n    }\r\n\r\n    /**\r\n     * Name of the geometry attribute for features.\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n    /**\r\n     * Look for the geometry name in the feature GeoJSON\r\n     * @type {boolean|undefined}\r\n     * @private\r\n     */\r\n    this.extractGeometryName_ = options.extractGeometryName;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readFeatureFromObject(object, opt_options) {\r\n    /**\r\n     * @type {GeoJSONFeature}\r\n     */\r\n    let geoJSONFeature = null;\r\n    if (object['type'] === 'Feature') {\r\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\r\n    } else {\r\n      geoJSONFeature = {\r\n        'type': 'Feature',\r\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\r\n        'properties': null\r\n      };\r\n    }\r\n\r\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\r\n    const feature = new Feature();\r\n    if (this.geometryName_) {\r\n      feature.setGeometryName(this.geometryName_);\r\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\r\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\r\n    }\r\n    feature.setGeometry(geometry);\r\n\r\n    if ('id' in geoJSONFeature) {\r\n      feature.setId(geoJSONFeature['id']);\r\n    }\r\n\r\n    if (geoJSONFeature['properties']) {\r\n      feature.setProperties(geoJSONFeature['properties'], true);\r\n    }\r\n    return feature;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readFeaturesFromObject(object, opt_options) {\r\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\r\n    /** @type {Array<import(\"../Feature.js\").default>} */\r\n    let features = null;\r\n    if (geoJSONObject['type'] === 'FeatureCollection') {\r\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\r\n      features = [];\r\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\r\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\r\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\r\n      }\r\n    } else {\r\n      features = [this.readFeatureFromObject(object, opt_options)];\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readGeometryFromObject(object, opt_options) {\r\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readProjectionFromObject(object) {\r\n    const crs = object['crs'];\r\n    let projection;\r\n    if (crs) {\r\n      if (crs['type'] == 'name') {\r\n        projection = getProjection(crs['properties']['name']);\r\n      } else {\r\n        assert(false, 36); // Unknown SRS type\r\n      }\r\n    } else {\r\n      projection = this.dataProjection;\r\n    }\r\n    return (\r\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Encode a feature as a GeoJSON Feature object.\r\n   *\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {GeoJSONFeature} Object.\r\n   * @override\r\n   * @api\r\n   */\r\n  writeFeatureObject(feature, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n\r\n    /** @type {GeoJSONFeature} */\r\n    const object = {\r\n      'type': 'Feature',\r\n      geometry: null,\r\n      properties: null\r\n    };\r\n\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      object.id = id;\r\n    }\r\n\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      object.geometry = writeGeometry(geometry, opt_options);\r\n    }\r\n\r\n    const properties = feature.getProperties();\r\n    delete properties[feature.getGeometryName()];\r\n    if (!isEmpty(properties)) {\r\n      object.properties = properties;\r\n    }\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * Encode an array of features as a GeoJSON object.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\r\n   * @override\r\n   * @api\r\n   */\r\n  writeFeaturesObject(features, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    const objects = [];\r\n    for (let i = 0, ii = features.length; i < ii; ++i) {\r\n      objects.push(this.writeFeatureObject(features[i], opt_options));\r\n    }\r\n    return {\r\n      type: 'FeatureCollection',\r\n      features: objects\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Encode a geometry as a GeoJSON object.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\r\n   * @override\r\n   * @api\r\n   */\r\n  writeGeometryObject(geometry, opt_options) {\r\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nfunction readGeometry(object, opt_options) {\r\n  if (!object) {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @type {import(\"../geom/Geometry.js\").default}\r\n   */\r\n  let geometry;\r\n  switch (object['type']) {\r\n    case GeometryType.POINT: {\r\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.LINE_STRING: {\r\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.POLYGON: {\r\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POINT: {\r\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_LINE_STRING: {\r\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POLYGON: {\r\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.GEOMETRY_COLLECTION: {\r\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\r\n    }\r\n  }\r\n  return transformGeometryWithOptions(geometry, false, opt_options);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONGeometryCollection} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {GeometryCollection} Geometry collection.\r\n */\r\nfunction readGeometryCollectionGeometry(object, opt_options) {\r\n  const geometries = object['geometries'].map(\r\n    /**\r\n     * @param {GeoJSONGeometry} geometry Geometry.\r\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     */\r\n    function(geometry) {\r\n      return readGeometry(geometry, opt_options);\r\n    });\r\n  return new GeometryCollection(geometries);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONPoint} object Object.\r\n * @return {Point} Point.\r\n */\r\nfunction readPointGeometry(object) {\r\n  return new Point(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONLineString} object Object.\r\n * @return {LineString} LineString.\r\n */\r\nfunction readLineStringGeometry(object) {\r\n  return new LineString(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONMultiLineString} object Object.\r\n * @return {MultiLineString} MultiLineString.\r\n */\r\nfunction readMultiLineStringGeometry(object) {\r\n  return new MultiLineString(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONMultiPoint} object Object.\r\n * @return {MultiPoint} MultiPoint.\r\n */\r\nfunction readMultiPointGeometry(object) {\r\n  return new MultiPoint(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONMultiPolygon} object Object.\r\n * @return {MultiPolygon} MultiPolygon.\r\n */\r\nfunction readMultiPolygonGeometry(object) {\r\n  return new MultiPolygon(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONPolygon} object Object.\r\n * @return {Polygon} Polygon.\r\n */\r\nfunction readPolygonGeometry(object) {\r\n  return new Polygon(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeGeometry(geometry, opt_options) {\r\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\r\n  const type = geometry.getType();\r\n\r\n  /** @type {GeoJSONGeometry} */\r\n  let geoJSON;\r\n  switch (type) {\r\n    case GeometryType.POINT: {\r\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.LINE_STRING: {\r\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.POLYGON: {\r\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POINT: {\r\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_LINE_STRING: {\r\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POLYGON: {\r\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.GEOMETRY_COLLECTION: {\r\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.CIRCLE: {\r\n      geoJSON = {\r\n        type: 'GeometryCollection',\r\n        geometries: []\r\n      };\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported geometry type: ' + type);\r\n    }\r\n  }\r\n  return geoJSON;\r\n}\r\n\r\n\r\n/**\r\n * @param {GeometryCollection} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\r\n */\r\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\r\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\r\n    const options = assign({}, opt_options);\r\n    delete options.featureProjection;\r\n    return writeGeometry(geometry, options);\r\n  });\r\n  return {\r\n    type: 'GeometryCollection',\r\n    geometries: geometries\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {LineString} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeLineStringGeometry(geometry, opt_options) {\r\n  return {\r\n    type: 'LineString',\r\n    coordinates: geometry.getCoordinates()\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {MultiLineString} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\r\n  return {\r\n    type: 'MultiLineString',\r\n    coordinates: geometry.getCoordinates()\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {MultiPoint} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiPointGeometry(geometry, opt_options) {\r\n  return {\r\n    type: 'MultiPoint',\r\n    coordinates: geometry.getCoordinates()\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {MultiPolygon} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\r\n  let right;\r\n  if (opt_options) {\r\n    right = opt_options.rightHanded;\r\n  }\r\n  return {\r\n    type: 'MultiPolygon',\r\n    coordinates: geometry.getCoordinates(right)\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {Point} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writePointGeometry(geometry, opt_options) {\r\n  return {\r\n    type: 'Point',\r\n    coordinates: geometry.getCoordinates()\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {Polygon} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writePolygonGeometry(geometry, opt_options) {\r\n  let right;\r\n  if (opt_options) {\r\n    right = opt_options.rightHanded;\r\n  }\r\n  return {\r\n    type: 'Polygon',\r\n    coordinates: geometry.getCoordinates(right)\r\n  };\r\n}\r\n\r\n\r\nexport default GeoJSON;\r\n","/**\r\n * @module ol/renderer/webgl/PointsLayer\r\n */\r\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\r\nimport {DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT} from '../../webgl.js';\r\nimport {DefaultAttrib, DefaultUniform} from '../../webgl/Helper.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport WebGLLayerRenderer, {getBlankTexture, pushFeatureToBuffer} from './Layer.js';\r\nimport GeoJSON from '../../format/GeoJSON.js';\r\nimport {getUid} from '../../util.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {createEmpty, equals} from '../../extent.js';\r\nimport {\r\n  create as createTransform,\r\n  makeInverse as makeInverseTransform,\r\n  multiply as multiplyTransform,\r\n  apply as applyTransform\r\n} from '../../transform.js';\r\n\r\nconst VERTEX_SHADER = `\r\n  precision mediump float;\r\n  attribute vec2 a_position;\r\n  attribute vec2 a_texCoord;\r\n  attribute float a_rotateWithView;\r\n  attribute vec2 a_offsets;\r\n  attribute float a_opacity;\r\n  attribute vec4 a_color;\r\n\r\n  uniform mat4 u_projectionMatrix;\r\n  uniform mat4 u_offsetScaleMatrix;\r\n  uniform mat4 u_offsetRotateMatrix;\r\n\r\n  varying vec2 v_texCoord;\r\n  varying float v_opacity;\r\n  varying vec4 v_color;\r\n\r\n  void main(void) {\r\n    mat4 offsetMatrix = u_offsetScaleMatrix;\r\n    if (a_rotateWithView == 1.0) {\r\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\r\n    }\r\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\r\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\r\n    v_texCoord = a_texCoord;\r\n    v_opacity = a_opacity;\r\n    v_color = a_color;\r\n  }`;\r\n\r\nconst FRAGMENT_SHADER = `\r\n  precision mediump float;\r\n\r\n  uniform sampler2D u_texture;\r\n\r\n  varying vec2 v_texCoord;\r\n  varying float v_opacity;\r\n  varying vec4 v_color;\r\n\r\n  void main(void) {\r\n    if (v_opacity == 0.0) {\r\n      discard;\r\n    }\r\n    vec4 textureColor = texture2D(u_texture, v_texCoord);\r\n    gl_FragColor = v_color * textureColor;\r\n    gl_FragColor.a *= v_opacity;\r\n    gl_FragColor.rgb *= gl_FragColor.a;\r\n  }`;\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\r\n * source to compute the size of the quad on screen (in pixels). This is only done on source change.\r\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\r\n * source to compute the coordinate of the quad center on screen (in pixels). This is only done on source change.\r\n * The second argument is 0 for `x` component and 1 for `y`.\r\n * @property {function(import(\"../../Feature\").default, number):number} [texCoordCallback] Will be called on every feature in the\r\n * source to compute the texture coordinates of each corner of the quad (without effect if no `texture` option defined). This is only done on source change.\r\n * The second argument is 0 for `u0` component, 1 for `v0`, 2 for `u1`, and 3 for `v1`.\r\n * @property {function(import(\"../../Feature\").default, Array<number>=):Array<number>} [colorCallback] Will be called on every feature in the\r\n * source to compute the color for use in the fragment shader (available as the `v_color` varying). This is only done on source change.\r\n * The return value should be between an array of R, G, B, A values between 0 and 1.  To reduce unnecessary\r\n * allocation, the function is called with a reusable array that can serve as the return value after updating\r\n * the R, G, B, and A values.\r\n * @property {function(import(\"../../Feature\").default):number} [opacityCallback] Will be called on every feature in the\r\n * source to compute the opacity of the quad on screen (from 0 to 1). This is only done on source change.\r\n * Note: this is multiplied with the color of the point which can also have an alpha value < 1.\r\n * @property {function(import(\"../../Feature\").default):boolean} [rotateWithViewCallback] Will be called on every feature in the\r\n * source to compute whether the quad on screen must stay upwards (`false`) or follow the view rotation (`true`).\r\n * This is only done on source change.\r\n * @property {HTMLCanvasElement|HTMLImageElement|ImageData} [texture] Texture to use on points. `texCoordCallback` and `sizeCallback`\r\n * must be defined for this to have any effect.\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\r\n * Please note that `u_texture` is reserved for the main texture slot.\r\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * WebGL vector renderer optimized for points.\r\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\r\n * every time the vector source changes.\r\n *\r\n * Use shaders to customize the final output. The following attributes are available:\r\n * * `vec2 a_position`\r\n * * `vec2 a_texCoord`\r\n * * `vec2 a_offsets`\r\n * * `float a_rotateWithView`\r\n * * `float a_opacity`\r\n * * `float a_color`\r\n *\r\n * The following uniform is used for the main texture: `u_texture`.\r\n *\r\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\r\n *\r\n * Points are rendered as quads with the following structure:\r\n *\r\n * ```\r\n *   (u0, v1)      (u1, v1)\r\n *  [3]----------[2]\r\n *   |`           |\r\n *   |  `         |\r\n *   |    `       |\r\n *   |      `     |\r\n *   |        `   |\r\n *   |          ` |\r\n *  [0]----------[1]\r\n *   (u0, v0)      (u1, v0)\r\n *  ```\r\n *\r\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\r\n *\r\n * Default shaders are shown hereafter:\r\n *\r\n * * Vertex shader:\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   attribute vec2 a_position;\r\n *   attribute vec2 a_texCoord;\r\n *   attribute float a_rotateWithView;\r\n *   attribute vec2 a_offsets;\r\n *   attribute float a_opacity;\r\n *   attribute vec4 a_color;\r\n *\r\n *   uniform mat4 u_projectionMatrix;\r\n *   uniform mat4 u_offsetScaleMatrix;\r\n *   uniform mat4 u_offsetRotateMatrix;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *   varying float v_opacity;\r\n *   varying vec4 v_color;\r\n *\r\n *   void main(void) {\r\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\r\n *     if (a_rotateWithView == 1.0) {\r\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\r\n *     }\r\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\r\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\r\n *     v_texCoord = a_texCoord;\r\n *     v_opacity = a_opacity;\r\n *     v_color = a_color;\r\n *   }\r\n *   ```\r\n *\r\n * * Fragment shader:\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   uniform sampler2D u_texture;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *   varying float v_opacity;\r\n *   varying vec4 v_color;\r\n *\r\n *   void main(void) {\r\n *     if (v_opacity == 0.0) {\r\n *       discard;\r\n *     }\r\n *     vec4 textureColor = texture2D(u_texture, v_texCoord);\r\n *     gl_FragColor = v_color * textureColor;\r\n *     gl_FragColor.a *= v_opacity;\r\n *     gl_FragColor.rgb *= gl_FragColor.a;\r\n *   }\r\n *   ```\r\n *\r\n * @api\r\n */\r\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\r\n   * @param {Options=} [opt_options] Options.\r\n   */\r\n  constructor(vectorLayer, opt_options) {\r\n    const options = opt_options || {};\r\n\r\n    const uniforms = options.uniforms || {};\r\n    uniforms.u_texture = options.texture || getBlankTexture();\r\n    const projectionMatrixTransform = createTransform();\r\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\r\n\r\n    super(vectorLayer, {\r\n      uniforms: uniforms,\r\n      postProcesses: options.postProcesses\r\n    });\r\n\r\n    this.sourceRevision_ = -1;\r\n\r\n    this.verticesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n    this.indicesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n\r\n    this.program_ = this.helper_.getProgram(\r\n      options.fragmentShader || FRAGMENT_SHADER,\r\n      options.vertexShader || VERTEX_SHADER\r\n    );\r\n\r\n    this.helper_.useProgram(this.program_);\r\n\r\n    this.sizeCallback_ = options.sizeCallback || function() {\r\n      return 1;\r\n    };\r\n    this.coordCallback_ = options.coordCallback || function(feature, index) {\r\n      const geom = feature.getGeometry();\r\n      return geom.getCoordinates()[index];\r\n    };\r\n    this.opacityCallback_ = options.opacityCallback || function() {\r\n      return 1;\r\n    };\r\n    this.texCoordCallback_ = options.texCoordCallback || function(feature, index) {\r\n      return index < 2 ? 0 : 1;\r\n    };\r\n\r\n    this.colorArray_ = [1, 1, 1, 1];\r\n    this.colorCallback_ = options.colorCallback || function(feature, color) {\r\n      return this.colorArray_;\r\n    };\r\n\r\n    this.rotateWithViewCallback_ = options.rotateWithViewCallback || function() {\r\n      return false;\r\n    };\r\n\r\n    this.geojsonFormat_ = new GeoJSON();\r\n\r\n    /**\r\n     * @type {Object<string, import(\"../../format/GeoJSON\").GeoJSONFeature>}\r\n     * @private\r\n     */\r\n    this.geojsonFeatureCache_ = {};\r\n\r\n    this.previousExtent_ = createEmpty();\r\n\r\n    /**\r\n     * This transform is updated on every frame and is the composition of:\r\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\r\n     * - current world->screen transform\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     * @private\r\n     */\r\n    this.currentTransform_ = projectionMatrixTransform;\r\n\r\n    /**\r\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     * @private\r\n     */\r\n    this.renderTransform_ = createTransform();\r\n\r\n    /**\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     * @private\r\n     */\r\n    this.invertRenderTransform_ = createTransform();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  renderFrame(frameState) {\r\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n    this.helper_.drawElements(0, this.indicesBuffer_.getArray().length);\r\n    this.helper_.finalizeDraw(frameState);\r\n    const canvas = this.helper_.getCanvas();\r\n\r\n    const opacity = layerState.opacity;\r\n    if (opacity !== parseFloat(canvas.style.opacity)) {\r\n      canvas.style.opacity = opacity;\r\n    }\r\n\r\n    return canvas;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState) {\r\n    const vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    const vectorSource = vectorLayer.getSource();\r\n    const viewState = frameState.viewState;\r\n\r\n    // TODO: get this from somewhere...\r\n    const stride = 12;\r\n\r\n    // the source has changed: clear the feature cache & reload features\r\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\r\n    if (sourceChanged) {\r\n      this.sourceRevision_ = vectorSource.getRevision();\r\n      this.geojsonFeatureCache_ = {};\r\n\r\n      const projection = viewState.projection;\r\n      const resolution = viewState.resolution;\r\n      vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\r\n    }\r\n\r\n    const viewNotMoving = !frameState.viewHints[ViewHint.ANIMATING] && !frameState.viewHints[ViewHint.INTERACTING];\r\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\r\n    if ((sourceChanged || extentChanged) && viewNotMoving) {\r\n      this.rebuildBuffers_(frameState);\r\n      this.previousExtent_ = frameState.extent.slice();\r\n    }\r\n\r\n    // apply the current projection transform with the invert of the one used to fill buffers\r\n    this.helper_.makeProjectionTransform(frameState, this.currentTransform_);\r\n    multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\r\n\r\n    this.helper_.prepareDraw(frameState);\r\n\r\n    // write new data\r\n    this.helper_.bindBuffer(ARRAY_BUFFER, this.verticesBuffer_);\r\n    this.helper_.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\r\n\r\n    const bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\r\n    this.helper_.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * stride, 0);\r\n    this.helper_.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 2);\r\n    this.helper_.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 4);\r\n    this.helper_.enableAttributeArray(DefaultAttrib.OPACITY, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 6);\r\n    this.helper_.enableAttributeArray(DefaultAttrib.ROTATE_WITH_VIEW, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 7);\r\n    this.helper_.enableAttributeArray(DefaultAttrib.COLOR, 4, FLOAT, bytesPerFloat * stride, bytesPerFloat * 8);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\r\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  rebuildBuffers_(frameState) {\r\n    const vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    const vectorSource = vectorLayer.getSource();\r\n\r\n    this.verticesBuffer_.getArray().length = 0;\r\n    this.indicesBuffer_.getArray().length = 0;\r\n\r\n    // saves the projection transform for the current frame state\r\n    this.helper_.makeProjectionTransform(frameState, this.renderTransform_);\r\n    makeInverseTransform(this.invertRenderTransform_, this.renderTransform_);\r\n\r\n    // loop on features to fill the buffer\r\n    const features = vectorSource.getFeatures();\r\n    let feature;\r\n    for (let i = 0; i < features.length; i++) {\r\n      feature = features[i];\r\n      if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\r\n        continue;\r\n      }\r\n\r\n      let geojsonFeature = this.geojsonFeatureCache_[getUid(feature)];\r\n      if (!geojsonFeature) {\r\n        geojsonFeature = this.geojsonFormat_.writeFeatureObject(feature);\r\n        this.geojsonFeatureCache_[getUid(feature)] = geojsonFeature;\r\n      }\r\n\r\n      geojsonFeature.geometry.coordinates[0] = this.coordCallback_(feature, 0);\r\n      geojsonFeature.geometry.coordinates[1] = this.coordCallback_(feature, 1);\r\n      applyTransform(this.renderTransform_, geojsonFeature.geometry.coordinates);\r\n      geojsonFeature.properties = geojsonFeature.properties || {};\r\n      geojsonFeature.properties.color = this.colorCallback_(feature, this.colorArray_);\r\n      geojsonFeature.properties.u0 = this.texCoordCallback_(feature, 0);\r\n      geojsonFeature.properties.v0 = this.texCoordCallback_(feature, 1);\r\n      geojsonFeature.properties.u1 = this.texCoordCallback_(feature, 2);\r\n      geojsonFeature.properties.v1 = this.texCoordCallback_(feature, 3);\r\n      geojsonFeature.properties.size = this.sizeCallback_(feature);\r\n      geojsonFeature.properties.opacity = this.opacityCallback_(feature);\r\n      geojsonFeature.properties.rotateWithView = this.rotateWithViewCallback_(feature) ? 1 : 0;\r\n\r\n      pushFeatureToBuffer(this.verticesBuffer_, this.indicesBuffer_, geojsonFeature);\r\n    }\r\n\r\n    this.helper_.flushBufferData(ARRAY_BUFFER, this.verticesBuffer_);\r\n    this.helper_.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\r\n  }\r\n}\r\n\r\nexport default WebGLPointsLayerRenderer;\r\n","/**\r\n * @module ol/layer/Heatmap\r\n */\r\nimport {listen} from '../events.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport VectorLayer from './Vector.js';\r\nimport {assign} from '../obj.js';\r\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\r\n * of the heatmap, specified as an array of CSS color strings.\r\n * @property {number} [radius=8] Radius size in pixels.\r\n * @property {number} [blur=15] Blur size in pixels.\r\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\r\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\r\n * should range from 0 to 1 (and values outside will be clamped to that range).\r\n * @property {import(\"../source/Vector.js\").default} [source] Source.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  BLUR: 'blur',\r\n  GRADIENT: 'gradient',\r\n  RADIUS: 'radius'\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer for rendering vector data as a heatmap.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent\r\n * @api\r\n */\r\nclass Heatmap extends VectorLayer {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.gradient;\r\n    delete baseOptions.radius;\r\n    delete baseOptions.blur;\r\n    delete baseOptions.weight;\r\n    super(baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.gradient_ = null;\r\n\r\n    listen(this,\r\n      getChangeEventType(Property.GRADIENT),\r\n      this.handleGradientChanged_, this);\r\n\r\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\r\n\r\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\r\n\r\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\r\n\r\n    const weight = options.weight ? options.weight : 'weight';\r\n    if (typeof weight === 'string') {\r\n      this.weightFunction_ = function(feature) {\r\n        return feature.get(weight);\r\n      };\r\n    } else {\r\n      this.weightFunction_ = weight;\r\n    }\r\n\r\n    // For performance reasons, don't sort the features before rendering.\r\n    // The render order is not relevant for a heatmap representation.\r\n    this.setRenderOrder(null);\r\n  }\r\n\r\n  /**\r\n   * Return the blur size in pixels.\r\n   * @return {number} Blur size in pixels.\r\n   * @api\r\n   * @observable\r\n   */\r\n  getBlur() {\r\n    return /** @type {number} */ (this.get(Property.BLUR));\r\n  }\r\n\r\n  /**\r\n   * Return the gradient colors as array of strings.\r\n   * @return {Array<string>} Colors.\r\n   * @api\r\n   * @observable\r\n   */\r\n  getGradient() {\r\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\r\n  }\r\n\r\n  /**\r\n   * Return the size of the radius in pixels.\r\n   * @return {number} Radius size in pixel.\r\n   * @api\r\n   * @observable\r\n   */\r\n  getRadius() {\r\n    return /** @type {number} */ (this.get(Property.RADIUS));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleGradientChanged_() {\r\n    this.gradient_ = createGradient(this.getGradient());\r\n  }\r\n\r\n  /**\r\n   * Set the blur size in pixels.\r\n   * @param {number} blur Blur size in pixels.\r\n   * @api\r\n   * @observable\r\n   */\r\n  setBlur(blur) {\r\n    this.set(Property.BLUR, blur);\r\n  }\r\n\r\n  /**\r\n   * Set the gradient colors as array of strings.\r\n   * @param {Array<string>} colors Gradient.\r\n   * @api\r\n   * @observable\r\n   */\r\n  setGradient(colors) {\r\n    this.set(Property.GRADIENT, colors);\r\n  }\r\n\r\n  /**\r\n   * Set the size of the radius in pixels.\r\n   * @param {number} radius Radius size in pixel.\r\n   * @api\r\n   * @observable\r\n   */\r\n  setRadius(radius) {\r\n    this.set(Property.RADIUS, radius);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  createRenderer() {\r\n    return new WebGLPointsLayerRenderer(this, {\r\n      vertexShader: `\r\n        precision mediump float;\r\n        attribute vec2 a_position;\r\n        attribute vec2 a_texCoord;\r\n        attribute float a_rotateWithView;\r\n        attribute vec2 a_offsets;\r\n        attribute float a_opacity;\r\n\r\n        uniform mat4 u_projectionMatrix;\r\n        uniform mat4 u_offsetScaleMatrix;\r\n        uniform mat4 u_offsetRotateMatrix;\r\n        uniform float u_size;\r\n\r\n        varying vec2 v_texCoord;\r\n        varying float v_opacity;\r\n\r\n        void main(void) {\r\n          mat4 offsetMatrix = u_offsetScaleMatrix;\r\n          if (a_rotateWithView == 1.0) {\r\n            offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\r\n          }\r\n          vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\r\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets * u_size;\r\n          v_texCoord = a_texCoord;\r\n          v_opacity = a_opacity;\r\n        }`,\r\n      fragmentShader: `\r\n        precision mediump float;\r\n        uniform float u_resolution;\r\n        uniform float u_blurSlope;\r\n\r\n        varying vec2 v_texCoord;\r\n        varying float v_opacity;\r\n\r\n        void main(void) {\r\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\r\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\r\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\r\n          float alpha = smoothstep(0.0, 1.0, value) * v_opacity;\r\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\r\n        }`,\r\n      uniforms: {\r\n        u_size: function() {\r\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\r\n        }.bind(this),\r\n        u_blurSlope: function() {\r\n          return this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR));\r\n        }.bind(this),\r\n        u_resolution: function(frameState) {\r\n          return frameState.viewState.resolution;\r\n        }\r\n      },\r\n      postProcesses: [\r\n        {\r\n          fragmentShader: `\r\n            precision mediump float;\r\n\r\n            uniform sampler2D u_image;\r\n            uniform sampler2D u_gradientTexture;\r\n\r\n            varying vec2 v_texCoord;\r\n            varying vec2 v_screenCoord;\r\n\r\n            void main() {\r\n              vec4 color = texture2D(u_image, v_texCoord);\r\n              gl_FragColor.a = color.a;\r\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\r\n              gl_FragColor.rgb *= gl_FragColor.a;\r\n            }`,\r\n          uniforms: {\r\n            u_gradientTexture: this.gradient_\r\n          }\r\n        }\r\n      ],\r\n      opacityCallback: this.weightFunction_\r\n    });\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<string>} colors A list of colored.\r\n * @return {HTMLCanvasElement} canvas with gradient texture.\r\n */\r\nfunction createGradient(colors) {\r\n  const width = 1;\r\n  const height = 256;\r\n  const context = createCanvasContext2D(width, height);\r\n\r\n  const gradient = context.createLinearGradient(0, 0, width, height);\r\n  const step = 1 / (colors.length - 1);\r\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\r\n    gradient.addColorStop(i * step, colors[i]);\r\n  }\r\n\r\n  context.fillStyle = gradient;\r\n  context.fillRect(0, 0, width, height);\r\n\r\n  return context.canvas;\r\n}\r\n\r\n\r\nexport default Heatmap;\r\n","/**\r\n * @module ol/layer/BaseImage\r\n */\r\nimport Layer from './Layer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Server-rendered images that are available for arbitrary extents and\r\n * resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @extends {Layer<import(\"../source/Image.js\").default>}\r\n * @api\r\n */\r\nclass BaseImageLayer extends Layer {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Layer options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n    super(options);\r\n  }\r\n\r\n}\r\n\r\nexport default BaseImageLayer;\r\n","/**\r\n * @module ol/reproj/common\r\n */\r\n\r\n/**\r\n * Default maximum allowed threshold  (in pixels) for reprojection\r\n * triangulation.\r\n * @type {number}\r\n */\r\nexport const ERROR_THRESHOLD = 0.5;\r\n\r\n/**\r\n * Enable automatic reprojection of raster sources. Default is `true`.\r\n * TODO: decide if we want to expose this as a build flag or remove it\r\n * @type {boolean}\r\n */\r\nexport const ENABLE_RASTER_REPROJECTION = true;\r\n","/**\r\n * @module ol/renderer/canvas/ImageLayer\r\n */\r\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {containsExtent, intersects} from '../../extent.js';\r\nimport {getIntersection, isEmpty} from '../../extent.js';\r\nimport CanvasLayerRenderer from './Layer.js';\r\nimport {compose as composeTransform, makeInverse, toString as transformToString} from '../../transform.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for image layers.\r\n * @api\r\n */\r\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\r\n   */\r\n  constructor(imageLayer) {\r\n    super(imageLayer);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?import(\"../../ImageBase.js\").default}\r\n     */\r\n    this.image_ = null;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getImage() {\r\n    return !this.image_ ? null : this.image_.getImage();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState) {\r\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const viewState = frameState.viewState;\r\n    const viewResolution = viewState.resolution;\r\n\r\n    const imageSource = this.getLayer().getSource();\r\n\r\n    const hints = frameState.viewHints;\r\n\r\n    let renderedExtent = frameState.extent;\r\n    if (layerState.extent !== undefined) {\r\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\r\n    }\r\n\r\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\r\n      let projection = viewState.projection;\r\n      if (!ENABLE_RASTER_REPROJECTION) {\r\n        const sourceProjection = imageSource.getProjection();\r\n        if (sourceProjection) {\r\n          projection = sourceProjection;\r\n        }\r\n      }\r\n      const image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\r\n      if (image && this.loadImage(image)) {\r\n        this.image_ = image;\r\n      }\r\n    }\r\n\r\n    return !!this.image_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  renderFrame(frameState, target) {\r\n    const image = this.image_;\r\n    const imageExtent = image.getExtent();\r\n    const imageResolution = image.getResolution();\r\n    const imagePixelRatio = image.getPixelRatio();\r\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const viewState = frameState.viewState;\r\n    const viewCenter = viewState.center;\r\n    const viewResolution = viewState.resolution;\r\n    const size = frameState.size;\r\n    const scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\r\n\r\n    let width = Math.round(size[0] * pixelRatio);\r\n    let height = Math.round(size[1] * pixelRatio);\r\n    const rotation = viewState.rotation;\r\n    if (rotation) {\r\n      const size = Math.round(Math.sqrt(width * width + height * height));\r\n      width = height = size;\r\n    }\r\n\r\n    // set forward and inverse pixel transforms\r\n    composeTransform(this.pixelTransform_,\r\n      frameState.size[0] / 2, frameState.size[1] / 2,\r\n      1 / pixelRatio, 1 / pixelRatio,\r\n      rotation,\r\n      -width / 2, -height / 2\r\n    );\r\n    makeInverse(this.inversePixelTransform_, this.pixelTransform_);\r\n\r\n    this.useContainer(target, this.pixelTransform_, layerState.opacity);\r\n\r\n    const context = this.context;\r\n    const canvas = context.canvas;\r\n\r\n    if (canvas.width != width || canvas.height != height) {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n    } else if (!this.containerReused) {\r\n      context.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    // clipped rendering if layer extent is set\r\n    const extent = layerState.extent;\r\n    const clipped = extent !== undefined &&\r\n          !containsExtent(extent, frameState.extent) &&\r\n          intersects(extent, frameState.extent);\r\n    if (clipped) {\r\n      this.clip(context, frameState, extent);\r\n    }\r\n\r\n    const img = image.getImage();\r\n\r\n    const transform = composeTransform(this.tempTransform_,\r\n      width / 2, height / 2,\r\n      scale, scale,\r\n      0,\r\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\r\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\r\n\r\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\r\n\r\n    const dx = transform[4];\r\n    const dy = transform[5];\r\n    const dw = img.width * transform[0];\r\n    const dh = img.height * transform[3];\r\n\r\n    this.preRender(context, frameState);\r\n    if (dw >= 0.5 && dh >= 0.5) {\r\n      const opacity = layerState.opacity;\r\n      let previousAlpha;\r\n      if (opacity !== 1) {\r\n        previousAlpha = this.context.globalAlpha;\r\n        this.context.globalAlpha = opacity;\r\n      }\r\n      this.context.drawImage(img, 0, 0, +img.width, +img.height,\r\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\r\n      if (opacity !== 1) {\r\n        this.context.globalAlpha = previousAlpha;\r\n      }\r\n    }\r\n    this.postRender(context, frameState);\r\n\r\n    if (clipped) {\r\n      context.restore();\r\n    }\r\n\r\n    const canvasTransform = transformToString(this.pixelTransform_);\r\n    if (canvasTransform !== canvas.style.transform) {\r\n      canvas.style.transform = canvasTransform;\r\n    }\r\n\r\n    return this.container;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default CanvasImageLayerRenderer;\r\n","/**\r\n * @module ol/layer/Image\r\n */\r\nimport BaseImageLayer from './BaseImage.js';\r\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\r\n\r\n\r\n/**\r\n * @typedef {import(\"./BaseImage.js\").Options} Options\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Server-rendered images that are available for arbitrary extents and\r\n * resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nclass ImageLayer extends BaseImageLayer {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Layer options.\r\n   */\r\n  constructor(opt_options) {\r\n    super(opt_options);\r\n  }\r\n\r\n  /**\r\n   * Create a renderer for this layer.\r\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n   * @protected\r\n   */\r\n  createRenderer() {\r\n    return new CanvasImageLayerRenderer(this);\r\n  }\r\n\r\n}\r\n\r\nexport default ImageLayer;\r\n","/**\r\n * @module ol/layer/TileProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  PRELOAD: 'preload',\r\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\r\n};\r\n","/**\r\n * @module ol/layer/BaseTile\r\n */\r\nimport Layer from './Layer.js';\r\nimport TileProperty from './TileProperty.js';\r\nimport {assign} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @extends {Layer<import(\"../source/Tile.js\").default>}\r\n * @api\r\n */\r\nclass BaseTileLayer extends Layer {\r\n  /**\r\n   * @param {Options=} opt_options Tile layer options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.preload;\r\n    delete baseOptions.useInterimTilesOnError;\r\n    super(baseOptions);\r\n\r\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\r\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\r\n      options.useInterimTilesOnError : true);\r\n\r\n  }\r\n\r\n  /**\r\n  * Return the level as number to which we will preload tiles up to.\r\n  * @return {number} The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  getPreload() {\r\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n  }\r\n\r\n  /**\r\n  * Set the level as number to which we will preload tiles up to.\r\n  * @param {number} preload The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  setPreload(preload) {\r\n    this.set(TileProperty.PRELOAD, preload);\r\n  }\r\n\r\n  /**\r\n  * Whether we use interim tiles on error.\r\n  * @return {boolean} Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  getUseInterimTilesOnError() {\r\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\r\n  }\r\n\r\n  /**\r\n  * Set whether we use interim tiles on error.\r\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  setUseInterimTilesOnError(useInterimTilesOnError) {\r\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n  }\r\n}\r\n\r\n\r\nexport default BaseTileLayer;\r\n","/**\r\n * @module ol/TileRange\r\n */\r\n\r\n/**\r\n * A representation of a contiguous block of tiles.  A tile range is specified\r\n * by its min/max tile coordinates and is inclusive of coordinates.\r\n */\r\nclass TileRange {\r\n\r\n  /**\r\n   * @param {number} minX Minimum X.\r\n   * @param {number} maxX Maximum X.\r\n   * @param {number} minY Minimum Y.\r\n   * @param {number} maxY Maximum Y.\r\n   */\r\n  constructor(minX, maxX, minY, maxY) {\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.minX = minX;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.maxX = maxX;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.minY = minY;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.maxY = maxY;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @return {boolean} Contains tile coordinate.\r\n   */\r\n  contains(tileCoord) {\r\n    return this.containsXY(tileCoord[1], tileCoord[2]);\r\n  }\r\n\r\n  /**\r\n   * @param {TileRange} tileRange Tile range.\r\n   * @return {boolean} Contains.\r\n   */\r\n  containsTileRange(tileRange) {\r\n    return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\r\n       this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @return {boolean} Contains coordinate.\r\n   */\r\n  containsXY(x, y) {\r\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\r\n  }\r\n\r\n  /**\r\n   * @param {TileRange} tileRange Tile range.\r\n   * @return {boolean} Equals.\r\n   */\r\n  equals(tileRange) {\r\n    return this.minX == tileRange.minX && this.minY == tileRange.minY &&\r\n       this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\r\n  }\r\n\r\n  /**\r\n   * @param {TileRange} tileRange Tile range.\r\n   */\r\n  extend(tileRange) {\r\n    if (tileRange.minX < this.minX) {\r\n      this.minX = tileRange.minX;\r\n    }\r\n    if (tileRange.maxX > this.maxX) {\r\n      this.maxX = tileRange.maxX;\r\n    }\r\n    if (tileRange.minY < this.minY) {\r\n      this.minY = tileRange.minY;\r\n    }\r\n    if (tileRange.maxY > this.maxY) {\r\n      this.maxY = tileRange.maxY;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {number} Height.\r\n   */\r\n  getHeight() {\r\n    return this.maxY - this.minY + 1;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"./size.js\").Size} Size.\r\n   */\r\n  getSize() {\r\n    return [this.getWidth(), this.getHeight()];\r\n  }\r\n\r\n  /**\r\n   * @return {number} Width.\r\n   */\r\n  getWidth() {\r\n    return this.maxX - this.minX + 1;\r\n  }\r\n\r\n  /**\r\n   * @param {TileRange} tileRange Tile range.\r\n   * @return {boolean} Intersects.\r\n   */\r\n  intersects(tileRange) {\r\n    return this.minX <= tileRange.maxX &&\r\n       this.maxX >= tileRange.minX &&\r\n       this.minY <= tileRange.maxY &&\r\n       this.maxY >= tileRange.minY;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {number} minX Minimum X.\r\n * @param {number} maxX Maximum X.\r\n * @param {number} minY Minimum Y.\r\n * @param {number} maxY Maximum Y.\r\n * @param {TileRange=} tileRange TileRange.\r\n * @return {TileRange} Tile range.\r\n */\r\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\r\n  if (tileRange !== undefined) {\r\n    tileRange.minX = minX;\r\n    tileRange.maxX = maxX;\r\n    tileRange.minY = minY;\r\n    tileRange.maxY = maxY;\r\n    return tileRange;\r\n  } else {\r\n    return new TileRange(minX, maxX, minY, maxY);\r\n  }\r\n}\r\n\r\n\r\nexport default TileRange;\r\n","/**\r\n * @module ol/renderer/canvas/TileLayer\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport TileRange from '../../TileRange.js';\r\nimport TileState from '../../TileState.js';\r\nimport {createEmpty, equals, getIntersection, getTopLeft} from '../../extent.js';\r\nimport CanvasLayerRenderer from './Layer.js';\r\nimport {apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString} from '../../transform.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for tile layers.\r\n * @api\r\n */\r\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\r\n   */\r\n  constructor(tileLayer) {\r\n    super(tileLayer);\r\n\r\n    /**\r\n     * Rendered extent has changed since the previous `renderFrame()` call\r\n     * @type {boolean}\r\n     */\r\n    this.extentChanged = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.renderedExtent_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<import(\"../../Tile.js\").default>}\r\n     */\r\n    this.renderedTiles = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.newTiles_ = false;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.tmpExtent = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../TileRange.js\").default}\r\n     */\r\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.zDirection = 0;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @return {boolean} Tile is drawable.\r\n   */\r\n  isDrawableTile(tile) {\r\n    const tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n    const tileState = tile.getState();\r\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\r\n    return tileState == TileState.LOADED ||\r\n        tileState == TileState.EMPTY ||\r\n        tileState == TileState.ERROR && !useInterimTilesOnError;\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @return {!import(\"../../Tile.js\").default} Tile.\r\n   */\r\n  getTile(z, x, y, frameState) {\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const projection = frameState.viewState.projection;\r\n    const tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n    const tileSource = tileLayer.getSource();\r\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n    if (tile.getState() == TileState.ERROR) {\r\n      if (!tileLayer.getUseInterimTilesOnError()) {\r\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\r\n        tile.setState(TileState.LOADED);\r\n      } else if (tileLayer.getPreload() > 0) {\r\n        // Preloaded tiles for lower resolutions might have finished loading.\r\n        this.newTiles_ = true;\r\n      }\r\n    }\r\n    if (!this.isDrawableTile(tile)) {\r\n      tile = tile.getInterimTile();\r\n    }\r\n    return tile;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  loadedTileCallback(tiles, zoom, tile) {\r\n    if (this.isDrawableTile(tile)) {\r\n      return super.loadedTileCallback(tiles, zoom, tile);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * TODO: File a TypeScript issue about inheritDoc not being followed\r\n   * all the way.  Without this explicit return type, the VectorTileLayer\r\n   * renderFrame function does not pass.\r\n   *\r\n   * @inheritDoc\r\n   * @returns {HTMLElement} The rendered element.\r\n   */\r\n  renderFrame(frameState, target) {\r\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n    const viewResolution = viewState.resolution;\r\n    const viewCenter = viewState.center;\r\n    const rotation = viewState.rotation;\r\n    const pixelRatio = frameState.pixelRatio;\r\n\r\n    const tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n    const tileSource = tileLayer.getSource();\r\n    const sourceRevision = tileSource.getRevision();\r\n    const tileGrid = tileSource.getTileGridForProjection(projection);\r\n    const zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\r\n    const z = tileGrid.getZForResolution(viewResolution, zDirection);\r\n    const tileResolution = tileGrid.getResolution(z);\r\n    let extent = frameState.extent;\r\n\r\n    if (layerState.extent) {\r\n      extent = getIntersection(extent, layerState.extent);\r\n    }\r\n\r\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\r\n\r\n    // desired dimensions of the canvas in pixels\r\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\r\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\r\n\r\n    if (rotation) {\r\n      const size = Math.round(Math.sqrt(width * width + height * height));\r\n      width = height = size;\r\n    }\r\n\r\n    const dx = tileResolution * width / 2 / tilePixelRatio;\r\n    const dy = tileResolution * height / 2 / tilePixelRatio;\r\n    const canvasExtent = [\r\n      viewCenter[0] - dx,\r\n      viewCenter[1] - dy,\r\n      viewCenter[0] + dx,\r\n      viewCenter[1] + dy\r\n    ];\r\n\r\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n\r\n    /**\r\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\r\n     */\r\n    const tilesToDrawByZ = {};\r\n    tilesToDrawByZ[z] = {};\r\n\r\n    const findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\r\n\r\n    const tmpExtent = this.tmpExtent;\r\n    const tmpTileRange = this.tmpTileRange_;\r\n    this.newTiles_ = false;\r\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n        const tile = this.getTile(z, x, y, frameState);\r\n        if (this.isDrawableTile(tile)) {\r\n          const uid = getUid(this);\r\n          if (tile.getState() == TileState.LOADED) {\r\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\r\n            const inTransition = tile.inTransition(uid);\r\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\r\n              this.newTiles_ = true;\r\n            }\r\n          }\r\n          if (tile.getAlpha(uid, frameState.time) === 1) {\r\n            // don't look for alt tiles if alpha is 1\r\n            continue;\r\n          }\r\n        }\r\n\r\n        const childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\r\n\r\n        let covered = false;\r\n        if (childTileRange) {\r\n          covered = findLoadedTiles(z + 1, childTileRange);\r\n        }\r\n        if (!covered) {\r\n          tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n\r\n    const canvasScale = tileResolution / viewResolution;\r\n\r\n    // set forward and inverse pixel transforms\r\n    composeTransform(this.pixelTransform_,\r\n      frameState.size[0] / 2, frameState.size[1] / 2,\r\n      1 / tilePixelRatio, 1 / tilePixelRatio,\r\n      rotation,\r\n      -width / 2, -height / 2\r\n    );\r\n\r\n    this.useContainer(target, this.pixelTransform_, layerState.opacity);\r\n    const context = this.context;\r\n    const canvas = context.canvas;\r\n\r\n    makeInverse(this.inversePixelTransform_, this.pixelTransform_);\r\n\r\n    // set scale transform for calculating tile positions on the canvas\r\n    composeTransform(this.tempTransform_,\r\n      width / 2, height / 2,\r\n      canvasScale, canvasScale,\r\n      0,\r\n      -width / 2, -height / 2\r\n    );\r\n\r\n    if (canvas.width != width || canvas.height != height) {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n    } else if (!this.containerReused) {\r\n      context.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    if (layerState.extent) {\r\n      this.clipUnrotated(context, frameState, layerState.extent);\r\n    }\r\n\r\n    this.preRender(context, frameState);\r\n\r\n    this.renderedTiles.length = 0;\r\n    /** @type {Array<number>} */\r\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\r\n    zs.sort(function(a, b) {\r\n      if (a === z) {\r\n        return 1;\r\n      } else if (b === z) {\r\n        return -1;\r\n      } else {\r\n        return a > b ? 1 : a < b ? -1 : 0;\r\n      }\r\n    });\r\n\r\n    let clips, clipZs, currentClip;\r\n    if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\r\n      zs = zs.reverse();\r\n    } else {\r\n      clips = [];\r\n      clipZs = [];\r\n    }\r\n    for (let i = zs.length - 1; i >= 0; --i) {\r\n      const currentZ = zs[i];\r\n      const currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\r\n      const currentResolution = tileGrid.getResolution(currentZ);\r\n      const currentScale = currentResolution / tileResolution;\r\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\r\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\r\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\r\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\r\n      const origin = applyTransform(this.tempTransform_, [\r\n        tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\r\n        tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\r\n      ]);\r\n      const tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\r\n      const tilesToDraw = tilesToDrawByZ[currentZ];\r\n      for (const tileCoordKey in tilesToDraw) {\r\n        const tile = tilesToDraw[tileCoordKey];\r\n        const tileCoord = tile.tileCoord;\r\n\r\n        // Calculate integer positions and sizes so that tiles align\r\n        const floatX = (origin[0] - (originTileCoord[1] - tileCoord[1]) * dx);\r\n        const nextX = Math.round(floatX + dx);\r\n        const floatY = (origin[1] - (originTileCoord[2] - tileCoord[2]) * dy);\r\n        const nextY = Math.round(floatY + dy);\r\n        const x = Math.round(floatX);\r\n        const y = Math.round(floatY);\r\n        const w = nextX - x;\r\n        const h = nextY - y;\r\n        const transition = z === currentZ;\r\n\r\n        if (clips && (!transition || tile.getAlpha(getUid(this), frameState.time) === 1)) {\r\n        // Clip mask for regions in this tile that already filled by a higher z tile\r\n          context.save();\r\n          currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\r\n          for (let i = 0, ii = clips.length; i < ii; ++i) {\r\n            if (z !== currentZ && currentZ < clipZs[i]) {\r\n              const clip = clips[i];\r\n              context.beginPath();\r\n              // counter-clockwise (outer ring) for current tile\r\n              context.moveTo(currentClip[0], currentClip[1]);\r\n              context.lineTo(currentClip[2], currentClip[3]);\r\n              context.lineTo(currentClip[4], currentClip[5]);\r\n              context.lineTo(currentClip[6], currentClip[7]);\r\n              // clockwise (inner ring) for higher z tile\r\n              context.moveTo(clip[6], clip[7]);\r\n              context.lineTo(clip[4], clip[5]);\r\n              context.lineTo(clip[2], clip[3]);\r\n              context.lineTo(clip[0], clip[1]);\r\n              context.clip();\r\n            }\r\n          }\r\n          clips.push(currentClip);\r\n          clipZs.push(currentZ);\r\n        }\r\n        this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\r\n        if (clips) {\r\n          context.restore();\r\n        }\r\n        this.renderedTiles.push(tile);\r\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\r\n      }\r\n    }\r\n\r\n\r\n    this.renderedRevision = sourceRevision;\r\n    this.renderedResolution = tileResolution;\r\n    this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\r\n    this.renderedExtent_ = canvasExtent;\r\n\r\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\r\n      projection, extent, z, tileLayer.getPreload());\r\n    this.updateCacheSize_(frameState, tileSource);\r\n    this.scheduleExpireCache(frameState, tileSource);\r\n\r\n    this.postRender(context, frameState);\r\n\r\n    if (layerState.extent) {\r\n      context.restore();\r\n    }\r\n\r\n    const canvasTransform = transformToString(this.pixelTransform_);\r\n    if (canvasTransform !== canvas.style.transform) {\r\n      canvas.style.transform = canvasTransform;\r\n    }\r\n\r\n    return this.container;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {number} x Left of the tile.\r\n   * @param {number} y Top of the tile.\r\n   * @param {number} w Width of the tile.\r\n   * @param {number} h Height of the tile.\r\n   * @param {number} gutter Tile gutter.\r\n   * @param {boolean} transition Apply an alpha transition.\r\n   * @param {number} opacity Opacity.\r\n   */\r\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\r\n    const image = this.getTileImage(tile);\r\n    if (!image) {\r\n      return;\r\n    }\r\n    const uid = getUid(this);\r\n    const alpha = opacity * (transition ? tile.getAlpha(uid, frameState.time) : 1);\r\n    const alphaChanged = alpha !== this.context.globalAlpha;\r\n    if (alphaChanged) {\r\n      this.context.save();\r\n      this.context.globalAlpha = alpha;\r\n    }\r\n    this.context.drawImage(image, gutter, gutter,\r\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\r\n\r\n    if (alphaChanged) {\r\n      this.context.restore();\r\n    }\r\n    if (alpha !== 1) {\r\n      frameState.animate = true;\r\n    } else if (transition) {\r\n      tile.endTransition(uid);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getImage() {\r\n    const context = this.context;\r\n    return context ? context.canvas : null;\r\n  }\r\n\r\n  /**\r\n   * Get the image from a tile.\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n   * @protected\r\n   */\r\n  getTileImage(tile) {\r\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\r\n   * @protected\r\n   */\r\n  scheduleExpireCache(frameState, tileSource) {\r\n    if (tileSource.canExpireCache()) {\r\n      /**\r\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\r\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\r\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n       */\r\n      const postRenderFunction = function(tileSource, map, frameState) {\r\n        const tileSourceKey = getUid(tileSource);\r\n        if (tileSourceKey in frameState.usedTiles) {\r\n          tileSource.expireCache(frameState.viewState.projection,\r\n            frameState.usedTiles[tileSourceKey]);\r\n        }\r\n      }.bind(null, tileSource);\r\n\r\n      frameState.postRenderFunctions.push(\r\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\r\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\r\n   * @param {import('../../Tile.js').default} tile Tile.\r\n   * @protected\r\n   */\r\n  updateUsedTiles(usedTiles, tileSource, tile) {\r\n    // FIXME should we use tilesToDrawByZ instead?\r\n    const tileSourceKey = getUid(tileSource);\r\n    if (!(tileSourceKey in usedTiles)) {\r\n      usedTiles[tileSourceKey] = {};\r\n    }\r\n    usedTiles[tileSourceKey][tile.getKey()] = true;\r\n  }\r\n\r\n  /**\r\n   * Check if the cache is big enough, and increase its size if necessary.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\r\n   * @private\r\n   */\r\n  updateCacheSize_(frameState, tileSource) {\r\n    const tileSourceKey = getUid(tileSource);\r\n    let size = 0;\r\n    if (tileSourceKey in frameState.usedTiles) {\r\n      size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\r\n    }\r\n    if (tileSourceKey in frameState.wantedTiles) {\r\n      size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\r\n    }\r\n    const tileCache = tileSource.tileCache;\r\n    if (tileCache.highWaterMark < size) {\r\n      tileCache.highWaterMark = size;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manage tile pyramid.\r\n   * This function performs a number of functions related to the tiles at the\r\n   * current zoom and lower zoom levels:\r\n   * - registers idle tiles in frameState.wantedTiles so that they are not\r\n   *   discarded by the tile queue\r\n   * - enqueues missing tiles\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\r\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n   * @param {number} currentZ Current Z.\r\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\r\n   * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\r\n   * @protected\r\n   */\r\n  manageTilePyramid(\r\n    frameState,\r\n    tileSource,\r\n    tileGrid,\r\n    pixelRatio,\r\n    projection,\r\n    extent,\r\n    currentZ,\r\n    preload,\r\n    opt_tileCallback\r\n  ) {\r\n    const tileSourceKey = getUid(tileSource);\r\n    if (!(tileSourceKey in frameState.wantedTiles)) {\r\n      frameState.wantedTiles[tileSourceKey] = {};\r\n    }\r\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\r\n    const tileQueue = frameState.tileQueue;\r\n    const minZoom = tileGrid.getMinZoom();\r\n    let tile, tileRange, tileResolution, x, y, z;\r\n    for (z = minZoom; z <= currentZ; ++z) {\r\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\r\n      tileResolution = tileGrid.getResolution(z);\r\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n          if (currentZ - z <= preload) {\r\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n            if (tile.getState() == TileState.IDLE) {\r\n              wantedTiles[tile.getKey()] = true;\r\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\r\n                tileQueue.enqueue([tile, tileSourceKey,\r\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\r\n              }\r\n            }\r\n            if (opt_tileCallback !== undefined) {\r\n              opt_tileCallback(tile);\r\n            }\r\n          } else {\r\n            tileSource.useTile(z, x, y, projection);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @function\r\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\r\n */\r\nCanvasTileLayerRenderer.prototype.getLayer;\r\n\r\n\r\nexport default CanvasTileLayerRenderer;\r\n","/**\r\n * @module ol/layer/Tile\r\n */\r\nimport BaseTileLayer from './BaseTile.js';\r\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\r\n\r\n\r\n/**\r\n * @typedef {import(\"./BaseTile.js\").Options} Options\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nclass TileLayer extends BaseTileLayer {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Tile layer options.\r\n   */\r\n  constructor(opt_options) {\r\n    super(opt_options);\r\n  }\r\n\r\n  /**\r\n   * Create a renderer for this layer.\r\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n   * @protected\r\n   */\r\n  createRenderer() {\r\n    return new CanvasTileLayerRenderer(this);\r\n  }\r\n\r\n}\r\n\r\nexport default TileLayer;\r\n","/**\r\n * @module ol/ImageBase\r\n */\r\nimport {abstract} from './util.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass ImageBase extends EventTarget {\r\n\r\n  /**\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   * @param {number|undefined} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"./ImageState.js\").default} state State.\r\n   */\r\n  constructor(extent, resolution, pixelRatio, state) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./extent.js\").Extent}\r\n     */\r\n    this.extent = extent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|undefined}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./ImageState.js\").default}\r\n     */\r\n    this.state = state;\r\n\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  changed() {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"./extent.js\").Extent} Extent.\r\n   */\r\n  getExtent() {\r\n    return this.extent;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n   */\r\n  getImage() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @return {number} PixelRatio.\r\n   */\r\n  getPixelRatio() {\r\n    return this.pixelRatio_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Resolution.\r\n   */\r\n  getResolution() {\r\n    return /** @type {number} */ (this.resolution);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"./ImageState.js\").default} State.\r\n   */\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   * @abstract\r\n   */\r\n  load() {\r\n    abstract();\r\n  }\r\n}\r\n\r\n\r\nexport default ImageBase;\r\n","/**\r\n * @module ol/ImageCanvas\r\n */\r\nimport ImageBase from './ImageBase.js';\r\nimport ImageState from './ImageState.js';\r\n\r\n\r\n/**\r\n * A function that is called to trigger asynchronous canvas drawing.  It is\r\n * called with a \"done\" callback that should be called when drawing is done.\r\n * If any error occurs during drawing, the \"done\" callback should be called with\r\n * that error.\r\n *\r\n * @typedef {function(function(Error=): void): void} Loader\r\n */\r\n\r\n\r\nclass ImageCanvas extends ImageBase {\r\n\r\n  /**\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {HTMLCanvasElement} canvas Canvas.\r\n   * @param {Loader=} opt_loader Optional loader function to\r\n   *     support asynchronous canvas drawing.\r\n   */\r\n  constructor(extent, resolution, pixelRatio, canvas, opt_loader) {\r\n\r\n    const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\r\n\r\n    super(extent, resolution, pixelRatio, state);\r\n\r\n    /**\r\n     * Optional canvas loader function.\r\n     * @type {?Loader}\r\n     * @private\r\n     */\r\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = canvas;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Error}\r\n     */\r\n    this.error_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * Get any error associated with asynchronous rendering.\r\n   * @return {Error} Any error that occurred during rendering.\r\n   */\r\n  getError() {\r\n    return this.error_;\r\n  }\r\n\r\n  /**\r\n   * Handle async drawing complete.\r\n   * @param {Error=} err Any error during drawing.\r\n   * @private\r\n   */\r\n  handleLoad_(err) {\r\n    if (err) {\r\n      this.error_ = err;\r\n      this.state = ImageState.ERROR;\r\n    } else {\r\n      this.state = ImageState.LOADED;\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  load() {\r\n    if (this.state == ImageState.IDLE) {\r\n      this.state = ImageState.LOADING;\r\n      this.changed();\r\n      this.loader_(this.handleLoad_.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement} Canvas element.\r\n   */\r\n  getImage() {\r\n    return this.canvas_;\r\n  }\r\n}\r\n\r\n\r\nexport default ImageCanvas;\r\n","/**\r\n * @module ol/renderer/canvas/VectorImageLayer\r\n */\r\nimport ImageCanvas from '../../ImageCanvas.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {equals} from '../../array.js';\r\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\r\nimport {assign} from '../../obj.js';\r\nimport CanvasImageLayerRenderer from './ImageLayer.js';\r\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\r\nimport {listen} from '../../events.js';\r\nimport EventType from '../../events/EventType.js';\r\nimport ImageState from '../../ImageState.js';\r\nimport {renderDeclutterItems} from '../../render.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for image layers.\r\n * @api\r\n */\r\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\r\n   */\r\n  constructor(layer) {\r\n    super(layer);\r\n\r\n    /**\r\n     * @type {!Array<string>}\r\n     */\r\n    this.skippedFeatures_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./VectorLayer.js\").default}\r\n     */\r\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.layerImageRatio_ = layer.getImageRatio();\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.vectorRenderer_.dispose();\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleFontsChanged() {\r\n    this.vectorRenderer_.handleFontsChanged();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState) {\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const viewState = frameState.viewState;\r\n    const viewResolution = viewState.resolution;\r\n\r\n    const hints = frameState.viewHints;\r\n    const vectorRenderer = this.vectorRenderer_;\r\n    let renderedExtent = frameState.extent;\r\n    if (this.layerImageRatio_ !== 1) {\r\n      renderedExtent = renderedExtent.slice(0);\r\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\r\n    }\r\n\r\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\r\n      let skippedFeatures = this.skippedFeatures_;\r\n      vectorRenderer.useContainer(null, null, 1);\r\n      const context = vectorRenderer.context;\r\n      const imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\r\n        declutterItems: [],\r\n        size: [\r\n          getWidth(renderedExtent) / viewResolution,\r\n          getHeight(renderedExtent) / viewResolution\r\n        ],\r\n        viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\r\n          rotation: 0\r\n        }))\r\n      }));\r\n      const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\r\n      const image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\r\n        if (vectorRenderer.prepareFrame(imageFrameState) &&\r\n              (vectorRenderer.replayGroupChanged ||\r\n              !equals(skippedFeatures, newSkippedFeatures))) {\r\n          vectorRenderer.renderFrame(imageFrameState, null);\r\n          renderDeclutterItems(imageFrameState, null);\r\n          skippedFeatures = newSkippedFeatures;\r\n          callback();\r\n        }\r\n      });\r\n\r\n      listen(image, EventType.CHANGE, function() {\r\n        if (image.getState() === ImageState.LOADED) {\r\n          this.image_ = image;\r\n          this.skippedFeatures_ = skippedFeatures;\r\n        }\r\n      }, this);\r\n      image.load();\r\n    }\r\n\r\n    if (this.image_) {\r\n      const image = this.image_;\r\n      const imageResolution = image.getResolution();\r\n      const imagePixelRatio = image.getPixelRatio();\r\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\r\n    }\r\n\r\n    return !!this.image_;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  preRender() {}\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  postRender() {}\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\r\n    if (this.vectorRenderer_) {\r\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures);\r\n    } else {\r\n      return super.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasVectorImageLayerRenderer;\r\n","/**\r\n * @module ol/layer/VectorImage\r\n */\r\nimport BaseVectorLayer from './BaseVector.js';\r\nimport {assign} from '../obj.js';\r\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\r\n * renderer when getting features from the vector source for the rendering or hit-detection.\r\n * Recommended value: the size of the largest symbol, line width or label.\r\n * @property {import(\"../source/Vector.js\").default} [source] Source.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\r\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\r\n * Within the same z-index, a feature rendered before another has higher priority.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\r\n * be recreated during animations. This means that no vectors will be shown clipped, but the\r\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\r\n * batches will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\r\n * be recreated during interactions. See also `updateWhileAnimating`.\r\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\r\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nclass VectorImageLayer extends BaseVectorLayer {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : /** @type {Options} */ ({});\r\n\r\n    const baseOptions = assign({}, options);\r\n    delete baseOptions.imageRatio;\r\n    super(baseOptions);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.imageRatio_ = options.imageRatio !== undefined ? options.imageRatio : 1;\r\n\r\n  }\r\n\r\n  /**\r\n   * @return {number} Ratio between rendered extent size and viewport extent size.\r\n   */\r\n  getImageRatio() {\r\n    return this.imageRatio_;\r\n  }\r\n\r\n  /**\r\n   * Create a renderer for this layer.\r\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n   * @protected\r\n   */\r\n  createRenderer() {\r\n    return new CanvasVectorImageLayerRenderer(this);\r\n  }\r\n}\r\n\r\n\r\nexport default VectorImageLayer;\r\n","/**\r\n * @module ol/layer/VectorTileRenderType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * Render mode for vector tiles:\r\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\r\n *    point symbols and texts are always rotated with the view and pixels are\r\n *    scaled during zoom animations.\r\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\r\n *    are scaled during zoom animations. Point symbols and texts are accurately\r\n *    rendered as vectors and can stay upright on rotated views.\r\n * @api\r\n */\r\nexport default {\r\n  IMAGE: 'image',\r\n  HYBRID: 'hybrid'\r\n};\r\n","/**\r\n * @module ol/renderer/canvas/VectorTileLayer\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport TileState from '../../TileState.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {listen, unlistenByKey} from '../../events.js';\r\nimport EventType from '../../events/EventType.js';\r\nimport {buffer, containsCoordinate, equals, getIntersection, intersects} from '../../extent.js';\r\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\r\nimport ReplayType from '../../render/canvas/BuilderType.js';\r\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\r\nimport CanvasTileLayerRenderer from './TileLayer.js';\r\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\r\nimport {\r\n  apply as applyTransform,\r\n  create as createTransform,\r\n  reset as resetTransform,\r\n  scale as scaleTransform,\r\n  translate as translateTransform,\r\n  toString as transformToString,\r\n  makeScale,\r\n  makeInverse\r\n} from '../../transform.js';\r\nimport CanvasExecutorGroup, {replayDeclutter} from '../../render/canvas/ExecutorGroup.js';\r\n\r\n\r\n/**\r\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\r\n */\r\nconst IMAGE_REPLAYS = {\r\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\r\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\r\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\r\n};\r\n\r\n\r\n/**\r\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\r\n */\r\nconst VECTOR_REPLAYS = {\r\n  'image': [ReplayType.DEFAULT],\r\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT]\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for vector tile layers.\r\n * @api\r\n */\r\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\r\n   */\r\n  constructor(layer) {\r\n    super(layer);\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.overlayContext_ = null;\r\n\r\n    /**\r\n     * The transform for rendered pixels to viewport CSS pixels for the overlay canvas.\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.overlayPixelTransform_ = createTransform();\r\n\r\n    /**\r\n     * The transform for viewport CSS pixels to rendered pixels for the overlay canvas.\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.inverseOverlayPixelTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.dirty_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedLayerRevision_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\r\n     */\r\n    this.renderTileImageQueue_ = {};\r\n\r\n    /**\r\n     * @type {Object<string, import(\"../../events.js\").EventsKey>}\r\n     */\r\n    this.tileListenerKeys_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.tmpTransform_ = createTransform();\r\n\r\n    // Use nearest lower resolution.\r\n    this.zDirection = 1;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  useContainer(target, transform, opacity) {\r\n    let overlayContext;\r\n    if (target && target.childElementCount === 2) {\r\n      overlayContext = target.lastElementChild.getContext('2d');\r\n      if (!overlayContext) {\r\n        target = null;\r\n      }\r\n    }\r\n    const containerReused = this.containerReused;\r\n    super.useContainer(target, transform, opacity);\r\n    if (containerReused && !this.containerReused && !overlayContext) {\r\n      this.overlayContext_ = null;\r\n    }\r\n    if (this.containerReused && overlayContext) {\r\n      this.overlayContext_ = overlayContext;\r\n    }\r\n    if (!this.overlayContext_) {\r\n      const overlayContext = createCanvasContext2D();\r\n      const style = overlayContext.canvas.style;\r\n      style.position = 'absolute';\r\n      style.transformOrigin = 'top left';\r\n      this.overlayContext_ = overlayContext;\r\n    }\r\n    if (this.container.childElementCount === 1) {\r\n      this.container.appendChild(this.overlayContext_.canvas);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\r\n   * @param {boolean} queue Queue tile for rendering.\r\n   * @return {boolean} Tile needs to be rendered.\r\n   */\r\n  prepareTile(tile, pixelRatio, projection, queue) {\r\n    let render = false;\r\n    const tileUid = getUid(tile);\r\n    const state = tile.getState();\r\n    if (((state === TileState.LOADED && tile.hifi) ||\r\n        state === TileState.ERROR || state === TileState.ABORT) &&\r\n        tileUid in this.tileListenerKeys_) {\r\n      unlistenByKey(this.tileListenerKeys_[tileUid]);\r\n      delete this.tileListenerKeys_[tileUid];\r\n    }\r\n    if (state === TileState.LOADED || state === TileState.ERROR) {\r\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\r\n      if (this.tileImageNeedsRender_(tile, pixelRatio, projection)) {\r\n        render = true;\r\n        if (queue) {\r\n          this.renderTileImageQueue_[tileUid] = tile;\r\n        }\r\n      }\r\n    }\r\n    return render;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getTile(z, x, y, frameState) {\r\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (super.getTile(z, x, y, frameState));\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const viewState = frameState.viewState;\r\n    const resolution = viewState.resolution;\r\n    const projection = viewState.projection;\r\n    if (tile.getState() < TileState.LOADED) {\r\n      tile.wantedResolution = resolution;\r\n      const tileUid = getUid(tile);\r\n      if (!(tileUid in this.tileListenerKeys_)) {\r\n        const listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection, true));\r\n        this.tileListenerKeys_[tileUid] = listenerKey;\r\n      }\r\n    } else {\r\n      const viewHints = frameState.viewHints;\r\n      const hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\r\n      if (hifi || !tile.wantedResolution) {\r\n        tile.wantedResolution = resolution;\r\n      }\r\n      const render = this.prepareTile(tile, pixelRatio, projection, false);\r\n      if (render) {\r\n        this.renderTileImage_(tile, frameState);\r\n      }\r\n    }\r\n    return tile;\r\n  }\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  isDrawableTile(tile) {\r\n    return super.isDrawableTile(tile) && tile.hasContext(this.getLayer());\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getTileImage(tile) {\r\n    return tile.getImage(this.getLayer());\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState) {\r\n    const layerRevision = this.getLayer().getRevision();\r\n    if (this.renderedLayerRevision_ != layerRevision) {\r\n      this.renderedTiles.length = 0;\r\n    }\r\n    this.renderedLayerRevision_ = layerRevision;\r\n    return super.prepareFrame(frameState);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n   * @private\r\n   */\r\n  updateExecutorGroup_(tile, pixelRatio, projection) {\r\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\r\n    const revision = layer.getRevision();\r\n    const renderOrder = layer.getRenderOrder() || null;\r\n\r\n    const resolution = tile.wantedResolution;\r\n    const builderState = tile.getReplayState(layer);\r\n    if (!builderState.dirty && builderState.renderedResolution === resolution &&\r\n        builderState.renderedRevision == revision &&\r\n        builderState.renderedRenderOrder == renderOrder && builderState.renderedZ === tile.sourceZ) {\r\n      return;\r\n    }\r\n\r\n    const source = layer.getSource();\r\n    const sourceTileGrid = source.getTileGrid();\r\n    const tileGrid = source.getTileGridForProjection(projection);\r\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\r\n\r\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\r\n    const layerUid = getUid(layer);\r\n    const executorGroups = tile.executorGroups[layerUid];\r\n    if (executorGroups) {\r\n      for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\r\n        executorGroups[i].dispose();\r\n      }\r\n    }\r\n    tile.executorGroups[layerUid] = [];\r\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\r\n      const sourceTile = sourceTiles[t];\r\n      if (sourceTile.getState() != TileState.LOADED) {\r\n        continue;\r\n      }\r\n      const sourceTileCoord = sourceTile.tileCoord;\r\n      const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\r\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\r\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\r\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\r\n      builderState.dirty = false;\r\n      const builderGroup = new CanvasBuilderGroup(0, sharedExtent, resolution,\r\n        pixelRatio, layer.getDeclutter());\r\n      const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\r\n\r\n      /**\r\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n       * @this {CanvasVectorTileLayerRenderer}\r\n       */\r\n      const render = function(feature) {\r\n        let styles;\r\n        const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\r\n        if (styleFunction) {\r\n          styles = styleFunction(feature, resolution);\r\n        }\r\n        if (styles) {\r\n          const dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup);\r\n          this.dirty_ = this.dirty_ || dirty;\r\n          builderState.dirty = builderState.dirty || dirty;\r\n        }\r\n      };\r\n\r\n      const features = sourceTile.getFeatures();\r\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\r\n        features.sort(renderOrder);\r\n      }\r\n      for (let i = 0, ii = features.length; i < ii; ++i) {\r\n        const feature = features[i];\r\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\r\n          render.call(this, feature);\r\n        }\r\n      }\r\n      const executorGroupInstructions = builderGroup.finish();\r\n      // no need to clip when the render tile is covered by a single source tile\r\n      const replayExtent = layer.getDeclutter() && sourceTiles.length === 1 ?\r\n        null :\r\n        sharedExtent;\r\n      const renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution,\r\n        pixelRatio, source.getOverlaps(), executorGroupInstructions, layer.getRenderBuffer());\r\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\r\n    }\r\n    builderState.renderedRevision = revision;\r\n    builderState.renderedZ = tile.sourceZ;\r\n    builderState.renderedRenderOrder = renderOrder;\r\n    builderState.renderedResolution = resolution;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\r\n    const resolution = frameState.viewState.resolution;\r\n    const rotation = frameState.viewState.rotation;\r\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\r\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\r\n    const declutter = layer.getDeclutter();\r\n    const source = layer.getSource();\r\n    const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\r\n    /** @type {!Object<string, boolean>} */\r\n    const features = {};\r\n\r\n    const renderedTiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\r\n\r\n    let found;\r\n    let i, ii;\r\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\r\n      const tile = renderedTiles[i];\r\n      if (!declutter) {\r\n        // When not decluttering, we only need to consider the tile that contains the given\r\n        // coordinate, because each feature will be rendered for each tile that contains it.\r\n        const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\r\n        if (!containsCoordinate(tileExtent, coordinate)) {\r\n          continue;\r\n        }\r\n      }\r\n      const executorGroups = tile.executorGroups[getUid(layer)];\r\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\r\n        const executorGroup = executorGroups[t];\r\n        found = found || executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\r\n          /**\r\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n           * @return {?} Callback result.\r\n           */\r\n          function(feature) {\r\n            let key = feature.getId();\r\n            if (key === undefined) {\r\n              key = getUid(feature);\r\n            }\r\n            if (!(key in features)) {\r\n              features[key] = true;\r\n              return callback(feature, layer);\r\n            }\r\n          }, layer.getDeclutter() ? declutteredFeatures : null);\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleFontsChanged() {\r\n    const layer = this.getLayer();\r\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\r\n      layer.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle changes in image style state.\r\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\r\n   * @private\r\n   */\r\n  handleStyleImageChange_(event) {\r\n    this.renderIfReadyAndVisible();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  renderFrame(frameState, target) {\r\n    const viewHints = frameState.viewHints;\r\n    const hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\r\n    this.renderQueuedTileImages_(hifi, frameState);\r\n\r\n    super.renderFrame(frameState, target);\r\n\r\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\r\n    const renderMode = layer.getRenderMode();\r\n    if (renderMode === VectorTileRenderType.IMAGE) {\r\n      return this.container;\r\n    }\r\n\r\n    const source = layer.getSource();\r\n    // Unqueue tiles from the image queue when we don't need any more\r\n    const usedTiles = frameState.usedTiles[getUid(source)];\r\n    for (const tileUid in this.renderTileImageQueue_) {\r\n      if (!(tileUid in usedTiles)) {\r\n        delete this.renderTileImageQueue_[tileUid];\r\n      }\r\n    }\r\n\r\n    const context = this.overlayContext_;\r\n    const declutterReplays = layer.getDeclutter() ? {} : null;\r\n    const replayTypes = VECTOR_REPLAYS[renderMode];\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const rotation = frameState.viewState.rotation;\r\n    const size = frameState.size;\r\n\r\n    // set forward and inverse pixel transforms\r\n    makeScale(this.overlayPixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\r\n    makeInverse(this.inverseOverlayPixelTransform_, this.overlayPixelTransform_);\r\n\r\n    // resize and clear\r\n    const canvas = context.canvas;\r\n    const width = Math.round(size[0] * pixelRatio);\r\n    const height = Math.round(size[1] * pixelRatio);\r\n    if (canvas.width != width || canvas.height != height) {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const canvasTransform = transformToString(this.overlayPixelTransform_);\r\n      if (canvas.style.transform !== canvasTransform) {\r\n        canvas.style.transform = canvasTransform;\r\n      }\r\n    } else if (!this.containerReused) {\r\n      context.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    const tiles = this.renderedTiles;\r\n    const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\r\n    const clips = [];\r\n    const clipZs = [];\r\n    for (let i = tiles.length - 1; i >= 0; --i) {\r\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\r\n      if (tile.getState() == TileState.ABORT) {\r\n        continue;\r\n      }\r\n      const tileCoord = tile.tileCoord;\r\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\r\n      const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\r\n      const transform = this.getRenderTransform(frameState, width, height, worldOffset);\r\n      const executorGroups = tile.executorGroups[getUid(layer)];\r\n      let clipped = false;\r\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\r\n        const executorGroup = executorGroups[t];\r\n        if (!executorGroup.hasExecutors(replayTypes)) {\r\n          // sourceTile has no instructions of the types we want to render\r\n          continue;\r\n        }\r\n        const currentZ = tile.tileCoord[0];\r\n        let currentClip;\r\n        if (!declutterReplays && !clipped) {\r\n          currentClip = executorGroup.getClipCoords(transform);\r\n          context.save();\r\n\r\n          // Create a clip mask for regions in this low resolution tile that are\r\n          // already filled by a higher resolution tile\r\n          for (let j = 0, jj = clips.length; j < jj; ++j) {\r\n            const clip = clips[j];\r\n            if (currentZ < clipZs[j]) {\r\n              context.beginPath();\r\n              // counter-clockwise (outer ring) for current tile\r\n              context.moveTo(currentClip[0], currentClip[1]);\r\n              context.lineTo(currentClip[2], currentClip[3]);\r\n              context.lineTo(currentClip[4], currentClip[5]);\r\n              context.lineTo(currentClip[6], currentClip[7]);\r\n              // clockwise (inner ring) for higher resolution tile\r\n              context.moveTo(clip[6], clip[7]);\r\n              context.lineTo(clip[4], clip[5]);\r\n              context.lineTo(clip[2], clip[3]);\r\n              context.lineTo(clip[0], clip[1]);\r\n              context.clip();\r\n            }\r\n          }\r\n        }\r\n        executorGroup.execute(context, transform, rotation, {}, hifi, replayTypes, declutterReplays);\r\n        if (!declutterReplays && !clipped) {\r\n          context.restore();\r\n          clips.push(currentClip);\r\n          clipZs.push(currentZ);\r\n          clipped = true;\r\n        }\r\n      }\r\n    }\r\n    if (declutterReplays) {\r\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n      replayDeclutter(declutterReplays, context, rotation, layerState.opacity, hifi, frameState.declutterItems);\r\n    }\r\n\r\n    return this.container;\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} hifi We have time to render a high fidelity map image.\r\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\r\n   */\r\n  renderQueuedTileImages_(hifi, frameState) {\r\n    // When we don't have time to render hifi, only render tiles until we have used up\r\n    // half of the frame budget of 16 ms\r\n    for (const uid in this.renderTileImageQueue_) {\r\n      if (!hifi && Date.now() - frameState.time > 8) {\r\n        frameState.animate = true;\r\n        break;\r\n      }\r\n      const tile = this.renderTileImageQueue_[uid];\r\n      delete this.renderTileImageQueue_[uid];\r\n      this.renderTileImage_(tile, frameState);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\r\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} executorGroup Replay group.\r\n   * @return {boolean} `true` if an image is loading.\r\n   */\r\n  renderFeature(feature, squaredTolerance, styles, executorGroup) {\r\n    if (!styles) {\r\n      return false;\r\n    }\r\n    let loading = false;\r\n    if (Array.isArray(styles)) {\r\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\r\n        loading = renderFeature(\r\n          executorGroup, feature, styles[i], squaredTolerance,\r\n          this.handleStyleImageChange_, this) || loading;\r\n      }\r\n    } else {\r\n      loading = renderFeature(\r\n        executorGroup, feature, styles, squaredTolerance,\r\n        this.handleStyleImageChange_, this);\r\n    }\r\n    return loading;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n   * @return {boolean} A new tile image was rendered.\r\n   * @private\r\n   */\r\n  tileImageNeedsRender_(tile, pixelRatio, projection) {\r\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\r\n    const replayState = tile.getReplayState(layer);\r\n    const revision = layer.getRevision();\r\n    const sourceZ = tile.sourceZ;\r\n    const resolution = tile.wantedResolution;\r\n    return replayState.renderedTileResolution !== resolution || replayState.renderedTileRevision !== revision || replayState.renderedTileZ !== sourceZ;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\r\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  renderTileImage_(tile, frameState) {\r\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\r\n    const replayState = tile.getReplayState(layer);\r\n    const revision = layer.getRevision();\r\n    const executorGroups = tile.executorGroups[getUid(layer)];\r\n    replayState.renderedTileRevision = revision;\r\n    replayState.renderedTileZ = tile.sourceZ;\r\n\r\n    const tileCoord = tile.wrappedTileCoord;\r\n    const z = tileCoord[0];\r\n    const source = layer.getSource();\r\n    let pixelRatio = frameState.pixelRatio;\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n    const tileGrid = source.getTileGridForProjection(projection);\r\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\r\n    const renderPixelRatio = frameState.pixelRatio / tile.wantedResolution * tileResolution;\r\n    const resolution = tileGrid.getResolution(z);\r\n    const context = tile.getContext(layer);\r\n\r\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\r\n    pixelRatio = Math.max(pixelRatio, renderPixelRatio / pixelRatio);\r\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\r\n    context.canvas.width = size[0];\r\n    context.canvas.height = size[1];\r\n    const renderScale = pixelRatio / renderPixelRatio;\r\n    if (renderScale !== 1) {\r\n      const canvasTransform = resetTransform(this.tmpTransform_);\r\n      scaleTransform(canvasTransform, renderScale, renderScale);\r\n      context.setTransform.apply(context, canvasTransform);\r\n    }\r\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\r\n    const pixelScale = renderPixelRatio / resolution;\r\n    const transform = resetTransform(this.tmpTransform_);\r\n    scaleTransform(transform, pixelScale, -pixelScale);\r\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\r\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\r\n      const executorGroup = executorGroups[i];\r\n      executorGroup.execute(context, transform, 0, {}, true, IMAGE_REPLAYS[layer.getRenderMode()]);\r\n    }\r\n    replayState.renderedTileResolution = tile.wantedResolution;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getDataAtPixel(pixel, frameState, hitTolerance) {\r\n    let data = super.getDataAtPixel(pixel, frameState, hitTolerance);\r\n    if (data) {\r\n      return data;\r\n    }\r\n\r\n    const renderPixel = applyTransform(this.inverseOverlayPixelTransform_, pixel.slice());\r\n    const context = this.overlayContext_;\r\n\r\n    try {\r\n      data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\r\n    } catch (err) {\r\n      if (err.name === 'SecurityError') {\r\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\r\n        return new Uint8Array();\r\n      }\r\n      return data;\r\n    }\r\n\r\n    if (data[3] === 0) {\r\n      return null;\r\n    }\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default CanvasVectorTileLayerRenderer;\r\n","/**\r\n * @module ol/layer/VectorTile\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport TileProperty from './TileProperty.js';\r\nimport BaseVectorLayer from './BaseVector.js';\r\nimport VectorTileRenderType from './VectorTileRenderType.js';\r\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\r\nimport {assign} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\r\n * renderer when getting features from the vector tile for the rendering or hit-detection.\r\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\r\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\r\n * point symbol or line width.\r\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\r\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\r\n *    are always rotated with the view and pixels are scaled during zoom animations. When `declutter`\r\n *    is set to `true`, the decluttering is done per tile resulting in labels and point symbols getting\r\n *    cut off at tile boundaries.\r\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\r\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\r\n *    rotated views.\r\n *\r\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\r\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\r\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\r\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\r\n * higher priority.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\r\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\r\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\r\n * will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\r\n * recreated during interactions. See also `updateWhileAnimating`.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer for vector tile data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @param {Options=} opt_options Options.\r\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default>}\r\n * @api\r\n */\r\nclass VectorTileLayer extends BaseVectorLayer {\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const baseOptions = /** @type {Object} */ (assign({}, options));\r\n    delete baseOptions.preload;\r\n    delete baseOptions.useInterimTilesOnError;\r\n\r\n    super(/** @type {import(\"./Vector.js\").Options} */ (baseOptions));\r\n\r\n    const renderMode = options.renderMode || VectorTileRenderType.HYBRID;\r\n    assert(renderMode == undefined ||\r\n       renderMode == VectorTileRenderType.IMAGE ||\r\n       renderMode == VectorTileRenderType.HYBRID,\r\n    28); // `renderMode` must be `'image'` or `'hybrid'`\r\n\r\n    /**\r\n     * @private\r\n     * @type {VectorTileRenderType}\r\n     */\r\n    this.renderMode_ = renderMode;\r\n\r\n    this.setPreload(options.preload ? options.preload : 0);\r\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\r\n      options.useInterimTilesOnError : true);\r\n\r\n  }\r\n\r\n  /**\r\n   * Create a renderer for this layer.\r\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n   * @protected\r\n   */\r\n  createRenderer() {\r\n    return new CanvasVectorTileLayerRenderer(this);\r\n  }\r\n\r\n  /**\r\n   * @return {VectorTileRenderType} The render mode.\r\n   */\r\n  getRenderMode() {\r\n    return this.renderMode_;\r\n  }\r\n\r\n  /**\r\n   * Return the level as number to which we will preload tiles up to.\r\n   * @return {number} The level to preload tiles up to.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPreload() {\r\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n  }\r\n\r\n  /**\r\n   * Whether we use interim tiles on error.\r\n   * @return {boolean} Use interim tiles on error.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getUseInterimTilesOnError() {\r\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\r\n  }\r\n\r\n  /**\r\n   * Set the level as number to which we will preload tiles up to.\r\n   * @param {number} preload The level to preload tiles up to.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setPreload(preload) {\r\n    this.set(TileProperty.PRELOAD, preload);\r\n  }\r\n\r\n  /**\r\n   * Set whether we use interim tiles on error.\r\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setUseInterimTilesOnError(useInterimTilesOnError) {\r\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n  }\r\n}\r\n\r\n\r\nexport default VectorTileLayer;\r\n","\r\n/**\r\n * @module ol/layer\r\n */\r\n\r\nexport {default as Group} from './layer/Group.js';\r\nexport {default as Heatmap} from './layer/Heatmap.js';\r\nexport {default as Image} from './layer/Image.js';\r\nexport {default as Layer} from './layer/Layer.js';\r\nexport {default as Tile} from './layer/Tile.js';\r\nexport {default as Vector} from './layer/Vector.js';\r\nexport {default as VectorImage} from './layer/VectorImage.js';\r\nexport {default as VectorTile} from './layer/VectorTile.js';\r\n","/**\r\n * @module ol/Tile\r\n */\r\nimport TileState from './TileState.js';\r\nimport {easeIn} from './easing.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\nimport {abstract} from './util.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Tile} for the tile and a\r\n * `{string}` for the url as arguments. The default is\r\n * ```js\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   tile.getImage().src = src;\r\n * });\r\n * ```\r\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\r\n * error handling:\r\n *\r\n * ```js\r\n * import TileState from 'ol/TileState';\r\n *\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   var xhr = new XMLHttpRequest();\r\n *   xhr.responseType = 'blob';\r\n *   xhr.addEventListener('loadend', function (evt) {\r\n *     var data = this.response;\r\n *     if (data !== undefined) {\r\n *       tile.getImage().src = URL.createObjectURL(data);\r\n *     } else {\r\n *       tile.setState(TileState.ERROR);\r\n *     }\r\n *   });\r\n *   xhr.addEventListener('error', function () {\r\n *     tile.setState(TileState.ERROR);\r\n *   });\r\n *   xhr.open('GET', src);\r\n *   xhr.send();\r\n * });\r\n * ```\r\n *\r\n * @typedef {function(Tile, string): void} LoadFunction\r\n * @api\r\n */\r\n\r\n/**\r\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\r\n * the url that provides a tile for a given tile coordinate.\r\n *\r\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\r\n * coordinate, a `{number}` representing the pixel ratio and a\r\n * {@link module:ol/proj/Projection} for the projection  as arguments\r\n * and returns a `{string}` representing the tile URL, or undefined if no tile\r\n * should be requested for the passed tile coordinate.\r\n *\r\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\r\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [transition=250] A duration for tile opacity\r\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for tiles.\r\n *\r\n * @abstract\r\n */\r\nclass Tile extends EventTarget {\r\n\r\n  /**\r\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {TileState} state State.\r\n   * @param {Options=} opt_options Tile options.\r\n   */\r\n  constructor(tileCoord, state, opt_options) {\r\n    super();\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @type {import(\"./tilecoord.js\").TileCoord}\r\n     */\r\n    this.tileCoord = tileCoord;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {TileState}\r\n     */\r\n    this.state = state;\r\n\r\n    /**\r\n     * An \"interim\" tile for this tile. The interim tile may be used while this\r\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\r\n     * on the source.\r\n     * @type {Tile}\r\n     */\r\n    this.interimTile = null;\r\n\r\n    /**\r\n     * The tile is available at the highest possible resolution. Subclasses can\r\n     * set this to `false` initially. Tile load listeners will not be\r\n     * unregistered before this is set to `true` and a `#changed()` is called.\r\n     * @type {boolean}\r\n     */\r\n    this.hifi = true;\r\n\r\n    /**\r\n     * A key assigned to the tile. This is used by the tile source to determine\r\n     * if this tile can effectively be used, or if a new tile should be created\r\n     * and this one be used as an interim tile for this new tile.\r\n     * @type {string}\r\n     */\r\n    this.key = '';\r\n\r\n    /**\r\n     * The duration for the opacity transition.\r\n     * @type {number}\r\n     */\r\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\r\n\r\n    /**\r\n     * Lookup of start times for rendering transitions.  If the start time is\r\n     * equal to -1, the transition is complete.\r\n     * @type {Object<string, number>}\r\n     */\r\n    this.transitionStarts_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  changed() {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  }\r\n\r\n  /**\r\n   * @return {string} Key.\r\n   */\r\n  getKey() {\r\n    return this.key + '/' + this.tileCoord;\r\n  }\r\n\r\n  /**\r\n   * Get the interim tile most suitable for rendering using the chain of interim\r\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\r\n   * such tile exists, the original tile is returned.\r\n   * @return {!Tile} Best tile for rendering.\r\n   */\r\n  getInterimTile() {\r\n    if (!this.interimTile) {\r\n      //empty chain\r\n      return this;\r\n    }\r\n    let tile = this.interimTile;\r\n\r\n    // find the first loaded tile and return it. Since the chain is sorted in\r\n    // decreasing order of creation time, there is no need to search the remainder\r\n    // of the list (all those tiles correspond to older requests and will be\r\n    // cleaned up by refreshInterimChain)\r\n    do {\r\n      if (tile.getState() == TileState.LOADED) {\r\n        // Show tile immediately instead of fading it in after loading, because\r\n        // the interim tile is in place already\r\n        this.transition_ = 0;\r\n        return tile;\r\n      }\r\n      tile = tile.interimTile;\r\n    } while (tile);\r\n\r\n    // we can not find a better tile\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Goes through the chain of interim tiles and discards sections of the chain\r\n   * that are no longer relevant.\r\n   */\r\n  refreshInterimChain() {\r\n    if (!this.interimTile) {\r\n      return;\r\n    }\r\n\r\n    let tile = this.interimTile;\r\n    let prev = /** @type {Tile} */ (this);\r\n\r\n    do {\r\n      if (tile.getState() == TileState.LOADED) {\r\n        //we have a loaded tile, we can discard the rest of the list\r\n        //we would could abort any LOADING tile request\r\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\r\n        tile.interimTile = null;\r\n        break;\r\n      } else if (tile.getState() == TileState.LOADING) {\r\n        //keep this LOADING tile any loaded tiles later in the chain are\r\n        //older than this tile, so we're still interested in the request\r\n        prev = tile;\r\n      } else if (tile.getState() == TileState.IDLE) {\r\n        //the head of the list is the most current tile, we don't need\r\n        //to start any other requests for this chain\r\n        prev.interimTile = tile.interimTile;\r\n      } else {\r\n        prev = tile;\r\n      }\r\n      tile = prev.interimTile;\r\n    } while (tile);\r\n  }\r\n\r\n  /**\r\n   * Get the tile coordinate for this tile.\r\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\r\n   * @api\r\n   */\r\n  getTileCoord() {\r\n    return this.tileCoord;\r\n  }\r\n\r\n  /**\r\n   * @return {TileState} State.\r\n   */\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  /**\r\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\r\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\r\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\r\n   * the tile queue and will block other requests.\r\n   * @param {TileState} state State.\r\n   * @api\r\n   */\r\n  setState(state) {\r\n    this.state = state;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Load the image or retry if loading previously failed.\r\n   * Loading is taken care of by the tile queue, and calling this method is\r\n   * only needed for preloading or for reloading in case of an error.\r\n   * @abstract\r\n   * @api\r\n   */\r\n  load() {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the alpha value for rendering.\r\n   * @param {string} id An id for the renderer.\r\n   * @param {number} time The render frame time.\r\n   * @return {number} A number between 0 and 1.\r\n   */\r\n  getAlpha(id, time) {\r\n    if (!this.transition_) {\r\n      return 1;\r\n    }\r\n\r\n    let start = this.transitionStarts_[id];\r\n    if (!start) {\r\n      start = time;\r\n      this.transitionStarts_[id] = start;\r\n    } else if (start === -1) {\r\n      return 1;\r\n    }\r\n\r\n    const delta = time - start + (1000 / 60); // avoid rendering at 0\r\n    if (delta >= this.transition_) {\r\n      return 1;\r\n    }\r\n    return easeIn(delta / this.transition_);\r\n  }\r\n\r\n  /**\r\n   * Determine if a tile is in an alpha transition.  A tile is considered in\r\n   * transition if tile.getAlpha() has not yet been called or has been called\r\n   * and returned 1.\r\n   * @param {string} id An id for the renderer.\r\n   * @return {boolean} The tile is in transition.\r\n   */\r\n  inTransition(id) {\r\n    if (!this.transition_) {\r\n      return false;\r\n    }\r\n    return this.transitionStarts_[id] !== -1;\r\n  }\r\n\r\n  /**\r\n   * Mark a transition as complete.\r\n   * @param {string} id An id for the renderer.\r\n   */\r\n  endTransition(id) {\r\n    if (this.transition_) {\r\n      this.transitionStarts_[id] = -1;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Tile;\r\n","/**\r\n * @module ol/Image\r\n */\r\nimport ImageBase from './ImageBase.js';\r\nimport ImageState from './ImageState.js';\r\nimport {listenOnce, unlistenByKey} from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport {getHeight} from './extent.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Image~Image} for the image and a\r\n * `{string}` for the src as arguments. It is supposed to make it so the\r\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\r\n * content specified by the src. If not specified, the default is\r\n *\r\n *     function(image, src) {\r\n *       image.getImage().src = src;\r\n *     }\r\n *\r\n * Providing a custom `imageLoadFunction` can be useful to load images with\r\n * post requests or - in general - through XHR requests, where the src of the\r\n * image element would be set to a data URI when the content is loaded.\r\n *\r\n * @typedef {function(ImageWrapper, string): void} LoadFunction\r\n * @api\r\n */\r\n\r\n\r\nclass ImageWrapper extends ImageBase {\r\n\r\n  /**\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   * @param {number|undefined} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {string} src Image source URI.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {LoadFunction} imageLoadFunction Image load function.\r\n   */\r\n  constructor(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\r\n\r\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\r\n     */\r\n    this.image_ = new Image();\r\n    if (crossOrigin !== null) {\r\n      this.image_.crossOrigin = crossOrigin;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function():void}\r\n     */\r\n    this.unlisten_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {ImageState}\r\n     */\r\n    this.state = ImageState.IDLE;\r\n\r\n    /**\r\n     * @private\r\n     * @type {LoadFunction}\r\n     */\r\n    this.imageLoadFunction_ = imageLoadFunction;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getImage() {\r\n    return this.image_;\r\n  }\r\n\r\n  /**\r\n   * Tracks loading or read errors.\r\n   *\r\n   * @private\r\n   */\r\n  handleImageError_() {\r\n    this.state = ImageState.ERROR;\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Tracks successful image load.\r\n   *\r\n   * @private\r\n   */\r\n  handleImageLoad_() {\r\n    if (this.resolution === undefined) {\r\n      this.resolution = getHeight(this.extent) / this.image_.height;\r\n    }\r\n    this.state = ImageState.LOADED;\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Load the image or retry if loading previously failed.\r\n   * Loading is taken care of by the tile queue, and calling this method is\r\n   * only needed for preloading or for reloading in case of an error.\r\n   * @override\r\n   * @api\r\n   */\r\n  load() {\r\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\r\n      this.state = ImageState.LOADING;\r\n      this.changed();\r\n      this.imageLoadFunction_(this, this.src_);\r\n      this.unlisten_ = listenImage(\r\n        this.image_,\r\n        this.handleImageLoad_.bind(this),\r\n        this.handleImageError_.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n   */\r\n  setImage(image) {\r\n    this.image_ = image;\r\n  }\r\n\r\n  /**\r\n   * Discards event handlers which listen for load completion or errors.\r\n   *\r\n   * @private\r\n   */\r\n  unlistenImage_() {\r\n    if (this.unlisten_) {\r\n      this.unlisten_();\r\n      this.unlisten_ = null;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\r\n * @param {function():any} loadHandler Load callback function.\r\n * @param {function():any} errorHandler Error callback function.\r\n * @return {function():void} Callback to stop listening.\r\n */\r\nexport function listenImage(image, loadHandler, errorHandler) {\r\n  const img = /** @type {HTMLImageElement} */ (image);\r\n  if (img.decode) {\r\n    const promise = img.decode();\r\n    let listening = true;\r\n    const unlisten = function() {\r\n      listening = false;\r\n    };\r\n    promise.then(function() {\r\n      if (listening) {\r\n        loadHandler();\r\n      }\r\n    }).catch(function(error) {\r\n      if (listening) {\r\n        errorHandler();\r\n      }\r\n    });\r\n    return unlisten;\r\n  }\r\n\r\n  const listenerKeys = [\r\n    listenOnce(img, EventType.LOAD, loadHandler),\r\n    listenOnce(img, EventType.ERROR, errorHandler)\r\n  ];\r\n  return function unlisten() {\r\n    listenerKeys.forEach(unlistenByKey);\r\n  };\r\n}\r\n\r\n\r\nexport default ImageWrapper;\r\n","/**\r\n * @module ol/ImageTile\r\n */\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\nimport {createCanvasContext2D} from './dom.js';\r\nimport {listenImage} from './Image.js';\r\n\r\n\r\nclass ImageTile extends Tile {\r\n\r\n  /**\r\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {TileState} state State.\r\n   * @param {string} src Image source URI.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\r\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\r\n   */\r\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\r\n\r\n    super(tileCoord, state, opt_options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ = crossOrigin;\r\n\r\n    /**\r\n     * Image URI\r\n     *\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    this.image_ = new Image();\r\n    if (crossOrigin !== null) {\r\n      this.image_.crossOrigin = crossOrigin;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function():void}\r\n     */\r\n    this.unlisten_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Tile.js\").LoadFunction}\r\n     */\r\n    this.tileLoadFunction_ = tileLoadFunction;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    if (this.state == TileState.LOADING) {\r\n      this.unlistenImage_();\r\n      this.image_ = getBlankImage();\r\n    }\r\n    if (this.interimTile) {\r\n      this.interimTile.dispose();\r\n    }\r\n    this.state = TileState.ABORT;\r\n    this.changed();\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\r\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n   * @api\r\n   */\r\n  getImage() {\r\n    return this.image_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getKey() {\r\n    return this.src_;\r\n  }\r\n\r\n  /**\r\n   * Tracks loading or read errors.\r\n   *\r\n   * @private\r\n   */\r\n  handleImageError_() {\r\n    this.state = TileState.ERROR;\r\n    this.unlistenImage_();\r\n    this.image_ = getBlankImage();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Tracks successful image load.\r\n   *\r\n   * @private\r\n   */\r\n  handleImageLoad_() {\r\n    const image = /** @type {HTMLImageElement} */ (this.image_);\r\n    if (image.naturalWidth && image.naturalHeight) {\r\n      this.state = TileState.LOADED;\r\n    } else {\r\n      this.state = TileState.EMPTY;\r\n    }\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  load() {\r\n    if (this.state == TileState.ERROR) {\r\n      this.state = TileState.IDLE;\r\n      this.image_ = new Image();\r\n      if (this.crossOrigin_ !== null) {\r\n        this.image_.crossOrigin = this.crossOrigin_;\r\n      }\r\n    }\r\n    if (this.state == TileState.IDLE) {\r\n      this.state = TileState.LOADING;\r\n      this.changed();\r\n      this.tileLoadFunction_(this, this.src_);\r\n      this.unlisten_ = listenImage(\r\n        this.image_,\r\n        this.handleImageLoad_.bind(this),\r\n        this.handleImageError_.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Discards event handlers which listen for load completion or errors.\r\n   *\r\n   * @private\r\n   */\r\n  unlistenImage_() {\r\n    if (this.unlisten_) {\r\n      this.unlisten_();\r\n      this.unlisten_ = null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Get a 1-pixel blank image.\r\n * @return {HTMLCanvasElement} Blank image.\r\n */\r\nfunction getBlankImage() {\r\n  const ctx = createCanvasContext2D(1, 1);\r\n  ctx.fillStyle = 'rgba(0,0,0,0)';\r\n  ctx.fillRect(0, 0, 1, 1);\r\n  return ctx.canvas;\r\n}\r\n\r\nexport default ImageTile;\r\n","/**\r\n * @module ol/tilecoord\r\n */\r\n\r\n\r\n/**\r\n * An array of three numbers representing the location of a tile in a tile\r\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\r\n * @typedef {Array<number>} TileCoord\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {number} z Z.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\r\n * @return {TileCoord} Tile coordinate.\r\n */\r\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\r\n  if (opt_tileCoord !== undefined) {\r\n    opt_tileCoord[0] = z;\r\n    opt_tileCoord[1] = x;\r\n    opt_tileCoord[2] = y;\r\n    return opt_tileCoord;\r\n  } else {\r\n    return [z, x, y];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {number} z Z.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {string} Key.\r\n */\r\nexport function getKeyZXY(z, x, y) {\r\n  return z + '/' + x + '/' + y;\r\n}\r\n\r\n\r\n/**\r\n * Get the key for a tile coord.\r\n * @param {TileCoord} tileCoord The tile coord.\r\n * @return {string} Key.\r\n */\r\nexport function getKey(tileCoord) {\r\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\r\n}\r\n\r\n\r\n/**\r\n * Get a tile coord given a key.\r\n * @param {string} key The tile coord key.\r\n * @return {TileCoord} The tile coord.\r\n */\r\nexport function fromKey(key) {\r\n  return key.split('/').map(Number);\r\n}\r\n\r\n\r\n/**\r\n * @param {TileCoord} tileCoord Tile coord.\r\n * @return {number} Hash.\r\n */\r\nexport function hash(tileCoord) {\r\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\r\n}\r\n\r\n\r\n/**\r\n * @param {TileCoord} tileCoord Tile coordinate.\r\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {boolean} Tile coordinate is within extent and zoom level range.\r\n */\r\nexport function withinExtentAndZ(tileCoord, tileGrid) {\r\n  const z = tileCoord[0];\r\n  const x = tileCoord[1];\r\n  const y = tileCoord[2];\r\n\r\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\r\n    return false;\r\n  }\r\n  const extent = tileGrid.getExtent();\r\n  let tileRange;\r\n  if (!extent) {\r\n    tileRange = tileGrid.getFullTileRange(z);\r\n  } else {\r\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n  }\r\n  if (!tileRange) {\r\n    return true;\r\n  } else {\r\n    return tileRange.containsXY(x, y);\r\n  }\r\n}\r\n","/**\r\n * @module ol/TileCache\r\n */\r\nimport LRUCache from './structs/LRUCache.js';\r\nimport {fromKey, getKey} from './tilecoord.js';\r\n\r\nclass TileCache extends LRUCache {\r\n\r\n  /**\r\n   * @param {number=} opt_highWaterMark High water mark.\r\n   */\r\n  constructor(opt_highWaterMark) {\r\n\r\n    super(opt_highWaterMark);\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\r\n   */\r\n  expireCache(usedTiles) {\r\n    while (this.canExpireCache()) {\r\n      const tile = this.peekLast();\r\n      if (tile.getKey() in usedTiles) {\r\n        break;\r\n      } else {\r\n        this.pop().dispose();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\r\n   */\r\n  pruneExceptNewestZ() {\r\n    if (this.getCount() === 0) {\r\n      return;\r\n    }\r\n    const key = this.peekFirstKey();\r\n    const tileCoord = fromKey(key);\r\n    const z = tileCoord[0];\r\n    this.forEach(function(tile) {\r\n      if (tile.tileCoord[0] !== z) {\r\n        this.remove(getKey(tile.tileCoord));\r\n        tile.dispose();\r\n      }\r\n    }.bind(this));\r\n  }\r\n}\r\n\r\n\r\nexport default TileCache;\r\n","/**\r\n * @module ol/reproj\r\n */\r\nimport {createCanvasContext2D} from './dom.js';\r\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\r\nimport {solveLinearSystem} from './math.js';\r\nimport {getPointResolution, transform} from './proj.js';\r\n\r\n\r\n/**\r\n * Calculates ideal resolution to use from the source in order to achieve\r\n * pixel mapping as close as possible to 1:1 during reprojection.\r\n * The resolution is calculated regardless of what resolutions\r\n * are actually available in the dataset (TileGrid, Image, ...).\r\n *\r\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\r\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\r\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\r\n * @param {number} targetResolution Target resolution.\r\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\r\n */\r\nexport function calculateSourceResolution(sourceProj, targetProj,\r\n  targetCenter, targetResolution) {\r\n\r\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\r\n\r\n  // calculate the ideal resolution of the source data\r\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\r\n\r\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\r\n  if (targetMetersPerUnit !== undefined) {\r\n    sourceResolution *= targetMetersPerUnit;\r\n  }\r\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\r\n  if (sourceMetersPerUnit !== undefined) {\r\n    sourceResolution /= sourceMetersPerUnit;\r\n  }\r\n\r\n  // Based on the projection properties, the point resolution at the specified\r\n  // coordinates may be slightly different. We need to reverse-compensate this\r\n  // in order to achieve optimal results.\r\n\r\n  const sourceExtent = sourceProj.getExtent();\r\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\r\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\r\n        sourceResolution;\r\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\r\n      sourceResolution /= compensationFactor;\r\n    }\r\n  }\r\n\r\n  return sourceResolution;\r\n}\r\n\r\n\r\n/**\r\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\r\n * in order to mask gaps caused by antialiasing.\r\n *\r\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\r\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\r\n * @param {number} x X coordinate of the point (in pixels).\r\n * @param {number} y Y coordinate of the point (in pixels).\r\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\r\n */\r\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\r\n  const dX = x - centroidX;\r\n  const dY = y - centroidY;\r\n  const distance = Math.sqrt(dX * dX + dY * dY);\r\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\r\n}\r\n\r\n\r\n/**\r\n * Renders the source data into new canvas based on the triangulation.\r\n *\r\n * @param {number} width Width of the canvas.\r\n * @param {number} height Height of the canvas.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @param {number} sourceResolution Source resolution.\r\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\r\n * @param {number} targetResolution Target resolution.\r\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\r\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\r\n * Calculated triangulation.\r\n * @param {Array<{extent: import(\"./extent.js\").Extent,\r\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\r\n * Array of sources.\r\n * @param {number} gutter Gutter of the sources.\r\n * @param {boolean=} opt_renderEdges Render reprojection edges.\r\n * @return {HTMLCanvasElement} Canvas with reprojected data.\r\n */\r\nexport function render(width, height, pixelRatio,\r\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\r\n  triangulation, sources, gutter, opt_renderEdges) {\r\n\r\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\r\n    Math.round(pixelRatio * height));\r\n\r\n  if (sources.length === 0) {\r\n    return context.canvas;\r\n  }\r\n\r\n  context.scale(pixelRatio, pixelRatio);\r\n\r\n  const sourceDataExtent = createEmpty();\r\n  sources.forEach(function(src, i, arr) {\r\n    extend(sourceDataExtent, src.extent);\r\n  });\r\n\r\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\r\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\r\n  const stitchContext = createCanvasContext2D(\r\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\r\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\r\n\r\n  const stitchScale = pixelRatio / sourceResolution;\r\n\r\n  sources.forEach(function(src, i, arr) {\r\n    const xPos = src.extent[0] - sourceDataExtent[0];\r\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\r\n    const srcWidth = getWidth(src.extent);\r\n    const srcHeight = getHeight(src.extent);\r\n\r\n    stitchContext.drawImage(\r\n      src.image,\r\n      gutter, gutter,\r\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\r\n      xPos * stitchScale, yPos * stitchScale,\r\n      srcWidth * stitchScale, srcHeight * stitchScale);\r\n  });\r\n\r\n  const targetTopLeft = getTopLeft(targetExtent);\r\n\r\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\r\n    /* Calculate affine transform (src -> dst)\r\n     * Resulting matrix can be used to transform coordinate\r\n     * from `sourceProjection` to destination pixels.\r\n     *\r\n     * To optimize number of context calls and increase numerical stability,\r\n     * we also do the following operations:\r\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\r\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\r\n     *\r\n     * Src points: xi, yi\r\n     * Dst points: ui, vi\r\n     * Affine coefficients: aij\r\n     *\r\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\r\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\r\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\r\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\r\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\r\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\r\n     */\r\n    const source = triangle.source;\r\n    const target = triangle.target;\r\n    let x0 = source[0][0], y0 = source[0][1];\r\n    let x1 = source[1][0], y1 = source[1][1];\r\n    let x2 = source[2][0], y2 = source[2][1];\r\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\r\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\r\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\r\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\r\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\r\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\r\n\r\n    // Shift all the source points to improve numerical stability\r\n    // of all the subsequent calculations. The [x0, y0] is used here.\r\n    // This is also used to simplify the linear system.\r\n    const sourceNumericalShiftX = x0;\r\n    const sourceNumericalShiftY = y0;\r\n    x0 = 0;\r\n    y0 = 0;\r\n    x1 -= sourceNumericalShiftX;\r\n    y1 -= sourceNumericalShiftY;\r\n    x2 -= sourceNumericalShiftX;\r\n    y2 -= sourceNumericalShiftY;\r\n\r\n    const augmentedMatrix = [\r\n      [x1, y1, 0, 0, u1 - u0],\r\n      [x2, y2, 0, 0, u2 - u0],\r\n      [0, 0, x1, y1, v1 - v0],\r\n      [0, 0, x2, y2, v2 - v0]\r\n    ];\r\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\r\n    if (!affineCoefs) {\r\n      return;\r\n    }\r\n\r\n    context.save();\r\n    context.beginPath();\r\n    const centroidX = (u0 + u1 + u2) / 3;\r\n    const centroidY = (v0 + v1 + v2) / 3;\r\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\r\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\r\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\r\n\r\n    context.moveTo(p1[0], p1[1]);\r\n    context.lineTo(p0[0], p0[1]);\r\n    context.lineTo(p2[0], p2[1]);\r\n    context.clip();\r\n\r\n    context.transform(\r\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\r\n\r\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\r\n      sourceDataExtent[3] - sourceNumericalShiftY);\r\n\r\n    context.scale(sourceResolution / pixelRatio,\r\n      -sourceResolution / pixelRatio);\r\n\r\n    context.drawImage(stitchContext.canvas, 0, 0);\r\n    context.restore();\r\n  });\r\n\r\n  if (opt_renderEdges) {\r\n    context.save();\r\n\r\n    context.strokeStyle = 'black';\r\n    context.lineWidth = 1;\r\n\r\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\r\n      const target = triangle.target;\r\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\r\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\r\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\r\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\r\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\r\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\r\n\r\n      context.beginPath();\r\n      context.moveTo(u1, v1);\r\n      context.lineTo(u0, v0);\r\n      context.lineTo(u2, v2);\r\n      context.closePath();\r\n      context.stroke();\r\n    });\r\n\r\n    context.restore();\r\n  }\r\n  return context.canvas;\r\n}\r\n","/**\r\n * @module ol/reproj/Triangulation\r\n */\r\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\r\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\r\nimport {modulo} from '../math.js';\r\nimport {getTransform} from '../proj.js';\r\n\r\n\r\n/**\r\n * Single triangle; consists of 3 source points and 3 target points.\r\n * @typedef {Object} Triangle\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\r\n */\r\n\r\n\r\n/**\r\n * Maximum number of subdivision steps during raster reprojection triangulation.\r\n * Prevents high memory usage and large number of proj4 calls (for certain\r\n * transformations and areas). At most `2*(2^this)` triangles are created for\r\n * each triangulated extent (tile/image).\r\n * @type {number}\r\n */\r\nconst MAX_SUBDIVISION = 10;\r\n\r\n\r\n/**\r\n * Maximum allowed size of triangle relative to world width. When transforming\r\n * corners of world extent between certain projections, the resulting\r\n * triangulation seems to have zero error and no subdivision is performed. If\r\n * the triangle width is more than this (relative to world width; 0-1),\r\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\r\n * @type {number}\r\n */\r\nconst MAX_TRIANGLE_WIDTH = 0.25;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Class containing triangulation of the given target extent.\r\n * Used for determining source data and the reprojection itself.\r\n */\r\nclass Triangulation {\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\r\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\r\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\r\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\r\n   * @param {number} errorThreshold Acceptable error (in source units).\r\n   */\r\n  constructor(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\r\n\r\n    /**\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     * @private\r\n     */\r\n    this.sourceProj_ = sourceProj;\r\n\r\n    /**\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     * @private\r\n     */\r\n    this.targetProj_ = targetProj;\r\n\r\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\r\n    let transformInvCache = {};\r\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\r\n\r\n    /**\r\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\r\n     * @private\r\n     */\r\n    this.transformInv_ = function(c) {\r\n      const key = c[0] + '/' + c[1];\r\n      if (!transformInvCache[key]) {\r\n        transformInvCache[key] = transformInv(c);\r\n      }\r\n      return transformInvCache[key];\r\n    };\r\n\r\n    /**\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @private\r\n     */\r\n    this.maxSourceExtent_ = maxSourceExtent;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\r\n\r\n    /**\r\n     * @type {Array<Triangle>}\r\n     * @private\r\n     */\r\n    this.triangles_ = [];\r\n\r\n    /**\r\n     * Indicates that the triangulation crosses edge of the source projection.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.wrapsXInSource_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\r\n        !!maxSourceExtent &&\r\n        !!this.sourceProj_.getExtent() &&\r\n        (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\r\n\r\n    /**\r\n     * @type {?number}\r\n     * @private\r\n     */\r\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\r\n      getWidth(this.sourceProj_.getExtent()) : null;\r\n\r\n    /**\r\n     * @type {?number}\r\n     * @private\r\n     */\r\n    this.targetWorldWidth_ = this.targetProj_.getExtent() ?\r\n      getWidth(this.targetProj_.getExtent()) : null;\r\n\r\n    const destinationTopLeft = getTopLeft(targetExtent);\r\n    const destinationTopRight = getTopRight(targetExtent);\r\n    const destinationBottomRight = getBottomRight(targetExtent);\r\n    const destinationBottomLeft = getBottomLeft(targetExtent);\r\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\r\n    const sourceTopRight = this.transformInv_(destinationTopRight);\r\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\r\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\r\n\r\n    this.addQuad_(\r\n      destinationTopLeft, destinationTopRight,\r\n      destinationBottomRight, destinationBottomLeft,\r\n      sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\r\n      MAX_SUBDIVISION);\r\n\r\n    if (this.wrapsXInSource_) {\r\n      let leftBound = Infinity;\r\n      this.triangles_.forEach(function(triangle, i, arr) {\r\n        leftBound = Math.min(leftBound,\r\n          triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\r\n      });\r\n\r\n      // Shift triangles to be as close to `leftBound` as possible\r\n      // (if the distance is more than `worldWidth / 2` it can be closer.\r\n      this.triangles_.forEach(function(triangle) {\r\n        if (Math.max(triangle.source[0][0], triangle.source[1][0],\r\n          triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\r\n          const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\r\n            [triangle.source[1][0], triangle.source[1][1]],\r\n            [triangle.source[2][0], triangle.source[2][1]]];\r\n          if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\r\n            newTriangle[0][0] -= this.sourceWorldWidth_;\r\n          }\r\n          if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\r\n            newTriangle[1][0] -= this.sourceWorldWidth_;\r\n          }\r\n          if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\r\n            newTriangle[2][0] -= this.sourceWorldWidth_;\r\n          }\r\n\r\n          // Rarely (if the extent contains both the dateline and prime meridian)\r\n          // the shift can in turn break some triangles.\r\n          // Detect this here and don't shift in such cases.\r\n          const minX = Math.min(\r\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\r\n          const maxX = Math.max(\r\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\r\n          if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\r\n            triangle.source = newTriangle;\r\n          }\r\n        }\r\n      }.bind(this));\r\n    }\r\n\r\n    transformInvCache = {};\r\n  }\r\n\r\n  /**\r\n   * Adds triangle to the triangulation.\r\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\r\n   * @private\r\n   */\r\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\r\n    this.triangles_.push({\r\n      source: [aSrc, bSrc, cSrc],\r\n      target: [a, b, c]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds quad (points in clock-wise order) to the triangulation\r\n   * (and reprojects the vertices) if valid.\r\n   * Performs quad subdivision if needed to increase precision.\r\n   *\r\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\r\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\r\n   * @private\r\n   */\r\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\r\n\r\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\r\n    const sourceCoverageX = this.sourceWorldWidth_ ?\r\n      getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\r\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\r\n\r\n    // when the quad is wrapped in the source projection\r\n    // it covers most of the projection extent, but not fully\r\n    const wrapsX = this.sourceProj_.canWrapX() &&\r\n                 sourceCoverageX > 0.5 && sourceCoverageX < 1;\r\n\r\n    let needsSubdivision = false;\r\n\r\n    if (maxSubdivision > 0) {\r\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\r\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\r\n        const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\r\n        needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\r\n          needsSubdivision;\r\n      }\r\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\r\n        needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\r\n            needsSubdivision;\r\n      }\r\n    }\r\n\r\n    if (!needsSubdivision && this.maxSourceExtent_) {\r\n      if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\r\n        // whole quad outside source projection extent -> ignore\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!needsSubdivision) {\r\n      if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\r\n          !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\r\n          !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\r\n          !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\r\n        if (maxSubdivision > 0) {\r\n          needsSubdivision = true;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (maxSubdivision > 0) {\r\n      if (!needsSubdivision) {\r\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\r\n        const centerSrc = this.transformInv_(center);\r\n\r\n        let dx;\r\n        if (wrapsX) {\r\n          const centerSrcEstimX =\r\n              (modulo(aSrc[0], sourceWorldWidth) +\r\n               modulo(cSrc[0], sourceWorldWidth)) / 2;\r\n          dx = centerSrcEstimX -\r\n              modulo(centerSrc[0], sourceWorldWidth);\r\n        } else {\r\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\r\n        }\r\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\r\n        const centerSrcErrorSquared = dx * dx + dy * dy;\r\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\r\n      }\r\n      if (needsSubdivision) {\r\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\r\n          // split horizontally (top & bottom)\r\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\r\n          const bcSrc = this.transformInv_(bc);\r\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\r\n          const daSrc = this.transformInv_(da);\r\n\r\n          this.addQuad_(\r\n            a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\r\n          this.addQuad_(\r\n            da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\r\n        } else {\r\n          // split vertically (left & right)\r\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\r\n          const abSrc = this.transformInv_(ab);\r\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\r\n          const cdSrc = this.transformInv_(cd);\r\n\r\n          this.addQuad_(\r\n            a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\r\n          this.addQuad_(\r\n            ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (wrapsX) {\r\n      if (!this.canWrapXInSource_) {\r\n        return;\r\n      }\r\n      this.wrapsXInSource_ = true;\r\n    }\r\n\r\n    this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\r\n    this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\r\n  }\r\n\r\n  /**\r\n   * Calculates extent of the 'source' coordinates from all the triangles.\r\n   *\r\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\r\n   */\r\n  calculateSourceExtent() {\r\n    const extent = createEmpty();\r\n\r\n    this.triangles_.forEach(function(triangle, i, arr) {\r\n      const src = triangle.source;\r\n      extendCoordinate(extent, src[0]);\r\n      extendCoordinate(extent, src[1]);\r\n      extendCoordinate(extent, src[2]);\r\n    });\r\n\r\n    return extent;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<Triangle>} Array of the calculated triangles.\r\n   */\r\n  getTriangles() {\r\n    return this.triangles_;\r\n  }\r\n}\r\n\r\nexport default Triangulation;\r\n","/**\r\n * @module ol/reproj/Tile\r\n */\r\nimport {ERROR_THRESHOLD} from './common.js';\r\n\r\nimport Tile from '../Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getArea, getCenter, getIntersection} from '../extent.js';\r\nimport {clamp} from '../math.js';\r\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\r\nimport Triangulation from './Triangulation.js';\r\n\r\n\r\n/**\r\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Class encapsulating single reprojected tile.\r\n * See {@link module:ol/source/TileImage~TileImage}.\r\n *\r\n */\r\nclass ReprojTile extends Tile {\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\r\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {number} gutter Gutter of the source tiles.\r\n   * @param {FunctionType} getTileFunction\r\n   *     Function returning source tiles (z, x, y, pixelRatio).\r\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\r\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\r\n   */\r\n  constructor(\r\n    sourceProj,\r\n    sourceTileGrid,\r\n    targetProj,\r\n    targetTileGrid,\r\n    tileCoord,\r\n    wrappedTileCoord,\r\n    pixelRatio,\r\n    gutter,\r\n    getTileFunction,\r\n    opt_errorThreshold,\r\n    opt_renderEdges\r\n  ) {\r\n    super(tileCoord, TileState.IDLE);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.gutter_ = gutter;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.sourceTileGrid_ = sourceTileGrid;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.targetTileGrid_ = targetTileGrid;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilecoord.js\").TileCoord}\r\n     */\r\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<import(\"../Tile.js\").default>}\r\n     */\r\n    this.sourceTiles_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.sourcesListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.sourceZ_ = 0;\r\n\r\n    const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\r\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\r\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\r\n\r\n    const limitedTargetExtent = maxTargetExtent ?\r\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\r\n\r\n    if (getArea(limitedTargetExtent) === 0) {\r\n      // Tile is completely outside range -> EMPTY\r\n      // TODO: is it actually correct that the source even creates the tile ?\r\n      this.state = TileState.EMPTY;\r\n      return;\r\n    }\r\n\r\n    const sourceProjExtent = sourceProj.getExtent();\r\n    if (sourceProjExtent) {\r\n      if (!maxSourceExtent) {\r\n        maxSourceExtent = sourceProjExtent;\r\n      } else {\r\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\r\n      }\r\n    }\r\n\r\n    const targetResolution = targetTileGrid.getResolution(\r\n      this.wrappedTileCoord_[0]);\r\n\r\n    const targetCenter = getCenter(limitedTargetExtent);\r\n    const sourceResolution = calculateSourceResolution(\r\n      sourceProj, targetProj, targetCenter, targetResolution);\r\n\r\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\r\n      // invalid sourceResolution -> EMPTY\r\n      // probably edges of the projections when no extent is defined\r\n      this.state = TileState.EMPTY;\r\n      return;\r\n    }\r\n\r\n    const errorThresholdInPixels = opt_errorThreshold !== undefined ?\r\n      opt_errorThreshold : ERROR_THRESHOLD;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"./Triangulation.js\").default}\r\n     */\r\n    this.triangulation_ = new Triangulation(\r\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\r\n      sourceResolution * errorThresholdInPixels);\r\n\r\n    if (this.triangulation_.getTriangles().length === 0) {\r\n      // no valid triangles -> EMPTY\r\n      this.state = TileState.EMPTY;\r\n      return;\r\n    }\r\n\r\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\r\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\r\n\r\n    if (maxSourceExtent) {\r\n      if (sourceProj.canWrapX()) {\r\n        sourceExtent[1] = clamp(\r\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\r\n        sourceExtent[3] = clamp(\r\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\r\n      } else {\r\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\r\n      }\r\n    }\r\n\r\n    if (!getArea(sourceExtent)) {\r\n      this.state = TileState.EMPTY;\r\n    } else {\r\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\r\n        sourceExtent, this.sourceZ_);\r\n\r\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\r\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\r\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\r\n          if (tile) {\r\n            this.sourceTiles_.push(tile);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.sourceTiles_.length === 0) {\r\n        this.state = TileState.EMPTY;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    if (this.state == TileState.LOADING) {\r\n      this.unlistenSources_();\r\n    }\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Get the HTML Canvas element for this tile.\r\n   * @return {HTMLCanvasElement} Canvas.\r\n   */\r\n  getImage() {\r\n    return this.canvas_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  reproject_() {\r\n    const sources = [];\r\n    this.sourceTiles_.forEach(function(tile, i, arr) {\r\n      if (tile && tile.getState() == TileState.LOADED) {\r\n        sources.push({\r\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\r\n          image: tile.getImage()\r\n        });\r\n      }\r\n    }.bind(this));\r\n    this.sourceTiles_.length = 0;\r\n\r\n    if (sources.length === 0) {\r\n      this.state = TileState.ERROR;\r\n    } else {\r\n      const z = this.wrappedTileCoord_[0];\r\n      const size = this.targetTileGrid_.getTileSize(z);\r\n      const width = typeof size === 'number' ? size : size[0];\r\n      const height = typeof size === 'number' ? size : size[1];\r\n      const targetResolution = this.targetTileGrid_.getResolution(z);\r\n      const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\r\n\r\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\r\n        this.wrappedTileCoord_);\r\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\r\n        sourceResolution, this.sourceTileGrid_.getExtent(),\r\n        targetResolution, targetExtent, this.triangulation_, sources,\r\n        this.gutter_, this.renderEdges_);\r\n\r\n      this.state = TileState.LOADED;\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  load() {\r\n    if (this.state == TileState.IDLE) {\r\n      this.state = TileState.LOADING;\r\n      this.changed();\r\n\r\n      let leftToLoad = 0;\r\n\r\n      this.sourcesListenerKeys_ = [];\r\n      this.sourceTiles_.forEach(function(tile, i, arr) {\r\n        const state = tile.getState();\r\n        if (state == TileState.IDLE || state == TileState.LOADING) {\r\n          leftToLoad++;\r\n\r\n          const sourceListenKey = listen(tile, EventType.CHANGE,\r\n            function(e) {\r\n              const state = tile.getState();\r\n              if (state == TileState.LOADED ||\r\n                    state == TileState.ERROR ||\r\n                    state == TileState.EMPTY) {\r\n                unlistenByKey(sourceListenKey);\r\n                leftToLoad--;\r\n                if (leftToLoad === 0) {\r\n                  this.unlistenSources_();\r\n                  this.reproject_();\r\n                }\r\n              }\r\n            }, this);\r\n          this.sourcesListenerKeys_.push(sourceListenKey);\r\n        }\r\n      }.bind(this));\r\n\r\n      this.sourceTiles_.forEach(function(tile, i, arr) {\r\n        const state = tile.getState();\r\n        if (state == TileState.IDLE) {\r\n          tile.load();\r\n        }\r\n      });\r\n\r\n      if (leftToLoad === 0) {\r\n        setTimeout(this.reproject_.bind(this), 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  unlistenSources_() {\r\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\r\n    this.sourcesListenerKeys_ = null;\r\n  }\r\n}\r\n\r\n\r\nexport default ReprojTile;\r\n","/**\r\n * @module ol/tileurlfunction\r\n */\r\nimport {assert} from './asserts.js';\r\nimport {modulo} from './math.js';\r\nimport {hash as tileCoordHash} from './tilecoord.js';\r\n\r\n\r\n/**\r\n * @param {string} template Template.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTemplate(template, tileGrid) {\r\n  const zRegEx = /\\{z\\}/g;\r\n  const xRegEx = /\\{x\\}/g;\r\n  const yRegEx = /\\{y\\}/g;\r\n  const dashYRegEx = /\\{-y\\}/g;\r\n  return (\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function(tileCoord, pixelRatio, projection) {\r\n      if (!tileCoord) {\r\n        return undefined;\r\n      } else {\r\n        return template.replace(zRegEx, tileCoord[0].toString())\r\n          .replace(xRegEx, tileCoord[1].toString())\r\n          .replace(yRegEx, tileCoord[2].toString())\r\n          .replace(dashYRegEx, function() {\r\n            const z = tileCoord[0];\r\n            const range = tileGrid.getFullTileRange(z);\r\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\r\n            const y = range.getHeight() - tileCoord[2] - 1;\r\n            return y.toString();\r\n          });\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<string>} templates Templates.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTemplates(templates, tileGrid) {\r\n  const len = templates.length;\r\n  const tileUrlFunctions = new Array(len);\r\n  for (let i = 0; i < len; ++i) {\r\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\r\n  }\r\n  return createFromTileUrlFunctions(tileUrlFunctions);\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\r\n  if (tileUrlFunctions.length === 1) {\r\n    return tileUrlFunctions[0];\r\n  }\r\n  return (\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function(tileCoord, pixelRatio, projection) {\r\n      if (!tileCoord) {\r\n        return undefined;\r\n      } else {\r\n        const h = tileCoordHash(tileCoord);\r\n        const index = modulo(h, tileUrlFunctions.length);\r\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {string|undefined} Tile URL.\r\n */\r\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\r\n  return undefined;\r\n}\r\n\r\n\r\n/**\r\n * @param {string} url URL.\r\n * @return {Array<string>} Array of urls.\r\n */\r\nexport function expandUrl(url) {\r\n  const urls = [];\r\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\r\n  if (match) {\r\n    // char range\r\n    const startCharCode = match[1].charCodeAt(0);\r\n    const stopCharCode = match[2].charCodeAt(0);\r\n    let charCode;\r\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\r\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\r\n    }\r\n    return urls;\r\n  }\r\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\r\n  if (match) {\r\n    // number range\r\n    const stop = parseInt(match[2], 10);\r\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\r\n      urls.push(url.replace(match[0], i.toString()));\r\n    }\r\n    return urls;\r\n  }\r\n  urls.push(url);\r\n  return urls;\r\n}\r\n","/**\r\n * @module ol/tilegrid/TileGrid\r\n */\r\nimport {DEFAULT_TILE_SIZE} from './common.js';\r\nimport {assert} from '../asserts.js';\r\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\r\nimport {isSorted, linearFindNearest} from '../array.js';\r\nimport {createOrUpdate, getTopLeft} from '../extent.js';\r\nimport {clamp} from '../math.js';\r\nimport {toSize} from '../size.js';\r\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\r\n\r\n\r\n/**\r\n * @private\r\n * @type {import(\"../tilecoord.js\").TileCoord}\r\n */\r\nconst tmpTileCoord = [0, 0, 0];\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\r\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\r\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\r\n * @property {number} [minZoom=0] Minimum zoom.\r\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\r\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\r\n * specified, `extent` or `origins` must be provided.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\r\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\r\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\r\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\r\n * `origin` must be provided.\r\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\r\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\r\n * array will have a length of `maxZoom + 1`.\r\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\r\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\r\n * Default is `[256, 256]`.\r\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\r\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\r\n * tile size.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for setting the grid pattern for sources accessing tiled-image\r\n * servers.\r\n * @api\r\n */\r\nclass TileGrid {\r\n  /**\r\n   * @param {Options} options Tile grid options.\r\n   */\r\n  constructor(options) {\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<number>}\r\n     */\r\n    this.resolutions_ = options.resolutions;\r\n    assert(isSorted(this.resolutions_, function(a, b) {\r\n      return b - a;\r\n    }, true), 17); // `resolutions` must be sorted in descending order\r\n\r\n\r\n    // check if we've got a consistent zoom factor and origin\r\n    let zoomFactor;\r\n    if (!options.origins) {\r\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\r\n        if (!zoomFactor) {\r\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\r\n        } else {\r\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\r\n            zoomFactor = undefined;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.zoomFactor_ = zoomFactor;\r\n\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.maxZoom = this.resolutions_.length - 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.origin_ = options.origin !== undefined ? options.origin : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\r\n     */\r\n    this.origins_ = null;\r\n    if (options.origins !== undefined) {\r\n      this.origins_ = options.origins;\r\n      assert(this.origins_.length == this.resolutions_.length,\r\n        20); // Number of `origins` and `resolutions` must be equal\r\n    }\r\n\r\n    const extent = options.extent;\r\n\r\n    if (extent !== undefined &&\r\n        !this.origin_ && !this.origins_) {\r\n      this.origin_ = getTopLeft(extent);\r\n    }\r\n\r\n    assert(\r\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\r\n      18); // Either `origin` or `origins` must be configured, never both\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number|import(\"../size.js\").Size>}\r\n     */\r\n    this.tileSizes_ = null;\r\n    if (options.tileSizes !== undefined) {\r\n      this.tileSizes_ = options.tileSizes;\r\n      assert(this.tileSizes_.length == this.resolutions_.length,\r\n        19); // Number of `tileSizes` and `resolutions` must be equal\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|import(\"../size.js\").Size}\r\n     */\r\n    this.tileSize_ = options.tileSize !== undefined ?\r\n      options.tileSize :\r\n      !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\r\n    assert(\r\n      (!this.tileSize_ && this.tileSizes_) ||\r\n        (this.tileSize_ && !this.tileSizes_),\r\n      22); // Either `tileSize` or `tileSizes` must be configured, never both\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = extent !== undefined ? extent : null;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../TileRange.js\").default>}\r\n     */\r\n    this.fullTileRanges_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.tmpSize_ = [0, 0];\r\n\r\n    if (options.sizes !== undefined) {\r\n      this.fullTileRanges_ = options.sizes.map(function(size, z) {\r\n        const tileRange = new TileRange(\r\n          Math.min(0, size[0]), Math.max(size[0] - 1, -1),\r\n          Math.min(0, size[1]), Math.max(size[1] - 1, -1));\r\n        return tileRange;\r\n      }, this);\r\n    } else if (extent) {\r\n      this.calculateTileRanges_(extent);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Call a function with each tile coordinate for a given extent and zoom level.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} zoom Integer zoom level.\r\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\r\n   * @api\r\n   */\r\n  forEachTileCoord(extent, zoom, callback) {\r\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\r\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\r\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\r\n        callback([zoom, i, j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\r\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\r\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\r\n   * @return {boolean} Callback succeeded.\r\n   */\r\n  forEachTileCoordParentTileRange(tileCoord, callback, opt_tileRange, opt_extent) {\r\n    let tileRange, x, y;\r\n    let tileCoordExtent = null;\r\n    let z = tileCoord[0] - 1;\r\n    if (this.zoomFactor_ === 2) {\r\n      x = tileCoord[1];\r\n      y = tileCoord[2];\r\n    } else {\r\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\r\n    }\r\n    while (z >= this.minZoom) {\r\n      if (this.zoomFactor_ === 2) {\r\n        x = Math.floor(x / 2);\r\n        y = Math.floor(y / 2);\r\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\r\n      } else {\r\n        tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\r\n      }\r\n      if (callback(z, tileRange)) {\r\n        return true;\r\n      }\r\n      --z;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the extent for this tile grid, if it was configured.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return this.extent_;\r\n  }\r\n\r\n  /**\r\n   * Get the maximum zoom level for the grid.\r\n   * @return {number} Max zoom.\r\n   * @api\r\n   */\r\n  getMaxZoom() {\r\n    return this.maxZoom;\r\n  }\r\n\r\n  /**\r\n   * Get the minimum zoom level for the grid.\r\n   * @return {number} Min zoom.\r\n   * @api\r\n   */\r\n  getMinZoom() {\r\n    return this.minZoom;\r\n  }\r\n\r\n  /**\r\n   * Get the origin for the grid at the given zoom level.\r\n   * @param {number} z Integer zoom level.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\r\n   * @api\r\n   */\r\n  getOrigin(z) {\r\n    if (this.origin_) {\r\n      return this.origin_;\r\n    } else {\r\n      return this.origins_[z];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the resolution for the given zoom level.\r\n   * @param {number} z Integer zoom level.\r\n   * @return {number} Resolution.\r\n   * @api\r\n   */\r\n  getResolution(z) {\r\n    return this.resolutions_[z];\r\n  }\r\n\r\n  /**\r\n   * Get the list of resolutions for the tile grid.\r\n   * @return {Array<number>} Resolutions.\r\n   * @api\r\n   */\r\n  getResolutions() {\r\n    return this.resolutions_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\r\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\r\n   * @return {import(\"../TileRange.js\").default} Tile range.\r\n   */\r\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\r\n    if (tileCoord[0] < this.maxZoom) {\r\n      if (this.zoomFactor_ === 2) {\r\n        const minX = tileCoord[1] * 2;\r\n        const minY = tileCoord[2] * 2;\r\n        return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\r\n      }\r\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\r\n      return this.getTileRangeForExtentAndZ(\r\n        tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get the extent for a tile range.\r\n   * @param {number} z Integer zoom level.\r\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   */\r\n  getTileRangeExtent(z, tileRange, opt_extent) {\r\n    const origin = this.getOrigin(z);\r\n    const resolution = this.getResolution(z);\r\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\r\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\r\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\r\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\r\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\r\n  }\r\n\r\n  /**\r\n   * Get a tile range for the given extent and integer zoom level.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} z Integer zoom level.\r\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\r\n   * @return {import(\"../TileRange.js\").default} Tile range.\r\n   */\r\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\r\n    const tileCoord = tmpTileCoord;\r\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\r\n    const minX = tileCoord[1];\r\n    const minY = tileCoord[2];\r\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\r\n    return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\r\n   */\r\n  getTileCoordCenter(tileCoord) {\r\n    const origin = this.getOrigin(tileCoord[0]);\r\n    const resolution = this.getResolution(tileCoord[0]);\r\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\r\n    return [\r\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\r\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Get the extent of a tile coordinate.\r\n   *\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getTileCoordExtent(tileCoord, opt_extent) {\r\n    const origin = this.getOrigin(tileCoord[0]);\r\n    const resolution = this.getResolution(tileCoord[0]);\r\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\r\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\r\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\r\n    const maxX = minX + tileSize[0] * resolution;\r\n    const maxY = minY + tileSize[1] * resolution;\r\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\r\n  }\r\n\r\n  /**\r\n   * Get the tile coordinate for the given map coordinate and resolution.  This\r\n   * method considers that coordinates that intersect tile boundaries should be\r\n   * assigned the higher tile coordinate.\r\n   *\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n   * @api\r\n   */\r\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\r\n    return this.getTileCoordForXYAndResolution_(\r\n      coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\r\n  }\r\n\r\n  /**\r\n   * Note that this method should not be called for resolutions that correspond\r\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {number} resolution Resolution (for a non-integer zoom level).\r\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\r\n   *     intersections go to the higher tile coordinate, let edge intersections\r\n   *     go to the lower tile coordinate.\r\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n   * @private\r\n   */\r\n  getTileCoordForXYAndResolution_(x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\r\n    const z = this.getZForResolution(resolution);\r\n    const scale = resolution / this.getResolution(z);\r\n    const origin = this.getOrigin(z);\r\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n\r\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\r\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\r\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\r\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\r\n    let tileCoordX = scale * xFromOrigin / tileSize[0];\r\n    let tileCoordY = scale * yFromOrigin / tileSize[1];\r\n\r\n    if (reverseIntersectionPolicy) {\r\n      tileCoordX = Math.ceil(tileCoordX) - 1;\r\n      tileCoordY = Math.ceil(tileCoordY) - 1;\r\n    } else {\r\n      tileCoordX = Math.floor(tileCoordX);\r\n      tileCoordY = Math.floor(tileCoordY);\r\n    }\r\n\r\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\r\n  }\r\n\r\n  /**\r\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\r\n   * they should have separate implementations.  This method is for integer zoom\r\n   * levels.  The other method should only be called for resolutions corresponding\r\n   * to non-integer zoom levels.\r\n   * @param {number} x Map x coordinate.\r\n   * @param {number} y Map y coordinate.\r\n   * @param {number} z Integer zoom level.\r\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\r\n   *     intersections go to the higher tile coordinate, let edge intersections\r\n   *     go to the lower tile coordinate.\r\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n   * @private\r\n   */\r\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\r\n    const origin = this.getOrigin(z);\r\n    const resolution = this.getResolution(z);\r\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n\r\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\r\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\r\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\r\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\r\n    let tileCoordX = xFromOrigin / tileSize[0];\r\n    let tileCoordY = yFromOrigin / tileSize[1];\r\n\r\n    if (reverseIntersectionPolicy) {\r\n      tileCoordX = Math.ceil(tileCoordX) - 1;\r\n      tileCoordY = Math.ceil(tileCoordY) - 1;\r\n    } else {\r\n      tileCoordX = Math.floor(tileCoordX);\r\n      tileCoordY = Math.floor(tileCoordY);\r\n    }\r\n\r\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\r\n  }\r\n\r\n  /**\r\n   * Get a tile coordinate given a map coordinate and zoom level.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} z Zoom level.\r\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n   * @api\r\n   */\r\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\r\n    return this.getTileCoordForXYAndZ_(\r\n      coordinate[0], coordinate[1], z, false, opt_tileCoord);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @return {number} Tile resolution.\r\n   */\r\n  getTileCoordResolution(tileCoord) {\r\n    return this.resolutions_[tileCoord[0]];\r\n  }\r\n\r\n  /**\r\n   * Get the tile size for a zoom level. The type of the return value matches the\r\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\r\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\r\n   * @param {number} z Z.\r\n   * @return {number|import(\"../size.js\").Size} Tile size.\r\n   * @api\r\n   */\r\n  getTileSize(z) {\r\n    if (this.tileSize_) {\r\n      return this.tileSize_;\r\n    } else {\r\n      return this.tileSizes_[z];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Zoom level.\r\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\r\n   */\r\n  getFullTileRange(z) {\r\n    if (!this.fullTileRanges_) {\r\n      return null;\r\n    } else {\r\n      return this.fullTileRanges_[z];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} resolution Resolution.\r\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\r\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\r\n   *     higher resolution will be used. Default is 0.\r\n   * @return {number} Z.\r\n   * @api\r\n   */\r\n  getZForResolution(resolution, opt_direction) {\r\n    const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\r\n    return clamp(z, this.minZoom, this.maxZoom);\r\n  }\r\n\r\n  /**\r\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\r\n   * @private\r\n   */\r\n  calculateTileRanges_(extent) {\r\n    const length = this.resolutions_.length;\r\n    const fullTileRanges = new Array(length);\r\n    for (let z = this.minZoom; z < length; ++z) {\r\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\r\n    }\r\n    this.fullTileRanges_ = fullTileRanges;\r\n  }\r\n}\r\n\r\n\r\nexport default TileGrid;\r\n","/**\r\n * @module ol/tilegrid\r\n */\r\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\r\nimport {toSize} from './size.js';\r\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\r\nimport Corner from './extent/Corner.js';\r\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\r\nimport Units from './proj/Units.js';\r\nimport TileGrid from './tilegrid/TileGrid.js';\r\n\r\n\r\n/**\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {!TileGrid} Default tile grid for the\r\n * passed projection.\r\n */\r\nexport function getForProjection(projection) {\r\n  let tileGrid = projection.getDefaultTileGrid();\r\n  if (!tileGrid) {\r\n    tileGrid = createForProjection(projection);\r\n    projection.setDefaultTileGrid(tileGrid);\r\n  }\r\n  return tileGrid;\r\n}\r\n\r\n\r\n/**\r\n * @param {TileGrid} tileGrid Tile grid.\r\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\r\n */\r\nexport function wrapX(tileGrid, tileCoord, projection) {\r\n  const z = tileCoord[0];\r\n  const center = tileGrid.getTileCoordCenter(tileCoord);\r\n  const projectionExtent = extentFromProjection(projection);\r\n  if (!containsCoordinate(projectionExtent, center)) {\r\n    const worldWidth = getWidth(projectionExtent);\r\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\r\n    center[0] += worldWidth * worldsAway;\r\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\r\n  } else {\r\n    return tileCoord;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number=} opt_maxZoom Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\r\n * @return {!TileGrid} TileGrid instance.\r\n */\r\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\r\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\r\n\r\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\r\n\r\n  return new TileGrid({\r\n    extent: extent,\r\n    origin: getCorner(extent, corner),\r\n    resolutions: resolutions,\r\n    tileSize: opt_tileSize\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} XYZOptions\r\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\r\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\r\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\r\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\r\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\r\n * @property {number} [minZoom=0] Minimum zoom.\r\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\r\n */\r\n\r\n\r\n/**\r\n * Creates a tile grid with a standard XYZ tiling scheme.\r\n * @param {XYZOptions=} opt_options Tile grid options.\r\n * @return {!TileGrid} Tile grid instance.\r\n * @api\r\n */\r\nexport function createXYZ(opt_options) {\r\n  /** @type {XYZOptions} */\r\n  const xyzOptions = opt_options || {};\r\n\r\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\r\n\r\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\r\n  const gridOptions = {\r\n    extent: extent,\r\n    minZoom: xyzOptions.minZoom,\r\n    tileSize: xyzOptions.tileSize,\r\n    resolutions: resolutionsFromExtent(\r\n      extent,\r\n      xyzOptions.maxZoom,\r\n      xyzOptions.tileSize\r\n    )\r\n  };\r\n  return new TileGrid(gridOptions);\r\n}\r\n\r\n\r\n/**\r\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number=} opt_maxZoom Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @return {!Array<number>} Resolutions array.\r\n */\r\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\r\n  const maxZoom = opt_maxZoom !== undefined ?\r\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\r\n\r\n  const height = getHeight(extent);\r\n  const width = getWidth(extent);\r\n\r\n  const tileSize = toSize(opt_tileSize !== undefined ?\r\n    opt_tileSize : DEFAULT_TILE_SIZE);\r\n  const maxResolution = Math.max(\r\n    width / tileSize[0], height / tileSize[1]);\r\n\r\n  const length = maxZoom + 1;\r\n  const resolutions = new Array(length);\r\n  for (let z = 0; z < length; ++z) {\r\n    resolutions[z] = maxResolution / Math.pow(2, z);\r\n  }\r\n  return resolutions;\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\r\n * @param {number=} opt_maxZoom Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\r\n * @return {!TileGrid} TileGrid instance.\r\n */\r\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\r\n  const extent = extentFromProjection(projection);\r\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\r\n}\r\n\r\n\r\n/**\r\n * Generate a tile grid extent from a projection.  If the projection has an\r\n * extent, it is used.  If not, a global extent is assumed.\r\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\r\n * @return {import(\"./extent.js\").Extent} Extent.\r\n */\r\nexport function extentFromProjection(projection) {\r\n  projection = getProjection(projection);\r\n  let extent = projection.getExtent();\r\n  if (!extent) {\r\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\r\n    extent = createOrUpdate(-half, -half, half, half);\r\n  }\r\n  return extent;\r\n}\r\n","/**\r\n * @module ol/source/Tile\r\n */\r\nimport {abstract} from '../util.js';\r\nimport TileCache from '../TileCache.js';\r\nimport TileState from '../TileState.js';\r\nimport Event from '../events/Event.js';\r\nimport {equivalent} from '../proj.js';\r\nimport {toSize, scale as scaleSize} from '../size.js';\r\nimport Source from './Source.js';\r\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\r\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize]\r\n * @property {boolean} [opaque]\r\n * @property {number} [tilePixelRatio]\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\r\n * @property {import(\"./State.js\").default} [state]\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\r\n * @property {boolean} [wrapX=true]\r\n * @property {number} [transition]\r\n * @property {string} [key]\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for sources providing images divided into a tile grid.\r\n * @abstract\r\n * @api\r\n */\r\nclass TileSource extends Source {\r\n  /**\r\n   * @param {Options} options SourceTile source options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      attributionsCollapsible: options.attributionsCollapsible,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      wrapX: options.wrapX\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\r\n      options.tilePixelRatio : 1;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\r\n\r\n    let cacheSize = options.cacheSize;\r\n    if (cacheSize === undefined) {\r\n      const tileSize = [256, 256];\r\n      const tileGrid = options.tileGrid;\r\n      if (tileGrid) {\r\n        toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\r\n      }\r\n      const canUseScreen = 'screen' in self;\r\n      const width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\r\n      const height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\r\n      cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../TileCache.js\").default}\r\n     */\r\n    this.tileCache = new TileCache(cacheSize);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.tmpSize = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.key_ = options.key || '';\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../Tile.js\").Options}\r\n     */\r\n    this.tileOptions = {transition: options.transition};\r\n\r\n    /**\r\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\r\n     * by a renderer if the views resolution does not match any resolution of the tile source.\r\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\r\n     * will be used. If -1, the nearest higher resolution will be used.\r\n     * @type {number=}\r\n     */\r\n    this.zDirection;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  canExpireCache() {\r\n    return this.tileCache.canExpireCache();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\r\n   */\r\n  expireCache(projection, usedTiles) {\r\n    const tileCache = this.getTileCacheForProjection(projection);\r\n    if (tileCache) {\r\n      tileCache.expireCache(usedTiles);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {number} z Zoom level.\r\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\r\n   *     loaded tile.  If the callback returns `false`, the tile will not be\r\n   *     considered loaded.\r\n   * @return {boolean} The tile range is fully covered with loaded tiles.\r\n   */\r\n  forEachLoadedTile(projection, z, tileRange, callback) {\r\n    const tileCache = this.getTileCacheForProjection(projection);\r\n    if (!tileCache) {\r\n      return false;\r\n    }\r\n\r\n    let covered = true;\r\n    let tile, tileCoordKey, loaded;\r\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n        tileCoordKey = getKeyZXY(z, x, y);\r\n        loaded = false;\r\n        if (tileCache.containsKey(tileCoordKey)) {\r\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\r\n          loaded = tile.getState() === TileState.LOADED;\r\n          if (loaded) {\r\n            loaded = (callback(tile) !== false);\r\n          }\r\n        }\r\n        if (!loaded) {\r\n          covered = false;\r\n        }\r\n      }\r\n    }\r\n    return covered;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {number} Gutter.\r\n   */\r\n  getGutterForProjection(projection) {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Return the key to be used for all tiles in the source.\r\n   * @return {string} The key for all tiles.\r\n   * @protected\r\n   */\r\n  getKey() {\r\n    return this.key_;\r\n  }\r\n\r\n  /**\r\n   * Set the value to be used as the key for all tiles in the source.\r\n   * @param {string} key The key for tiles.\r\n   * @protected\r\n   */\r\n  setKey(key) {\r\n    if (this.key_ !== key) {\r\n      this.key_ = key;\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {boolean} Opaque.\r\n   */\r\n  getOpaque(projection) {\r\n    return this.opaque_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getResolutions() {\r\n    return this.tileGrid.getResolutions();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../Tile.js\").default} Tile.\r\n   */\r\n  getTile(z, x, y, pixelRatio, projection) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Return the tile grid of the tile source.\r\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\r\n   * @api\r\n   */\r\n  getTileGrid() {\r\n    return this.tileGrid;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\r\n   */\r\n  getTileGridForProjection(projection) {\r\n    if (!this.tileGrid) {\r\n      return getTileGridForProjection(projection);\r\n    } else {\r\n      return this.tileGrid;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {import(\"../TileCache.js\").default} Tile cache.\r\n   * @protected\r\n   */\r\n  getTileCacheForProjection(projection) {\r\n    const thisProj = this.getProjection();\r\n    if (thisProj && !equivalent(thisProj, projection)) {\r\n      return null;\r\n    } else {\r\n      return this.tileCache;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the tile pixel ratio for this source. Subclasses may override this\r\n   * method, which is meant to return a supported pixel ratio that matches the\r\n   * provided `pixelRatio` as close as possible.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Tile pixel ratio.\r\n   */\r\n  getTilePixelRatio(pixelRatio) {\r\n    return this.tilePixelRatio_;\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Z.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {import(\"../size.js\").Size} Tile size.\r\n   */\r\n  getTilePixelSize(z, pixelRatio, projection) {\r\n    const tileGrid = this.getTileGridForProjection(projection);\r\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\r\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\r\n    if (tilePixelRatio == 1) {\r\n      return tileSize;\r\n    } else {\r\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\r\n   * is outside the resolution and extent range of the tile grid, `null` will be\r\n   * returned.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\r\n   *     null if no tile URL should be created for the passed `tileCoord`.\r\n   */\r\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\r\n    const projection = opt_projection !== undefined ?\r\n      opt_projection : this.getProjection();\r\n    const tileGrid = this.getTileGridForProjection(projection);\r\n    if (this.getWrapX() && projection.isGlobal()) {\r\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\r\n    }\r\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\r\n  }\r\n\r\n  /**\r\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\r\n   * @api\r\n   */\r\n  clear() {\r\n    this.tileCache.clear();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  refresh() {\r\n    this.clear();\r\n    super.refresh();\r\n  }\r\n\r\n  /**\r\n   * Marks a tile coord as being used, without triggering a load.\r\n   * @abstract\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   */\r\n  useTile(z, x, y, projection) {}\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\r\n * type.\r\n */\r\nexport class TileSourceEvent extends Event {\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../Tile.js\").default} tile The tile.\r\n   */\r\n  constructor(type, tile) {\r\n\r\n    super(type);\r\n\r\n    /**\r\n     * The tile related to the event.\r\n     * @type {import(\"../Tile.js\").default}\r\n     * @api\r\n     */\r\n    this.tile = tile;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default TileSource;\r\n","/**\r\n * @module ol/source/TileEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n\r\n  /**\r\n   * Triggered when a tile starts loading.\r\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\r\n   * @api\r\n   */\r\n  TILELOADSTART: 'tileloadstart',\r\n\r\n  /**\r\n   * Triggered when a tile finishes loading, either when its data is loaded,\r\n   * or when loading was aborted because the tile is no longer needed.\r\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\r\n   * @api\r\n   */\r\n  TILELOADEND: 'tileloadend',\r\n\r\n  /**\r\n   * Triggered if tile loading results in an error.\r\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\r\n   * @api\r\n   */\r\n  TILELOADERROR: 'tileloaderror'\r\n\r\n};\r\n","/**\r\n * @module ol/source/UrlTile\r\n */\r\nimport {getUid} from '../util.js';\r\nimport TileState from '../TileState.js';\r\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\r\nimport TileSource, {TileSourceEvent} from './Tile.js';\r\nimport TileEventType from './TileEventType.js';\r\nimport {getKeyZXY} from '../tilecoord.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize]\r\n * @property {boolean} [opaque]\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\r\n * @property {import(\"./State.js\").default} [state]\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\r\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\r\n * @property {number} [tilePixelRatio]\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\r\n * @property {string} [url]\r\n * @property {Array<string>} [urls]\r\n * @property {boolean} [wrapX=true]\r\n * @property {number} [transition]\r\n * @property {string} [key]\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for sources providing tiles divided into a tile grid over http.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n */\r\nclass UrlTile extends TileSource {\r\n  /**\r\n   * @param {Options} options Image tile options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      opaque: options.opaque,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      tileGrid: options.tileGrid,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      wrapX: options.wrapX,\r\n      transition: options.transition,\r\n      key: options.key,\r\n      attributionsCollapsible: options.attributionsCollapsible\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../Tile.js\").LoadFunction}\r\n     */\r\n    this.tileLoadFunction = options.tileLoadFunction;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../Tile.js\").UrlFunction}\r\n     */\r\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<string>|null}\r\n     */\r\n    this.urls = null;\r\n\r\n    if (options.urls) {\r\n      this.setUrls(options.urls);\r\n    } else if (options.url) {\r\n      this.setUrl(options.url);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, boolean>}\r\n     */\r\n    this.tileLoadingKeys_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * Return the tile load function of the source.\r\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\r\n   * @api\r\n   */\r\n  getTileLoadFunction() {\r\n    return this.tileLoadFunction;\r\n  }\r\n\r\n  /**\r\n   * Return the tile URL function of the source.\r\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\r\n   * @api\r\n   */\r\n  getTileUrlFunction() {\r\n    return this.tileUrlFunction;\r\n  }\r\n\r\n  /**\r\n   * Return the URLs used for this source.\r\n   * When a tileUrlFunction is used instead of url or urls,\r\n   * null will be returned.\r\n   * @return {!Array<string>|null} URLs.\r\n   * @api\r\n   */\r\n  getUrls() {\r\n    return this.urls;\r\n  }\r\n\r\n  /**\r\n   * Handle tile change events.\r\n   * @param {import(\"../events/Event.js\").default} event Event.\r\n   * @protected\r\n   */\r\n  handleTileChange(event) {\r\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\r\n    const uid = getUid(tile);\r\n    const tileState = tile.getState();\r\n    let type;\r\n    if (tileState == TileState.LOADING) {\r\n      this.tileLoadingKeys_[uid] = true;\r\n      type = TileEventType.TILELOADSTART;\r\n    } else if (uid in this.tileLoadingKeys_) {\r\n      delete this.tileLoadingKeys_[uid];\r\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\r\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\r\n          TileEventType.TILELOADEND : undefined;\r\n    }\r\n    if (type != undefined) {\r\n      this.dispatchEvent(new TileSourceEvent(type, tile));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the tile load function of the source.\r\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\r\n   * @api\r\n   */\r\n  setTileLoadFunction(tileLoadFunction) {\r\n    this.tileCache.clear();\r\n    this.tileLoadFunction = tileLoadFunction;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the tile URL function of the source.\r\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\r\n   * @param {string=} key Optional new tile key for the source.\r\n   * @api\r\n   */\r\n  setTileUrlFunction(tileUrlFunction, key) {\r\n    this.tileUrlFunction = tileUrlFunction;\r\n    this.tileCache.pruneExceptNewestZ();\r\n    if (typeof key !== 'undefined') {\r\n      this.setKey(key);\r\n    } else {\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the URL to use for requests.\r\n   * @param {string} url URL.\r\n   * @api\r\n   */\r\n  setUrl(url) {\r\n    const urls = this.urls = expandUrl(url);\r\n    this.setUrls(urls);\r\n  }\r\n\r\n  /**\r\n   * Set the URLs to use for requests.\r\n   * @param {Array<string>} urls URLs.\r\n   * @api\r\n   */\r\n  setUrls(urls) {\r\n    this.urls = urls;\r\n    const key = urls.join('\\n');\r\n    if (this.generateTileUrlFunction_) {\r\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\r\n    } else {\r\n      this.setKey(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  useTile(z, x, y) {\r\n    const tileCoordKey = getKeyZXY(z, x, y);\r\n    if (this.tileCache.containsKey(tileCoordKey)) {\r\n      this.tileCache.get(tileCoordKey);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default UrlTile;\r\n","/**\r\n * @module ol/source/TileImage\r\n */\r\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\r\nimport {getUid} from '../util.js';\r\nimport ImageTile from '../ImageTile.js';\r\nimport TileCache from '../TileCache.js';\r\nimport TileState from '../TileState.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {equivalent, get as getProjection} from '../proj.js';\r\nimport ReprojTile from '../reproj/Tile.js';\r\nimport UrlTile from './UrlTile.js';\r\nimport {getKey, getKeyZXY} from '../tilecoord.js';\r\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"./State.js\").default} [state] Source state.\r\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\r\n * Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\r\n * service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\r\n * request out-of-bounds tiles from the server. When set to `false`, only one\r\n * world will be rendered. When set to `true`, tiles will be requested for one\r\n * world only, but they will be wrapped horizontally to render multiple worlds.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {string} [key] Optional tile key for proper cache fetching\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for sources providing images divided into a tile grid.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n * @api\r\n */\r\nclass TileImage extends UrlTile {\r\n  /**\r\n   * @param {!Options} options Image tile options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      opaque: options.opaque,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      tileGrid: options.tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction ?\r\n        options.tileLoadFunction : defaultTileLoadFunction,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      tileUrlFunction: options.tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX,\r\n      transition: options.transition,\r\n      key: options.key,\r\n      attributionsCollapsible: options.attributionsCollapsible\r\n    });\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin =\r\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {typeof ImageTile}\r\n     */\r\n    this.tileClass = options.tileClass !== undefined ?\r\n      options.tileClass : ImageTile;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Object<string, TileCache>}\r\n     */\r\n    this.tileCacheForProjection = {};\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\r\n     */\r\n    this.tileGridForProjection = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderReprojectionEdges_ = false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  canExpireCache() {\r\n    if (!ENABLE_RASTER_REPROJECTION) {\r\n      return super.canExpireCache();\r\n    }\r\n    if (this.tileCache.canExpireCache()) {\r\n      return true;\r\n    } else {\r\n      for (const key in this.tileCacheForProjection) {\r\n        if (this.tileCacheForProjection[key].canExpireCache()) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  expireCache(projection, usedTiles) {\r\n    if (!ENABLE_RASTER_REPROJECTION) {\r\n      super.expireCache(projection, usedTiles);\r\n      return;\r\n    }\r\n    const usedTileCache = this.getTileCacheForProjection(projection);\r\n\r\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\r\n    for (const id in this.tileCacheForProjection) {\r\n      const tileCache = this.tileCacheForProjection[id];\r\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getGutterForProjection(projection) {\r\n    if (ENABLE_RASTER_REPROJECTION &&\r\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\r\n      return 0;\r\n    } else {\r\n      return this.getGutter();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {number} Gutter.\r\n   */\r\n  getGutter() {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getOpaque(projection) {\r\n    if (ENABLE_RASTER_REPROJECTION &&\r\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\r\n      return false;\r\n    } else {\r\n      return super.getOpaque(projection);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getTileGridForProjection(projection) {\r\n    if (!ENABLE_RASTER_REPROJECTION) {\r\n      return super.getTileGridForProjection(projection);\r\n    }\r\n    const thisProj = this.getProjection();\r\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\r\n      return this.tileGrid;\r\n    } else {\r\n      const projKey = getUid(projection);\r\n      if (!(projKey in this.tileGridForProjection)) {\r\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\r\n      }\r\n      return (\r\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getTileCacheForProjection(projection) {\r\n    if (!ENABLE_RASTER_REPROJECTION) {\r\n      return super.getTileCacheForProjection(projection);\r\n    }\r\n    const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\r\n      return this.tileCache;\r\n    } else {\r\n      const projKey = getUid(projection);\r\n      if (!(projKey in this.tileCacheForProjection)) {\r\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\r\n      }\r\n      return this.tileCacheForProjection[projKey];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {string} key The key set on the tile.\r\n   * @return {!import(\"../Tile.js\").default} Tile.\r\n   * @private\r\n   */\r\n  createTile_(z, x, y, pixelRatio, projection, key) {\r\n    const tileCoord = [z, x, y];\r\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\r\n      tileCoord, projection);\r\n    const tileUrl = urlTileCoord ?\r\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\r\n    const tile = new this.tileClass(\r\n      tileCoord,\r\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\r\n      tileUrl !== undefined ? tileUrl : '',\r\n      this.crossOrigin,\r\n      this.tileLoadFunction,\r\n      this.tileOptions);\r\n    tile.key = key;\r\n    listen(tile, EventType.CHANGE,\r\n      this.handleTileChange, this);\r\n    return tile;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getTile(z, x, y, pixelRatio, projection) {\r\n    const sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\r\n    if (!ENABLE_RASTER_REPROJECTION ||\r\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\r\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\r\n    } else {\r\n      const cache = this.getTileCacheForProjection(projection);\r\n      const tileCoord = [z, x, y];\r\n      let tile;\r\n      const tileCoordKey = getKey(tileCoord);\r\n      if (cache.containsKey(tileCoordKey)) {\r\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\r\n      }\r\n      const key = this.getKey();\r\n      if (tile && tile.key == key) {\r\n        return tile;\r\n      } else {\r\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\r\n        const targetTileGrid = this.getTileGridForProjection(projection);\r\n        const wrappedTileCoord =\r\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\r\n        const newTile = new ReprojTile(\r\n          sourceProjection, sourceTileGrid,\r\n          projection, targetTileGrid,\r\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\r\n          this.getGutter(),\r\n          function(z, x, y, pixelRatio) {\r\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\r\n          }.bind(this), this.reprojectionErrorThreshold_,\r\n          this.renderReprojectionEdges_);\r\n        newTile.key = key;\r\n\r\n        if (tile) {\r\n          newTile.interimTile = tile;\r\n          newTile.refreshInterimChain();\r\n          cache.replace(tileCoordKey, newTile);\r\n        } else {\r\n          cache.set(tileCoordKey, newTile);\r\n        }\r\n        return newTile;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../Tile.js\").default} Tile.\r\n   * @protected\r\n   */\r\n  getTileInternal(z, x, y, pixelRatio, projection) {\r\n    let tile = null;\r\n    const tileCoordKey = getKeyZXY(z, x, y);\r\n    const key = this.getKey();\r\n    if (!this.tileCache.containsKey(tileCoordKey)) {\r\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\r\n      this.tileCache.set(tileCoordKey, tile);\r\n    } else {\r\n      tile = this.tileCache.get(tileCoordKey);\r\n      if (tile.key != key) {\r\n        // The source's params changed. If the tile has an interim tile and if we\r\n        // can use it then we use it. Otherwise we create a new tile.  In both\r\n        // cases we attempt to assign an interim tile to the new tile.\r\n        const interimTile = tile;\r\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\r\n\r\n        //make the new tile the head of the list,\r\n        if (interimTile.getState() == TileState.IDLE) {\r\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\r\n          tile.interimTile = interimTile.interimTile;\r\n        } else {\r\n          tile.interimTile = interimTile;\r\n        }\r\n        tile.refreshInterimChain();\r\n        this.tileCache.replace(tileCoordKey, tile);\r\n      }\r\n    }\r\n    return tile;\r\n  }\r\n\r\n  /**\r\n   * Sets whether to render reprojection edges or not (usually for debugging).\r\n   * @param {boolean} render Render the edges.\r\n   * @api\r\n   */\r\n  setRenderReprojectionEdges(render) {\r\n    if (!ENABLE_RASTER_REPROJECTION ||\r\n        this.renderReprojectionEdges_ == render) {\r\n      return;\r\n    }\r\n    this.renderReprojectionEdges_ = render;\r\n    for (const id in this.tileCacheForProjection) {\r\n      this.tileCacheForProjection[id].clear();\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Sets the tile grid to use when reprojecting the tiles to the given\r\n   * projection instead of the default tile grid for the projection.\r\n   *\r\n   * This can be useful when the default tile grid cannot be created\r\n   * (e.g. projection has no extent defined) or\r\n   * for optimization reasons (custom tile size, resolutions, ...).\r\n   *\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\r\n   * @api\r\n   */\r\n  setTileGridForProjection(projection, tilegrid) {\r\n    if (ENABLE_RASTER_REPROJECTION) {\r\n      const proj = getProjection(projection);\r\n      if (proj) {\r\n        const projKey = getUid(proj);\r\n        if (!(projKey in this.tileGridForProjection)) {\r\n          this.tileGridForProjection[projKey] = tilegrid;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {ImageTile} imageTile Image tile.\r\n * @param {string} src Source.\r\n */\r\nfunction defaultTileLoadFunction(imageTile, src) {\r\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\r\n}\r\n\r\nexport default TileImage;\r\n","/**\r\n * @module ol/source/XYZ\r\n */\r\n\r\nimport TileImage from './TileImage.js';\r\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {number} [maxZoom=18] Optional max zoom level.\r\n * @property {number} [minZoom=0] Optional min zoom level.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\r\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\r\n * tile URL given a tile coordinate and the projection.\r\n * Required if url or urls are not provided.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\r\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\r\n * may be used instead of defining each one separately in the `urls` option.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data with URLs in a set XYZ format that are\r\n * defined in a URL template. By default, this follows the widely-used\r\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\r\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\r\n * using the `{-y}` placeholder in the URL template, so long as the\r\n * source does not have a custom tile grid. In this case,\r\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\r\n * such as:\r\n *\r\n *  tileUrlFunction: function(coordinate) {\r\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\r\n *        coordinate[1] + '/' + coordinate[2] + '.png';\r\n *    }\r\n *\r\n * @api\r\n */\r\nclass XYZ extends TileImage {\r\n  /**\r\n   * @param {Options=} opt_options XYZ options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options || {};\r\n    const projection = options.projection !== undefined ?\r\n      options.projection : 'EPSG:3857';\r\n\r\n    const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\r\n      createXYZ({\r\n        extent: extentFromProjection(projection),\r\n        maxZoom: options.maxZoom,\r\n        minZoom: options.minZoom,\r\n        tileSize: options.tileSize\r\n      });\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      opaque: options.opaque,\r\n      projection: projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileGrid: tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      tileUrlFunction: options.tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n      transition: options.transition,\r\n      attributionsCollapsible: options.attributionsCollapsible\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default XYZ;\r\n","/**\r\n * @module ol/source/OSM\r\n */\r\n\r\nimport XYZ from './XYZ.js';\r\n\r\n\r\n/**\r\n * The attribution containing a link to the OpenStreetMap Copyright and License\r\n * page.\r\n * @const\r\n * @type {string}\r\n * @api\r\n */\r\nexport const ATTRIBUTION = '&#169; ' +\r\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\r\n      'contributors.';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {number} [maxZoom=19] Max zoom.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\r\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for the OpenStreetMap tile server.\r\n * @api\r\n */\r\nclass OSM extends XYZ {\r\n  /**\r\n   * @param {Options=} [opt_options] Open Street Map options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n\r\n    let attributions;\r\n    if (options.attributions !== undefined) {\r\n      attributions = options.attributions;\r\n    } else {\r\n      attributions = [ATTRIBUTION];\r\n    }\r\n\r\n    const crossOrigin = options.crossOrigin !== undefined ?\r\n      options.crossOrigin : 'anonymous';\r\n\r\n    const url = options.url !== undefined ?\r\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n\r\n    super({\r\n      attributions: attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: crossOrigin,\r\n      opaque: options.opaque !== undefined ? options.opaque : true,\r\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      url: url,\r\n      wrapX: options.wrapX,\r\n      attributionsCollapsible: false\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default OSM;\r\n","/**\r\n * @module ol/source/common\r\n */\r\n\r\n/**\r\n * Default WMS version.\r\n * @type {string}\r\n */\r\nexport const DEFAULT_WMS_VERSION = '1.3.0';\r\n","/**\r\n * @module ol/source/WMSServerType\r\n */\r\n\r\n/**\r\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\r\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\r\n *     specification that OpenLayers can make use of.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  CARMENTA_SERVER: 'carmentaserver',\r\n  GEOSERVER: 'geoserver',\r\n  MAPSERVER: 'mapserver',\r\n  QGIS: 'qgis'\r\n};\r\n","/**\r\n * @module ol/uri\r\n */\r\n\r\n\r\n/**\r\n * Appends query parameters to a URI.\r\n *\r\n * @param {string} uri The original URI, which may already have query data.\r\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\r\n *     and the values are arbitrary types or arrays.\r\n * @return {string} The new URI.\r\n */\r\nexport function appendParams(uri, params) {\r\n  const keyParams = [];\r\n  // Skip any null or undefined parameter values\r\n  Object.keys(params).forEach(function(k) {\r\n    if (params[k] !== null && params[k] !== undefined) {\r\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\r\n    }\r\n  });\r\n  const qs = keyParams.join('&');\r\n  // remove any trailing ? or &\r\n  uri = uri.replace(/[?&]$/, '');\r\n  // append ? or & depending on whether uri has existing parameters\r\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\r\n  return uri + qs;\r\n}\r\n","/**\r\n * @module ol/source/TileWMS\r\n */\r\n\r\nimport {DEFAULT_WMS_VERSION} from './common.js';\r\n\r\nimport {assert} from '../asserts.js';\r\nimport {buffer, createEmpty} from '../extent.js';\r\nimport {assign} from '../obj.js';\r\nimport {modulo} from '../math.js';\r\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\r\nimport {calculateSourceResolution} from '../reproj.js';\r\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\r\nimport TileImage from './TileImage.js';\r\nimport WMSServerType from './WMSServerType.js';\r\nimport {hash as tileCoordHash} from '../tilecoord.js';\r\nimport {compareVersions} from '../string.js';\r\nimport {appendParams} from '../uri.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {Object<string,*>} params WMS request parameters.\r\n * At least a `LAYERS` param is required. `STYLES` is\r\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\r\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\r\n * @property {number} [gutter=0]\r\n * The size in pixels of the gutter around image tiles to ignore. By setting\r\n * this property to a non-zero value, images will be requested that are wider\r\n * and taller than the tile size by a value of `2 x gutter`.\r\n * Using a non-zero value allows artifacts of rendering at tile edges to be\r\n * ignored. If you control the WMS service it is recommended to address\r\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\r\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\r\n * this. See http://mapserver.org/output/tile_mode.html.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\r\n * the image from the remote server.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\r\n * Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\r\n * tilesize and extent supported by the server.\r\n * If this is not defined, a default grid will be used: if there is a projection\r\n * extent, the grid will be based on that; if not, a grid based on a global\r\n * extent with origin at 0,0 will be used..\r\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\r\n * The type of the remote WMS server. Currently only used when `hidpi` is\r\n * `true`.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url] WMS service URL.\r\n * @property {Array<string>} [urls] WMS service urls.\r\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * When set to `false`, only one world\r\n * will be rendered. When `true`, tiles will be requested for one world only,\r\n * but they will be wrapped horizontally to render multiple worlds.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data from WMS servers.\r\n * @api\r\n */\r\nclass TileWMS extends TileImage {\r\n  /**\r\n   * @param {Options=} [opt_options] Tile WMS options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || /** @type {Options} */ ({});\r\n\r\n    const params = options.params || {};\r\n\r\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      opaque: !transparent,\r\n      projection: options.projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileClass: options.tileClass,\r\n      tileGrid: options.tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      tileUrlFunction: tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n      transition: options.transition\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object}\r\n     */\r\n    this.params_ = params;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.v13_ = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./WMSServerType.js\").default|undefined}\r\n     */\r\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.tmpExtent_ = createEmpty();\r\n\r\n    this.updateV13_();\r\n    this.setKey(this.getKeyForParams_());\r\n\r\n  }\r\n\r\n  /**\r\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\r\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\r\n   * constructed.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\r\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\r\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\r\n   *     specified here.\r\n   * @return {string|undefined} GetFeatureInfo URL.\r\n   * @api\r\n   */\r\n  getGetFeatureInfoUrl(coordinate, resolution, projection, params) {\r\n    const projectionObj = getProjection(projection);\r\n    const sourceProjectionObj = this.getProjection();\r\n\r\n    let tileGrid = this.getTileGrid();\r\n    if (!tileGrid) {\r\n      tileGrid = this.getTileGridForProjection(projectionObj);\r\n    }\r\n\r\n    const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\r\n\r\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\r\n      return undefined;\r\n    }\r\n\r\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\r\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\r\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\r\n\r\n\r\n    const gutter = this.gutter_;\r\n    if (gutter !== 0) {\r\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\r\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\r\n    }\r\n\r\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\r\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\r\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\r\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\r\n    }\r\n\r\n    const baseParams = {\r\n      'SERVICE': 'WMS',\r\n      'VERSION': DEFAULT_WMS_VERSION,\r\n      'REQUEST': 'GetFeatureInfo',\r\n      'FORMAT': 'image/png',\r\n      'TRANSPARENT': true,\r\n      'QUERY_LAYERS': this.params_['LAYERS']\r\n    };\r\n    assign(baseParams, this.params_, params);\r\n\r\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\r\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\r\n\r\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\r\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\r\n\r\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\r\n      1, sourceProjectionObj || projectionObj, baseParams);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getGutter() {\r\n    return this.gutter_;\r\n  }\r\n\r\n  /**\r\n   * Get the user-provided params, i.e. those passed to the constructor through\r\n   * the \"params\" option, and possibly updated using the updateParams method.\r\n   * @return {Object} Params.\r\n   * @api\r\n   */\r\n  getParams() {\r\n    return this.params_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\r\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {Object} params Params.\r\n   * @return {string|undefined} Request URL.\r\n   * @private\r\n   */\r\n  getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\r\n\r\n    const urls = this.urls;\r\n    if (!urls) {\r\n      return undefined;\r\n    }\r\n\r\n    params['WIDTH'] = tileSize[0];\r\n    params['HEIGHT'] = tileSize[1];\r\n\r\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\r\n\r\n    if (!('STYLES' in this.params_)) {\r\n      params['STYLES'] = '';\r\n    }\r\n\r\n    if (pixelRatio != 1) {\r\n      switch (this.serverType_) {\r\n        case WMSServerType.GEOSERVER:\r\n          const dpi = (90 * pixelRatio + 0.5) | 0;\r\n          if ('FORMAT_OPTIONS' in params) {\r\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\r\n          } else {\r\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\r\n          }\r\n          break;\r\n        case WMSServerType.MAPSERVER:\r\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\r\n          break;\r\n        case WMSServerType.CARMENTA_SERVER:\r\n        case WMSServerType.QGIS:\r\n          params['DPI'] = 90 * pixelRatio;\r\n          break;\r\n        default:\r\n          assert(false, 52); // Unknown `serverType` configured\r\n          break;\r\n      }\r\n    }\r\n\r\n    const axisOrientation = projection.getAxisOrientation();\r\n    const bbox = tileExtent;\r\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\r\n      let tmp;\r\n      tmp = tileExtent[0];\r\n      bbox[0] = tileExtent[1];\r\n      bbox[1] = tmp;\r\n      tmp = tileExtent[2];\r\n      bbox[2] = tileExtent[3];\r\n      bbox[3] = tmp;\r\n    }\r\n    params['BBOX'] = bbox.join(',');\r\n\r\n    let url;\r\n    if (urls.length == 1) {\r\n      url = urls[0];\r\n    } else {\r\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\r\n      url = urls[index];\r\n    }\r\n    return appendParams(url, params);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getTilePixelRatio(pixelRatio) {\r\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\r\n    /** @type {number} */ (pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {string} The key for the current params.\r\n   */\r\n  getKeyForParams_() {\r\n    let i = 0;\r\n    const res = [];\r\n    for (const key in this.params_) {\r\n      res[i++] = key + '-' + this.params_[key];\r\n    }\r\n    return res.join('/');\r\n  }\r\n\r\n  /**\r\n   * Update the user-provided params.\r\n   * @param {Object} params Params.\r\n   * @api\r\n   */\r\n  updateParams(params) {\r\n    assign(this.params_, params);\r\n    this.updateV13_();\r\n    this.setKey(this.getKeyForParams_());\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateV13_() {\r\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\r\n    this.v13_ = compareVersions(version, '1.3') >= 0;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\r\n * @param {number} pixelRatio The pixel ratio\r\n * @param {import(\"../proj/Projection.js\").default} projection The projection\r\n * @return {string|undefined} The tile URL\r\n * @this {TileWMS}\r\n */\r\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\r\n\r\n  let tileGrid = this.getTileGrid();\r\n  if (!tileGrid) {\r\n    tileGrid = this.getTileGridForProjection(projection);\r\n  }\r\n\r\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\r\n    return undefined;\r\n  }\r\n\r\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\r\n    pixelRatio = 1;\r\n  }\r\n\r\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\r\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\r\n  let tileSize = toSize(\r\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\r\n\r\n  const gutter = this.gutter_;\r\n  if (gutter !== 0) {\r\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\r\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\r\n  }\r\n\r\n  if (pixelRatio != 1) {\r\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\r\n  }\r\n\r\n  const baseParams = {\r\n    'SERVICE': 'WMS',\r\n    'VERSION': DEFAULT_WMS_VERSION,\r\n    'REQUEST': 'GetMap',\r\n    'FORMAT': 'image/png',\r\n    'TRANSPARENT': true\r\n  };\r\n  assign(baseParams, this.params_);\r\n\r\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\r\n    pixelRatio, projection, baseParams);\r\n}\r\n\r\n\r\nexport default TileWMS;\r\n","/**\r\n * @module ol/control/Control\r\n */\r\nimport {VOID} from '../functions.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport BaseObject from '../Object.js';\r\nimport {removeNode} from '../dom.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {HTMLElement} [element] The element is the control's\r\n * container element. This only needs to be specified if you're developing\r\n * a custom control.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want\r\n * the control to be rendered outside of the map's viewport.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control is a visible widget with a DOM element in a fixed position on the\r\n * screen. They can involve user input (buttons), or be informational only;\r\n * the position is determined using CSS. By default these are placed in the\r\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\r\n * any outside DOM element.\r\n *\r\n * This is the base class for controls. You can use it for simple custom\r\n * controls by creating the element with listeners, creating an instance:\r\n * ```js\r\n * var myControl = new Control({element: myElement});\r\n * ```\r\n * and then adding this to the map.\r\n *\r\n * The main advantage of having this as a control rather than a simple separate\r\n * DOM element is that preventing propagation is handled for you. Controls\r\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\r\n *\r\n * You can also extend this base for your own control class. See\r\n * examples/custom-controls for an example of how to do this.\r\n *\r\n * @api\r\n */\r\nclass Control extends BaseObject {\r\n\r\n  /**\r\n   * @param {Options} options Control options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = options.element ? options.element : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.target_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.listenerKeys = [];\r\n\r\n    /**\r\n     * @type {function(import(\"../MapEvent.js\").default): void}\r\n     */\r\n    this.render = options.render ? options.render : VOID;\r\n\r\n    if (options.target) {\r\n      this.setTarget(options.target);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    removeNode(this.element);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this control.\r\n   * @return {import(\"../PluggableMap.js\").default} Map.\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    if (this.map_) {\r\n      removeNode(this.element);\r\n    }\r\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\r\n      unlistenByKey(this.listenerKeys[i]);\r\n    }\r\n    this.listenerKeys.length = 0;\r\n    this.map_ = map;\r\n    if (this.map_) {\r\n      const target = this.target_ ?\r\n        this.target_ : map.getOverlayContainerStopEvent();\r\n      target.appendChild(this.element);\r\n      if (this.render !== VOID) {\r\n        this.listenerKeys.push(listen(map,\r\n          MapEventType.POSTRENDER, this.render, this));\r\n      }\r\n      map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function is used to set a target element for the control. It has no\r\n   * effect if it is called after the control has been added to the map (i.e.\r\n   * after `setMap` is called on the control). If no `target` is set in the\r\n   * options passed to the control constructor and if `setTarget` is not called\r\n   * then the control is added to the map's overlay container.\r\n   * @param {HTMLElement|string} target Target.\r\n   * @api\r\n   */\r\n  setTarget(target) {\r\n    this.target_ = typeof target === 'string' ?\r\n      document.getElementById(target) :\r\n      target;\r\n  }\r\n}\r\n\r\n\r\nexport default Control;\r\n","/**\r\n * @module ol/pixel\r\n */\r\n\r\n/**\r\n * An array with two elements, representing a pixel. The first element is the\r\n * x-coordinate, the second the y-coordinate of the pixel.\r\n * @typedef {Array<number>} Pixel\r\n * @api\r\n */\r\n\r\nexport let nothing;\r\n","/**\r\n * @module ol/xml\r\n */\r\nimport {extend} from './array.js';\r\n\r\n\r\n/**\r\n * When using {@link module:ol/xml~makeChildAppender} or\r\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\r\n * to have this structure.\r\n * @typedef {Object} NodeStackItem\r\n * @property {Node} node\r\n */\r\n\r\n\r\n/**\r\n * @typedef {function(Element, Array<*>): void} Parser\r\n */\r\n\r\n\r\n/**\r\n * @typedef {function(Element, *, Array<*>): void} Serializer\r\n */\r\n\r\n\r\n/**\r\n * This document should be used when creating nodes for XML serializations. This\r\n * document is also used by {@link module:ol/xml~createElementNS}\r\n * @const\r\n * @type {Document}\r\n */\r\nexport const DOCUMENT = document.implementation.createDocument('', '', null);\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nexport const XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\r\n\r\n\r\n/**\r\n * @param {string} namespaceURI Namespace URI.\r\n * @param {string} qualifiedName Qualified name.\r\n * @return {Element} Node.\r\n */\r\nexport function createElementNS(namespaceURI, qualifiedName) {\r\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\r\n}\r\n\r\n\r\n/**\r\n * Recursively grab all text content of child nodes into a single string.\r\n * @param {Node} node Node.\r\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\r\n * breaks.\r\n * @return {string} All text content.\r\n * @api\r\n */\r\nexport function getAllTextContent(node, normalizeWhitespace) {\r\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\r\n}\r\n\r\n\r\n/**\r\n * Recursively grab all text content of child nodes into a single string.\r\n * @param {Node} node Node.\r\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\r\n * breaks.\r\n * @param {Array<string>} accumulator Accumulator.\r\n * @private\r\n * @return {Array<string>} Accumulator.\r\n */\r\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\r\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\r\n      node.nodeType == Node.TEXT_NODE) {\r\n    if (normalizeWhitespace) {\r\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\r\n    } else {\r\n      accumulator.push(node.nodeValue);\r\n    }\r\n  } else {\r\n    let n;\r\n    for (n = node.firstChild; n; n = n.nextSibling) {\r\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\r\n    }\r\n  }\r\n  return accumulator;\r\n}\r\n\r\n\r\n/**\r\n * @param {Object} object Object.\r\n * @return {boolean} Is a document.\r\n */\r\nexport function isDocument(object) {\r\n  return 'documentElement' in object;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {?string} namespaceURI Namespace URI.\r\n * @param {string} name Attribute name.\r\n * @return {string} Value\r\n */\r\nexport function getAttributeNS(node, namespaceURI, name) {\r\n  return node.getAttributeNS(namespaceURI, name) || '';\r\n}\r\n\r\n\r\n/**\r\n * Parse an XML string to an XML Document.\r\n * @param {string} xml XML.\r\n * @return {Document} Document.\r\n * @api\r\n */\r\nexport function parse(xml) {\r\n  return new DOMParser().parseFromString(xml, 'application/xml');\r\n}\r\n\r\n\r\n/**\r\n * Make an array extender function for extending the array at the top of the\r\n * object stack.\r\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeArrayExtender(valueReader, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        const array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\r\n        extend(array, value);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Make an array pusher function for pushing to the array at the top of the\r\n * object stack.\r\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeArrayPusher(valueReader, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        const array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\r\n        array.push(value);\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Make an object stack replacer function for replacing the object at the\r\n * top of the stack.\r\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeReplacer(valueReader, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        objectStack[objectStack.length - 1] = value;\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Make an object property pusher function for adding a property to the\r\n * object at the top of the stack.\r\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\r\n * @param {string=} opt_property Property.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n        const property = opt_property !== undefined ? opt_property : node.localName;\r\n        let array;\r\n        if (property in object) {\r\n          array = object[property];\r\n        } else {\r\n          array = object[property] = [];\r\n        }\r\n        array.push(value);\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Make an object property setter function.\r\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\r\n * @param {string=} opt_property Property.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n        const property = opt_property !== undefined ? opt_property : node.localName;\r\n        object[property] = value;\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Create a serializer that appends nodes written by its `nodeWriter` to its\r\n * designated parent. The parent is the `node` of the\r\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\r\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\r\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\r\n * @return {Serializer} Serializer.\r\n * @template T, V\r\n */\r\nexport function makeChildAppender(nodeWriter, opt_this) {\r\n  return function(node, value, objectStack) {\r\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\r\n    const parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\r\n    const parentNode = parent.node;\r\n    parentNode.appendChild(node);\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Create a serializer that calls the provided `nodeWriter` from\r\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\r\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\r\n * designed to serialize a single item. An example would be a LineString\r\n * geometry writer, which could be reused for writing MultiLineString\r\n * geometries.\r\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\r\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\r\n * @return {Serializer} Serializer.\r\n * @template T, V\r\n */\r\nexport function makeArraySerializer(nodeWriter, opt_this) {\r\n  let serializersNS, nodeFactory;\r\n  return function(node, value, objectStack) {\r\n    if (serializersNS === undefined) {\r\n      serializersNS = {};\r\n      const serializers = {};\r\n      serializers[node.localName] = nodeWriter;\r\n      serializersNS[node.namespaceURI] = serializers;\r\n      nodeFactory = makeSimpleNodeFactory(node.localName);\r\n    }\r\n    serialize(serializersNS, nodeFactory, value, objectStack);\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Create a node factory which can use the `opt_keys` passed to\r\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\r\n * or a fixed node name. The namespace of the created nodes can either be fixed,\r\n * or the parent namespace will be used.\r\n * @param {string=} opt_nodeName Fixed node name which will be used for all\r\n *     created nodes. If not provided, the 3rd argument to the resulting node\r\n *     factory needs to be provided and will be the nodeName.\r\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\r\n *     all created nodes. If not provided, the namespace of the parent node will\r\n *     be used.\r\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\r\n */\r\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\r\n  const fixedNodeName = opt_nodeName;\r\n  return (\r\n    /**\r\n     * @param {*} value Value.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {string=} opt_nodeName Node name.\r\n     * @return {Node} Node.\r\n     */\r\n    function(value, objectStack, opt_nodeName) {\r\n      const context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\r\n      const node = context.node;\r\n      let nodeName = fixedNodeName;\r\n      if (nodeName === undefined) {\r\n        nodeName = opt_nodeName;\r\n      }\r\n\r\n      const namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\r\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * A node factory that creates a node using the parent's `namespaceURI` and the\r\n * `nodeName` passed by {@link module:ol/xml~serialize} or\r\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\r\n\r\n\r\n/**\r\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\r\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\r\n * `opt_key` argument.\r\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\r\n *     be a subset of the `orderedKeys`.\r\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\r\n * @return {Array<V>} Values in the order of the sequence. The resulting array\r\n *     has the same length as the `orderedKeys` array. Values that are not\r\n *     present in `object` will be `undefined` in the resulting array.\r\n * @template V\r\n */\r\nexport function makeSequence(object, orderedKeys) {\r\n  const length = orderedKeys.length;\r\n  const sequence = new Array(length);\r\n  for (let i = 0; i < length; ++i) {\r\n    sequence[i] = object[orderedKeys[i]];\r\n  }\r\n  return sequence;\r\n}\r\n\r\n\r\n/**\r\n * Create a namespaced structure, using the same values for each namespace.\r\n * This can be used as a starting point for versioned parsers, when only a few\r\n * values are version specific.\r\n * @param {Array<string>} namespaceURIs Namespace URIs.\r\n * @param {T} structure Structure.\r\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\r\n * @return {Object<string, T>} Namespaced structure.\r\n * @template T\r\n */\r\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\r\n  /**\r\n   * @type {Object<string, T>}\r\n   */\r\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\r\n  let i, ii;\r\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\r\n    structureNS[namespaceURIs[i]] = structure;\r\n  }\r\n  return structureNS;\r\n}\r\n\r\n\r\n/**\r\n * Parse a node using the parsers and object stack.\r\n * @param {Object<string, Object<string, Parser>>} parsersNS\r\n *     Parsers by namespace.\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {*=} opt_this The object to use as `this`.\r\n */\r\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\r\n  let n;\r\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n    const parsers = parsersNS[n.namespaceURI];\r\n    if (parsers !== undefined) {\r\n      const parser = parsers[n.localName];\r\n      if (parser !== undefined) {\r\n        parser.call(opt_this, n, objectStack);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Push an object on top of the stack, parse and return the popped object.\r\n * @param {T} object Object.\r\n * @param {Object<string, Object<string, Parser>>} parsersNS\r\n *     Parsers by namespace.\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {*=} opt_this The object to use as `this`.\r\n * @return {T} Object.\r\n * @template T\r\n */\r\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\r\n  objectStack.push(object);\r\n  parseNode(parsersNS, node, objectStack, opt_this);\r\n  return /** @type {T} */ (objectStack.pop());\r\n}\r\n\r\n\r\n/**\r\n * Walk through an array of `values` and call a serializer for each value.\r\n * @param {Object<string, Object<string, Serializer>>} serializersNS\r\n *     Namespaced serializers.\r\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\r\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\r\n *     will be used to choose a node writer from `serializersNS`. This\r\n *     separation allows us to decide what kind of node to create, depending on\r\n *     the value we want to serialize. An example for this would be different\r\n *     geometry writers based on the geometry type.\r\n * @param {Array<*>} values Values to serialize. An example would be an array\r\n *     of {@link module:ol/Feature~Feature} instances.\r\n * @param {Array<*>} objectStack Node stack.\r\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\r\n *     `nodeFactory`. This is used for serializing object literals where the\r\n *     node name relates to the property key. The array length of `opt_keys` has\r\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\r\n *     determines the order of the sequence.\r\n * @param {T=} opt_this The object to use as `this` for the node factory and\r\n *     serializers.\r\n * @template T\r\n */\r\nexport function serialize(\r\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\r\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\r\n  let value, node;\r\n  for (let i = 0; i < length; ++i) {\r\n    value = values[i];\r\n    if (value !== undefined) {\r\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\r\n        opt_keys !== undefined ? opt_keys[i] : undefined);\r\n      if (node !== undefined) {\r\n        serializersNS[node.namespaceURI][node.localName]\r\n          .call(opt_this, node, value, objectStack);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {O} object Object.\r\n * @param {Object<string, Object<string, Serializer>>} serializersNS\r\n *     Namespaced serializers.\r\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\r\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\r\n *     will be used to choose a node writer from `serializersNS`. This\r\n *     separation allows us to decide what kind of node to create, depending on\r\n *     the value we want to serialize. An example for this would be different\r\n *     geometry writers based on the geometry type.\r\n * @param {Array<*>} values Values to serialize. An example would be an array\r\n *     of {@link module:ol/Feature~Feature} instances.\r\n * @param {Array<*>} objectStack Node stack.\r\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\r\n *     `nodeFactory`. This is used for serializing object literals where the\r\n *     node name relates to the property key. The array length of `opt_keys` has\r\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\r\n *     determines the order of the sequence.\r\n * @param {T=} opt_this The object to use as `this` for the node factory and\r\n *     serializers.\r\n * @return {O|undefined} Object.\r\n * @template O, T\r\n */\r\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\r\n  objectStack.push(object);\r\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\r\n  return /** @type {O|undefined} */ (objectStack.pop());\r\n}\r\n","/**\r\n * @module ol/format/XMLFeature\r\n */\r\nimport {abstract} from '../util.js';\r\nimport {extend} from '../array.js';\r\nimport FeatureFormat from '../format/Feature.js';\r\nimport FormatType from '../format/FormatType.js';\r\nimport {isDocument, parse} from '../xml.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for XML feature formats.\r\n *\r\n * @abstract\r\n */\r\nclass XMLFeature extends FeatureFormat {\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @type {XMLSerializer}\r\n     * @private\r\n     */\r\n    this.xmlSerializer_ = new XMLSerializer();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getType() {\r\n    return FormatType.XML;\r\n  }\r\n\r\n  /**\r\n   * Read a single feature.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   * @api\r\n   */\r\n  readFeature(source, opt_options) {\r\n    if (!source) {\r\n      return null;\r\n    } else if (typeof source === 'string') {\r\n      const doc = parse(source);\r\n      return this.readFeatureFromDocument(doc, opt_options);\r\n    } else if (isDocument(source)) {\r\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\r\n    } else {\r\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   */\r\n  readFeatureFromDocument(doc, opt_options) {\r\n    const features = this.readFeaturesFromDocument(doc, opt_options);\r\n    if (features.length > 0) {\r\n      return features[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   */\r\n  readFeatureFromNode(node, opt_options) {\r\n    return null; // not implemented\r\n  }\r\n\r\n  /**\r\n   * Read all features from a feature collection.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @api\r\n   */\r\n  readFeatures(source, opt_options) {\r\n    if (!source) {\r\n      return [];\r\n    } else if (typeof source === 'string') {\r\n      const doc = parse(source);\r\n      return this.readFeaturesFromDocument(doc, opt_options);\r\n    } else if (isDocument(source)) {\r\n      return this.readFeaturesFromDocument(\r\n        /** @type {Document} */ (source), opt_options);\r\n    } else {\r\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  readFeaturesFromDocument(doc, opt_options) {\r\n    /** @type {Array<import(\"../Feature.js\").default>} */\r\n    const features = [];\r\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        extend(features, this.readFeaturesFromNode(n, opt_options));\r\n      }\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Node} node Node.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  readFeaturesFromNode(node, opt_options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readGeometry(source, opt_options) {\r\n    if (!source) {\r\n      return null;\r\n    } else if (typeof source === 'string') {\r\n      const doc = parse(source);\r\n      return this.readGeometryFromDocument(doc, opt_options);\r\n    } else if (isDocument(source)) {\r\n      return this.readGeometryFromDocument(\r\n        /** @type {Document} */ (source), opt_options);\r\n    } else {\r\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  readGeometryFromDocument(doc, opt_options) {\r\n    return null; // not implemented\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  readGeometryFromNode(node, opt_options) {\r\n    return null; // not implemented\r\n  }\r\n\r\n  /**\r\n   * Read the projection from the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   * @api\r\n   */\r\n  readProjection(source) {\r\n    if (!source) {\r\n      return null;\r\n    } else if (typeof source === 'string') {\r\n      const doc = parse(source);\r\n      return this.readProjectionFromDocument(doc);\r\n    } else if (isDocument(source)) {\r\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\r\n    } else {\r\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @protected\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  readProjectionFromDocument(doc) {\r\n    return this.dataProjection;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @protected\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  readProjectionFromNode(node) {\r\n    return this.dataProjection;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  writeFeature(feature, opt_options) {\r\n    const node = this.writeFeatureNode(feature, opt_options);\r\n    return this.xmlSerializer_.serializeToString(node);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {Node} Node.\r\n   */\r\n  writeFeatureNode(feature, opt_options) {\r\n    return null; // not implemented\r\n  }\r\n\r\n  /**\r\n   * Encode an array of features as string.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Result.\r\n   * @api\r\n   */\r\n  writeFeatures(features, opt_options) {\r\n    const node = this.writeFeaturesNode(features, opt_options);\r\n    return this.xmlSerializer_.serializeToString(node);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   */\r\n  writeFeaturesNode(features, opt_options) {\r\n    return null; // not implemented\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  writeGeometry(geometry, opt_options) {\r\n    const node = this.writeGeometryNode(geometry, opt_options);\r\n    return this.xmlSerializer_.serializeToString(node);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   */\r\n  writeGeometryNode(geometry, opt_options) {\r\n    return null; // not implemented\r\n  }\r\n}\r\n\r\n\r\nexport default XMLFeature;\r\n","/**\r\n * @module ol/format/GMLBase\r\n */\r\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\r\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\r\n// envelopes/extents, only geometries!\r\nimport {extend} from '../array.js';\r\nimport Feature from '../Feature.js';\r\nimport {transformGeometryWithOptions, transformExtentWithOptions} from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport LinearRing from '../geom/LinearRing.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const GMLNS = 'http://www.opengis.net/gml';\r\n\r\n\r\n/**\r\n * A regular expression that matches if a string only contains whitespace\r\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\r\n * space (0xa0) is explicitly included as IE doesn't include it in its\r\n * definition of `\\s`.\r\n *\r\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\r\n *\r\n * @const\r\n * @type {RegExp}\r\n */\r\nconst ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object<string, string>|string} [featureNS] Feature\r\n * namespace. If not defined will be derived from GML. If multiple\r\n * feature types have been configured which come from different feature\r\n * namespaces, this will be an object with the keys being the prefixes used\r\n * in the entries of featureType array. The values of the object will be the\r\n * feature namespaces themselves. So for instance there might be a featureType\r\n * item `topp:states` in the `featureType` array and then there will be a key\r\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\r\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\r\n * If multiple feature types need to be configured\r\n * which come from different feature namespaces, `featureNS` will be an object\r\n * with the keys being the prefixes used in the entries of featureType array.\r\n * The values of the object will be the feature namespaces themselves.\r\n * So for instance there might be a featureType item `topp:states` and then\r\n * there will be a key named `topp` in the featureNS object with value\r\n * `http://www.openplans.org/topp`.\r\n * @property {string} srsName srsName to use when writing geometries.\r\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\r\n * elements. This also affects the elements in multi-part geometries.\r\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\r\n * elements. This also affects the elements in multi-part geometries.\r\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\r\n * Since the latter is deprecated in GML 3.\r\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\r\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\r\n * @property {string} [schemaLocation] Optional schemaLocation to use when\r\n * writing out the GML, this will override the default provided.\r\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Feature base format for reading and writing data in the GML format.\r\n * This class cannot be instantiated, it contains only base content that\r\n * is shared with versioned format classes GML2 and GML3.\r\n *\r\n * @abstract\r\n */\r\nclass GMLBase extends XMLFeature {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Optional configuration object.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = /** @type {Options} */ (opt_options ? opt_options : {});\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<string>|string|undefined}\r\n     */\r\n    this.featureType = options.featureType;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Object<string, string>|string|undefined}\r\n     */\r\n    this.featureNS = options.featureNS;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {string}\r\n     */\r\n    this.srsName = options.srsName;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {string}\r\n     */\r\n    this.schemaLocation = '';\r\n\r\n    /**\r\n     * @type {Object<string, Object<string, Object>>}\r\n     */\r\n    this.FEATURE_COLLECTION_PARSERS = {};\r\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\r\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\r\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Array<Feature> | undefined} Features.\r\n   */\r\n  readFeaturesInternal(node, objectStack) {\r\n    const localName = node.localName;\r\n    let features = null;\r\n    if (localName == 'FeatureCollection') {\r\n      features = pushParseAndPop([],\r\n        this.FEATURE_COLLECTION_PARSERS, node,\r\n        objectStack, this);\r\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\r\n      const context = objectStack[0];\r\n      let featureType = context['featureType'];\r\n      let featureNS = context['featureNS'];\r\n      const prefix = 'p';\r\n      const defaultPrefix = 'p0';\r\n      if (!featureType && node.childNodes) {\r\n        featureType = [], featureNS = {};\r\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\r\n          const child = node.childNodes[i];\r\n          if (child.nodeType === 1) {\r\n            const ft = child.nodeName.split(':').pop();\r\n            if (featureType.indexOf(ft) === -1) {\r\n              let key = '';\r\n              let count = 0;\r\n              const uri = child.namespaceURI;\r\n              for (const candidate in featureNS) {\r\n                if (featureNS[candidate] === uri) {\r\n                  key = candidate;\r\n                  break;\r\n                }\r\n                ++count;\r\n              }\r\n              if (!key) {\r\n                key = prefix + count;\r\n                featureNS[key] = uri;\r\n              }\r\n              featureType.push(key + ':' + ft);\r\n            }\r\n          }\r\n        }\r\n        if (localName != 'featureMember') {\r\n          // recheck featureType for each featureMember\r\n          context['featureType'] = featureType;\r\n          context['featureNS'] = featureNS;\r\n        }\r\n      }\r\n      if (typeof featureNS === 'string') {\r\n        const ns = featureNS;\r\n        featureNS = {};\r\n        featureNS[defaultPrefix] = ns;\r\n      }\r\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\r\n      const parsersNS = {};\r\n      const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\r\n      for (const p in featureNS) {\r\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\r\n        const parsers = {};\r\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\r\n          const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\r\n            defaultPrefix : featureTypes[i].split(':')[0];\r\n          if (featurePrefix === p) {\r\n            parsers[featureTypes[i].split(':').pop()] =\r\n                (localName == 'featureMembers') ?\r\n                  makeArrayPusher(this.readFeatureElement, this) :\r\n                  makeReplacer(this.readFeatureElement, this);\r\n          }\r\n        }\r\n        parsersNS[featureNS[p]] = parsers;\r\n      }\r\n      if (localName == 'featureMember') {\r\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\r\n      } else {\r\n        features = pushParseAndPop([], parsersNS, node, objectStack);\r\n      }\r\n    }\r\n    if (features === null) {\r\n      features = [];\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\r\n   */\r\n  readGeometryElement(node, objectStack) {\r\n    const context = /** @type {Object} */ (objectStack[0]);\r\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\r\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\r\n    const geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\r\n    if (geometry) {\r\n      if (Array.isArray(geometry)) {\r\n        return transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\r\n      } else {\r\n        return transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), false, context);\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\r\n   * @return {Feature|Object} Feature\r\n   */\r\n  readFeatureElementInternal(node, objectStack, asFeature) {\r\n    let geometryName;\r\n    const values = {};\r\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      let value;\r\n      const localName = n.localName;\r\n      // first, check if it is simple attribute\r\n      if (n.childNodes.length === 0\r\n              || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\r\n        value = getAllTextContent(n, false);\r\n        if (ONLY_WHITESPACE_RE.test(value)) {\r\n          value = undefined;\r\n        }\r\n      } else {\r\n        if (asFeature) {\r\n          //if feature, try it as a geometry\r\n          value = this.readGeometryElement(n, objectStack);\r\n        }\r\n        if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\r\n          value = this.readFeatureElementInternal(n, objectStack, false);\r\n        } else if (localName !== 'boundedBy') {\r\n          // boundedBy is an extent and must not be considered as a geometry\r\n          geometryName = localName;\r\n        }\r\n      }\r\n\r\n      if (values[localName]) {\r\n        if (!(values[localName] instanceof Array)) {\r\n          values[localName] = [values[localName]];\r\n        }\r\n        values[localName].push(value);\r\n      } else {\r\n        values[localName] = value;\r\n      }\r\n\r\n      const len = n.attributes.length;\r\n      if (len > 0) {\r\n        values[localName] = {_content_: values[localName]};\r\n        for (let i = 0; i < len; i++) {\r\n          const attName = n.attributes[i].name;\r\n          values[localName][attName] = n.attributes[i].value;\r\n        }\r\n      }\r\n    }\r\n    if (!asFeature) {\r\n      return values;\r\n    } else {\r\n      const feature = new Feature(values);\r\n      if (geometryName) {\r\n        feature.setGeometryName(geometryName);\r\n      }\r\n      const fid = node.getAttribute('fid') ||\r\n           getAttributeNS(node, this.namespace, 'id');\r\n      if (fid) {\r\n        feature.setId(fid);\r\n      }\r\n      return feature;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Feature} Feature.\r\n   */\r\n  readFeatureElement(node, objectStack) {\r\n    return this.readFeatureElementInternal(node, objectStack, true);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Point|undefined} Point.\r\n   */\r\n  readPoint(node, objectStack) {\r\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n    if (flatCoordinates) {\r\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {MultiPoint|undefined} MultiPoint.\r\n   */\r\n  readMultiPoint(node, objectStack) {\r\n    /** @type {Array<Array<number>>} */\r\n    const coordinates = pushParseAndPop([],\r\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\r\n    if (coordinates) {\r\n      return new MultiPoint(coordinates);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {MultiLineString|undefined} MultiLineString.\r\n   */\r\n  readMultiLineString(node, objectStack) {\r\n    /** @type {Array<LineString>} */\r\n    const lineStrings = pushParseAndPop([],\r\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\r\n    if (lineStrings) {\r\n      return new MultiLineString(lineStrings);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {MultiPolygon|undefined} MultiPolygon.\r\n   */\r\n  readMultiPolygon(node, objectStack) {\r\n    /** @type {Array<Polygon>} */\r\n    const polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\r\n    if (polygons) {\r\n      return new MultiPolygon(polygons);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  pointMemberParser_(node, objectStack) {\r\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  lineStringMemberParser_(node, objectStack) {\r\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  polygonMemberParser_(node, objectStack) {\r\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {LineString|undefined} LineString.\r\n   */\r\n  readLineString(node, objectStack) {\r\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n    if (flatCoordinates) {\r\n      const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n      return lineString;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\r\n   */\r\n  readFlatLinearRing_(node, objectStack) {\r\n    const ring = pushParseAndPop(null,\r\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS, node,\r\n      objectStack, this);\r\n    if (ring) {\r\n      return ring;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {LinearRing|undefined} LinearRing.\r\n   */\r\n  readLinearRing(node, objectStack) {\r\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n    if (flatCoordinates) {\r\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Polygon|undefined} Polygon.\r\n   */\r\n  readPolygon(node, objectStack) {\r\n    /** @type {Array<Array<number>>} */\r\n    const flatLinearRings = pushParseAndPop([null],\r\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\r\n    if (flatLinearRings && flatLinearRings[0]) {\r\n      const flatCoordinates = flatLinearRings[0];\r\n      const ends = [flatCoordinates.length];\r\n      let i, ii;\r\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n        extend(flatCoordinates, flatLinearRings[i]);\r\n        ends.push(flatCoordinates.length);\r\n      }\r\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>} Flat coordinates.\r\n   */\r\n  readFlatCoordinatesFromNode_(node, objectStack) {\r\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readGeometryFromNode(node, opt_options) {\r\n    const geometry = this.readGeometryElement(node,\r\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\r\n    return geometry ? geometry : null;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readFeaturesFromNode(node, opt_options) {\r\n    const options = {\r\n      featureType: this.featureType,\r\n      featureNS: this.featureNS\r\n    };\r\n    if (opt_options) {\r\n      assign(options, this.getReadOptions(node, opt_options));\r\n    }\r\n    const features = this.readFeaturesInternal(node, [options]);\r\n    return features || [];\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readProjectionFromNode(node) {\r\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\r\n  }\r\n}\r\n\r\n\r\nGMLBase.prototype.namespace = GMLNS;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n  'http://www.opengis.net/gml': {}\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n  'http://www.opengis.net/gml': {}\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.GEOMETRY_PARSERS = {\r\n  'http://www.opengis.net/gml': {}\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\r\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\r\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\r\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.RING_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\r\n  }\r\n};\r\n\r\nexport default GMLBase;\r\n","/**\r\n * @module ol/format/xsd\r\n */\r\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\r\nimport {padNumber} from '../string.js';\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {boolean|undefined} Boolean.\r\n */\r\nexport function readBoolean(node) {\r\n  const s = getAllTextContent(node, false);\r\n  return readBooleanString(s);\r\n}\r\n\r\n\r\n/**\r\n * @param {string} string String.\r\n * @return {boolean|undefined} Boolean.\r\n */\r\nexport function readBooleanString(string) {\r\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\r\n  if (m) {\r\n    return m[1] !== undefined || false;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} DateTime in seconds.\r\n */\r\nexport function readDateTime(node) {\r\n  const s = getAllTextContent(node, false);\r\n  const dateTime = Date.parse(s);\r\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} Decimal.\r\n */\r\nexport function readDecimal(node) {\r\n  const s = getAllTextContent(node, false);\r\n  return readDecimalString(s);\r\n}\r\n\r\n\r\n/**\r\n * @param {string} string String.\r\n * @return {number|undefined} Decimal.\r\n */\r\nexport function readDecimalString(string) {\r\n  // FIXME check spec\r\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\r\n  if (m) {\r\n    return parseFloat(m[1]);\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} Non negative integer.\r\n */\r\nexport function readNonNegativeInteger(node) {\r\n  const s = getAllTextContent(node, false);\r\n  return readNonNegativeIntegerString(s);\r\n}\r\n\r\n\r\n/**\r\n * @param {string} string String.\r\n * @return {number|undefined} Non negative integer.\r\n */\r\nexport function readNonNegativeIntegerString(string) {\r\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\r\n  if (m) {\r\n    return parseInt(m[1], 10);\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {string|undefined} String.\r\n */\r\nexport function readString(node) {\r\n  return getAllTextContent(node, false).trim();\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the boolean to.\r\n * @param {boolean} bool Boolean.\r\n */\r\nexport function writeBooleanTextNode(node, bool) {\r\n  writeStringTextNode(node, (bool) ? '1' : '0');\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a CDATA Section with the string to.\r\n * @param {string} string String.\r\n */\r\nexport function writeCDATASection(node, string) {\r\n  node.appendChild(DOCUMENT.createCDATASection(string));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the dateTime to.\r\n * @param {number} dateTime DateTime in seconds.\r\n */\r\nexport function writeDateTimeTextNode(node, dateTime) {\r\n  const date = new Date(dateTime * 1000);\r\n  const string = date.getUTCFullYear() + '-' +\r\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\r\n      padNumber(date.getUTCDate(), 2) + 'T' +\r\n      padNumber(date.getUTCHours(), 2) + ':' +\r\n      padNumber(date.getUTCMinutes(), 2) + ':' +\r\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\r\n  node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the decimal to.\r\n * @param {number} decimal Decimal.\r\n */\r\nexport function writeDecimalTextNode(node, decimal) {\r\n  const string = decimal.toPrecision();\r\n  node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the decimal to.\r\n * @param {number} nonNegativeInteger Non negative integer.\r\n */\r\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\r\n  const string = nonNegativeInteger.toString();\r\n  node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the string to.\r\n * @param {string} string String.\r\n */\r\nexport function writeStringTextNode(node, string) {\r\n  node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n","/**\r\n * @module ol/format/GML2\r\n */\r\nimport {createOrUpdate} from '../extent.js';\r\nimport {transformExtentWithOptions, transformGeometryWithOptions} from './Feature.js';\r\nimport GMLBase, {GMLNS} from './GMLBase.js';\r\nimport {writeStringTextNode} from './xsd.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\r\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nconst schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\r\n  'MultiLineString': 'lineStringMember',\r\n  'MultiCurve': 'curveMember',\r\n  'MultiPolygon': 'polygonMember',\r\n  'MultiSurface': 'surfaceMember'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GML format,\r\n * version 2.1.2.\r\n *\r\n * @api\r\n */\r\nclass GML2 extends GMLBase {\r\n\r\n  /**\r\n   * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = /** @type {import(\"./GMLBase.js\").Options} */\r\n        (opt_options ? opt_options : {});\r\n\r\n    super(options);\r\n\r\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\r\n      'featureMember'] =\r\n        makeArrayPusher(this.readFeaturesInternal);\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.schemaLocation = options.schemaLocation ?\r\n      options.schemaLocation : schemaLocation;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>|undefined} Flat coordinates.\r\n   */\r\n  readFlatCoordinates_(node, objectStack) {\r\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\r\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\r\n    const containerSrs = context['srsName'];\r\n    let axisOrientation = 'enu';\r\n    if (containerSrs) {\r\n      const proj = getProjection(containerSrs);\r\n      if (proj) {\r\n        axisOrientation = proj.getAxisOrientation();\r\n      }\r\n    }\r\n    const coordsGroups = s.trim().split(/\\s+/);\r\n    const flatCoordinates = [];\r\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\r\n      const coords = coordsGroups[i].split(/,+/);\r\n      const x = parseFloat(coords[0]);\r\n      const y = parseFloat(coords[1]);\r\n      const z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\r\n      if (axisOrientation.substr(0, 2) === 'en') {\r\n        flatCoordinates.push(x, y, z);\r\n      } else {\r\n        flatCoordinates.push(y, x, z);\r\n      }\r\n    }\r\n    return flatCoordinates;\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\r\n   */\r\n  readBox_(node, objectStack) {\r\n    /** @type {Array<number>} */\r\n    const flatCoordinates = pushParseAndPop([null],\r\n      this.BOX_PARSERS_, node, objectStack, this);\r\n    return createOrUpdate(flatCoordinates[1][0],\r\n      flatCoordinates[1][1], flatCoordinates[1][3],\r\n      flatCoordinates[1][4]);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  innerBoundaryIsParser_(node, objectStack) {\r\n    /** @type {Array<number>|undefined} */\r\n    const flatLinearRing = pushParseAndPop(undefined,\r\n      this.RING_PARSERS, node, objectStack, this);\r\n    if (flatLinearRing) {\r\n      const flatLinearRings = /** @type {Array<Array<number>>} */\r\n          (objectStack[objectStack.length - 1]);\r\n      flatLinearRings.push(flatLinearRing);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  outerBoundaryIsParser_(node, objectStack) {\r\n    /** @type {Array<number>|undefined} */\r\n    const flatLinearRing = pushParseAndPop(undefined,\r\n      this.RING_PARSERS, node, objectStack, this);\r\n    if (flatLinearRing) {\r\n      const flatLinearRings = /** @type {Array<Array<number>>} */\r\n          (objectStack[objectStack.length - 1]);\r\n      flatLinearRings[0] = flatLinearRing;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @const\r\n   * @param {*} value Value.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Element|undefined} Node.\r\n   * @private\r\n   */\r\n  GEOMETRY_NODE_FACTORY_(value, objectStack, opt_nodeName) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const multiSurface = context['multiSurface'];\r\n    const surface = context['surface'];\r\n    const multiCurve = context['multiCurve'];\r\n    let nodeName;\r\n    if (!Array.isArray(value)) {\r\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\r\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\r\n        nodeName = 'MultiSurface';\r\n      } else if (nodeName === 'Polygon' && surface === true) {\r\n        nodeName = 'Surface';\r\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\r\n        nodeName = 'MultiCurve';\r\n      }\r\n    } else {\r\n      nodeName = 'Envelope';\r\n    }\r\n    return createElementNS('http://www.opengis.net/gml',\r\n      nodeName);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   */\r\n  writeFeatureElement(node, feature, objectStack) {\r\n    const fid = feature.getId();\r\n    if (fid) {\r\n      node.setAttribute('fid', /** @type {string} */ (fid));\r\n    }\r\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    const featureNS = context['featureNS'];\r\n    const geometryName = feature.getGeometryName();\r\n    if (!context.serializers) {\r\n      context.serializers = {};\r\n      context.serializers[featureNS] = {};\r\n    }\r\n    const properties = feature.getProperties();\r\n    const keys = [];\r\n    const values = [];\r\n    for (const key in properties) {\r\n      const value = properties[key];\r\n      if (value !== null) {\r\n        keys.push(key);\r\n        values.push(value);\r\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\r\n          if (!(key in context.serializers[featureNS])) {\r\n            context.serializers[featureNS][key] = makeChildAppender(\r\n              this.writeGeometryElement, this);\r\n          }\r\n        } else {\r\n          if (!(key in context.serializers[featureNS])) {\r\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const item = assign({}, context);\r\n    item.node = node;\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      (item), context.serializers,\r\n      makeSimpleNodeFactory(undefined, featureNS),\r\n      values,\r\n      objectStack, keys);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeCurveOrLineString_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const srsName = context['srsName'];\r\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    if (node.nodeName === 'LineString' ||\r\n        node.nodeName === 'LineStringSegment') {\r\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\r\n      node.appendChild(coordinates);\r\n      this.writeCoordinates_(coordinates, geometry, objectStack);\r\n    } else if (node.nodeName === 'Curve') {\r\n      const segments = createElementNS(node.namespaceURI, 'segments');\r\n      node.appendChild(segments);\r\n      this.writeCurveSegments_(segments,\r\n        geometry, objectStack);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeLineStringOrCurveMember_(node, line, objectStack) {\r\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\r\n    if (child) {\r\n      node.appendChild(child);\r\n      this.writeCurveOrLineString_(child, line, objectStack);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeMultiCurveOrLineString_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsName = context['srsName'];\r\n    const curve = context['curve'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const lines = geometry.getLineStrings();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\r\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\r\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\r\n      objectStack, undefined, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   */\r\n  writeGeometryElement(node, geometry, objectStack) {\r\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\r\n    const item = assign({}, context);\r\n    item['node'] = node;\r\n    let value;\r\n    if (Array.isArray(geometry)) {\r\n      value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\r\n    } else {\r\n      value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\r\n    }\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      (item), this.GEOMETRY_SERIALIZERS_,\r\n      this.GEOMETRY_NODE_FACTORY_, [value],\r\n      objectStack, undefined, this);\r\n  }\r\n\r\n  /**\r\n   * @param {string} namespaceURI XML namespace.\r\n   * @returns {Element} coordinates node.\r\n   * @private\r\n   */\r\n  createCoordinatesNode_(namespaceURI) {\r\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\r\n    coordinates.setAttribute('decimal', '.');\r\n    coordinates.setAttribute('cs', ',');\r\n    coordinates.setAttribute('ts', ' ');\r\n\r\n    return coordinates;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeCoordinates_(node, value, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsName = context['srsName'];\r\n    // only 2d for simple features profile\r\n    const points = value.getCoordinates();\r\n    const len = points.length;\r\n    const parts = new Array(len);\r\n    for (let i = 0; i < len; ++i) {\r\n      const point = points[i];\r\n      parts[i] = this.getCoords_(point, srsName, hasZ);\r\n    }\r\n    writeStringTextNode(node, parts.join(' '));\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeCurveSegments_(node, line, objectStack) {\r\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\r\n    node.appendChild(child);\r\n    this.writeCurveOrLineString_(child, line, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeSurfaceOrPolygon_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsName = context['srsName'];\r\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\r\n      const rings = geometry.getLinearRings();\r\n      pushSerializeAndPop(\r\n        {node: node, hasZ: hasZ, srsName: srsName},\r\n        this.RING_SERIALIZERS_,\r\n        this.RING_NODE_FACTORY_,\r\n        rings, objectStack, undefined, this);\r\n    } else if (node.nodeName === 'Surface') {\r\n      const patches = createElementNS(node.namespaceURI, 'patches');\r\n      node.appendChild(patches);\r\n      this.writeSurfacePatches_(\r\n        patches, geometry, objectStack);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {*} value Value.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Node} Node.\r\n   * @private\r\n   */\r\n  RING_NODE_FACTORY_(value, objectStack, opt_nodeName) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const parentNode = context.node;\r\n    const exteriorWritten = context['exteriorWritten'];\r\n    if (exteriorWritten === undefined) {\r\n      context['exteriorWritten'] = true;\r\n    }\r\n    return createElementNS(parentNode.namespaceURI,\r\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeSurfacePatches_(node, polygon, objectStack) {\r\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\r\n    node.appendChild(child);\r\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeRing_(node, ring, objectStack) {\r\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\r\n    node.appendChild(linearRing);\r\n    this.writeLinearRing_(linearRing, ring, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} point Point geometry.\r\n   * @param {string=} opt_srsName Optional srsName\r\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\r\n   * @return {string} The coords string.\r\n   * @private\r\n   */\r\n  getCoords_(point, opt_srsName, opt_hasZ) {\r\n    let axisOrientation = 'enu';\r\n    if (opt_srsName) {\r\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\r\n    }\r\n    let coords = ((axisOrientation.substr(0, 2) === 'en') ?\r\n      point[0] + ',' + point[1] :\r\n      point[1] + ',' + point[0]);\r\n    if (opt_hasZ) {\r\n      // For newly created points, Z can be undefined.\r\n      const z = point[2] || 0;\r\n      coords += ',' + z;\r\n    }\r\n\r\n    return coords;\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writePoint_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\r\n    node.appendChild(coordinates);\r\n    const point = geometry.getCoordinates();\r\n    const coord = this.getCoords_(point, srsName, hasZ);\r\n    writeStringTextNode(coordinates, coord);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeMultiPoint_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const points = geometry.getPoints();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\r\n      this.POINTMEMBER_SERIALIZERS_,\r\n      makeSimpleNodeFactory('pointMember'), points,\r\n      objectStack, undefined, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writePointMember_(node, point, objectStack) {\r\n    const child = createElementNS(node.namespaceURI, 'Point');\r\n    node.appendChild(child);\r\n    this.writePoint_(child, point, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeLinearRing_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\r\n    node.appendChild(coordinates);\r\n    this.writeCoordinates_(coordinates, geometry, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeMultiSurfaceOrPolygon_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsName = context['srsName'];\r\n    const surface = context['surface'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const polygons = geometry.getPolygons();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\r\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\r\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\r\n      objectStack, undefined, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeSurfaceOrPolygonMember_(node, polygon, objectStack) {\r\n    const child = this.GEOMETRY_NODE_FACTORY_(\r\n      polygon, objectStack);\r\n    if (child) {\r\n      node.appendChild(child);\r\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeEnvelope(node, extent, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const keys = ['lowerCorner', 'upperCorner'];\r\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\r\n      OBJECT_PROPERTY_NODE_FACTORY,\r\n      values,\r\n      objectStack, keys, this);\r\n  }\r\n\r\n  /**\r\n   * @const\r\n   * @param {*} value Value.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Node|undefined} Node.\r\n   * @private\r\n   */\r\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, opt_nodeName) {\r\n    const parentNode = objectStack[objectStack.length - 1].node;\r\n    return createElementNS('http://www.opengis.net/gml',\r\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\r\n  }\r\n}\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\r\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML2.prototype.BOX_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'coordinates': makeArrayPusher(\r\n      GML2.prototype.readFlatCoordinates_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML2.prototype.GEOMETRY_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\r\n    'MultiPoint': makeReplacer(\r\n      GMLBase.prototype.readMultiPoint),\r\n    'LineString': makeReplacer(\r\n      GMLBase.prototype.readLineString),\r\n    'MultiLineString': makeReplacer(\r\n      GMLBase.prototype.readMultiLineString),\r\n    'LinearRing': makeReplacer(\r\n      GMLBase.prototype.readLinearRing),\r\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\r\n    'MultiPolygon': makeReplacer(\r\n      GMLBase.prototype.readMultiPolygon),\r\n    'Box': makeReplacer(GML2.prototype.readBox_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Curve': makeChildAppender(\r\n      GML2.prototype.writeCurveOrLineString_),\r\n    'MultiCurve': makeChildAppender(\r\n      GML2.prototype.writeMultiCurveOrLineString_),\r\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\r\n    'MultiPoint': makeChildAppender(\r\n      GML2.prototype.writeMultiPoint_),\r\n    'LineString': makeChildAppender(\r\n      GML2.prototype.writeCurveOrLineString_),\r\n    'MultiLineString': makeChildAppender(\r\n      GML2.prototype.writeMultiCurveOrLineString_),\r\n    'LinearRing': makeChildAppender(\r\n      GML2.prototype.writeLinearRing_),\r\n    'Polygon': makeChildAppender(\r\n      GML2.prototype.writeSurfaceOrPolygon_),\r\n    'MultiPolygon': makeChildAppender(\r\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Surface': makeChildAppender(\r\n      GML2.prototype.writeSurfaceOrPolygon_),\r\n    'MultiSurface': makeChildAppender(\r\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Envelope': makeChildAppender(\r\n      GML2.prototype.writeEnvelope)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lineStringMember': makeChildAppender(\r\n      GML2.prototype.writeLineStringOrCurveMember_),\r\n    'curveMember': makeChildAppender(\r\n      GML2.prototype.writeLineStringOrCurveMember_)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.RING_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\r\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'pointMember': makeChildAppender(\r\n      GML2.prototype.writePointMember_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'surfaceMember': makeChildAppender(\r\n      GML2.prototype.writeSurfaceOrPolygonMember_),\r\n    'polygonMember': makeChildAppender(\r\n      GML2.prototype.writeSurfaceOrPolygonMember_)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lowerCorner': makeChildAppender(writeStringTextNode),\r\n    'upperCorner': makeChildAppender(writeStringTextNode)\r\n  }\r\n};\r\n\r\nexport default GML2;\r\n","/**\r\n * @module ol/format/WMSGetFeatureInfo\r\n */\r\nimport {extend, includes} from '../array.js';\r\nimport GML2 from './GML2.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport {assign} from '../obj.js';\r\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nconst featureIdentifier = '_feature';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nconst layerIdentifier = '_layer';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Format for reading WMSGetFeatureInfo format. It uses\r\n * {@link module:ol/format/GML2~GML2} to read features.\r\n *\r\n * @api\r\n */\r\nclass WMSGetFeatureInfo extends XMLFeature {\r\n\r\n  /**\r\n   * @param {Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {GML2}\r\n     */\r\n    this.gmlFormat_ = new GML2();\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.layers_ = options.layers ? options.layers : null;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<string>} layers\r\n   */\r\n  getLayers() {\r\n    return this.layers_;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<string>} layers Layers to parse.\r\n   */\r\n  setLayers(layers) {\r\n    this.layers_ = layers;\r\n  }\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @private\r\n   */\r\n  readFeatures_(node, objectStack) {\r\n    node.setAttribute('namespaceURI', this.featureNS_);\r\n    const localName = node.localName;\r\n    /** @type {Array<import(\"../Feature.js\").default>} */\r\n    let features = [];\r\n    if (node.childNodes.length === 0) {\r\n      return features;\r\n    }\r\n    if (localName == 'msGMLOutput') {\r\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\r\n        const layer = node.childNodes[i];\r\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\r\n          continue;\r\n        }\r\n\r\n        const layerElement = /** @type {Element} */ (layer);\r\n        const context = objectStack[0];\r\n\r\n        const toRemove = layerIdentifier;\r\n        const layerName = layerElement.localName.replace(toRemove, '');\r\n\r\n        if (this.layers_ && !includes(this.layers_, layerName)) {\r\n          continue;\r\n        }\r\n\r\n        const featureType = layerName +\r\n            featureIdentifier;\r\n\r\n        context['featureType'] = featureType;\r\n        context['featureNS'] = this.featureNS_;\r\n\r\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\r\n        const parsers = {};\r\n        parsers[featureType] = makeArrayPusher(\r\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\r\n        const parsersNS = makeStructureNS(\r\n          [context['featureNS'], null], parsers);\r\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\r\n        const layerFeatures = pushParseAndPop(\r\n          [], parsersNS, layerElement, objectStack, this.gmlFormat_);\r\n        if (layerFeatures) {\r\n          extend(features, layerFeatures);\r\n        }\r\n      }\r\n    }\r\n    if (localName == 'FeatureCollection') {\r\n      const gmlFeatures = pushParseAndPop([],\r\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\r\n        [{}], this.gmlFormat_);\r\n      if (gmlFeatures) {\r\n        features = gmlFeatures;\r\n      }\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readFeaturesFromNode(node, opt_options) {\r\n    const options = {};\r\n    if (opt_options) {\r\n      assign(options, this.getReadOptions(node, opt_options));\r\n    }\r\n    return this.readFeatures_(node, [options]);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default WMSGetFeatureInfo;\r\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ = options.worldExtent !== undefined ?\n      options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\n      options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","module.exports={_from:\"proj4@^2.5.0\",_id:\"proj4@2.5.0\",_inBundle:!1,_integrity:\"sha512-XZTRT7OPdLzgvtTqL8DG2cEj8lYdovztOwiwpwRSYayOty5Ipf3H68dh/fiL+HKDEyetmQSMhkkMGiJoyziz3w==\",_location:\"/proj4\",_phantomChildren:{},_requested:{type:\"range\",registry:!0,raw:\"proj4@^2.5.0\",name:\"proj4\",escapedName:\"proj4\",rawSpec:\"^2.5.0\",saveSpec:null,fetchSpec:\"^2.5.0\"},_requiredBy:[\"#DEV:/\",\"#USER\"],_resolved:\"https://registry.npmjs.org/proj4/-/proj4-2.5.0.tgz\",_shasum:\"e3a88ce7e7a07221aaccbc6760dd2eafee745f03\",_spec:\"proj4@^2.5.0\",_where:\"C:\\\\Users\\\\alro9\\\\Documents\\\\geovisor\",author:\"\",bugs:{url:\"https://github.com/proj4js/proj4js/issues\"},bundleDependencies:!1,contributors:[{name:\"Mike Adair\",email:\"madair@dmsolutions.ca\"},{name:\"Richard Greenwood\",email:\"rich@greenwoodmap.com\"},{name:\"Calvin Metcalf\",email:\"calvin.metcalf@gmail.com\"},{name:\"Richard Marsden\",url:\"http://www.winwaed.com\"},{name:\"T. Mittan\"},{name:\"D. Steinwand\"},{name:\"S. Nelson\"}],dependencies:{mgrs:\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},deprecated:!1,description:\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",devDependencies:{chai:\"~4.1.2\",\"curl-amd\":\"github:cujojs/curl\",grunt:\"^1.0.1\",\"grunt-cli\":\"~1.2.0\",\"grunt-contrib-connect\":\"~1.0.2\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~3.1.0\",\"grunt-mocha-phantomjs\":\"~4.0.0\",\"grunt-rollup\":\"^6.0.0\",istanbul:\"~0.4.5\",mocha:\"~4.0.0\",rollup:\"^0.50.0\",\"rollup-plugin-json\":\"^2.3.0\",\"rollup-plugin-node-resolve\":\"^3.0.0\",tin:\"~0.5.0\"},directories:{test:\"test\",doc:\"docs\"},homepage:\"https://github.com/proj4js/proj4js#readme\",license:\"MIT\",main:\"dist/proj4-src.js\",module:\"lib/index.js\",name:\"proj4\",repository:{type:\"git\",url:\"git://github.com/proj4js/proj4js.git\"},scripts:{build:\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",test:\"npm run build && istanbul test _mocha test/test.js\"},version:\"2.5.0\"};","export {version as default} from '../package.json';\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n","import Map from './src/ol/Map.js';\r\nimport View from './src/ol/View.js';\r\nimport {Group as LayerGroup, Tile as TileLayer} from './src/ol/layer.js';\r\n\r\nimport OSM from './src/ol/source/OSM.js';\r\nimport TileWMS from './src/ol/source/TileWMS.js';\r\nimport Projection from './src/ol/proj/Projection.js';\r\nimport {defaults as defaultControls, ScaleLine} from './src/ol/control.js';\r\nimport MousePosition from './src/ol/control/MousePosition.js';\r\nimport {createStringXY} from './src/ol/coordinate.js';\r\nimport Control from './src/ol/Control/control.js';\r\nimport Pixel from './src/ol/pixel.js';\r\nimport WMSGetFeatureInfo from './src/ol/format/WMSGetFeatureInfo';\r\nimport {toStringHDMS} from './src/ol/coordinate.js';\r\nimport {fromLonLat, toLonLat, transform, addProjection, get} from './src/ol/proj.js';\r\nimport {register} from 'ol/proj/proj4.js';\r\nimport proj4 from 'proj4';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar wmsSource = new TileWMS({\r\n  url: 'https://ahocevar.com/geoserver/wms',\r\n  params: {'LAYERS': 'ne:ne', 'TILED': true},\r\n  serverType: 'geoserver',\r\n  crossOrigin: 'anonymous'\r\n});\r\n\r\n//Capas\r\nconst layers = [\r\n  new TileLayer({\r\n    source: new OSM()\r\n  }), new LayerGroup({//Layer 10\r\n    layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:areas_de_conservacion_18', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:areas_silvestres_protegidas', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:corredores_biologicos', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:inventario_nacional_humedales', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:SE_Nacional', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:ECORREGIONES', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:unidades_fitogeograficas_14', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:zonas_de_vida_08', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:zona_inalienable_ley_lxv', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:sitios_ramsar', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:montañas_costa_rica', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:patrimonio_munidal_natural', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      })\r\n    ]\r\n  }), new LayerGroup({//Layer 20\r\n    layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:cuencas_hidrograficas', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      })\r\n    ]\r\n  }), new LayerGroup({//Layer 30\r\n    layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:calidad_del_aire_PM10', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'CALIDADAGUA', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:mod_ambiental_useg', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      })\r\n    ]\r\n  }), new LayerGroup({//Layer 40\r\n    layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:malla_de_puntos_ifn', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Maduro', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:bosque_deciduo_13', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:bosque_palmas_13', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'bosquesecundario', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:paramo_13', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'pastos', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:plantaciones_forestales_13', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:manglar_13', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'noforestal', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'nubes', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:sombra_nubes_13', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:agricultura_05', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:agua_2005', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'areasquemadas', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'bosquessecun', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:bosque_palmas_05', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'bosqueforestal2005', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:cafe_2005', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:deforestacion_2005', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:manglar_05', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:paramo_05', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:plantaciones_forestales_05', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:uso_urbano_05', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'noforestal05', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:no_clasificado_05', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'nubes05', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      })\r\n    ]\r\n  }), new LayerGroup({//Layer 50\r\n    layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:oficinas_sinac', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'oficinashidrologicas', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      })\r\n    ]\r\n  }), new LayerGroup({//Layer 60\r\n    layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:guia_hojas_terra', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'otras', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'otras', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      })\r\n    ]\r\n  }), new LayerGroup({//Layer 70\r\n    layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'Ceniga:camaroneras_salineras', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      }),\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://18.221.165.145:8080/geoserver/Ceniga/wms',\r\n          params: {'LAYERS': 'consecionesagua', 'TILED': true, transparent: true, format: 'image/png', projection: new Projection('EPSG:4326'), isBaseLayer: false, visibility: false, singleTile: true, ratio: 1.1},\r\n          serverType: 'geoserver'\r\n        }),\r\n        visible: false\r\n      })\r\n    ]\r\n  })\r\n];\r\n\r\n//Coordenadas de puntero\r\nvar mousePositionControl = new MousePosition({\r\n  coordinateFormat: createStringXY(4),\r\n  projection: 'EPSG:5367',\r\n  // comment the following two lines to have the mouse position\r\n  // be placed within the map.\r\n  className: 'custom-mouse-position',\r\n  target: document.getElementById('mouse-position'),\r\n  undefinedHTML: '&nbsp;'\r\n});\r\n/*\r\nvar projectionSelect = document.getElementById('projection');\r\nprojectionSelect.addEventListener('change', function(event) {\r\n  mousePositionControl.setProjection(event.target.value);\r\n});\r\n\r\n\r\n*/\r\n\r\nproj4.defs(\"EPSG:5367\",\"+proj=tmerc +lat_0=0 +lon_0=-84 +k=0.9999 +x_0=500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\r\n\r\n\r\nregister(proj4);\r\nvar proj4326 = new Projection(\"EPSG:4326\");\r\nvar projgoogle = new Projection(\"EPSG:900913\");\r\nvar projCRTM = new Projection({\r\n  code: 'EPSG:5367',\r\n  \r\n});\r\naddProjection(projCRTM);\r\n\r\n\r\n\r\n//Posicion CR\r\nconst costaRicatonLonLat = [-84.9534256, 9.5499180];\r\nconst costaRicaWebMercator = fromLonLat(costaRicatonLonLat);\r\nconst view = new View({\r\n  center: costaRicaWebMercator,\r\n  zoom: 7.8\r\n  \r\n  \r\n});\r\n\r\n\r\nconst map = new Map({\r\n  //controls: defaultControls().extend([mousePositionControl]),\r\n  controls: defaultControls().extend([\r\n    new ScaleLine()\r\n  ]),\r\n  \r\n  layers: layers,\r\n  target: 'map',\r\n  view: view\r\n});\r\n\r\nmap.on('pointermove', function(e) {\r\n  // When user was dragging map, then coordinates didn't change and there's\r\n  // no need to continue\r\n  if (e.dragging) {      \r\n      return;\r\n  }\r\n  \r\n  var pixel = e.pixel;\r\n  var coordCR = toLonLat(pixel);\r\n\r\n  var coord = toLonLat(e.coordinate);\r\n  var lonlat = transform(coord,projgoogle,proj4326);\r\n  var lonlatPix = transform(e.coordinate,projgoogle,proj4326);\r\n  var coord84 = \"<b>WGS84: </b>\" + toStringHDMS(lonlat);\r\n  \r\n  \r\n  \r\n  var punto =  transform(e.coordinate,projgoogle,projCRTM);\r\n  var puntillo = toLonLat(punto,'EPSG:5367');\r\n  //var punto = fromLonLat(e.pixel,'EPSG:5367');\r\n  console.log(coord84);\r\n  var coordCRTM= \"<b>CRTM05 </b>X: \" + (punto[0]).toFixed(2) + \"  Y: \" + (punto[1]).toFixed(2);\t\t\t\t\r\n  \r\n  document.getElementById(\"dcoords\").innerHTML = '<table ><tr><td class=\"tdcoord\">'+ coordCRTM +'</td><td class=\"tdcoord\">'+ coord84 +'</td></tr></table>';\r\n  \r\n});\r\n\r\n/*\r\nmap.on(\"pointermove\", map, function(e) {\r\n  var position = this.events.getMousePosition(e);\r\n  var pixel = new OpenLayers.Pixel(e.xy.x,e.xy.y);\r\n  var lonlat = map.getLonLatFromPixel(pixel).transform(projgoogle,proj4326);\t\r\n  console.log(lonlat);\r\n \r\n  var coord84 = \"<b>WGS84: </b>\" + OpenLayers.Util.getFormattedLonLat(lonlat.lon,'lon','dms') + \", \" + OpenLayers.Util.getFormattedLonLat(lonlat.lat,'lat','dms');\t\t\t\t\r\n  var punto =  lonlat.transform(proj4326,projCRTM);             \t\t\t\t\r\n  var coordCRTM= \"<b>CRTM05 </b>X: \" + (punto.lon).toFixed(2) + \"  Y: \" + (punto.lat).toFixed(2);\t\t\t\t\r\n  document.getElementById(\"dcoords\").innerHTML = '<table ><tr><td class=\"tdcoord\">'+ coordCRTM +'</td><td class=\"tdcoord\">'+ coord84 +'</td></tr></table>';\r\n}); \r\n*/\r\n/***\r\n * \r\n * Vamo a hacer click\r\n * \r\n */\r\n\r\n\r\n\r\n\r\nfunction layerInfo(){\r\n  map.on(\"click\", function(e) {    \r\n    const hit = map.forEachLayerAtPixel(e.pixel, (layer) => {    \r\n      if (layer instanceof TileLayer){ \r\n        \r\n         return layer.ol_uid;\r\n      }     \r\n      return null;\r\n   });\r\n   console.log(hit);\r\n  });\r\n}\r\n\r\n\r\nfunction ccontrol() {\t\r\n  document.getElementById('map').style.cursor = \"help\";\r\n  layerInfo();\r\n}\r\n\r\n\r\n// Listener para info\r\nvar info = window.document.getElementById(\"info\");\r\ninfo.addEventListener(\"click\", ccontrol);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Funciones para ligar las capas\r\nfunction bindInputs(layerid, layer) {\r\n  const visibilityInput = $(layerid + ' input.visible');\r\n  visibilityInput.on('change', function () {\r\n    layer.setVisible(this.checked);\r\n  });\r\n  visibilityInput.prop('checked', layer.getVisible());\r\n\r\n  const opacityInput = $(layerid + ' input.opacity');\r\n  opacityInput.on('input change', function () {\r\n    layer.setOpacity(parseFloat(this.value));\r\n  });\r\n  opacityInput.val(String(layer.getOpacity()));\r\n}\r\n\r\n\r\nmap.getLayers().forEach(function (layer, i) {\r\n  bindInputs('#layer' + i, layer);\r\n  if (layer instanceof LayerGroup) {    \r\n    layer.getLayers().forEach(function (sublayer, j) {\r\n      bindInputs('#layer' + i + j, sublayer);\r\n    });\r\n  }\r\n});\r\n"]}